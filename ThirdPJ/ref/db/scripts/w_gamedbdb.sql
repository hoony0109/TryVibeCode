-- MySQL dump 10.13  Distrib 5.7.40, for Win64 (x86_64)
--
-- Host: localhost    Database: w07_gamedb
-- ------------------------------------------------------
-- Server version	5.7.40-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `char_advertisement`
--

DROP TABLE IF EXISTS `char_advertisement`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_advertisement` (
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 고유번호',
  `ad_idx` int(11) NOT NULL COMMENT '광고 고유 번호',
  `update_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '광고 보상 수령 날짜',
  PRIMARY KEY (`char_idx`,`ad_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_apply_friend`
--

DROP TABLE IF EXISTS `char_apply_friend`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_apply_friend` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `friend_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '친구 캐릭터 고유번호',
  `friend_db_sharding_idx` smallint(6) NOT NULL DEFAULT '0' COMMENT '친구 DB 넘버',
  `friend_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '친구 닉네임',
  `friend_char_type` int(11) NOT NULL DEFAULT '0' COMMENT '친구 대표 케릭터 타입',
  `friend_char_level` int(11) NOT NULL DEFAULT '0' COMMENT '친구 대표 케릭터 레벨',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`char_idx`,`friend_char_idx`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='친구 신청정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_auction_bookmark`
--

DROP TABLE IF EXISTS `char_auction_bookmark`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_auction_bookmark` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `element_id` int(11) NOT NULL DEFAULT '0' COMMENT 'ItemID',
  `element_value` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 강화단계',
  `element_extra` int(11) NOT NULL DEFAULT '0' COMMENT '감정여부(0:감정안됨)',
  PRIMARY KEY (`char_idx`,`element_id`,`element_value`,`element_extra`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='각 캐릭터의 거래소 즐겨찾기 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_bookmark`
--

DROP TABLE IF EXISTS `char_bookmark`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_bookmark` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `category_num` tinyint(4) NOT NULL DEFAULT '0' COMMENT '카테고리 0: 아이템 제작, 1: 스피릿 제작',
  `element_id` int(11) NOT NULL DEFAULT '0' COMMENT '카테고리에 속한 각각의 저장값',
  PRIMARY KEY (`char_idx`,`category_num`,`element_id`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='각 캐릭터의 즐겨찾기 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_buff`
--

DROP TABLE IF EXISTS `char_buff`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_buff` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `buff_id` int(11) NOT NULL DEFAULT '0' COMMENT '버프 ID',
  `group_id` int(11) NOT NULL DEFAULT '0' COMMENT '그룹id',
  `buff_value` int(11) NOT NULL DEFAULT '0' COMMENT '버프 값',
  `buff_value_1` int(11) NOT NULL DEFAULT '0',
  `buff_value_2` int(11) NOT NULL DEFAULT '0',
  `buff_value_3` int(11) NOT NULL DEFAULT '0',
  `buff_value_4` int(11) NOT NULL DEFAULT '0',
  `buff_value_5` int(11) NOT NULL DEFAULT '0',
  `buff_value_6` int(11) NOT NULL DEFAULT '0',
  `buff_value_7` int(11) NOT NULL DEFAULT '0',
  `buff_value_8` int(11) NOT NULL DEFAULT '0',
  `buff_value_9` int(11) NOT NULL DEFAULT '0',
  `buff_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '버프 종료일시',
  `remain_time` int(11) NOT NULL DEFAULT '0' COMMENT '남은 시간',
  `flag_view` tinyint(4) NOT NULL DEFAULT '0' COMMENT '버프 표시타입 (0=표시없음 1=버프 2=디버프)',
  `flag_death` tinyint(4) NOT NULL DEFAULT '0' COMMENT '(0=Default 1=사망시 삭제)',
  `content_id` int(11) NOT NULL DEFAULT '0' COMMENT '컨텐츠 별로 구별되어 사용되는 값',
  `content_type` int(11) NOT NULL DEFAULT '0' COMMENT '기본버프,랭킹,캐시구매 등 컨텐츠 구분',
  `subtype` int(11) NOT NULL DEFAULT '0' COMMENT 'content_type 컬럼값에 따라 구별해서 사용',
  PRIMARY KEY (`char_idx`,`buff_id`,`group_id`,`remain_time`),
  KEY `IX_buff_time` (`char_idx`,`buff_time`),
  KEY `IX_char_idx_remain_time` (`char_idx`,`remain_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='버프정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_buff_special`
--

DROP TABLE IF EXISTS `char_buff_special`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_buff_special` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `buff_id` int(11) NOT NULL DEFAULT '0' COMMENT '버프 ID',
  `buff_value` int(11) NOT NULL DEFAULT '0' COMMENT '버프 값',
  `buff_affect_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '버프 적용 만료일시(능력 적용 만료 날짜)',
  `buff_expire_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '버프 완전 종료일시(버프 만료 날짜)',
  `group_id` int(11) NOT NULL DEFAULT '0' COMMENT '그룹id',
  `sub_type` int(11) NOT NULL DEFAULT '0' COMMENT 'content_type 컬럼값에 따라 구별해서 사용',
  `content_type` int(11) NOT NULL DEFAULT '0' COMMENT '랭킹,캐시구매 등 컨텐츠 구분',
  `content_id` int(11) NOT NULL DEFAULT '0' COMMENT '컨텐츠 별로 구별되어 사용되는 값',
  PRIMARY KEY (`char_idx`,`buff_id`,`sub_type`,`content_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='특별 버프 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_costume_setting`
--

DROP TABLE IF EXISTS `char_costume_setting`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_costume_setting` (
  `char_idx` bigint(20) NOT NULL,
  `slot_id` tinyint(4) NOT NULL,
  `costume_show` tinyint(4) NOT NULL DEFAULT '1' COMMENT '코스튬 아이템 보이기/숨기기 설정(0:숨기기, 1: 보이기)',
  PRIMARY KEY (`char_idx`,`slot_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_dungeon_timelimit`
--

DROP TABLE IF EXISTS `char_dungeon_timelimit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_dungeon_timelimit` (
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 고유 번호',
  `dungeon_id` int(11) NOT NULL COMMENT 'dungeon_info::id',
  `init_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '초기화 기준 타입',
  `use_sec_time` int(11) NOT NULL DEFAULT '0' COMMENT '이용 시간(초)',
  `charged_sec_time` int(11) NOT NULL DEFAULT '0' COMMENT '충전한 시간(초)',
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '데이터 update 시간',
  PRIMARY KEY (`char_idx`,`dungeon_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='시간 제한 지역 이용 시간 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_free_battle`
--

DROP TABLE IF EXISTS `char_free_battle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_free_battle` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 idx',
  `score` int(11) NOT NULL DEFAULT '0' COMMENT '점수',
  `kill_count` int(11) NOT NULL DEFAULT '0' COMMENT '킬 수',
  `death_count` int(11) NOT NULL DEFAULT '0' COMMENT '데스 수',
  `next_init_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '다음 초기화 시간',
  PRIMARY KEY (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 난투전 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_free_battle_reward`
--

DROP TABLE IF EXISTS `char_free_battle_reward`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_free_battle_reward` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 idx',
  `rewardid` int(11) NOT NULL DEFAULT '0' COMMENT '보상id',
  `getreward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '보상수령여부',
  `next_init_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '다음 초기화 시간',
  PRIMARY KEY (`char_idx`,`rewardid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 난투전 보상 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_friend`
--

DROP TABLE IF EXISTS `char_friend`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_friend` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `friend_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '친구 캐릭터 고유번호',
  `friend_db_sharding_idx` smallint(6) NOT NULL DEFAULT '0' COMMENT '친구 DB 샤딩번호',
  `friend_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '친구 닉네임',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`char_idx`,`friend_char_idx`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='친구 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_info`
--

DROP TABLE IF EXISTS `char_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_info` (
  `char_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저고유번호',
  `char_type` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 타입',
  `char_gold` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 골드',
  `char_exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 경험치',
  `char_exp_high` bigint(20) NOT NULL DEFAULT '0',
  `char_hp` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 HP',
  `char_semp` int(11) NOT NULL DEFAULT '0',
  `char_stat_point` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 스탯 포인트',
  `char_skill_point` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 스킬 포인트',
  `char_buy_skill_point` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 구매 스킬 포인트',
  `char_raid_ticket` int(11) NOT NULL DEFAULT '0' COMMENT '레이드 티켓',
  `char_pvp_ticket` int(11) NOT NULL DEFAULT '0' COMMENT 'PVP 티켓',
  `char_daily_ticket` int(11) NOT NULL DEFAULT '0' COMMENT '요일던전 티켓',
  `max_mmobag_size` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'mmo 가방 최대크기',
  `memorial_fragment` int(11) NOT NULL DEFAULT '0' COMMENT '기억의 파편(재화)',
  `pre_region` int(11) NOT NULL DEFAULT '0' COMMENT '마지막 방문 이전 지역 코드',
  `pre_region_pos_x` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 이전 지역 위치 X',
  `pre_region_pos_z` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 이전 지역 위치 Z',
  `last_base_region` int(11) NOT NULL DEFAULT '0' COMMENT '마지막 방문 거점 지역 코드',
  `last_region` int(11) NOT NULL DEFAULT '0' COMMENT '마지막 방문 지역 코드',
  `region_pos_x` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 거점 x좌표',
  `region_pos_z` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 거점 z좌표',
  `guild_point` int(11) NOT NULL DEFAULT '0' COMMENT '길드포인트',
  `guild_donation_count` int(11) NOT NULL DEFAULT '0' COMMENT '길드 기부 총 횟수',
  `guild_donation_last_update` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '마지막 길드 기부 시간',
  `current_stage` int(11) NOT NULL DEFAULT '0' COMMENT '최근 플레이한 모험(요괴토벌) 스테이지',
  `current_trial` int(11) NOT NULL DEFAULT '0' COMMENT '시련의 탑 현재 스테이지',
  `max_trial` int(11) NOT NULL DEFAULT '0' COMMENT '시련의 탑 최종 스테이지',
  `annihil_grade` int(11) NOT NULL DEFAULT '0' COMMENT '섬멸전 등급',
  `defence_grade` int(11) NOT NULL DEFAULT '0' COMMENT '방어전 등급',
  `annihil_stage` int(11) NOT NULL DEFAULT '0' COMMENT '섬멸전 최종 스테이지',
  `defence_stage` int(11) NOT NULL DEFAULT '0' COMMENT '방어전 최종 스테이지',
  `annihil_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '섬멸전 플레이 횟수',
  `defence_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '방어전 플레이 횟수',
  `annihil_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '섬멸전 최종 플레이 시간',
  `defence_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '방어전 최종 플레이 시간',
  `use_ticket_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최근 플레이 티켓 사용 시간',
  `max_stage` int(11) NOT NULL DEFAULT '0' COMMENT '최종 모험(요괴토벌) 스테이지',
  `bag_open_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '무료 가방 오픈 횟수',
  `bag_open_time` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '무료 가방 오픈 시간',
  `max_inven_size` smallint(6) NOT NULL DEFAULT '0' COMMENT '인벤 최대 크기',
  `char_mileage` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 마일리지',
  `char_equip_num` tinyint(4) NOT NULL DEFAULT '2' COMMENT '착용중인 장비 번호(0은 제외)',
  `battle_power` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 전투력',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `skill_gauge1` smallint(6) NOT NULL DEFAULT '0' COMMENT '스킬게이지1',
  `skill_gauge2` smallint(6) NOT NULL DEFAULT '0' COMMENT '스킬게이지2',
  `skill_gauge3` smallint(6) NOT NULL DEFAULT '0' COMMENT '스킬게이지3',
  `skill_gauge4` smallint(6) NOT NULL DEFAULT '0',
  `skill_gauge5` smallint(6) NOT NULL DEFAULT '0',
  `transform_gauge` smallint(6) NOT NULL DEFAULT '0' COMMENT '마인화게이지',
  `char_mine_exp` bigint(20) DEFAULT '0' COMMENT '채광숙련도경험치',
  `job_step` tinyint(4) DEFAULT '1' COMMENT '캐릭터 직업 단계',
  `spirit_marble` int(11) NOT NULL DEFAULT '0' COMMENT '스피릿 마블(재화)',
  `equip_avatarid` int(11) NOT NULL DEFAULT '0' COMMENT '장착중인 변신아바타Id',
  `show_avatarid` int(11) NOT NULL DEFAULT '0' COMMENT '외형적용 변신아바타Id',
  `equip_petid` int(11) NOT NULL DEFAULT '0' COMMENT '장착중인 펫Id',
  `show_petid` int(11) NOT NULL DEFAULT '0' COMMENT '외형적용 펫Id',
  `equip_vehicleid` int(11) NOT NULL DEFAULT '0' COMMENT '장착중인 탈것Id',
  `show_vehicleid` int(11) NOT NULL DEFAULT '0' COMMENT '외형적용 탈것Id',
  `equip_title_id` int(11) NOT NULL DEFAULT '0' COMMENT '사용중인 칭호',
  `pk_mode` tinyint(4) NOT NULL DEFAULT '3' COMMENT 'PK 모드',
  `pk_state` tinyint(4) NOT NULL DEFAULT '2' COMMENT 'PK 상태(1:LAWFUL, 2:NEUTRAL, 3:CHAOTIC)',
  `pk_point` int(11) NOT NULL DEFAULT '0' COMMENT 'PK 포인트',
  `costume_point` int(11) NOT NULL DEFAULT '0' COMMENT '코스튬포인트',
  `lost_exp_restore_free` tinyint(4) NOT NULL DEFAULT '0',
  `stat_reset_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '스탯 초기화 횟수',
  `nickname` varchar(30) NOT NULL COMMENT '캐릭터 명',
  `disassemble_option` int(11) NOT NULL DEFAULT '58' COMMENT '자동분해 설정정보',
  `is_logon` tinyint(4) NOT NULL DEFAULT '0' COMMENT '접속여부 0 : logoff, 1 : logon',
  `last_logoff_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '접속종료시간',
  `deleted_date` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '삭제한 시간',
  PRIMARY KEY (`char_idx`),
  UNIQUE KEY `nickname_UNIQUE` (`nickname`),
  KEY `IX_char_type` (`char_type`),
  KEY `IX_user_idx` (`user_idx`),
  KEY `IX_user_idx2` (`user_idx`,`char_idx`,`char_equip_num`),
  KEY `IX_char_idx` (`char_idx`,`char_type`,`char_exp`),
  KEY `IX_user_idx3` (`user_idx`,`char_type`,`char_idx`,`char_equip_num`),
  KEY `IX_user_idx_char_idx` (`user_idx`,`char_idx`),
  KEY `IX_user_idx_deleted_date` (`user_idx`,`deleted_date`)
) ENGINE=InnoDB AUTO_INCREMENT=700000002461 DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_info_deleted`
--

DROP TABLE IF EXISTS `char_info_deleted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_info_deleted` (
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저고유번호',
  `char_type` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 타입',
  `char_gold` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 골드',
  `char_exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 경험치',
  `char_exp_high` bigint(20) NOT NULL DEFAULT '0',
  `char_hp` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 HP',
  `char_semp` int(11) NOT NULL DEFAULT '0',
  `char_stat_point` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 스탯 포인트',
  `char_skill_point` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 스킬 포인트',
  `char_buy_skill_point` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 구매 스킬 포인트',
  `char_raid_ticket` int(11) NOT NULL DEFAULT '0' COMMENT '레이드 티켓',
  `char_pvp_ticket` int(11) NOT NULL DEFAULT '0' COMMENT 'PVP 티켓',
  `char_daily_ticket` int(11) NOT NULL DEFAULT '0' COMMENT '요일던전 티켓',
  `max_mmobag_size` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'mmo 가방 최대크기',
  `memorial_fragment` int(11) NOT NULL DEFAULT '0' COMMENT '기억의 파편(재화)',
  `pre_region` int(11) NOT NULL DEFAULT '0' COMMENT '마지막 방문 이전 지역 코드',
  `pre_region_pos_x` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 이전 지역 위치 X',
  `pre_region_pos_z` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 이전 지역 위치 Z',
  `last_base_region` int(11) NOT NULL DEFAULT '0' COMMENT '마지막 방문 거점 지역 코드',
  `last_region` int(11) NOT NULL DEFAULT '0' COMMENT '마지막 방문 지역 코드',
  `region_pos_x` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 거점 x좌표',
  `region_pos_z` double NOT NULL DEFAULT '0' COMMENT '마지막 방문 거점 z좌표',
  `guild_point` int(11) NOT NULL DEFAULT '0' COMMENT '길드포인트',
  `guild_donation_count` int(11) NOT NULL DEFAULT '0' COMMENT '길드 기부 총 횟수',
  `guild_donation_last_update` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '마지막 길드 기부 시간',
  `current_stage` int(11) NOT NULL DEFAULT '0' COMMENT '최근 플레이한 모험(요괴토벌) 스테이지',
  `current_trial` int(11) NOT NULL DEFAULT '0' COMMENT '시련의 탑 현재 스테이지',
  `max_trial` int(11) NOT NULL DEFAULT '0' COMMENT '시련의 탑 최종 스테이지',
  `annihil_grade` int(11) NOT NULL DEFAULT '0' COMMENT '섬멸전 등급',
  `defence_grade` int(11) NOT NULL DEFAULT '0' COMMENT '방어전 등급',
  `annihil_stage` int(11) NOT NULL DEFAULT '0' COMMENT '섬멸전 최종 스테이지',
  `defence_stage` int(11) NOT NULL DEFAULT '0' COMMENT '방어전 최종 스테이지',
  `annihil_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '섬멸전 플레이 횟수',
  `defence_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '방어전 플레이 횟수',
  `annihil_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '섬멸전 최종 플레이 시간',
  `defence_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '방어전 최종 플레이 시간',
  `use_ticket_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '최근 플레이 티켓 사용 시간',
  `max_stage` int(11) NOT NULL DEFAULT '0' COMMENT '최종 모험(요괴토벌) 스테이지',
  `bag_open_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '무료 가방 오픈 횟수',
  `bag_open_time` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '무료 가방 오픈 시간',
  `max_inven_size` smallint(6) NOT NULL DEFAULT '0' COMMENT '인벤 최대 크기',
  `char_mileage` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 마일리지',
  `char_equip_num` tinyint(4) NOT NULL DEFAULT '2' COMMENT '착용중인 장비 번호(0은 제외)',
  `battle_power` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 전투력',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `skill_gauge1` smallint(6) NOT NULL DEFAULT '0' COMMENT '스킬게이지1',
  `skill_gauge2` smallint(6) NOT NULL DEFAULT '0' COMMENT '스킬게이지2',
  `skill_gauge3` smallint(6) NOT NULL DEFAULT '0' COMMENT '스킬게이지3',
  `skill_gauge4` smallint(6) NOT NULL DEFAULT '0',
  `skill_gauge5` smallint(6) NOT NULL DEFAULT '0',
  `transform_gauge` smallint(6) NOT NULL DEFAULT '0' COMMENT '마인화게이지',
  `char_mine_exp` bigint(20) DEFAULT '0' COMMENT '채광숙련도경험치',
  `job_step` tinyint(4) DEFAULT '1' COMMENT '캐릭터 직업 단계',
  `spirit_marble` int(11) NOT NULL DEFAULT '0' COMMENT '스피릿 마블(재화)',
  `equip_avatarid` int(11) NOT NULL DEFAULT '0' COMMENT '장착중인 변신아바타Id',
  `show_avatarid` int(11) NOT NULL DEFAULT '0' COMMENT '외형적용 변신아바타Id',
  `equip_petid` int(11) NOT NULL DEFAULT '0' COMMENT '장착중인 펫Id',
  `show_petid` int(11) NOT NULL DEFAULT '0' COMMENT '외형적용 펫Id',
  `equip_vehicleid` int(11) NOT NULL DEFAULT '0' COMMENT '장착중인 탈것Id',
  `show_vehicleid` int(11) NOT NULL DEFAULT '0' COMMENT '외형적용 탈것Id',
  `pk_mode` tinyint(4) NOT NULL DEFAULT '3' COMMENT 'PK 모드',
  `pk_state` tinyint(4) NOT NULL DEFAULT '2' COMMENT 'PK 상태(1:LAWFUL, 2:NEUTRAL, 3:CHAOTIC)',
  `pk_point` int(11) NOT NULL DEFAULT '0' COMMENT 'PK 포인트',
  `costume_point` int(11) NOT NULL DEFAULT '0' COMMENT '코스튬포인트',
  `lost_exp_restore_free` tinyint(4) NOT NULL DEFAULT '0',
  `stat_reset_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '스탯 초기화 횟수',
  `nickname` varchar(30) NOT NULL COMMENT '캐릭터 명',
  `disassemble_option` int(11) NOT NULL DEFAULT '58' COMMENT '자동분해 설정정보',
  `is_logon` tinyint(4) NOT NULL DEFAULT '0' COMMENT '접속여부 0 : logoff, 1 : logon',
  `last_logoff_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '접속종료시간',
  `deleted_date` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '삭제한 시간',
  PRIMARY KEY (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='삭제된 캐릭터 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_injection`
--

DROP TABLE IF EXISTS `char_injection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_injection` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `merc_value` int(11) NOT NULL DEFAULT '0' COMMENT '용병 정수 주입량',
  `merc_boss_value` int(11) NOT NULL DEFAULT '0' COMMENT '수호신 정수 주입량',
  `tower_value` int(11) NOT NULL DEFAULT '0' COMMENT '타워 정수 주입량',
  `last_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 정수 주입 시간',
  PRIMARY KEY (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터별 길드 정수 주입정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven`
--

DROP TABLE IF EXISTS `char_inven`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven` (
  `item_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '아이템 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  PRIMARY KEY (`item_idx`,`char_idx`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=3626 DEFAULT CHARSET=utf8mb4 COMMENT='인벤정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_bag`
--

DROP TABLE IF EXISTS `char_inven_bag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_bag` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '아이템 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `slot_id` tinyint(4) NOT NULL DEFAULT '0' COMMENT '슬롯 id',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 id',
  PRIMARY KEY (`char_idx`,`item_idx`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='MMO 가방';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_beads`
--

DROP TABLE IF EXISTS `char_inven_beads`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_beads` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `slot_0` int(11) NOT NULL DEFAULT '0' COMMENT '슬롯 번호',
  `slot_1` int(11) NOT NULL DEFAULT '0' COMMENT '구슬 id',
  `slot_2` int(11) NOT NULL DEFAULT '0',
  `slot_3` int(11) NOT NULL DEFAULT '0',
  `slot_4` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`char_idx`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='아이템 구슬정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_cooltime`
--

DROP TABLE IF EXISTS `char_inven_cooltime`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_cooltime` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 id',
  `item_type` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 type',
  `item_subtype` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 subtype',
  `cooltime_ms` bigint(20) NOT NULL DEFAULT '0' COMMENT '슬롯 쿨타임',
  PRIMARY KEY (`char_idx`,`item_id`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 인벤토리 아이템 쿨타임';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_equip`
--

DROP TABLE IF EXISTS `char_inven_equip`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_equip` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '아이템 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 ID',
  `quality_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 품질',
  `item_level` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 레벨',
  `equip_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착 타입',
  `item_exp` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 경험치',
  `equip` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착 슬롯번호',
  `equip_slot` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '장착슬롯(-1, 0~9)',
  `belong` tinyint(4) NOT NULL DEFAULT '0' COMMENT '귀속여부(0:일반, 1:귀속)',
  `remove_lock` tinyint(4) NOT NULL DEFAULT '0' COMMENT '잠김 여부',
  `enchant_level` tinyint(4) NOT NULL DEFAULT '0',
  `identify` tinyint(4) NOT NULL DEFAULT '0' COMMENT '감정 여부(0, 1)',
  PRIMARY KEY (`item_idx`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`),
  KEY `IX_user_idx2` (`user_idx`,`char_idx`,`equip`),
  KEY `IX_char_idx` (`char_idx`,`equip`,`equip_type`),
  KEY `IX_char_idx2` (`char_idx`,`equip_type`,`equip`),
  KEY `IX_item_idx` (`item_idx`,`equip_type`),
  KEY `IX_item_idx2` (`item_idx`,`char_idx`,`quality_grade`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='장비 인벤 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_equip_nft`
--

DROP TABLE IF EXISTS `char_inven_equip_nft`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_equip_nft` (
  `item_idx` bigint(20) NOT NULL COMMENT '아이템 고유번호',
  `nft_token_id` varchar(256) NOT NULL COMMENT 'NFT Token ID',
  `nft_uri` varchar(256) NOT NULL DEFAULT '',
  PRIMARY KEY (`item_idx`),
  KEY `IX_nft_token_id` (`nft_token_id`,`item_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='장비 아이템 NFT 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_equip_nft_unlock`
--

DROP TABLE IF EXISTS `char_inven_equip_nft_unlock`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_equip_nft_unlock` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '아이템 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 ID',
  `quality_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 품질',
  `item_level` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 레벨',
  `equip_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착 타입',
  `item_exp` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 경험치',
  `equip` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착 슬롯번호',
  `belong` tinyint(4) NOT NULL DEFAULT '0' COMMENT '귀속여부(0:일반, 1:귀속)',
  `remove_lock` tinyint(4) NOT NULL DEFAULT '0' COMMENT '잠김 여부',
  `enchant_level` tinyint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`item_idx`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`),
  KEY `IX_user_idx2` (`user_idx`,`char_idx`,`equip`),
  KEY `IX_char_idx` (`char_idx`,`equip`,`equip_type`),
  KEY `IX_char_idx2` (`char_idx`,`equip_type`,`equip`),
  KEY `IX_item_idx` (`item_idx`,`equip_type`),
  KEY `IX_item_idx2` (`item_idx`,`char_idx`,`quality_grade`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='NTF Unlock된 아이템 저장소';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_equip_restorebox`
--

DROP TABLE IF EXISTS `char_inven_equip_restorebox`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_equip_restorebox` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '아이템 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 ID',
  `quality_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 품질',
  `item_level` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 레벨',
  `equip_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착 타입',
  `item_exp` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 경험치',
  `equip` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착 슬롯번호',
  `belong` tinyint(4) NOT NULL DEFAULT '0' COMMENT '귀속여부(0:일반, 1:귀속)',
  `remove_lock` tinyint(4) NOT NULL DEFAULT '0' COMMENT '잠김 여부',
  `enchant_level` tinyint(4) NOT NULL DEFAULT '0' COMMENT '강화 레벨',
  `expire_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '복구 기한',
  `identify` tinyint(4) NOT NULL DEFAULT '0' COMMENT '감정 여부(0, 1)',
  PRIMARY KEY (`item_idx`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`),
  KEY `IX_item_idx` (`item_idx`),
  KEY `IX_char_idx` (`char_idx`,`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='깨진 장비 임시 저장소(복구위한)';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_item`
--

DROP TABLE IF EXISTS `char_inven_item`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_item` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `item_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 타입',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 ID',
  `item_value` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 수량',
  PRIMARY KEY (`user_idx`,`char_idx`,`item_id`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`),
  KEY `IX_item_id` (`char_idx`,`item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='소모성 아이템';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_skillbook`
--

DROP TABLE IF EXISTS `char_inven_skillbook`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_skillbook` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '아이템 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 ID',
  `percent` smallint(6) NOT NULL DEFAULT '0' COMMENT '능력치 적용 퍼센트',
  `life_time` smallint(6) NOT NULL DEFAULT '0' COMMENT '능력치 지속시간',
  `ability_value` smallint(6) NOT NULL DEFAULT '0' COMMENT '능력치 적용 수치',
  `skill_id` int(11) NOT NULL DEFAULT '0' COMMENT '장착된 스킬 ID',
  `belong` tinyint(4) NOT NULL DEFAULT '0' COMMENT '귀속여부(0:일반, 1:귀속)',
  PRIMARY KEY (`item_idx`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`,`skill_id`),
  KEY `IX_skill_id` (`char_idx`,`skill_id`,`item_idx`),
  KEY `IX_item_idx` (`item_idx`,`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='스킬북 인벤 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_inven_vehicle_equip`
--

DROP TABLE IF EXISTS `char_inven_vehicle_equip`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_inven_vehicle_equip` (
  `item_idx` bigint(20) NOT NULL COMMENT '아이템 idx',
  `char_idx` bigint(20) NOT NULL COMMENT '소유 캐릭터 idx',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 아이디',
  `item_level` smallint(6) NOT NULL DEFAULT '0' COMMENT '아이템 레벨',
  `vehicle_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '장착한 탈것 idx',
  `belong` tinyint(4) NOT NULL DEFAULT '0' COMMENT '귀속 여부',
  PRIMARY KEY (`item_idx`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_item_fusion`
--

DROP TABLE IF EXISTS `char_item_fusion`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_item_fusion` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `belong` tinyint(4) NOT NULL DEFAULT '0' COMMENT '1: 귀속',
  `total_item_score` bigint(20) NOT NULL DEFAULT '0',
  `spent_item_id1` int(11) NOT NULL DEFAULT '0',
  `spent_item1_enchant` tinyint(4) NOT NULL DEFAULT '0',
  `spent_item_id2` int(11) NOT NULL DEFAULT '0',
  `spent_item2_enchant` tinyint(4) NOT NULL DEFAULT '0',
  `spent_item_id3` int(11) NOT NULL DEFAULT '0',
  `spent_item3_enchant` tinyint(4) NOT NULL DEFAULT '0',
  `spent_item_id4` int(11) NOT NULL DEFAULT '0',
  `spent_item4_enchant` tinyint(4) NOT NULL DEFAULT '0',
  `spent_item_id5` int(11) NOT NULL DEFAULT '0',
  `spent_item5_enchant` tinyint(4) NOT NULL DEFAULT '0',
  `change_count` int(11) NOT NULL DEFAULT '0',
  `rlt_item_id1` int(11) NOT NULL DEFAULT '0',
  `rlt_item_id2` int(11) NOT NULL DEFAULT '0',
  `rlt_item_id3` int(11) NOT NULL DEFAULT '0',
  `rlt_item_id4` int(11) NOT NULL DEFAULT '0',
  `rlt_item_id5` int(11) NOT NULL DEFAULT '0',
  `last_update_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 갱신 시간',
  PRIMARY KEY (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='연성 공학 진행 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_lost_exp`
--

DROP TABLE IF EXISTS `char_lost_exp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_lost_exp` (
  `lost_exp_idx` bigint(20) NOT NULL AUTO_INCREMENT,
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 고유번호',
  `lost_exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '소실 경험치량',
  `end_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '복구 가능 시간',
  `need_gold` int(11) NOT NULL DEFAULT '0' COMMENT '복구시 요구되는 골드량',
  `need_cash` int(11) NOT NULL DEFAULT '0' COMMENT '복구시 요구되는 캐쉬량',
  `restored_type` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '복구 유형(0:무료, 1:골드, 2:캐쉬, 3:아이템)',
  `restored_time` timestamp NULL DEFAULT NULL COMMENT '복구된 시간',
  PRIMARY KEY (`lost_exp_idx`),
  KEY `IX_char_idx` (`char_idx`),
  KEY `IX_lost_exp_idx` (`char_idx`,`lost_exp_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=86221 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_makeitem_limit`
--

DROP TABLE IF EXISTS `char_makeitem_limit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_makeitem_limit` (
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 고유 번호',
  `makeitem_id` int(11) NOT NULL DEFAULT '0' COMMENT '제작 테이블의 제작 고유번호',
  `make_qty` int(11) DEFAULT '0' COMMENT '제작 횟수',
  `last_make_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 제작 날짜',
  PRIMARY KEY (`char_idx`,`makeitem_id`),
  KEY `tx_itemid` (`char_idx`,`makeitem_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='제작 횟수 제한 관련 기록';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_pk_history`
--

DROP TABLE IF EXISTS `char_pk_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_pk_history` (
  `history_idx` bigint(20) NOT NULL AUTO_INCREMENT,
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 고유번호',
  `pk_type` tinyint(4) NOT NULL COMMENT '0:Dead 1:Kill 2:Assist',
  `pk_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT 'pk캐릭터 고유번호',
  `pk_nick` varchar(30) NOT NULL COMMENT 'pk캐릭터 명',
  `pk_guildname` varchar(50) NOT NULL DEFAULT '' COMMENT 'pk길드명',
  `regist_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록 날짜',
  PRIMARY KEY (`history_idx`),
  KEY `IX_char_idx` (`char_idx`),
  KEY `IX_history_idx` (`char_idx`,`history_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=165 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_pk_record`
--

DROP TABLE IF EXISTS `char_pk_record`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_pk_record` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `score` bigint(20) NOT NULL DEFAULT '0' COMMENT 'PK 점수',
  `kill_count` bigint(20) NOT NULL DEFAULT '0' COMMENT '킬 횟수',
  `assist_count` bigint(20) NOT NULL DEFAULT '0' COMMENT '도움 횟수',
  `death_count` bigint(20) NOT NULL DEFAULT '0' COMMENT '사망 횟수',
  `last_update_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 갱신 시간',
  PRIMARY KEY (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 PK 전적';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_quest_done`
--

DROP TABLE IF EXISTS `char_quest_done`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_quest_done` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `quest_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '퀘스트 타입',
  `quest_id` int(11) NOT NULL DEFAULT '0' COMMENT '퀘스트 id',
  `quest_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '퀘스트 등급',
  `reset_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '등급 리셋 카운트',
  `done_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '퀘스트 완료일시',
  PRIMARY KEY (`char_idx`,`quest_type`,`quest_id`),
  KEY `IX_char_idx` (`char_idx`,`quest_type`,`done_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 완료 퀘스트';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_quest_progress`
--

DROP TABLE IF EXISTS `char_quest_progress`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_quest_progress` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `quest_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '퀘스트 타입',
  `quest_id` int(11) NOT NULL DEFAULT '0' COMMENT '퀘스트 id',
  `quest_value` int(11) NOT NULL DEFAULT '0' COMMENT '퀘스트 수행 횟수',
  `quest_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '퀘스트 등급',
  `reset_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '등급 리셋 카운트',
  `quest_reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '퀘스트 등록일시',
  PRIMARY KEY (`char_idx`,`quest_type`,`quest_id`),
  KEY `IX_char_idx` (`char_idx`,`quest_reg_date`,`quest_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 진행 퀘스트';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_quest_scroll`
--

DROP TABLE IF EXISTS `char_quest_scroll`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_quest_scroll` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `party_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '파티 인덱스',
  `quest_id` int(11) NOT NULL DEFAULT '0' COMMENT '퀘스트 id',
  `quest_value` int(11) NOT NULL DEFAULT '0' COMMENT '퀘스트 수행 횟수',
  PRIMARY KEY (`char_idx`,`quest_id`),
  KEY `IX_user_idx2` (`user_idx`,`party_idx`,`quest_id`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 진행 퀘스트';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_quick_use`
--

DROP TABLE IF EXISTS `char_quick_use`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_quick_use` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `set_num` tinyint(4) NOT NULL DEFAULT '0',
  `quick_use_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '빠른 사용 타입',
  `is_skill_flag` tinyint(4) NOT NULL DEFAULT '0',
  `is_auto_flag` tinyint(4) NOT NULL DEFAULT '0',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 id',
  `slot_cooltime` bigint(20) NOT NULL DEFAULT '0' COMMENT '슬롯 쿨타임',
  PRIMARY KEY (`char_idx`,`set_num`,`quick_use_type`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 퀵슬롯';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_raid_play_cnt`
--

DROP TABLE IF EXISTS `char_raid_play_cnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_raid_play_cnt` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `indun_id` int(11) NOT NULL DEFAULT '0' COMMENT '인던 고유 번호',
  `play_cnt` tinyint(4) NOT NULL DEFAULT '0' COMMENT '플레이 횟수',
  `play_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '최종 플레이 시간(로컬타임)',
  PRIMARY KEY (`char_idx`,`indun_id`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='레이드 플레이 카운트 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_reddot`
--

DROP TABLE IF EXISTS `char_reddot`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_reddot` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `type_id` int(11) NOT NULL DEFAULT '0' COMMENT '유형 id',
  `element_value` bigint(20) NOT NULL DEFAULT '0' COMMENT '유형에 따른 원소',
  PRIMARY KEY (`char_idx`,`type_id`,`element_value`),
  KEY `IX_char_reddot` (`char_idx`,`type_id`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='레드닷 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_refilled_ticket`
--

DROP TABLE IF EXISTS `char_refilled_ticket`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_refilled_ticket` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `ticket_id` int(11) NOT NULL DEFAULT '0' COMMENT '티켓 ID',
  `ticket_value` int(11) NOT NULL DEFAULT '0' COMMENT '티켓 수량',
  `ticket_use_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 사용시간',
  PRIMARY KEY (`char_idx`,`ticket_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 리필되는 티켓 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_seal_stage`
--

DROP TABLE IF EXISTS `char_seal_stage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_seal_stage` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `stage_id` int(11) NOT NULL DEFAULT '0' COMMENT '스테이지 ID',
  `clear_grade` int(11) NOT NULL DEFAULT '0' COMMENT '클리어 등급',
  PRIMARY KEY (`char_idx`,`stage_id`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='봉인석(기억의파편) 스테이지 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_single_play_cnt`
--

DROP TABLE IF EXISTS `char_single_play_cnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_single_play_cnt` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `dungeon_type` int(11) NOT NULL DEFAULT '0' COMMENT '싱글 던전 타입(1:요괴토벌, 2:홍염지옥, 3:기억의 파편, 4:무투전, 5:일일던전)',
  `play_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '플레이 횟수',
  `reset_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '리셋 횟수',
  PRIMARY KEY (`char_idx`,`dungeon_type`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='싱글 플레이 카운트 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_skill`
--

DROP TABLE IF EXISTS `char_skill`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_skill` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `skill_id` int(11) NOT NULL DEFAULT '0' COMMENT '스킬 ID',
  `skill_value` int(11) NOT NULL DEFAULT '1' COMMENT '스킬 포인트',
  `select_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '선택 슬롯 번호(0: Non select)',
  `used_point` smallint(6) NOT NULL DEFAULT '0' COMMENT '사용 누적된 스킬포인트',
  PRIMARY KEY (`char_idx`,`skill_id`),
  KEY `IX_char_idx` (`char_idx`,`select_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 스킬 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_skill_rune`
--

DROP TABLE IF EXISTS `char_skill_rune`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_skill_rune` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `skill_id` int(11) NOT NULL DEFAULT '0' COMMENT '스킬 ID',
  `rune_id` int(11) NOT NULL DEFAULT '0' COMMENT '룬 ID',
  `rune_value` int(11) NOT NULL DEFAULT '1' COMMENT '룬 레벨',
  PRIMARY KEY (`char_idx`,`skill_id`,`rune_id`),
  KEY `IX_char_idx` (`char_idx`,`skill_id`,`rune_id`,`rune_value`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 스킬 룬정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_skill_set`
--

DROP TABLE IF EXISTS `char_skill_set`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_skill_set` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `set_num` int(11) NOT NULL DEFAULT '0' COMMENT 'set 번호',
  `skill_id1` int(11) NOT NULL DEFAULT '0' COMMENT '스킬 ID',
  `skill_id2` int(11) NOT NULL DEFAULT '0' COMMENT '스킬 ID',
  `skill_id3` int(11) NOT NULL DEFAULT '0' COMMENT '스킬 ID',
  `skill_id4` int(11) NOT NULL DEFAULT '0',
  `skill_id5` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`user_idx`,`char_idx`,`set_num`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 스킬 셋 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_stage_info`
--

DROP TABLE IF EXISTS `char_stage_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_stage_info` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `stage_id` int(11) NOT NULL DEFAULT '0' COMMENT '스테이지 id',
  `score` int(11) NOT NULL DEFAULT '0' COMMENT '스테이지 점수',
  `clear_grade` int(11) NOT NULL DEFAULT '0' COMMENT '스테이지 별 등급',
  `clear_time` int(11) NOT NULL DEFAULT '0' COMMENT '스테이지 클리어 타임',
  `clear` tinyint(4) NOT NULL DEFAULT '0' COMMENT '스테이지 클리어 여부(0 : no clear)',
  PRIMARY KEY (`char_idx`,`stage_id`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='스테이지별(요괴토벌) 클리어 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_stat`
--

DROP TABLE IF EXISTS `char_stat`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_stat` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `stat_type` int(11) NOT NULL DEFAULT '0' COMMENT '스탯 타입',
  `stat_value` int(11) NOT NULL DEFAULT '0' COMMENT '스탯 포인트',
  PRIMARY KEY (`char_idx`,`stat_type`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 스탯 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_theme_reward`
--

DROP TABLE IF EXISTS `char_theme_reward`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_theme_reward` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `dungeon_type` int(11) NOT NULL DEFAULT '0' COMMENT '던전타입(1:요괴토벌, 2:홍염지옥, 3:기억의 파편, 4:무투전, 5:일일던전)',
  `theme_id` int(11) NOT NULL DEFAULT '0' COMMENT '테마 id',
  PRIMARY KEY (`char_idx`,`dungeon_type`,`theme_id`),
  KEY `IX_char_idx` (`char_idx`,`dungeon_type`,`theme_id`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='테마(요괴토벌, 기억의파편) 보상 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_vehicle`
--

DROP TABLE IF EXISTS `char_vehicle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_vehicle` (
  `vehicle_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '탈것 idx',
  `char_idx` bigint(20) NOT NULL COMMENT '소유 캐릭터 idx',
  `vehicle_id` int(11) NOT NULL DEFAULT '0' COMMENT '탈것 id',
  `vehicle_level` smallint(6) NOT NULL DEFAULT '0' COMMENT '탈것 레벨',
  `equip` tinyint(4) NOT NULL DEFAULT '0' COMMENT '장착',
  PRIMARY KEY (`vehicle_idx`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_vigilance`
--

DROP TABLE IF EXISTS `char_vigilance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_vigilance` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `vigilance_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '경계대상 캐릭터 고유번호',
  `vigilance_db_sharding_idx` smallint(6) NOT NULL DEFAULT '0' COMMENT '경계대상 캐릭터 DB 샤딩번호',
  `vigilance_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '경계대상 캐릭터 닉네임',
  `vigilance_char_type` int(11) NOT NULL DEFAULT '0' COMMENT '케릭터 타입',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`char_idx`,`vigilance_char_idx`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='경계대상 캐릭터 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `char_waypoint`
--

DROP TABLE IF EXISTS `char_waypoint`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `char_waypoint` (
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `waypoint_idx` int(11) NOT NULL DEFAULT '0' COMMENT '웨이포인트 id',
  PRIMARY KEY (`char_idx`,`waypoint_idx`),
  KEY `IX_user_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='캐릭터 웨이포인트 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild`
--

DROP TABLE IF EXISTS `guild`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild` (
  `guild_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '길드 고유번호(AI)',
  `master_user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 마스터 유저고유번호',
  `master_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드마스터 캐릭터 고유번호',
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT '길드 명칭',
  `exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 경험치',
  `point` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 포인트',
  `guild_gold` bigint(20) NOT NULL DEFAULT '0',
  `guild_cashA` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드에서 기부받은 다이아 ',
  `guild_seal` bigint(20) NOT NULL DEFAULT '0',
  `member_cnt` int(11) NOT NULL DEFAULT '1' COMMENT '길드원 수',
  `member_max_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드원 최대수',
  `mark_id` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마크 아이디',
  `join_type` char(1) NOT NULL DEFAULT 'M' COMMENT '길드 가입타입 (M:길드마스터승인, A:자동가입, B: 가입불가)',
  `introduction` varchar(256) NOT NULL DEFAULT '' COMMENT '길드 소개',
  `notice` varchar(512) NOT NULL DEFAULT '' COMMENT '길드 공지',
  `war_cnt` smallint(6) NOT NULL DEFAULT '0' COMMENT '길드전 참전 횟수',
  `war_win_cnt` smallint(6) NOT NULL DEFAULT '0' COMMENT '길드전 승리 횟수',
  `war_lose_cnt` smallint(6) NOT NULL DEFAULT '0' COMMENT '길드전 패배 횟수',
  `war_application` tinyint(4) NOT NULL DEFAULT '0',
  `grow_target_merc` int(11) NOT NULL DEFAULT '0' COMMENT '성장 목표 용병',
  `grow_target_merc_boss` int(11) NOT NULL DEFAULT '0' COMMENT '성장 목표 수호신',
  `grow_target_tower` int(11) NOT NULL DEFAULT '0' COMMENT '성장 목표 타워',
  `battle_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드전 아이디(AI)',
  `buff_type` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 보상 버프 적용타입',
  `buff_value` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 보상 버프 적용수치',
  `buff_exp_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드전 보상 버프 적용 만료일시',
  `rank_num` bigint(20) NOT NULL DEFAULT '0',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `member_visit_cnt` int(11) NOT NULL DEFAULT '0',
  `member_visit_point` int(11) NOT NULL DEFAULT '0',
  `attend_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `emblem_last_update_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드마크 마지막 갱신 시간',
  `name_last_update_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드 이름 마지막 갱신 시간',
  PRIMARY KEY (`guild_idx`),
  UNIQUE KEY `IX_name_unique` (`name`),
  KEY `IX_name` (`name`),
  KEY `IX_exp` (`exp`),
  KEY `IX_member_cnt` (`member_cnt`),
  KEY `IX_join_type` (`join_type`),
  KEY `IX_master_user_idx` (`master_user_idx`),
  KEY `IX_master_char_idx` (`master_char_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COMMENT='길드정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_ability`
--

DROP TABLE IF EXISTS `guild_ability`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_ability` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 고유번호',
  `guild_category_id` tinyint(4) NOT NULL DEFAULT '0' COMMENT '길드 효과 그룹',
  `ability_group` tinyint(4) NOT NULL DEFAULT '0' COMMENT '효과 그룹',
  `step` tinyint(4) NOT NULL DEFAULT '0' COMMENT '길드 스킬 단계',
  `purchase_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드 스킬 구매 시간',
  PRIMARY KEY (`guild_idx`,`guild_category_id`,`ability_group`),
  KEY `IX_guild_idx` (`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드 버프';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_ally_hostile`
--

DROP TABLE IF EXISTS `guild_ally_hostile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_ally_hostile` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '문파 고유번호',
  `target_guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '대상 문파 고유 번호',
  `ally_hostile` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0: 동맹, 1: 적대',
  `reg_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록 일시',
  PRIMARY KEY (`guild_idx`,`target_guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='동맹/적대 문파 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_application`
--

DROP TABLE IF EXISTS `guild_application`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_application` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드원 유저고유번호',
  `nickname` varchar(30) NOT NULL DEFAULT '' COMMENT '계정(유저) 닉네임',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 고유번호 - 로그인, 캐릭터 교체 시 정보 변경',
  `char_type` int(11) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 타입 - 로그인, 캐릭터 교체 시 정보 변경',
  `char_level` int(11) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 경험치 - 로그인, 캐릭터 교체 시 정보 변경',
  `application_message` varchar(256) NOT NULL DEFAULT '' COMMENT '신청 메세지',
  `battle_power` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 전투력',
  `gamedb_idx` smallint(6) NOT NULL DEFAULT '11' COMMENT '(디폴트로 선택된) 유저별 게임DB정보를 위한 참조 키',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`guild_idx`,`char_idx`),
  KEY `IX_user_idx` (`user_idx`),
  KEY `IX_char_idx` (`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드가입신청';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_apply_alliance`
--

DROP TABLE IF EXISTS `guild_apply_alliance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_apply_alliance` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 고유번호',
  `apply_guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '동맹신청 길드 고유번호',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`guild_idx`,`apply_guild_idx`),
  KEY `IX_guild_idx` (`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='동맹길드 신청정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_bookmark`
--

DROP TABLE IF EXISTS `guild_bookmark`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_bookmark` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드원 유저고유번호',
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`user_idx`,`guild_idx`),
  KEY `IX_guild_idx` (`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드 즐겨찾기';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_buff`
--

DROP TABLE IF EXISTS `guild_buff`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_buff` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '문파 고유번호',
  `buff_id` int(11) NOT NULL DEFAULT '0' COMMENT '버프 ID',
  `buff_value_1` int(11) NOT NULL DEFAULT '0' COMMENT '버프 값',
  `buff_value_2` int(11) NOT NULL DEFAULT '0',
  `buff_value_3` int(11) NOT NULL DEFAULT '0',
  `buff_value_4` int(11) NOT NULL DEFAULT '0',
  `buff_value_5` int(11) NOT NULL DEFAULT '0',
  `buff_value_6` int(11) NOT NULL DEFAULT '0',
  `buff_value_7` int(11) NOT NULL DEFAULT '0',
  `buff_value_8` int(11) NOT NULL DEFAULT '0',
  `buff_value_9` int(11) NOT NULL DEFAULT '0',
  `buff_value_10` int(11) NOT NULL DEFAULT '0',
  `buff_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '문파 버프 종료일시',
  `group_id` int(11) NOT NULL DEFAULT '0' COMMENT '그룹id',
  PRIMARY KEY (`guild_idx`,`buff_id`),
  KEY `IX_guild_idx` (`guild_idx`),
  KEY `IX_buff_time` (`guild_idx`,`buff_time`),
  KEY `IX_guild_idx2` (`guild_idx`,`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='문파버프정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_castle`
--

DROP TABLE IF EXISTS `guild_castle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_castle` (
  `castle_id` int(11) NOT NULL DEFAULT '0' COMMENT '성 지역id',
  `total_gold` bigint(20) NOT NULL DEFAULT '0' COMMENT '누적 골드',
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '점령 길드 idx',
  `join_user_cnt` bigint(20) NOT NULL DEFAULT '0' COMMENT '점령전 참여 유저 수',
  `expire_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '만료 시간',
  PRIMARY KEY (`castle_id`),
  KEY `IX_guild_idx` (`guild_idx`,`castle_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드 성 점령 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_castle_occupy_application`
--

DROP TABLE IF EXISTS `guild_castle_occupy_application`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_castle_occupy_application` (
  `guild_idx` bigint(20) NOT NULL COMMENT '길드 idx',
  `castle_id` int(11) NOT NULL COMMENT '성 id',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '업데이트 시간',
  PRIMARY KEY (`guild_idx`),
  KEY `IX_castleid` (`castle_id`,`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='점령전 신청 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_castle_occupy_war`
--

DROP TABLE IF EXISTS `guild_castle_occupy_war`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_castle_occupy_war` (
  `castle_id` int(11) NOT NULL COMMENT '성 id',
  `guild_idx` bigint(20) NOT NULL COMMENT '길드 idx',
  `total_point` bigint(20) NOT NULL DEFAULT '0' COMMENT '점령전 점수',
  PRIMARY KEY (`castle_id`,`guild_idx`),
  KEY `IX_guildidx` (`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='성 사냥터 점령전 낙찰 길드 및 점령전 점수 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_chat`
--

DROP TABLE IF EXISTS `guild_chat`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_chat` (
  `guild_idx` bigint(20) NOT NULL COMMENT '길드 DB Index',
  `chat_idx` smallint(6) NOT NULL COMMENT '채팅 index',
  `chat_order` smallint(6) NOT NULL COMMENT '채팅 순서',
  `member_nick` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '길드 멤버 닉네임',
  `leader_char` int(11) NOT NULL COMMENT '대표 캐릭터 id',
  `member_grade` tinyint(4) NOT NULL COMMENT '멤버 grade',
  `chat_msg` varchar(61) COLLATE utf8mb4_unicode_ci NOT NULL,
  `chat_date` datetime NOT NULL COMMENT '채팅한 날짜',
  PRIMARY KEY (`guild_idx`,`chat_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='길드 채팅 테이블';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_event_mission`
--

DROP TABLE IF EXISTS `guild_event_mission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_event_mission` (
  `guild_idx` bigint(20) NOT NULL COMMENT '유저idx',
  `event_id` int(11) NOT NULL,
  `mission_id` int(11) NOT NULL COMMENT '미션 id',
  `mission_value` int(11) NOT NULL COMMENT '미션 진행값',
  `expire_time` datetime NOT NULL COMMENT '만료시간. 데이터 삭제 확인 용.',
  `update_time` datetime NOT NULL DEFAULT '1979-01-05 08:30:00',
  PRIMARY KEY (`guild_idx`,`event_id`,`mission_id`),
  KEY `IX_2` (`expire_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_member`
--

DROP TABLE IF EXISTS `guild_member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_member` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드원 유저고유번호',
  `nickname` varchar(30) NOT NULL DEFAULT '' COMMENT '계정 닉네임',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 고유번호 - 로그인, 캐릭터 교체 시 정보 변경',
  `char_type` int(11) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 타입 - 로그인, 캐릭터 교체 시 정보 변경',
  `char_level` int(11) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 경험치 - 로그인, 캐릭터 교체 시 정보 변경',
  `battle_power` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 전투력',
  `gamedb_idx` smallint(6) NOT NULL DEFAULT '11' COMMENT '(디폴트로 선택된) 유저별 게임DB정보를 위한 참조 키',
  `member_grade` int(11) NOT NULL DEFAULT '0' COMMENT '길드원 등급 (0:일반회원, 1:부마스터, 2:마스터)',
  `play_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 참여수',
  `win_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 승리수',
  `lose_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 패배수',
  `draw_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 무승부수',
  `visit_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드 방문(출석) 일시',
  `last_play_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드전 참여일시 (최근참여일시)',
  `is_entry_war` tinyint(4) NOT NULL DEFAULT '1' COMMENT '길드전 참여 희망여부(0:불참, 1:참여)',
  `selected_entry_war` tinyint(4) NOT NULL DEFAULT '0',
  `join_war_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드원이 참여한 길드전 회차 (카운트)',
  `member_status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '길드원 상태(1:정상, 2:탈퇴 3:강퇴)',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `join_occupy` tinyint(4) NOT NULL DEFAULT '0' COMMENT '점령전 참가여부',
  `guild_contribution` bigint(20) NOT NULL DEFAULT '0',
  `introduction` varchar(256) NOT NULL DEFAULT '' COMMENT '자기 소개',
  `weekly_contribution` bigint(20) NOT NULL DEFAULT '0' COMMENT '주간 공헌도',
  PRIMARY KEY (`guild_idx`,`char_idx`),
  KEY `IX_guild_idx` (`guild_idx`,`user_idx`),
  KEY `IX_guild_idx2` (`guild_idx`,`member_grade`),
  KEY `IX_char_idx` (`char_idx`,`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드원 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_member_withdraw`
--

DROP TABLE IF EXISTS `guild_member_withdraw`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_member_withdraw` (
  `partKeyMonth` int(11) NOT NULL DEFAULT '0' COMMENT '파티션 키(월별)',
  `TXIDX` bigint(20) NOT NULL DEFAULT '0' COMMENT '트랜잭션ID',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드원 유저고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `nickname` varchar(30) NOT NULL DEFAULT '' COMMENT '계정 닉네임',
  `char_type` int(11) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 타입 - 로그인, 캐릭터 교체 시 정보 변경',
  `char_level` int(11) NOT NULL DEFAULT '0' COMMENT '대표(현 사용) 캐릭터 경험치 - 로그인, 캐릭터 교체 시 정보 변경',
  `battle_power` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 전투력',
  `gamedb_idx` smallint(6) NOT NULL DEFAULT '11' COMMENT '(디폴트로 선택된) 유저별 게임DB정보를 위한 참조 키',
  `member_grade` int(11) NOT NULL DEFAULT '0' COMMENT '길드원 등급 (0:일반회원, 1:부마스터, 2:마스터)',
  `play_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 참여수',
  `win_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 승리수',
  `lose_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 패배수',
  `draw_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 무승부수',
  `visit_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드 방문(출석) 일시',
  `last_play_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드전 참여일시 (최근참여일시)',
  `is_entry_war` tinyint(4) NOT NULL DEFAULT '0' COMMENT '길드전 참여 희망여부(0:불참, 1:참여)',
  `join_war_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드원이 참여한 길드전 회차 (카운트)',
  `member_status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '길드원 상태(1:정상, 2:탈퇴 3:강퇴)',
  `reg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록(가입)일시',
  `unreg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '탈퇴, 강퇴(예정)일시',
  `guild_contribute` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`char_idx`,`partKeyMonth`,`TXIDX`),
  KEY `IX_user_idx` (`user_idx`,`unreg_date`),
  KEY `IX_char_idx` (`char_idx`,`unreg_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='탈퇴 길드원 정보'
/*!50100 PARTITION BY LIST (partKeyMonth)
(PARTITION guild_member_withdraw_P01 VALUES IN (1) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P02 VALUES IN (2) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P03 VALUES IN (3) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P04 VALUES IN (4) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P05 VALUES IN (5) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P06 VALUES IN (6) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P07 VALUES IN (7) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P08 VALUES IN (8) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P09 VALUES IN (9) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P010 VALUES IN (10) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P011 VALUES IN (11) ENGINE = InnoDB,
 PARTITION guild_member_withdraw_P012 VALUES IN (12) ENGINE = InnoDB) */;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_raid_unlock`
--

DROP TABLE IF EXISTS `guild_raid_unlock`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_raid_unlock` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 고유 번호',
  `raid_id` int(11) NOT NULL DEFAULT '0' COMMENT 'UnLock된 길드 레이드 ID',
  PRIMARY KEY (`guild_idx`,`raid_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='UnLock(이용 가능한)된 길드 레이드 ID';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_war_history`
--

DROP TABLE IF EXISTS `guild_war_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_war_history` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `opponent_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '상대 길드고유번호',
  `opponent_name` varchar(50) NOT NULL DEFAULT '' COMMENT '상대 길드 명칭',
  `opponent_mark_id` int(11) NOT NULL DEFAULT '0' COMMENT '상대 길드 마크 아이디',
  `opponent_masterNick` varchar(50) NOT NULL DEFAULT '' COMMENT '상대 길드 마스터 별명',
  `opponent_char_typ` int(11) NOT NULL DEFAULT '0' COMMENT '상대 길드 마스터 캐릭터 타입(직업)',
  `opponent_char_level` int(11) NOT NULL DEFAULT '0' COMMENT '상대 길드 마스터 캐릭터 레벨',
  `opponent_score` int(11) NOT NULL DEFAULT '0',
  `opponent_destroy` int(11) NOT NULL DEFAULT '0',
  `opponent_win_cnt` int(11) NOT NULL DEFAULT '0',
  `opponent_star_cnt` int(11) NOT NULL DEFAULT '0',
  `score` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 점수',
  `destroy` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 파괴율 정보',
  `win_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 개인전 승리 수',
  `star_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '획득한 별 수',
  `get_reward_type` int(11) NOT NULL DEFAULT '0' COMMENT '획득한 전리품 보상 타입',
  `get_reward_id` int(11) NOT NULL DEFAULT '0' COMMENT '획득한 전리품 고유번호',
  `get_amount` int(11) NOT NULL DEFAULT '0' COMMENT '획득한 전리품 수량',
  `get_exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '획득한 경험치',
  `get_gold` bigint(20) NOT NULL DEFAULT '0',
  `get_seal` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드전 전적';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_war_matching`
--

DROP TABLE IF EXISTS `guild_war_matching`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_war_matching` (
  `battle_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드전 고유번호',
  `first_guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '첫번째 길드 고유번호',
  `second_guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '두번째 길드 고유번호',
  `guild_war_state` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 상태',
  `start_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드전 시작일시',
  `end_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드전 종료일시',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`battle_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드전 매칭 목록';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_war_member`
--

DROP TABLE IF EXISTS `guild_war_member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_war_member` (
  `guild_idx` bigint(20) NOT NULL COMMENT '길드 고유번호',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 고유번호',
  `game_db_idx` smallint(6) NOT NULL DEFAULT '0' COMMENT '유저 게임DB 번호',
  `nickname` varchar(30) NOT NULL DEFAULT '' COMMENT '유저 닉네임',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `char_type` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 타입',
  `char_level` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 레벨',
  `battle_power` int(11) NOT NULL DEFAULT '0' COMMENT '캐릭터 전투력',
  `member_grade` int(11) NOT NULL DEFAULT '0' COMMENT '길드원 등급 (0:일반회원, 1:부마스터, 2:마스터)',
  `reward_contribution` bigint(20) NOT NULL DEFAULT '0',
  `reward_gold` bigint(20) NOT NULL DEFAULT '0',
  `reward_point` int(11) NOT NULL DEFAULT '0' COMMENT '획득 길드 포인트',
  `first_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '첫번째 공격 대상 닉네임',
  `first_attack_star` smallint(6) NOT NULL DEFAULT '0' COMMENT '첫번째 공격 획득 스타',
  `first_attack_destroy` int(11) NOT NULL DEFAULT '0' COMMENT '첫번째 공격 파괴율',
  `second_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '두번째 공격 대상 닉네임',
  `second_attack_star` smallint(6) NOT NULL DEFAULT '0' COMMENT '두번째 공격 획득 스타',
  `second_attack_destroy` int(11) NOT NULL DEFAULT '0' COMMENT '두번째 공격 파괴율',
  `fight_count` int(11) NOT NULL DEFAULT '0' COMMENT '전투 횟수',
  `first_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '첫번째 공격자 유저 인덱스',
  `second_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '두번째 공격자 유저 인덱스',
  `fight_comp_count` int(11) NOT NULL DEFAULT '0' COMMENT '공격 완료 횟수',
  `defence_comp_count` int(11) NOT NULL DEFAULT '0' COMMENT '방어 완료 횟수',
  PRIMARY KEY (`guild_idx`,`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드전 신청 멤버 목록';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_war_regist`
--

DROP TABLE IF EXISTS `guild_war_regist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_war_regist` (
  `guild_idx` bigint(20) NOT NULL COMMENT '길드 고유번호',
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT '길드 명칭',
  `mark_id` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마크 아이디',
  `master_user_nickname` varchar(30) NOT NULL DEFAULT '' COMMENT '길드 마스터 닉네임',
  `master_char_type` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마스터 캐릭터 종류',
  `master_char_level` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마스터 캐릭터 레벨',
  `guild_war_state` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 상태',
  `peorid_num` smallint(6) NOT NULL DEFAULT '0',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`guild_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드전 신청 목록';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_war_setting`
--

DROP TABLE IF EXISTS `guild_war_setting`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_war_setting` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `slot` tinyint(4) NOT NULL DEFAULT '0' COMMENT '슬롯번호',
  `type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '자원 타입 (1:수호신, 2:타워, 3:용병)',
  `id` int(11) NOT NULL DEFAULT '0' COMMENT '자원 아이디',
  PRIMARY KEY (`guild_idx`,`slot`,`type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드전 세팅';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_war_unit`
--

DROP TABLE IF EXISTS `guild_war_unit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_war_unit` (
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드고유번호',
  `war_unit_id` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 유닛 아이디',
  `war_unit_level` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 유닛 레벨',
  `war_unit_exp` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 유닛 경험치(레벨)',
  PRIMARY KEY (`guild_idx`,`war_unit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='길드전 유닛';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `guild_withdraw`
--

DROP TABLE IF EXISTS `guild_withdraw`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guild_withdraw` (
  `partKeyMonth` int(11) NOT NULL DEFAULT '0' COMMENT '파티션 키(월별)',
  `TXIDX` bigint(20) NOT NULL DEFAULT '0' COMMENT '트랜잭션ID',
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 고유번호(AI)',
  `master_user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 마스터 유저고유번호',
  `master_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 마스터 캐릭터고유번호',
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT '길드 명칭',
  `exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 경험치',
  `point` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드 포인트',
  `member_cnt` int(11) NOT NULL DEFAULT '1' COMMENT '길드원 수',
  `member_max_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드원 최대수',
  `mark_id` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마크 아이디',
  `join_type` char(1) NOT NULL DEFAULT 'M' COMMENT '길드 가입타입 (M:길드마스터승인, A:자동가입, B: 가입불가)',
  `introduction` varchar(256) NOT NULL DEFAULT '' COMMENT '길드 소개',
  `notice` varchar(512) NOT NULL DEFAULT '' COMMENT '길드 공지',
  `war_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 참전 횟수',
  `war_win_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 승리 횟수',
  `grow_target_merc` int(11) NOT NULL DEFAULT '0' COMMENT '성장 목표 용병',
  `grow_target_merc_boss` int(11) NOT NULL DEFAULT '0' COMMENT '성장 목표 수호신',
  `grow_target_tower` int(11) NOT NULL DEFAULT '0' COMMENT '성장 목표 타워',
  `battle_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '길드전 아이디(AI)',
  `buff_type` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 보상 버프 적용타입',
  `buff_value` int(11) NOT NULL DEFAULT '0' COMMENT '길드전 보상 버프 적용수치',
  `buff_exp_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '길드전 보상 버프 적용 만료일시',
  `reg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `unreg_date` datetime NOT NULL DEFAULT '1900-01-01 00:00:00' COMMENT '해체(예정)일시',
  PRIMARY KEY (`partKeyMonth`,`TXIDX`,`guild_idx`),
  KEY `IX_name` (`name`),
  KEY `IX_unreg_date` (`unreg_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='삭제길드정보'
/*!50100 PARTITION BY LIST (partKeyMonth)
(PARTITION guild_withdraw_P01 VALUES IN (1) ENGINE = InnoDB,
 PARTITION guild_withdraw_P02 VALUES IN (2) ENGINE = InnoDB,
 PARTITION guild_withdraw_P03 VALUES IN (3) ENGINE = InnoDB,
 PARTITION guild_withdraw_P04 VALUES IN (4) ENGINE = InnoDB,
 PARTITION guild_withdraw_P05 VALUES IN (5) ENGINE = InnoDB,
 PARTITION guild_withdraw_P06 VALUES IN (6) ENGINE = InnoDB,
 PARTITION guild_withdraw_P07 VALUES IN (7) ENGINE = InnoDB,
 PARTITION guild_withdraw_P08 VALUES IN (8) ENGINE = InnoDB,
 PARTITION guild_withdraw_P09 VALUES IN (9) ENGINE = InnoDB,
 PARTITION guild_withdraw_P10 VALUES IN (10) ENGINE = InnoDB,
 PARTITION guild_withdraw_P11 VALUES IN (11) ENGINE = InnoDB,
 PARTITION guild_withdraw_P12 VALUES IN (12) ENGINE = InnoDB) */;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `item_attribute`
--

DROP TABLE IF EXISTS `item_attribute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `item_attribute` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '소유 아이템 고유인덱스',
  `attribute_id` int(11) NOT NULL DEFAULT '0' COMMENT '속성 id',
  `attribute_value` smallint(6) NOT NULL DEFAULT '0' COMMENT '속성값',
  PRIMARY KEY (`item_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='아이템 속성 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `item_jewels`
--

DROP TABLE IF EXISTS `item_jewels`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `item_jewels` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '소유 아이템 고유인덱스',
  `slot_id` tinyint(4) NOT NULL DEFAULT '0' COMMENT '슬롯 번호',
  `id` int(11) NOT NULL DEFAULT '0' COMMENT '보석 id',
  PRIMARY KEY (`item_idx`,`slot_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='아이템 보석 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `item_option`
--

DROP TABLE IF EXISTS `item_option`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `item_option` (
  `item_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '소유 아이템 고유인덱스',
  `slot_id` tinyint(4) NOT NULL DEFAULT '0' COMMENT '슬롯 번호',
  `option_id` int(11) NOT NULL DEFAULT '0' COMMENT '옵션 id',
  `option_value` int(11) NOT NULL DEFAULT '0' COMMENT '옵션 값',
  PRIMARY KEY (`item_idx`,`slot_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='아이템 옵션 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `my_table`
--

DROP TABLE IF EXISTS `my_table`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `my_table` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `data` json DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `server_buff`
--

DROP TABLE IF EXISTS `server_buff`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `server_buff` (
  `buff_id` int(11) NOT NULL DEFAULT '0' COMMENT '버프 ID',
  `buff_value_1` int(11) NOT NULL DEFAULT '0' COMMENT '버프 값',
  `buff_value_2` int(11) NOT NULL DEFAULT '0',
  `buff_value_3` int(11) NOT NULL DEFAULT '0',
  `buff_value_4` int(11) NOT NULL DEFAULT '0',
  `buff_value_5` int(11) NOT NULL DEFAULT '0',
  `buff_value_6` int(11) NOT NULL DEFAULT '0',
  `buff_value_7` int(11) NOT NULL DEFAULT '0',
  `buff_value_8` int(11) NOT NULL DEFAULT '0',
  `buff_value_9` int(11) NOT NULL DEFAULT '0',
  `buff_value_10` int(11) NOT NULL DEFAULT '0',
  `group_id` int(11) NOT NULL DEFAULT '0' COMMENT '그룹id',
  `buff_time_start` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '버프 시작일시',
  `buff_time_end` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '버프 종료일시',
  PRIMARY KEY (`buff_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='서버 버프 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `server_makeitem_limit`
--

DROP TABLE IF EXISTS `server_makeitem_limit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `server_makeitem_limit` (
  `make_id` int(11) NOT NULL COMMENT '제작물 고유 번호',
  `make_limit` int(11) NOT NULL COMMENT '최대 제작 개수\n',
  `make_qty` int(11) NOT NULL COMMENT '현재 제작 개수\n',
  `register_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록 날짜',
  `update_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '갱신 날짜',
  PRIMARY KEY (`make_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_auction_items`
--

DROP TABLE IF EXISTS `tbl_auction_items`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_auction_items` (
  `fld_index` bigint(20) NOT NULL,
  `fld_db_idx` tinyint(4) NOT NULL,
  `fld_user_idx` bigint(20) NOT NULL,
  `fld_char_idx` bigint(20) NOT NULL,
  `fld_nick` varchar(30) NOT NULL,
  `fld_char_class` int(11) NOT NULL,
  `fld_item_name_id` int(11) NOT NULL,
  `fld_item_group` int(11) NOT NULL,
  `fld_item_group_sub` int(11) NOT NULL,
  `fld_item_idx` bigint(20) NOT NULL DEFAULT '0',
  `fld_count_item_id` int(11) NOT NULL DEFAULT '0',
  `fld_count_item_type` tinyint(4) NOT NULL DEFAULT '0',
  `fld_count_item_qty` int(11) DEFAULT NULL,
  `fld_equip_item_id` int(11) NOT NULL DEFAULT '0',
  `fld_equip_item_grade` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_type` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_quality_grade` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_level` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_exp` int(11) NOT NULL DEFAULT '0',
  `fld_equip_enchant_level` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_attr_id` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_attr_value` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_jewel_1` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_2` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_3` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_4` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_5` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_6` int(11) NOT NULL DEFAULT '0',
  `fld_equip_identify` tinyint(4) NOT NULL DEFAULT '0' COMMENT '감정 여부(0, 1)',
  `fld_equip_option_id_1` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_1` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_2` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_2` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_3` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_3` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_4` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_4` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_5` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_5` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_6` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_6` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_7` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_7` smallint(6) NOT NULL DEFAULT '0',
  `fld_skillbook_item_id` int(11) NOT NULL DEFAULT '0',
  `fld_skillbook_percent` smallint(6) NOT NULL DEFAULT '0',
  `fld_skillbook_lifetime` tinyint(4) NOT NULL DEFAULT '0',
  `fld_skillbook_value` smallint(6) NOT NULL DEFAULT '0',
  `fld_sell_password` int(11) NOT NULL DEFAULT '0',
  `fld_register_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fld_expire_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fld_sell_price` int(11) NOT NULL DEFAULT '100000000',
  PRIMARY KEY (`fld_index`),
  KEY `SEARCH_ALL` (`fld_expire_date`,`fld_sell_password`,`fld_char_class`),
  KEY `SEARCH_CATEGORY` (`fld_sell_password`,`fld_expire_date`,`fld_item_group`),
  KEY `SEARCH_SUB` (`fld_item_group_sub`,`fld_expire_date`,`fld_sell_password`),
  KEY `SEARCH_GRADE` (`fld_item_group_sub`,`fld_equip_quality_grade`,`fld_expire_date`,`fld_sell_password`),
  KEY `SEARCH_ITEMNAME` (`fld_item_name_id`,`fld_expire_date`,`fld_sell_password`),
  KEY `SEARCH_ITEMNAME_GRADE` (`fld_item_name_id`,`fld_equip_quality_grade`,`fld_expire_date`,`fld_sell_password`),
  KEY `SEARCH_USERID` (`fld_user_idx`,`fld_char_class`,`fld_expire_date`),
  KEY `SEARCH_CHARID` (`fld_user_idx`,`fld_char_idx`),
  KEY `SEARCH_CATEGORY_3` (`fld_sell_password`,`fld_item_group_sub`,`fld_expire_date`,`fld_equip_quality_grade`),
  KEY `SEARCH_GRADE_2` (`fld_item_group_sub`,`fld_equip_item_grade`,`fld_sell_password`,`fld_expire_date`),
  KEY `IX_group_subgroup` (`fld_char_idx`,`fld_expire_date`,`fld_equip_item_grade`,`fld_item_group`,`fld_item_group_sub`),
  KEY `IX_id_enchant` (`fld_expire_date`,`fld_item_name_id`,`fld_equip_enchant_level`,`fld_equip_identify`),
  KEY `IX_id_enchant_price` (`fld_expire_date`,`fld_item_name_id`,`fld_equip_enchant_level`,`fld_equip_identify`,`fld_sell_price`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_auction_items_ai`
--

DROP TABLE IF EXISTS `tbl_auction_items_ai`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_auction_items_ai` (
  `fld_index` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`fld_index`)
) ENGINE=InnoDB AUTO_INCREMENT=2674 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_auction_items_sold`
--

DROP TABLE IF EXISTS `tbl_auction_items_sold`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_auction_items_sold` (
  `fld_index` bigint(20) NOT NULL,
  `fld_db_idx` tinyint(4) NOT NULL,
  `fld_user_idx` bigint(20) NOT NULL,
  `fld_char_idx` bigint(20) NOT NULL,
  `fld_nick` varchar(30) NOT NULL,
  `fld_char_class` int(11) NOT NULL,
  `fld_item_name_id` int(11) NOT NULL,
  `fld_item_group` int(11) NOT NULL,
  `fld_item_group_sub` int(11) NOT NULL,
  `fld_item_idx` bigint(20) NOT NULL DEFAULT '0',
  `fld_count_item_id` int(11) NOT NULL DEFAULT '0',
  `fld_count_item_type` tinyint(4) NOT NULL DEFAULT '0',
  `fld_count_item_qty` int(11) DEFAULT NULL,
  `fld_equip_item_id` int(11) NOT NULL DEFAULT '0',
  `fld_equip_type` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_quality_grade` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_level` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_exp` int(11) NOT NULL DEFAULT '0',
  `fld_equip_enchant_level` tinyint(4) NOT NULL DEFAULT '0',
  `fld_equip_attr_id` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_attr_value` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_jewel_1` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_2` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_3` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_4` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_5` int(11) NOT NULL DEFAULT '0',
  `fld_equip_jewel_6` int(11) NOT NULL DEFAULT '0',
  `fld_equip_identify` tinyint(4) NOT NULL DEFAULT '0' COMMENT '감정 여부(0, 1)',
  `fld_equip_option_id_1` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_1` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_2` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_2` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_3` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_3` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_4` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_4` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_5` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_5` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_6` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_6` smallint(6) NOT NULL DEFAULT '0',
  `fld_equip_option_id_7` int(11) NOT NULL DEFAULT '0',
  `fld_equip_option_value_7` smallint(6) NOT NULL DEFAULT '0',
  `fld_skillbook_item_id` int(11) NOT NULL DEFAULT '0',
  `fld_skillbook_percent` smallint(6) NOT NULL DEFAULT '0',
  `fld_skillbook_lifetime` tinyint(4) NOT NULL DEFAULT '0',
  `fld_skillbook_value` smallint(6) NOT NULL DEFAULT '0',
  `fld_sell_password` int(11) NOT NULL DEFAULT '0',
  `fld_register_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fld_expire_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fld_sell_price` int(11) NOT NULL DEFAULT '100000000',
  `fld_settleup` tinyint(4) NOT NULL DEFAULT '0',
  `fld_buy_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fld_buy_user_idx` bigint(20) NOT NULL,
  `fld_buy_char_idx` bigint(20) NOT NULL,
  `fld_buy_user_nick` varchar(30) NOT NULL,
  PRIMARY KEY (`fld_index`),
  KEY `SEARCH_MINE_1` (`fld_user_idx`,`fld_char_idx`),
  KEY `SEARCH_MINE_2` (`fld_user_idx`,`fld_char_idx`,`fld_settleup`),
  KEY `SEARCH_MINE_3` (`fld_buy_user_idx`,`fld_buy_char_idx`),
  KEY `SEARCH_MINE_4` (`fld_buy_user_idx`,`fld_buy_char_idx`,`fld_user_idx`,`fld_char_idx`),
  KEY `IX_id_enchant` (`fld_buy_date`,`fld_item_name_id`,`fld_equip_enchant_level`),
  KEY `IX_id_enchant_price` (`fld_buy_date`,`fld_item_name_id`,`fld_equip_enchant_level`,`fld_sell_price`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_auction_statistics`
--

DROP TABLE IF EXISTS `tbl_auction_statistics`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_auction_statistics` (
  `item_name_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 id',
  `enchant_level` tinyint(4) NOT NULL DEFAULT '0' COMMENT '강화 단계',
  `latest_sellprice` int(11) NOT NULL DEFAULT '0' COMMENT '가장 최근 판매가격',
  `average_sellprice` int(11) NOT NULL DEFAULT '0' COMMENT '평균 가격',
  `lowest_sellprice` int(20) NOT NULL DEFAULT '0' COMMENT '최저 판매 가격',
  PRIMARY KEY (`item_name_id`,`enchant_level`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='거래소 통계정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_buy_package`
--

DROP TABLE IF EXISTS `tbl_buy_package`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_buy_package` (
  `idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '자동증가값',
  `world_idx` bigint(20) NOT NULL COMMENT '월드id',
  `world_user_idx` bigint(20) NOT NULL COMMENT '월드에서 유저id',
  `world_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '월드내에서의 캐릭터 idx',
  `packageid` int(11) NOT NULL DEFAULT '0' COMMENT '패키지id',
  `max_count` smallint(6) NOT NULL DEFAULT '0' COMMENT '최대카운트',
  `cur_count` smallint(6) NOT NULL DEFAULT '0' COMMENT '현재카운트',
  `get_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '보상수령여부',
  `buy_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '구매날짜',
  `complete_date` datetime NOT NULL DEFAULT '1970-01-01 00:00:00' COMMENT '완료 날',
  `is_used` tinyint(4) NOT NULL DEFAULT '0' COMMENT '사용여부(0:사용 1:미사용)',
  PRIMARY KEY (`idx`),
  KEY `IDX_WORLD_USERID_PACKAGEID` (`world_idx`,`world_user_idx`,`packageid`,`idx`),
  KEY `IDX_WORLD_USERID_PACKAGEID_2` (`world_user_idx`,`world_char_idx`,`is_used`,`world_idx`,`packageid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_buy_package_mission`
--

DROP TABLE IF EXISTS `tbl_buy_package_mission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_buy_package_mission` (
  `package_idx` bigint(20) NOT NULL COMMENT '구매상품 인덱스',
  `world_idx` bigint(20) NOT NULL COMMENT '월드 id',
  `world_user_idx` bigint(20) NOT NULL COMMENT '월드에서의 유저 인덱스',
  `world_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '월드내에서의 캐릭터 idx',
  `mission_id` int(11) NOT NULL COMMENT '미션id\n',
  `mission_value` int(11) NOT NULL DEFAULT '0' COMMENT '미션 수행값',
  `mission_max_value` int(11) NOT NULL DEFAULT '0' COMMENT '미션 최대 달성값',
  `is_complete` tinyint(4) NOT NULL DEFAULT '0' COMMENT '미션완료여부',
  `update_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '미션 완료일시',
  `value_update_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`world_idx`,`world_user_idx`,`package_idx`,`mission_id`),
  KEY `IDX_buy_package_mission_0` (`package_idx`),
  KEY `IDX_buy_package_mission_1` (`world_user_idx`),
  KEY `IDX_buy_package_mission_2` (`world_char_idx`),
  KEY `IDX_buy_package_mission_3` (`mission_id`),
  KEY `IDX_buy_package_mission_4` (`world_idx`),
  KEY `IDX_buy_package_mission_attendace_0` (`update_date`),
  KEY `IDX_buy_package_mission_attendace_1` (`is_complete`),
  KEY `IX_select` (`world_user_idx`,`world_char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='패키지 미션정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_event_serverkill_progress`
--

DROP TABLE IF EXISTS `tbl_event_serverkill_progress`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_event_serverkill_progress` (
  `world_idx` int(11) NOT NULL,
  `eventid` int(11) NOT NULL,
  `event_sub_id` int(11) NOT NULL DEFAULT '0',
  `count` int(11) DEFAULT '0',
  `maxcount` int(11) DEFAULT '0',
  `nicname` varchar(30) NOT NULL DEFAULT '',
  `expire_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '이벤트 종료 날짜',
  PRIMARY KEY (`world_idx`,`eventid`,`event_sub_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tbl_iap`
--

DROP TABLE IF EXISTS `tbl_iap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_iap` (
  `txid` varchar(512) NOT NULL COMMENT 'txID 고유 번호(개발사가 발급하는 구매 고유 번호)\n<world_id(WWW)>_<server_session_id>_<datetime(yymmddHHMMSS)>_<Count(KKKKK)>',
  `user_id` bigint(20) NOT NULL COMMENT '유저 고유 번호',
  `char_id` bigint(20) NOT NULL COMMENT '구매 캐릭터 고유 번호',
  `product_id` varchar(64) NOT NULL,
  `order_id` varchar(128) NOT NULL DEFAULT '',
  `reg_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`txid`),
  KEY `idx_userid` (`user_id`),
  KEY `tx_orderid` (`order_id`),
  KEY `tx_userid_pay` (`user_id`,`product_id`,`order_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='구매 관련 기록';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_attendance`
--

DROP TABLE IF EXISTS `user_attendance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_attendance` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `attendance_id` int(11) NOT NULL DEFAULT '0' COMMENT '출석 id',
  `visit_count` int(11) NOT NULL DEFAULT '0' COMMENT '출석 횟수',
  `reg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT ' 시간',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT ' 시간',
  `expire_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT ' 시간',
  PRIMARY KEY (`user_idx`,`attendance_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 출석';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_avatar`
--

DROP TABLE IF EXISTS `user_avatar`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_avatar` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `avatar_id` int(11) NOT NULL DEFAULT '0' COMMENT '변신아바타 id',
  `avatar_level` smallint(6) NOT NULL DEFAULT '0' COMMENT '변신아바타 레벨',
  `avatar_value` smallint(6) NOT NULL DEFAULT '0' COMMENT '변신아바타 수량',
  PRIMARY KEY (`user_idx`,`avatar_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='변신아바타';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_avatar_composite`
--

DROP TABLE IF EXISTS `user_avatar_composite`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_avatar_composite` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `avatar_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '변신아바타 합성 등급',
  `fail_count` int(11) NOT NULL DEFAULT '0' COMMENT '누적 실패 횟수',
  PRIMARY KEY (`user_idx`,`avatar_grade`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 변신아바타 합성 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_avatar_confirm_pending`
--

DROP TABLE IF EXISTS `user_avatar_confirm_pending`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_avatar_confirm_pending` (
  `avatar_cp_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'idx',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `avatar_id` int(11) NOT NULL DEFAULT '0' COMMENT '변신아바타 id',
  `change_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '변경 횟수',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `end_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '변경가능 최종일시',
  PRIMARY KEY (`avatar_cp_idx`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COMMENT='변신아바타 확정 대기';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_battlepass`
--

DROP TABLE IF EXISTS `user_battlepass`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_battlepass` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `pass_id` int(11) NOT NULL DEFAULT '0' COMMENT '배틀 패스 id',
  `total_point` int(11) NOT NULL DEFAULT '0' COMMENT '누적 점수',
  `recv_reward` int(11) NOT NULL DEFAULT '0' COMMENT '보상 수령 여부',
  `recv_silver_reward` int(11) NOT NULL DEFAULT '0' COMMENT '보상 수령 여부',
  `recv_gold_reward` int(11) NOT NULL DEFAULT '0' COMMENT '보상 수령 여부',
  `reg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT ' 시간',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT ' 시간',
  `expire_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '정보 만료 시간',
  PRIMARY KEY (`user_idx`,`pass_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 배틀 패스';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_battlepass_mission`
--

DROP TABLE IF EXISTS `user_battlepass_mission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_battlepass_mission` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저idx',
  `pass_id` int(11) NOT NULL,
  `mission_id` int(11) NOT NULL COMMENT '미션 id',
  `mission_value` int(11) NOT NULL COMMENT '미션 진행값',
  `expire_time` datetime NOT NULL COMMENT '만료시간. 데이터 삭제 확인 용.',
  `update_time` datetime NOT NULL DEFAULT '1979-01-05 08:30:00',
  `get_reward` tinyint(4) DEFAULT NULL COMMENT '보상 수령 여부',
  PRIMARY KEY (`user_idx`,`pass_id`,`mission_id`),
  KEY `IX_1` (`user_idx`),
  KEY `IX_2` (`expire_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 배틀 패스 미션';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_castle`
--

DROP TABLE IF EXISTS `user_castle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_castle` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `region_code` int(11) NOT NULL DEFAULT '0' COMMENT '지역 code',
  `total_point` int(11) NOT NULL DEFAULT '0' COMMENT '누적 점수',
  `daily_point` int(11) NOT NULL DEFAULT '0' COMMENT '일일 점수',
  `daily_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '일일 보상 수령 여부',
  `expire_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '정보 만료 시간',
  PRIMARY KEY (`user_idx`,`region_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 성사냥터 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_chat_block`
--

DROP TABLE IF EXISTS `user_chat_block`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_chat_block` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `block_num` tinyint(4) NOT NULL DEFAULT '0' COMMENT '차단번호',
  `block_char_type` int(11) NOT NULL DEFAULT '0' COMMENT '차단유저 캐릭터 타입',
  `block_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '차단유저 닉네임',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`user_idx`,`block_num`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 채팅차단 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_chat_punish`
--

DROP TABLE IF EXISTS `user_chat_punish`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_chat_punish` (
  `user_idx` bigint(20) NOT NULL COMMENT '게임 계정 고유 번호\n',
  `punish_finish_time` datetime NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT '채팅 금지 종료 시간',
  PRIMARY KEY (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_client_option_data`
--

DROP TABLE IF EXISTS `user_client_option_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_client_option_data` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `option_data` mediumtext NOT NULL COMMENT 'client option data',
  PRIMARY KEY (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='클라이언트 옵션 설정 저장 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_collect`
--

DROP TABLE IF EXISTS `user_collect`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_collect` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `collect_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '1: Item, ',
  `collect_id` int(11) NOT NULL DEFAULT '0' COMMENT '도감 ID',
  `collect_order` tinyint(4) NOT NULL DEFAULT '0' COMMENT '순서',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 ID',
  `level` int(11) NOT NULL DEFAULT '0' COMMENT '레벨',
  `value` int(11) NOT NULL DEFAULT '0' COMMENT '값',
  `getReward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '보상유무(?)',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  PRIMARY KEY (`user_idx`,`collect_type`,`collect_id`,`collect_order`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='도감 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_combat`
--

DROP TABLE IF EXISTS `user_combat`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_combat` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저고유번호',
  `combat_grade_id` int(11) NOT NULL DEFAULT '0' COMMENT '무투전등급',
  `combat_score` bigint(20) NOT NULL DEFAULT '0' COMMENT '무투전점수',
  `combat_win_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '무투전 승리 횟수',
  `combat_succ` int(11) NOT NULL DEFAULT '0' COMMENT '무투전 연승 횟 수',
  `daily_combat_score` int(11) NOT NULL DEFAULT '0' COMMENT '일일 획득 점수',
  `season_combat_score` int(11) NOT NULL DEFAULT '0' COMMENT '시즌 획득 점수',
  `daily_combat_win_cnt` smallint(6) NOT NULL DEFAULT '0',
  `season_combat_win_cnt` smallint(6) NOT NULL DEFAULT '0' COMMENT '시즌 승리 회수',
  `newgrade_combat_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '승급 보상 수령 여부(0: 보상안받음 1: 보상받음)',
  `daily_combat_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '일일 보상 획득 여부(0: 보상안받음 1: 보상받음)',
  `season_combat_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '시즌 보상 획득 여부(0: 보상안받음 1: 보상받음)',
  `hero_combat_reset_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '대전 상대 초기화 횟수',
  `combat_grade_up_reset_cnt` int(11) NOT NULL DEFAULT '0' COMMENT '승급전 대전 상대 초기화 횟수',
  `combat_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 무투전 참전 시간',
  PRIMARY KEY (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 무투전 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_combat_rivals`
--

DROP TABLE IF EXISTS `user_combat_rivals`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_combat_rivals` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저고유번호',
  `rival_user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '상대 유저(계정)고유번호',
  `rival_db_idx` smallint(6) NOT NULL DEFAULT '0' COMMENT '상대 디비 넘버',
  `rival_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '상대 닉네임',
  `rival_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '상대 타입',
  `rival_rank` bigint(20) NOT NULL DEFAULT '0' COMMENT '상대 랭킹',
  `rival_combatPoint` bigint(20) NOT NULL DEFAULT '0' COMMENT '상대 포인트',
  `rival_isWin` tinyint(4) NOT NULL DEFAULT '0' COMMENT '승리여부(1:승리)',
  PRIMARY KEY (`user_idx`,`rival_user_idx`,`rival_type`),
  KEY `IX_user_idx` (`user_idx`,`rival_type`,`rival_isWin`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 무투전 라이벌 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_coupon_fail`
--

DROP TABLE IF EXISTS `user_coupon_fail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_coupon_fail` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저 고유 번호',
  `fail_cnt` smallint(4) NOT NULL DEFAULT '0' COMMENT '실패 횟수',
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'update 시간',
  PRIMARY KEY (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_coupon_used`
--

DROP TABLE IF EXISTS `user_coupon_used`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_coupon_used` (
  `coupon_id` varchar(32) NOT NULL COMMENT '쿠폰 ID\n',
  `user_idx` bigint(20) NOT NULL,
  `use_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '사용 시간',
  PRIMARY KEY (`coupon_id`,`user_idx`),
  KEY `ix_user` (`user_idx`,`coupon_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_event_attend`
--

DROP TABLE IF EXISTS `user_event_attend`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_event_attend` (
  `user_idx` bigint(20) NOT NULL,
  `event_id` int(11) NOT NULL,
  `event_attend_id` int(11) NOT NULL,
  `event_type` int(11) NOT NULL DEFAULT '0' COMMENT '이벤트 타입',
  `day_count` tinyint(4) DEFAULT NULL,
  `last_date` datetime DEFAULT NULL,
  `get_reward` tinyint(4) DEFAULT NULL,
  `expire_time` datetime DEFAULT NULL,
  PRIMARY KEY (`user_idx`,`event_id`,`event_attend_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_event_attend_mission`
--

DROP TABLE IF EXISTS `user_event_attend_mission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_event_attend_mission` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저 idx',
  `event_id` int(11) NOT NULL COMMENT '이벤트 id',
  `event_attend_mission_id` int(11) DEFAULT NULL,
  `event_day` tinyint(4) NOT NULL COMMENT '이벤트 day 값',
  `get_reward` tinyint(4) DEFAULT NULL COMMENT '보상 수령 여부',
  `expire_time` datetime DEFAULT NULL,
  PRIMARY KEY (`user_idx`,`event_id`,`event_day`)
) ENGINE=InnoDB DEFAULT CHARSET=eucjpms COMMENT='유저 이벤트 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_event_mission`
--

DROP TABLE IF EXISTS `user_event_mission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_event_mission` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저idx',
  `event_id` int(11) NOT NULL,
  `mission_id` int(11) NOT NULL COMMENT '미션 id',
  `mission_value` int(11) NOT NULL COMMENT '미션 진행값',
  `expire_time` datetime NOT NULL COMMENT '만료시간. 데이터 삭제 확인 용.',
  `update_time` datetime NOT NULL DEFAULT '1979-01-05 08:30:00',
  `get_reward` tinyint(4) DEFAULT NULL COMMENT '보상 수령 여부',
  PRIMARY KEY (`user_idx`,`event_id`,`mission_id`),
  KEY `IX_2` (`expire_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_event_play_cnt`
--

DROP TABLE IF EXISTS `user_event_play_cnt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_event_play_cnt` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저 고유 번호',
  `event_id` int(11) NOT NULL COMMENT '이벤트 번호',
  `sub_id` int(11) NOT NULL COMMENT 'event_id 에 속하는 sub id, mission id로 봐도 됨',
  `play_cnt` int(11) DEFAULT NULL COMMENT '플레이 회수',
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '갱신 시간',
  PRIMARY KEY (`user_idx`,`event_id`,`sub_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_laboratory_category`
--

DROP TABLE IF EXISTS `user_laboratory_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_laboratory_category` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저고유번호',
  `lab_group_id` int(11) NOT NULL COMMENT '연구 그룹 id',
  PRIMARY KEY (`user_idx`,`lab_group_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='연구 개방 제한 조건이 있는 연구그룹 개방 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_laboratory_category_group_info`
--

DROP TABLE IF EXISTS `user_laboratory_category_group_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_laboratory_category_group_info` (
  `user_idx` bigint(20) NOT NULL COMMENT '유저고유번호',
  `lab_group_id` int(11) NOT NULL COMMENT '연구 효과 그룹',
  `step` tinyint(4) NOT NULL COMMENT '해당 카테고리에서의 하위단계',
  `step_rank` tinyint(4) NOT NULL COMMENT '해당 단계에서의 어빌리티 등급',
  PRIMARY KEY (`user_idx`,`lab_group_id`,`step`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='연구소 연구개방 하위 단계 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_monster_book`
--

DROP TABLE IF EXISTS `user_monster_book`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_monster_book` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `collect_id` int(11) NOT NULL DEFAULT '0' COMMENT '도감 ID',
  `ability_order` tinyint(4) NOT NULL DEFAULT '0' COMMENT '활성화된 ability group 인덱스',
  PRIMARY KEY (`user_idx`,`collect_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='몬스터 도감 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_pet`
--

DROP TABLE IF EXISTS `user_pet`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_pet` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `pet_id` int(11) NOT NULL DEFAULT '0' COMMENT '펫 id',
  `pet_level` smallint(6) NOT NULL DEFAULT '0' COMMENT '펫 레벨',
  `pet_value` smallint(6) NOT NULL DEFAULT '0' COMMENT '펫 수량',
  PRIMARY KEY (`user_idx`,`pet_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='펫';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_pet_composite`
--

DROP TABLE IF EXISTS `user_pet_composite`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_pet_composite` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `pet_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '펫 합성 등급',
  `fail_count` int(11) NOT NULL DEFAULT '0' COMMENT '누적 실패 횟수',
  PRIMARY KEY (`user_idx`,`pet_grade`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 펫 합성 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_pet_confirm_pending`
--

DROP TABLE IF EXISTS `user_pet_confirm_pending`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_pet_confirm_pending` (
  `pet_cp_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'idx',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `pet_id` int(11) NOT NULL DEFAULT '0' COMMENT '펫 id',
  `change_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '변경 횟수',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `end_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '변경가능 최종일시',
  PRIMARY KEY (`pet_cp_idx`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8mb4 COMMENT='펫 확정 대기';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_post`
--

DROP TABLE IF EXISTS `user_post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_post` (
  `post_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '매일순번(AI)',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '받는(계정) 유저사람ID (dest)',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '받는사람 캐릭터 고유번호 (dest) 0: 계정',
  `send_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '보낸사람ID (origin)',
  `sender_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '(d)보낸사람NICK (origin)',
  `sender_gamedb_idx` smallint(6) NOT NULL DEFAULT '11' COMMENT '(디폴트로 선택된) 보낸사람 유저별 게임DB정보를 위한 참조 키',
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '보낸사람 길드 ID (origin)',
  `guild_name` varchar(50) NOT NULL DEFAULT '' COMMENT '보낸사람 길드 이름 (origin)',
  `guild_mark_id` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마크 아이디',
  `post_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '메시지 타입(0:일반, 1:받은편지, 2:보낸편지, 3:아이템보상, 4:소환권, 5:구매아이템)',
  `post_text_idx` tinyint(4) NOT NULL DEFAULT '0' COMMENT '시스템 메시지 아이디',
  `title_msg` varchar(50) NOT NULL DEFAULT '' COMMENT '우편 제목',
  `message` varchar(400) NOT NULL DEFAULT '' COMMENT '내용',
  `expire_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '만료일시',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `item_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 타입',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 아이디',
  `item_value` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 수량',
  `post_read` tinyint(4) NOT NULL DEFAULT '0' COMMENT '읽기 여부(0:안읽음, 1:읽음, 2:삭제[받음])',
  PRIMARY KEY (`post_idx`,`user_idx`),
  KEY `IX_expire_date2` (`expire_date`),
  KEY `IX_char_id` (`user_idx`,`char_idx`),
  KEY `IX_not_read` (`user_idx`,`char_idx`,`expire_date`,`post_read`),
  KEY `IX_expire_date` (`user_idx`,`char_idx`,`expire_date`),
  KEY `IX_post_read_update` (`user_idx`,`char_idx`,`post_read`),
  KEY `IX_post_read` (`user_idx`,`char_idx`,`post_idx`),
  KEY `IX_post_type` (`user_idx`,`char_idx`,`expire_date`,`post_type`),
  KEY `IX_post_type2` (`user_idx`,`char_idx`,`post_type`),
  KEY `IX_post_send` (`send_idx`,`reg_date`)
) ENGINE=InnoDB AUTO_INCREMENT=145 DEFAULT CHARSET=utf8mb4 COMMENT='유저 우편함 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_post_del`
--

DROP TABLE IF EXISTS `user_post_del`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_post_del` (
  `iPartKeyMonth` int(11) NOT NULL DEFAULT '0' COMMENT '파티션 키(월별)',
  `del_type` varchar(1) NOT NULL DEFAULT 'A' COMMENT '삭제타입 (A:자동, G:게임서버)',
  `post_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '매일순번(AI)',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '받는(계정) 유저사람ID (dest)',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '받는사람 캐릭터 고유번호 (dest) 0: 계정',
  `send_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '보낸사람ID (origin)',
  `sender_nick` varchar(30) NOT NULL DEFAULT '' COMMENT '(d)보낸사람NICK (origin)',
  `sender_gamedb_idx` smallint(6) NOT NULL DEFAULT '11' COMMENT '(디폴트로 선택된) 보낸사람 유저별 게임DB정보를 위한 참조 키',
  `guild_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '보낸사람 길드 ID (origin)',
  `guild_name` varchar(50) NOT NULL DEFAULT '' COMMENT '보낸사람 길드 이름 (origin)',
  `guild_mark_id` int(11) NOT NULL DEFAULT '0' COMMENT '길드 마크 아이디',
  `post_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '메시지 타입',
  `post_text_idx` tinyint(4) NOT NULL DEFAULT '0' COMMENT '시스템 메시지 아이디',
  `title_msg` varchar(50) NOT NULL DEFAULT '' COMMENT '우편 제목',
  `message` varchar(400) NOT NULL DEFAULT '' COMMENT '내용',
  `expire_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '만료일시',
  `reg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시 (=발송일시)',
  `del_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '삭제일시 (=삭제일시)',
  `item_type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '아이템 타입',
  `item_id` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 아이디',
  `item_value` int(11) NOT NULL DEFAULT '0' COMMENT '아이템 수량',
  `post_read` tinyint(4) NOT NULL DEFAULT '0' COMMENT '읽기 여부',
  PRIMARY KEY (`iPartKeyMonth`,`user_idx`,`post_idx`),
  KEY `IX_del_date` (`del_date`,`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='우편함 삭제 로그'
/*!50100 PARTITION BY LIST (iPartKeyMonth)
(PARTITION user_post_del_P01 VALUES IN (1) ENGINE = InnoDB,
 PARTITION user_post_del_P02 VALUES IN (2) ENGINE = InnoDB,
 PARTITION user_post_del_P03 VALUES IN (3) ENGINE = InnoDB,
 PARTITION user_post_del_P04 VALUES IN (4) ENGINE = InnoDB,
 PARTITION user_post_del_P05 VALUES IN (5) ENGINE = InnoDB,
 PARTITION user_post_del_P06 VALUES IN (6) ENGINE = InnoDB,
 PARTITION user_post_del_P07 VALUES IN (7) ENGINE = InnoDB,
 PARTITION user_post_del_P08 VALUES IN (8) ENGINE = InnoDB,
 PARTITION user_post_del_P09 VALUES IN (9) ENGINE = InnoDB,
 PARTITION user_post_del_P10 VALUES IN (10) ENGINE = InnoDB,
 PARTITION user_post_del_P11 VALUES IN (11) ENGINE = InnoDB,
 PARTITION user_post_del_P12 VALUES IN (12) ENGINE = InnoDB) */;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_raid_exp`
--

DROP TABLE IF EXISTS `user_raid_exp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_raid_exp` (
  `group_id` int(11) NOT NULL,
  `user_idx` bigint(20) NOT NULL,
  `raid_exp` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`user_idx`,`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_reddot`
--

DROP TABLE IF EXISTS `user_reddot`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_reddot` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '계정 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `type_id` int(11) NOT NULL DEFAULT '0' COMMENT '유형 id',
  `element_value` bigint(20) NOT NULL DEFAULT '0' COMMENT '유형에 따른 원소',
  `element_subvalue` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`user_idx`,`char_idx`,`type_id`,`element_value`,`element_subvalue`),
  KEY `IX_user_reddot` (`user_idx`,`char_idx`,`type_id`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='레드닷 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_shop_purchase_limit`
--

DROP TABLE IF EXISTS `user_shop_purchase_limit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_shop_purchase_limit` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '캐릭터 고유번호',
  `shop_id` int(11) NOT NULL DEFAULT '0' COMMENT '상점 ID',
  `buy_qty` int(11) NOT NULL DEFAULT '0' COMMENT '구매 수량',
  `last_buy_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 구매 시간',
  `is_package` tinyint(4) NOT NULL DEFAULT '0' COMMENT '패키지 상품 여부(0:일반상품, 1:패키지상품)',
  PRIMARY KEY (`user_idx`,`char_idx`,`shop_id`),
  KEY `IX_user_idx` (`user_idx`,`char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='구매 제한 상점 아이템 구매 정보 저장';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_spirit`
--

DROP TABLE IF EXISTS `user_spirit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_spirit` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 고유번호',
  `board_id` int(11) NOT NULL DEFAULT '0' COMMENT '스피릿 보드의 고유 id',
  `ability_id_1` int(11) NOT NULL DEFAULT '0' COMMENT '1번 그룹에서 결정된 ability id',
  `ability_value_1` int(11) NOT NULL DEFAULT '0' COMMENT '1번 그룹에서 결정된 ability value',
  `color_no_1` tinyint(4) NOT NULL DEFAULT '0' COMMENT '색상 id',
  `ability_id_2` int(11) NOT NULL DEFAULT '0' COMMENT '2번 그룹에서 결정된 ability id',
  `ability_value_2` int(11) NOT NULL DEFAULT '0' COMMENT '2번 그룹에서 결정된 ability value',
  `color_no_2` tinyint(4) NOT NULL DEFAULT '0' COMMENT '색상 id',
  `ability_id_3` int(11) NOT NULL DEFAULT '0' COMMENT '3번 그룹에서 결정된 ability id',
  `ability_value_3` int(11) NOT NULL DEFAULT '0' COMMENT '3번 그룹에서 결정된 ability value',
  `color_no_3` tinyint(4) NOT NULL DEFAULT '0' COMMENT '색상 id',
  `locked` tinyint(4) NOT NULL DEFAULT '0' COMMENT '1: 잠금',
  PRIMARY KEY (`user_idx`,`board_id`),
  KEY `IX_user_spirit` (`user_idx`,`board_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='스피릿 시스템 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_spirit_backup`
--

DROP TABLE IF EXISTS `user_spirit_backup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_spirit_backup` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 고유번호',
  `board_id` int(11) NOT NULL DEFAULT '0' COMMENT '스피릿 보드의 고유 id',
  `ability_id_1` int(11) NOT NULL DEFAULT '0' COMMENT '1번 그룹에서 결정된 ability id',
  `ability_value_1` int(11) NOT NULL DEFAULT '0' COMMENT '1번 그룹에서 결정된 ability value',
  `color_no_1` tinyint(4) NOT NULL DEFAULT '0' COMMENT '색상 id',
  `ability_id_2` int(11) NOT NULL DEFAULT '0' COMMENT '2번 그룹에서 결정된 ability id',
  `ability_value_2` int(11) NOT NULL DEFAULT '0' COMMENT '2번 그룹에서 결정된 ability value',
  `color_no_2` tinyint(4) NOT NULL DEFAULT '0' COMMENT '색상 id',
  `ability_id_3` int(11) NOT NULL DEFAULT '0' COMMENT '3번 그룹에서 결정된 ability id',
  `ability_value_3` int(11) NOT NULL DEFAULT '0' COMMENT '3번 그룹에서 결정된 ability value',
  `color_no_3` tinyint(4) NOT NULL DEFAULT '0' COMMENT '색상 id',
  PRIMARY KEY (`user_idx`,`board_id`),
  KEY `IX_user_spirit` (`user_idx`,`board_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='스피릿 시스템 저장 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_title`
--

DROP TABLE IF EXISTS `user_title`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_title` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `title_id` int(11) NOT NULL DEFAULT '0' COMMENT '칭호 id',
  PRIMARY KEY (`user_idx`,`title_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 타이틀 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_title_condition`
--

DROP TABLE IF EXISTS `user_title_condition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_title_condition` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `title_id` int(11) NOT NULL DEFAULT '0' COMMENT '칭호 id',
  `condition_num` tinyint(4) NOT NULL DEFAULT '0' COMMENT '조건 번호',
  `condition_value` int(11) NOT NULL DEFAULT '0' COMMENT '조건 값',
  PRIMARY KEY (`user_idx`,`title_id`,`condition_num`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 타이틀 조건 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_title_expire`
--

DROP TABLE IF EXISTS `user_title_expire`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_title_expire` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `title_id` int(11) NOT NULL DEFAULT '0' COMMENT '칭호 id',
  `title_expiredate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '칭호 만료 날자',
  PRIMARY KEY (`user_idx`,`title_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='칭호 정보(시간 제한이 있는 것들만 )';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_title_reward`
--

DROP TABLE IF EXISTS `user_title_reward`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_title_reward` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저 idx',
  `rewarded_count` int(11) NOT NULL DEFAULT '0' COMMENT '보상 수령 완료 개수',
  PRIMARY KEY (`user_idx`,`rewarded_count`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 타이틀 보상 수령 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_tutorial`
--

DROP TABLE IF EXISTS `user_tutorial`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_tutorial` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `tutorial_id` int(11) NOT NULL DEFAULT '0' COMMENT '튜토리얼 고유번호',
  `complete` tinyint(4) NOT NULL DEFAULT '0' COMMENT '완료여부(?)',
  `complete_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '완료일시',
  PRIMARY KEY (`user_idx`,`tutorial_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 튜토리얼 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_vehicle`
--

DROP TABLE IF EXISTS `user_vehicle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_vehicle` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `vehicle_id` int(11) NOT NULL DEFAULT '0' COMMENT '탈것 id',
  `vehicle_level` smallint(6) NOT NULL DEFAULT '0' COMMENT '탈것 레벨',
  `vehicle_value` smallint(6) NOT NULL DEFAULT '0' COMMENT '탈것 수량',
  PRIMARY KEY (`user_idx`,`vehicle_id`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='탈것';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_vehicle_composite`
--

DROP TABLE IF EXISTS `user_vehicle_composite`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_vehicle_composite` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `vehicle_grade` tinyint(4) NOT NULL DEFAULT '0' COMMENT '변신아바타 합성 등급',
  `fail_count` int(11) NOT NULL DEFAULT '0' COMMENT '누적 실패 횟수',
  PRIMARY KEY (`user_idx`,`vehicle_grade`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 변신아바타 합성 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `user_vehicle_confirm_pending`
--

DROP TABLE IF EXISTS `user_vehicle_confirm_pending`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_vehicle_confirm_pending` (
  `vehicle_cp_idx` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'idx',
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정) 고유번호',
  `vehicle_id` int(11) NOT NULL DEFAULT '0' COMMENT '탈것 id',
  `change_count` tinyint(4) NOT NULL DEFAULT '0' COMMENT '변경 횟수',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `end_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '변경가능 최종일시',
  PRIMARY KEY (`vehicle_cp_idx`),
  KEY `IX_user_idx` (`user_idx`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8mb4 COMMENT='변신아바타 확정 대기';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `userinfo`
--

DROP TABLE IF EXISTS `userinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `userinfo` (
  `user_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '유저(계정)고유번호',
  `nick` varchar(30) NOT NULL DEFAULT '',
  `cashA` bigint(20) NOT NULL DEFAULT '0' COMMENT '게임캐쉬A (푸른수정 - 유료구매)',
  `cashA_free` bigint(20) NOT NULL DEFAULT '0' COMMENT '게임캐쉬A (푸른수정 - 무료지급)',
  `cashB` bigint(20) NOT NULL DEFAULT '0' COMMENT '게임캐쉬B (붉은수정 - 유료구매)',
  `cashB_free` bigint(20) NOT NULL DEFAULT '0' COMMENT '게임캐쉬B (붉은수정 - 무료지급)',
  `exp` bigint(20) NOT NULL DEFAULT '0' COMMENT '경험치',
  `tutorial` int(11) NOT NULL DEFAULT '0' COMMENT '튜토리얼 수행단계',
  `base_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '기본 캐릭터 ID',
  `sub_char_idx` bigint(20) NOT NULL DEFAULT '0' COMMENT '기본 호위 무사 ID',
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '등록일시',
  `is_logon` tinyint(4) NOT NULL DEFAULT '0' COMMENT '접속여부 0 : logoff, 1 : logon',
  `last_logoff_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '접속종료시간',
  `nonstop_play_time` int(11) NOT NULL DEFAULT '0' COMMENT '연속 플레이 시간(초)',
  `awarehouse_buyslot` smallint(6) NOT NULL DEFAULT '0',
  `awarehouse_gold` bigint(20) NOT NULL DEFAULT '0',
  `visit_total` int(11) NOT NULL DEFAULT '0',
  `visit_cnt` smallint(6) NOT NULL DEFAULT '0',
  `visit_cnt2` smallint(6) NOT NULL DEFAULT '0',
  `last_login_date` timestamp NULL DEFAULT '1999-12-31 15:00:00' COMMENT '게임 접속일시 [게임 접속 시 최신정보로 업데이트]',
  `freebattle_season_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '난투전시즌보상발급여부',
  `combat_season_reward` tinyint(4) NOT NULL DEFAULT '0' COMMENT '무투전시즌보상발급여부',
  `speed_hack_count` bigint(20) NOT NULL DEFAULT '0',
  `iap_qty` int(11) NOT NULL DEFAULT '0' COMMENT '이 월드에서 결제 횟수',
  `iap_amount` bigint(20) NOT NULL DEFAULT '0' COMMENT '이 월드에서 결제 전체금액',
  `client_option_switch` int(11) NOT NULL DEFAULT '0',
  `wemix_ft_exchange_cnt` bigint(20) NOT NULL DEFAULT '0' COMMENT '위믹스 FT 교환 개수(소수점 이상)\n',
  `wemix_ft_exchange_decimal_cnt` bigint(20) NOT NULL DEFAULT '0' COMMENT '위믹스 FT 교환 개수(소수점 이하)\n',
  `wemix_ft_exchange_date` timestamp NOT NULL DEFAULT '1999-12-31 15:00:00' COMMENT '위믹스 FT 마지막 교환 날짜',
  `char_slot_count` tinyint(4) NOT NULL DEFAULT '3' COMMENT '캐릭터 생성 슬롯 갯수',
  PRIMARY KEY (`user_idx`),
  UNIQUE KEY `ix_nickname` (`nick`),
  KEY `IX_base_char_idx` (`base_char_idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='유저 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `wemix_transaction`
--

DROP TABLE IF EXISTS `wemix_transaction`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wemix_transaction` (
  `tx_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '트랜잭션 ID',
  `tx_type` tinyint(4) NOT NULL COMMENT '트랜잭션 type(1:ContractsAddress, 2:FTExchange, 3:FTConsume, 4:NFTTokensOfOwner, 5:NFTMint, 6:NFTBurn, 7:NFTUnlock, 8:NFTLock)',
  `user_idx` bigint(20) NOT NULL COMMENT '유저 idx',
  `char_idx` bigint(20) NOT NULL COMMENT '캐릭터 idx\n',
  `user_address` varchar(256) NOT NULL DEFAULT '' COMMENT '유저 지갑 주소',
  `data_s1` varchar(128) NOT NULL DEFAULT '' COMMENT '스트링 데이터1',
  `data_i1` bigint(20) NOT NULL DEFAULT '0' COMMENT 'int 데이터 1\n',
  `data_i2` bigint(20) NOT NULL DEFAULT '0',
  `data_i3` bigint(20) DEFAULT '0',
  `data_f1` double NOT NULL DEFAULT '0',
  `completed` smallint(6) NOT NULL DEFAULT '0' COMMENT '완료 되었는가(0:진행중,1:성공, 1<:오류코드)',
  `tx_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`tx_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='위믹스 코인 트랜잭션 정보';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping routines for database 'w07_gamedb'
--
/*!50003 DROP FUNCTION IF EXISTS `fn_Get_DateLineReferenceTime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fn_Get_DateLineReferenceTime`(
#	p_ReferenceTime		INT -- DEFAULT 5
) RETURNS datetime
    DETERMINISTIC
BEGIN

#	SET p_ReferenceTime = IFNULL(p_ReferenceTime, 5);
#	DECLARE v_DateLineReferenceTime datetime;

#	SET v_DateLineReferenceTime := DATE_ADD(CURRENT_DATE(), INTERVAL 5 HOUR);

	DECLARE v_Today DATETIME;
	DECLARE v_yesterday DATETIME;

	SET v_Today = CURRENT_TIMESTAMP();
    SET v_yesterday = DATE_SUB(v_Today, INTERVAL 1 DAY);
    
    IF HOUR(v_Today) < 5 THEN
		RETURN CONCAT(DATE(v_yesterday), ' 05:00:00');
		# SET v_DateLineReferenceTime := CONCAT(yesterday, ' 05:00:00');
	ELSE
		RETURN CONCAT(DATE(v_Today), ' 05:00:00');
		# SET v_DateLineReferenceTime := CONCAT(DATE(current_time), ' 05:00:00');
	END IF;

#	RETURN v_DateLineReferenceTime;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `fn_Get_DateTime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fn_Get_DateTime`(

) RETURNS datetime
    DETERMINISTIC
BEGIN



	DECLARE o_dtUTC DATETIME;

	SET o_dtUTC := CURRENT_TIMESTAMP();

	RETURN o_dtUTC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `fn_Get_ExpiryDateTime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fn_Get_ExpiryDateTime`(
	p_day		INT	
) RETURNS datetime
    DETERMINISTIC
BEGIN

	DECLARE v_DateTime	DATETIME;

	SET v_DateTime := DATE_FORMAT( DATE_ADD( CURRENT_TIMESTAMP(), INTERVAL p_day DAY), '%Y-%m-%d %H:%i:%s' );

	RETURN v_DateTime;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `fn_Get_PartKeyMonth` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fn_Get_PartKeyMonth`(

) RETURNS int(11)
    DETERMINISTIC
BEGIN

	DECLARE o_iPartKeyMonth INT;

	SET o_iPartKeyMonth := DATE_FORMAT(NOW(), '%c');

	RETURN o_iPartKeyMonth;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `fn_Get_SearchDateTime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fn_Get_SearchDateTime`(
	i_iType		INT
,	i_vcDate	VARCHAR(10)
) RETURNS datetime
    DETERMINISTIC
BEGIN



	DECLARE o_dtUTC	DATETIME;
	DECLARE v_dtUTC	DATETIME;

	IF (i_vcDate IS NULL) || (i_vcDate = '') THEN
	BEGIN
		SET v_dtUTC := fn_Get_DateTime();
		SET i_vcDate := CONCAT(DATE_FORMAT (v_dtUTC, '%Y'), '-', DATE_FORMAT (v_dtUTC, '%m'), '-', DATE_FORMAT (v_dtUTC, '%d'));
	END;
	END IF;

	IF i_iType = 1 THEN
	BEGIN
		SET o_dtUTC := CAST(CONCAT(i_vcDate, ' 00:00:00') AS DATETIME);
	END;

	ELSE
	BEGIN
		SET o_dtUTC := CAST(CONCAT(i_vcDate, ' 23:59:59') AS DATETIME);
	END;
	END IF;

	RETURN o_dtUTC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `fn_Get_ThisWeekMonday5am` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `fn_Get_ThisWeekMonday5am`(
#	p_ReferenceTime		INT -- DEFAULT 5
) RETURNS datetime
    DETERMINISTIC
BEGIN
    DECLARE monday DATETIME;
    
    -- 현재 날짜 기준 이번 주 월요일을 계산
    SET monday = DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL (WEEKDAY(CURRENT_TIMESTAMP())) DAY);
    
    -- 월요일 05시로 시간을 설정
    RETURN CONCAT(DATE(monday), ' 05:00:00');
    -- RETURN DATE_ADD(monday, INTERVAL '05:00:00' HOUR_SECOND);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `regexp_replace` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `regexp_replace`(original VARCHAR(1000),pattern VARCHAR(1000),replacement VARCHAR(1000)) RETURNS varchar(1000) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
    DECLARE temp VARCHAR(1000);
    DECLARE ch VARCHAR(1);
    DECLARE i INT;
    SET i = 1;
    SET temp = '';
    IF original REGEXP pattern THEN
        loop_label: LOOP
        IF i > CHAR_LENGTH(original) THEN
            LEAVE loop_label; 
        END IF;
        SET ch = SUBSTRING(original,i,1);
        IF NOT ch REGEXP pattern THEN
            SET temp = CONCAT(temp,ch);
        ELSE
            SET temp = CONCAT(temp,replacement);
        END IF;
            SET i=i+1;
        END LOOP;
    ELSE
        SET temp = original;
    END IF;
    RETURN temp;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_char_info_Gold_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_char_info_Gold_Upd`(
	p_userIdx	BIGINT	
,	p_charIdx	BIGINT	
,	p_gold		BIGINT	
,	p_afterGold	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN
	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE char_info SET char_gold = p_afterGold
		WHERE char_idx = p_charIdx
		AND char_gold = p_gold;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_char_injection_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_char_injection_Ins`(
	p_userIdx	BIGINT	
,	p_charIdx	BIGINT	
,	p_type		TINYINT	
,	p_value		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	IF p_type = 0 THEN	
	BEGIN
		INSERT INTO char_injection (char_idx, merc_value, merc_boss_value, tower_value)
		VALUES (p_charIdx, 0, 0, 0);
	END;

	ELSEIF p_type = 1 THEN	
	BEGIN
		INSERT INTO char_injection (char_idx, merc_value, merc_boss_value, tower_value)
		VALUES (p_charIdx, 0, p_value, 0);
	END;

	ELSEIF p_type = 2 THEN	
	BEGIN
		INSERT INTO char_injection (char_idx, merc_value, merc_boss_value, tower_value)
		VALUES (p_charIdx, 0, 0, p_value);
	END;

	ELSE			
	BEGIN
		INSERT INTO char_injection (char_idx, merc_value, merc_boss_value, tower_value)
		VALUES (p_charIdx, p_value, 0, 0);
	END;
	END IF;


	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_char_injection_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_char_injection_Upd`(
	p_userIdx	BIGINT	
,	p_charIdx	BIGINT	
,	p_type		TINYINT	
,	p_value		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	IF p_type = 0 THEN	
	BEGIN
		UPDATE char_injection SET merc_boss_value = 0,
					tower_value = 0,
					merc_value = 0,
					last_date = NOW()
			WHERE char_idx = p_charIdx;
	END;

	ELSEIF p_type = 1 THEN	
	BEGIN
		UPDATE char_injection SET merc_boss_value = p_value,
					last_date = NOW()
			WHERE char_idx = p_charIdx;
	END;

	ELSEIF p_type = 2 THEN	
	BEGIN
		UPDATE char_injection SET tower_value = p_value,
					last_date = NOW()
			WHERE char_idx = p_charIdx;
	END;

	ELSE			
	BEGIN
		UPDATE char_injection SET merc_value = p_value,
					last_date = NOW()
			WHERE char_idx = p_charIdx;
	END;
	END IF;


	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_char_inven_item_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_char_inven_item_Upd`(
	p_userIdx		BIGINT	
,	p_charIdx		BIGINT	
,	p_itemType		TINYINT	
,	p_itemId		INT	
,	p_itemValue		INT	
,	p_beforeItemValue	INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN
	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE char_inven_item SET item_value = p_itemValue
		WHERE char_idx = p_charIdx
		AND item_id = p_itemId
		AND item_value = p_beforeItemValue;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guildAuthority_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guildAuthority_Upd`(
	p_guildIdx		BIGINT	
,	p_charIdx		BIGINT	
,	p_authorityCharIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	UPDATE guild SET master_char_idx = p_authorityCharIdx
		WHERE guild_idx = p_guildIdx
		AND master_char_idx = p_charIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guildExpPoint_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guildExpPoint_Upd`(
	p_guildIdx	BIGINT	
,	p_expBefore	BIGINT	
,	p_exp		BIGINT	
,	p_pointBefore	BIGINT	
,	p_point		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	UPDATE guild SET exp = exp + p_exp,
			`point` = `point` + p_point
		WHERE guild_idx = p_guildIdx
		AND exp = p_expBefore
		AND `point` = p_pointBefore;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guildExp_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guildExp_Upd`(
	p_guildIdx	BIGINT	
,	p_expBefore	BIGINT	
,	p_exp		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	UPDATE guild SET exp = exp + p_exp
		WHERE guild_idx = p_guildIdx
		AND exp = p_expBefore;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_applicationApproval_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_applicationApproval_Del`(
	p_charIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	DELETE FROM guild_application WHERE char_idx = p_charIdx;

	
	IF ROW_COUNT() = 0  THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_applicationApproval_Detail_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_applicationApproval_Detail_Del`(
	p_guildIdx	BIGINT	
,	p_charIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	DELETE FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_application_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_application_Del`(
	p_guildIdx	BIGINT	
,	p_charIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	DELETE FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_application_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_application_Ins`(
	p_guildIdx	BIGINT		
,	p_userIdx	BIGINT		
,	p_nickname	VARCHAR(30)	
,	p_charIdx	BIGINT		
,	p_charType	INT		
,	p_charLevel	INT		
,	p_battlePower	INT		
,	p_gamedbIdx	SMALLINT
,	p_application_message	VARCHAR(256)
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	INSERT INTO guild_application (guild_idx, user_idx, nickname, char_idx, char_type, char_level, battle_power, gamedb_idx, application_message)
	VALUES (p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_application_message);

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_BattleFinish_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_BattleFinish_Upd`(
	p_guildIdx	BIGINT		
,	p_exp		BIGINT		
,	p_point		BIGINT		
,	p_winType	TINYINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	UPDATE guild SET exp = exp + p_exp,
			`point` = `point` + p_point,
			war_win_cnt = war_win_cnt + p_winType,
            battle_idx = 0
		WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_BattleIdx_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_BattleIdx_Upd`(
	p_guildIdx	BIGINT	
,	p_battleIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	IF p_battleIdx > 0 THEN
	BEGIN
		UPDATE guild SET war_cnt = war_cnt + 1,
				battle_idx = p_battleIdx
			WHERE guild_idx = p_guildIdx;
	END;

	ELSE
	BEGIN
		UPDATE guild SET battle_idx = p_battleIdx
			WHERE guild_idx = p_guildIdx;
	END;
	END IF;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_bookmark_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_bookmark_Del`(
	p_guildIdx		BIGINT		
,	p_userIdx		BIGINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	DELETE FROM guild_bookmark WHERE user_idx = p_userIdx AND guild_idx = p_guildIdx;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_bookmark_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_bookmark_Ins`(
	p_guildIdx		BIGINT		
,	p_userIdx		BIGINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	INSERT INTO guild_bookmark (user_idx, guild_idx)
	VALUES (p_userIdx, p_guildIdx);

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_Del`(
	p_guildIdx	BIGINT	
,	p_charIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	DELETE FROM guild WHERE guild_idx = p_guildIdx AND master_char_idx = p_charIdx;
	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	DELETE FROM guild_ability WHERE guild_idx = p_guildIdx;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_growTarget_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_growTarget_Upd`(
	p_guildIdx	BIGINT	
,	p_growType	TINYINT	
,	p_growTarget	INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	IF p_growType = 1 THEN
	BEGIN
		UPDATE guild SET grow_target_merc_boss = p_growTarget
		WHERE guild_idx = p_guildIdx;
	END;

	ELSEIF p_growType = 2 THEN
	BEGIN
		UPDATE guild SET grow_target_tower = p_growTarget
		WHERE guild_idx = p_guildIdx;
	END;

	ELSE
	BEGIN
		UPDATE guild SET grow_target_merc = p_growTarget
		WHERE guild_idx = p_guildIdx;
	END;
	END IF;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_Ins`(
	p_userIdx		BIGINT
,	p_charIdx		BIGINT
,	p_name			VARCHAR(50)	
,	p_memberMaxCnt		INT		
,	p_markId		INT		
,	p_joinType		CHAR(1)		
,	p_introduction		VARCHAR(256)	
,	p_notice		VARCHAR(512)	
) RETURNS bigint(20)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	DECLARE p_guildIdx	BIGINT;
	DECLARE p_memberCnt	INT;	

	SET p_memberCnt := 1;
	SET p_guildIdx := 0;

	INSERT INTO guild (`name`, master_user_idx, master_char_idx, member_cnt, member_max_cnt, mark_id, join_type, introduction, notice)
	VALUES (p_name, p_userIdx, p_charIdx, p_memberCnt, p_memberMaxCnt, p_markId, p_joinType, p_introduction, p_notice);

	SELECT LAST_INSERT_ID() INTO p_guildIdx;
	SET p_Result := p_guildIdx;	

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_memberApproval_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_memberApproval_Ins`(
	p_guildIdx		BIGINT		
,	p_userIdx		BIGINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_memberGrade	INT;
	DECLARE p_Result	BIGINT;

	SET p_memberGrade := 0;
	SET p_Result := 1;	

	INSERT INTO guild_member (guild_idx, user_idx, nickname, gamedb_idx, member_grade)
	SELECT guild_idx, user_idx, nickname, gamedb_idx, p_memberGrade FROM guild_application WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_memberCnt_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_memberCnt_Upd`(
	p_guildIdx	BIGINT	
,	p_upType	INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;	

	IF p_upType = 1 THEN
	BEGIN

		UPDATE guild SET member_cnt = member_cnt + 1
			WHERE guild_idx = p_guildIdx;
	END;

	ELSE
	BEGIN
		UPDATE guild SET member_cnt = member_cnt - 1
			WHERE guild_idx = p_guildIdx;
	END;
	END IF;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_memberStatus_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_memberStatus_Upd`(
	p_guildIdx		BIGINT		
,	p_userIdx		BIGINT		
,	p_memberStatus		TINYINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	UPDATE guild_member SET member_status = p_memberStatus,
				unreg_date = NOW()
		WHERE guild_idx = p_guildIdx
		AND user_idx = p_userIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_Del`(
	p_guildIdx	BIGINT	
,	p_charIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	DELETE FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_GradeAuthority_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_GradeAuthority_Upd`(
	p_guildIdx		BIGINT	
,	p_charIdx		BIGINT	
,	p_authorityCharIdx	BIGINT	
,	p_masterGrade		INT	
,	p_memberGrade		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE
		guild_member AS A,
		guild_member AS B
	SET
		A.member_grade = p_memberGrade,
		B.member_grade = p_masterGrade
		
	WHERE	A.guild_idx = p_guildIdx
	AND A.char_idx = p_charIdx
	AND B.guild_idx = p_guildIdx
	AND B.char_idx = p_authorityCharIdx;

	
	IF ROW_COUNT() < 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_Grade_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_Grade_Upd`(
	p_guildIdx		BIGINT	
,	p_charIdx		BIGINT	
,	p_memberGrade		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE guild_member SET member_grade = p_memberGrade
	WHERE guild_idx = p_guildIdx
	AND char_idx = p_charIdx;

	
	IF ROW_COUNT() < 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_Ins`(
    p_guildIdx  BIGINT,      
    p_userIdx   BIGINT,      
    p_nickname  VARCHAR(30), 
    p_charIdx   BIGINT,      
    p_charType  INT,        
    p_charLevel INT,        
    p_battlePower INT,        
    p_gamedbIdx SMALLINT,    
    p_memberGrade INT      
) RETURNS int(11)
    DETERMINISTIC
BEGIN
    DECLARE p_Result BIGINT;
    SET p_Result := 1;    

    IF p_memberGrade = 2 THEN
        BEGIN
            INSERT INTO guild_member (guild_idx, user_idx, nickname, char_idx, char_type, char_level, battle_power, gamedb_idx, member_grade, visit_date)
            VALUES (p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_memberGrade, '2000-01-01');
        END;
    ELSE
        BEGIN
            INSERT INTO guild_member (guild_idx, user_idx, nickname, char_idx, char_type, char_level, battle_power, gamedb_idx, member_grade, visit_date)
            VALUES (p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_memberGrade, '2000-01-01');
        END;
    END IF;

    IF ROW_COUNT() <> 1 THEN
        SET p_Result := -7;    
    END IF;

    RETURN p_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_IsEntryWar_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_IsEntryWar_Upd`(
	p_guildIdx	BIGINT	
,	p_userIdx	BIGINT	
,	p_IsEntryWar	TINYINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	UPDATE guild_member SET is_entry_war = p_IsEntryWar
			WHERE guild_idx = p_guildIdx
			AND user_idx = p_userIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_Upd`(
	p_guildIdx	BIGINT	
,	p_userIdx	BIGINT	
,	p_charIdx	BIGINT	
,	p_charType	INT	
,	p_charLevel	INT	
,	p_battlePower	INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	UPDATE guild_member SET char_idx = p_charIdx,
				char_type = p_charType,
				char_level = p_charLevel,
				battle_power = p_battlePower
			WHERE guild_idx = p_guildIdx
			AND user_idx = p_userIdx;

	
	IF ROW_COUNT() < 0  THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_member_withdraw_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_member_withdraw_Ins`(
	p_guildIdx	BIGINT	
,	p_charIdx	BIGINT	
,	p_iPartKeyMonth	INT	
,	p_TXIDX		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	INSERT INTO guild_member_withdraw (partKeyMonth, TXIDX, guild_idx, user_idx, char_idx, nickname, char_type, char_level, battle_power, gamedb_idx, member_grade, play_cnt, win_cnt, lose_cnt, draw_cnt,
		visit_date, last_play_date, is_entry_war, join_war_cnt, member_status, reg_date)
	SELECT p_iPartKeyMonth, p_TXIDX, guild_idx, user_idx, char_idx, nickname, char_type, char_level, battle_power, gamedb_idx, member_grade, play_cnt, win_cnt, lose_cnt, draw_cnt,
		visit_date, last_play_date, is_entry_war, join_war_cnt, member_status, reg_date
	FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_Upd`(
	p_guildIdx	BIGINT		
,	p_markId	INT		
,	p_joinType	CHAR(1)		
,	p_introduction	VARCHAR(256)	
,	p_notice	VARCHAR(512)	
) RETURNS int(11)
    DETERMINISTIC
BEGIN

	DECLARE p_Result	INT;
	SET p_Result := 1;	

	UPDATE guild SET mark_id = p_markId,
			join_type = p_joinType,
			introduction = p_introduction,
			notice = p_notice,
            emblem_last_update_date = NOW()
		WHERE guild_idx = p_guildIdx;
	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_history_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_history_Ins`(
	p_guildIdx				BIGINT	
,	p_opponentGuildIdx		BIGINT	
,	p_opponentName			VARCHAR(50)	
,	p_opponentMarkId		INT		
,	p_opponentMasterNick	VARCHAR(30)	
,	p_opponentCharType		INT		
,	p_opponentCharLevel		INT		
,	p_opponentScore			INT		
,	p_opponentDestroy		INT		
,	p_opponentWinCnt		INT		
,	p_opponentStarCnt		INT		
,	p_score					INT	
,	p_destroy				INT	
,	p_winCnt				INT	
,	p_starCnt				INT	
,	p_rewardType			INT	
,	p_rewardId				INT	
,	p_getAmount				INT	
,	p_getExp				INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	INSERT INTO guild_war_history (guild_idx, opponent_idx, opponent_name, opponent_mark_id, opponent_masterNick, opponent_char_typ, opponent_char_level,
				opponent_score, opponent_destroy, opponent_win_cnt, opponent_star_cnt,
				score, destroy, win_cnt, star_cnt, get_reward_type, get_reward_id, get_amount, get_exp)
	VALUES (p_guildIdx, p_opponentGuildIdx, p_opponentName, p_opponentMarkId, p_opponentMasterNick, p_opponentCharType, p_opponentCharLevel,
				p_opponentScore, p_opponentDestroy, p_opponentWinCnt, p_opponentStarCnt,
				p_score, p_destroy, p_winCnt, p_starCnt, p_rewardType, p_rewardId, p_getAmount, p_getExp);

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_history_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_history_Upd`(
	p_guildIdx				BIGINT	
,	p_opponentGuildIdx		BIGINT	
,	p_opponentName			VARCHAR(50)	
,	p_opponentMarkId		INT		
,	p_opponentMasterNick	VARCHAR(30)	
,	p_opponentCharType		INT		
,	p_opponentCharLevel		INT		
,	p_opponentScore			INT		
,	p_opponentDestroy		INT		
,	p_opponentWinCnt		INT		
,	p_opponentStarCnt		INT		
,	p_score					INT	
,	p_destroy				INT	
,	p_winCnt				INT	
,	p_starCnt				INT	
,	p_rewardType			INT	
,	p_rewardId				INT	
,	p_getAmount				INT	
,	p_getExp				INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE guild_war_history SET opponent_idx = p_opponentGuildIdx,
					opponent_name = p_opponentName,
					opponent_mark_id = p_opponentMarkId,
					opponent_masterNick = p_opponentMasterNick,
					opponent_char_typ = p_opponentCharType,
					opponent_char_level = p_opponentCharLevel,
                    opponent_score = p_opponentScore,
					opponent_destroy = p_opponentDestroy,
                    opponent_win_cnt = p_opponentWinCnt,
                    opponent_star_cnt = p_opponentStarCnt,
					score = p_score,
					destroy = p_destroy,
					win_cnt = p_winCnt,
					star_cnt = p_starCnt,
					get_reward_type = p_rewardType,
					get_reward_id = p_rewardId,
					get_amount = p_getAmount,
					get_exp = p_getExp
		WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_matching_delete_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_matching_delete_info`(
	p_battleIdx				BIGINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	
    DELETE FROM guild_war_matching WHERE battle_idx = p_battleIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;
    
	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_matching_insert_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_matching_insert_info`(
	p_battleIdx				BIGINT		
,	p_firstGuildIdx			BIGINT		
,	p_secondGuildIdx		BIGINT		
,	p_guildWarState			INT			
,	p_startTime				BIGINT		
,	p_endTime				BIGINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	
	INSERT INTO guild_war_matching (battle_idx, first_guild_idx, second_guild_idx, guild_war_state, start_date, end_date)
	VALUES (p_battleIdx, p_firstGuildIdx, p_secondGuildIdx, p_guildWarState, FROM_UNIXTIME(p_startTime), FROM_UNIXTIME(p_endTime));

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;
    
	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_matching_update_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_matching_update_state`(
	p_battleIdx			BIGINT		
,	p_guildWarState		INT			
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	UPDATE guild_war_matching SET guild_war_state = p_guildWarState WHERE battle_idx = p_battleIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_member_delete_multi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_member_delete_multi`(
	p_guildIdx		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;
    
    DELETE FROM guild_war_member WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() < 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_member_insert_multi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_member_insert_multi`(
	p_guildIdx		BIGINT	
,	p_memberCount	INT		

,	p_userIdx1			BIGINT			
,	p_gameDBIdx1		SMALLINT	
,	p_nickname1			VARCHAR(30)	
,	p_charIdx1			BIGINT			
,	p_charType1			INT			
,	p_charLevel1		INT			
,	p_battlePower1		INT			
,	p_memberGrade1		INT			

,	p_userIdx2			BIGINT			
,	p_gameDBIdx2		SMALLINT	
,	p_nickname2			VARCHAR(30)	
,	p_charIdx2			BIGINT			
,	p_charType2			INT			
,	p_charLevel2		INT			
,	p_battlePower2		INT			
,	p_memberGrade2		INT			

,	p_userIdx3			BIGINT			
,	p_gameDBIdx3		SMALLINT	
,	p_nickname3			VARCHAR(30)	
,	p_charIdx3			BIGINT			
,	p_charType3			INT			
,	p_charLevel3		INT			
,	p_battlePower3		INT			
,	p_memberGrade3		INT			

,	p_userIdx4			BIGINT			
,	p_gameDBIdx4		SMALLINT	
,	p_nickname4			VARCHAR(30)	
,	p_charIdx4			BIGINT			
,	p_charType4			INT			
,	p_charLevel4		INT			
,	p_battlePower4		INT			
,	p_memberGrade4		INT			

,	p_userIdx5			BIGINT			
,	p_gameDBIdx5		SMALLINT	
,	p_nickname5			VARCHAR(30)	
,	p_charIdx5			BIGINT			
,	p_charType5			INT			
,	p_charLevel5		INT			
,	p_battlePower5		INT			
,	p_memberGrade5		INT			

,	p_userIdx6			BIGINT			
,	p_gameDBIdx6		SMALLINT	
,	p_nickname6			VARCHAR(30)	
,	p_charIdx6			BIGINT			
,	p_charType6			INT			
,	p_charLevel6		INT			
,	p_battlePower6		INT			
,	p_memberGrade6		INT			

,	p_userIdx7			BIGINT			
,	p_gameDBIdx7		SMALLINT	
,	p_nickname7			VARCHAR(30)	
,	p_charIdx7			BIGINT			
,	p_charType7			INT			
,	p_charLevel7		INT			
,	p_battlePower7		INT			
,	p_memberGrade7		INT			

,	p_userIdx8			BIGINT			
,	p_gameDBIdx8			SMALLINT	
,	p_nickname8			VARCHAR(30)	
,	p_charIdx8			BIGINT			
,	p_charType8			INT			
,	p_charLevel8		INT			
,	p_battlePower8		INT			
,	p_memberGrade8		INT			

,	p_userIdx9			BIGINT			
,	p_gameDBIdx9			SMALLINT	
,	p_nickname9			VARCHAR(30)	
,	p_charIdx9			BIGINT			
,	p_charType9			INT			
,	p_charLevel9		INT			
,	p_battlePower9		INT			
,	p_memberGrade9		INT			

,	p_userIdx10			BIGINT			
,	p_gameDBIdx10			SMALLINT	
,	p_nickname10			VARCHAR(30)	
,	p_charIdx10			BIGINT			
,	p_charType10			INT			
,	p_charLevel10		INT			
,	p_battlePower10		INT			
,	p_memberGrade10		INT			

,	p_userIdx11			BIGINT			
,	p_gameDBIdx11			SMALLINT	
,	p_nickname11			VARCHAR(30)	
,	p_charIdx11			BIGINT			
,	p_charType11			INT			
,	p_charLevel11		INT			
,	p_battlePower11		INT			
,	p_memberGrade11		INT			

,	p_userIdx12			BIGINT			
,	p_gameDBIdx12			SMALLINT	
,	p_nickname12			VARCHAR(30)	
,	p_charIdx12			BIGINT			
,	p_charType12			INT			
,	p_charLevel12		INT			
,	p_battlePower12		INT			
,	p_memberGrade12		INT			

,	p_userIdx13			BIGINT			
,	p_gameDBIdx13			SMALLINT	
,	p_nickname13			VARCHAR(30)	
,	p_charIdx13			BIGINT			
,	p_charType13			INT			
,	p_charLevel13		INT			
,	p_battlePower13		INT			
,	p_memberGrade13		INT			

,	p_userIdx14			BIGINT			
,	p_gameDBIdx14			SMALLINT	
,	p_nickname14			VARCHAR(30)	
,	p_charIdx14			BIGINT			
,	p_charType14			INT			
,	p_charLevel14		INT			
,	p_battlePower14		INT			
,	p_memberGrade14		INT			

,	p_userIdx15			BIGINT			
,	p_gameDBIdx15			SMALLINT	
,	p_nickname15			VARCHAR(30)	
,	p_charIdx15			BIGINT			
,	p_charType15			INT			
,	p_charLevel15		INT			
,	p_battlePower15		INT			
,	p_memberGrade15		INT			

,	p_userIdx16			BIGINT			
,	p_gameDBIdx16			SMALLINT	
,	p_nickname16			VARCHAR(30)	
,	p_charIdx16			BIGINT			
,	p_charType16			INT			
,	p_charLevel16		INT			
,	p_battlePower16		INT			
,	p_memberGrade16		INT			

,	p_userIdx17			BIGINT			
,	p_gameDBIdx17			SMALLINT	
,	p_nickname17			VARCHAR(30)	
,	p_charIdx17			BIGINT			
,	p_charType17			INT			
,	p_charLevel17		INT			
,	p_battlePower17		INT			
,	p_memberGrade17		INT			

,	p_userIdx18			BIGINT			
,	p_gameDBIdx18			SMALLINT	
,	p_nickname18			VARCHAR(30)	
,	p_charIdx18			BIGINT			
,	p_charType18			INT			
,	p_charLevel18		INT			
,	p_battlePower18		INT			
,	p_memberGrade18		INT			

,	p_userIdx19			BIGINT			
,	p_gameDBIdx19			SMALLINT	
,	p_nickname19			VARCHAR(30)	
,	p_charIdx19			BIGINT			
,	p_charType19			INT			
,	p_charLevel19		INT			
,	p_battlePower19		INT			
,	p_memberGrade19		INT			

,	p_userIdx20			BIGINT			
,	p_gameDBIdx20			SMALLINT	
,	p_nickname20			VARCHAR(30)	
,	p_charIdx20			BIGINT			
,	p_charType20			INT			
,	p_charLevel20		INT			
,	p_battlePower20		INT			
,	p_memberGrade20		INT			

,	p_userIdx21			BIGINT			
,	p_gameDBIdx21			SMALLINT	
,	p_nickname21			VARCHAR(30)	
,	p_charIdx21			BIGINT			
,	p_charType21			INT			
,	p_charLevel21		INT			
,	p_battlePower21		INT			
,	p_memberGrade21		INT			

,	p_userIdx22			BIGINT			
,	p_gameDBIdx22			SMALLINT	
,	p_nickname22			VARCHAR(30)	
,	p_charIdx22			BIGINT			
,	p_charType22			INT			
,	p_charLevel22		INT			
,	p_battlePower22		INT			
,	p_memberGrade22		INT			

,	p_userIdx23			BIGINT			
,	p_gameDBIdx23			SMALLINT	
,	p_nickname23			VARCHAR(30)	
,	p_charIdx23			BIGINT			
,	p_charType23			INT			
,	p_charLevel23		INT			
,	p_battlePower23		INT			
,	p_memberGrade23		INT			

,	p_userIdx24			BIGINT			
,	p_gameDBIdx24			SMALLINT	
,	p_nickname24			VARCHAR(30)	
,	p_charIdx24			BIGINT			
,	p_charType24			INT			
,	p_charLevel24		INT			
,	p_battlePower24		INT			
,	p_memberGrade24		INT			

,	p_userIdx25			BIGINT			
,	p_gameDBIdx25			SMALLINT	
,	p_nickname25			VARCHAR(30)	
,	p_charIdx25			BIGINT			
,	p_charType25			INT			
,	p_charLevel25		INT			
,	p_battlePower25		INT			
,	p_memberGrade25		INT			

,	p_userIdx26			BIGINT			
,	p_gameDBIdx26			SMALLINT	
,	p_nickname26			VARCHAR(30)	
,	p_charIdx26			BIGINT			
,	p_charType26			INT			
,	p_charLevel26		INT			
,	p_battlePower26		INT			
,	p_memberGrade26		INT			

,	p_userIdx27			BIGINT			
,	p_gameDBIdx27			SMALLINT	
,	p_nickname27			VARCHAR(30)	
,	p_charIdx27			BIGINT			
,	p_charType27			INT			
,	p_charLevel27		INT			
,	p_battlePower27		INT			
,	p_memberGrade27		INT			

,	p_userIdx28			BIGINT			
,	p_gameDBIdx28			SMALLINT	
,	p_nickname28			VARCHAR(30)	
,	p_charIdx28			BIGINT			
,	p_charType28			INT			
,	p_charLevel28		INT			
,	p_battlePower28		INT			
,	p_memberGrade28		INT			

,	p_userIdx29			BIGINT			
,	p_gameDBIdx29			SMALLINT	
,	p_nickname29			VARCHAR(30)	
,	p_charIdx29			BIGINT			
,	p_charType29			INT			
,	p_charLevel29		INT			
,	p_battlePower29		INT			
,	p_memberGrade29		INT			

,	p_userIdx30			BIGINT			
,	p_gameDBIdx30			SMALLINT	
,	p_nickname30			VARCHAR(30)	
,	p_charIdx30			BIGINT			
,	p_charType30			INT			
,	p_charLevel30		INT			
,	p_battlePower30		INT			
,	p_memberGrade30		INT			

,	p_userIdx31			BIGINT			
,	p_gameDBIdx31			SMALLINT	
,	p_nickname31			VARCHAR(30)	
,	p_charIdx31			BIGINT			
,	p_charType31			INT			
,	p_charLevel31		INT			
,	p_battlePower31		INT			
,	p_memberGrade31		INT			

,	p_userIdx32			BIGINT			
,	p_gameDBIdx32			SMALLINT	
,	p_nickname32			VARCHAR(30)	
,	p_charIdx32			BIGINT			
,	p_charType32			INT			
,	p_charLevel32		INT			
,	p_battlePower32		INT			
,	p_memberGrade32		INT			

,	p_userIdx33			BIGINT			
,	p_gameDBIdx33			SMALLINT	
,	p_nickname33			VARCHAR(30)	
,	p_charIdx33			BIGINT			
,	p_charType33			INT			
,	p_charLevel33		INT			
,	p_battlePower33		INT			
,	p_memberGrade33		INT			

,	p_userIdx34			BIGINT			
,	p_gameDBIdx34			SMALLINT	
,	p_nickname34			VARCHAR(30)	
,	p_charIdx34			BIGINT			
,	p_charType34			INT			
,	p_charLevel34		INT			
,	p_battlePower34		INT			
,	p_memberGrade34		INT			

,	p_userIdx35			BIGINT			
,	p_gameDBIdx35			SMALLINT	
,	p_nickname35			VARCHAR(30)	
,	p_charIdx35			BIGINT			
,	p_charType35			INT			
,	p_charLevel35		INT			
,	p_battlePower35		INT			
,	p_memberGrade35		INT			

,	p_userIdx36			BIGINT			
,	p_gameDBIdx36			SMALLINT	
,	p_nickname36			VARCHAR(30)	
,	p_charIdx36			BIGINT			
,	p_charType36			INT			
,	p_charLevel36		INT			
,	p_battlePower36		INT			
,	p_memberGrade36		INT			

,	p_userIdx37			BIGINT			
,	p_gameDBIdx37			SMALLINT	
,	p_nickname37			VARCHAR(30)	
,	p_charIdx37			BIGINT			
,	p_charType37			INT			
,	p_charLevel37		INT			
,	p_battlePower37		INT			
,	p_memberGrade37		INT			

,	p_userIdx38			BIGINT			
,	p_gameDBIdx38			SMALLINT	
,	p_nickname38			VARCHAR(30)	
,	p_charIdx38			BIGINT			
,	p_charType38			INT			
,	p_charLevel38		INT			
,	p_battlePower38		INT			
,	p_memberGrade38		INT			

,	p_userIdx39			BIGINT			
,	p_gameDBIdx39			SMALLINT	
,	p_nickname39			VARCHAR(30)	
,	p_charIdx39			BIGINT			
,	p_charType39			INT			
,	p_charLevel39		INT			
,	p_battlePower39		INT			
,	p_memberGrade39		INT			

,	p_userIdx40			BIGINT			
,	p_gameDBIdx40			SMALLINT	
,	p_nickname40			VARCHAR(30)	
,	p_charIdx40			BIGINT			
,	p_charType40			INT			
,	p_charLevel40		INT			
,	p_battlePower40		INT			
,	p_memberGrade40		INT			

,	p_userIdx41			BIGINT			
,	p_gameDBIdx41			SMALLINT	
,	p_nickname41			VARCHAR(30)	
,	p_charIdx41			BIGINT			
,	p_charType41			INT			
,	p_charLevel41		INT			
,	p_battlePower41		INT			
,	p_memberGrade41		INT			

,	p_userIdx42			BIGINT			
,	p_gameDBIdx42			SMALLINT	
,	p_nickname42			VARCHAR(30)	
,	p_charIdx42			BIGINT			
,	p_charType42			INT			
,	p_charLevel42		INT			
,	p_battlePower42		INT			
,	p_memberGrade42		INT			

,	p_userIdx43			BIGINT			
,	p_gameDBIdx43			SMALLINT	
,	p_nickname43			VARCHAR(30)	
,	p_charIdx43			BIGINT			
,	p_charType43			INT			
,	p_charLevel43		INT			
,	p_battlePower43		INT			
,	p_memberGrade43		INT			

,	p_userIdx44			BIGINT			
,	p_gameDBIdx44			SMALLINT	
,	p_nickname44			VARCHAR(30)	
,	p_charIdx44			BIGINT			
,	p_charType44			INT			
,	p_charLevel44		INT			
,	p_battlePower44		INT			
,	p_memberGrade44		INT			

,	p_userIdx45			BIGINT			
,	p_gameDBIdx45			SMALLINT	
,	p_nickname45			VARCHAR(30)	
,	p_charIdx45			BIGINT			
,	p_charType45			INT			
,	p_charLevel45		INT			
,	p_battlePower45		INT			
,	p_memberGrade45		INT			

,	p_userIdx46			BIGINT			
,	p_gameDBIdx46			SMALLINT	
,	p_nickname46			VARCHAR(30)	
,	p_charIdx46			BIGINT			
,	p_charType46			INT			
,	p_charLevel46		INT			
,	p_battlePower46		INT			
,	p_memberGrade46		INT			

,	p_userIdx47			BIGINT			
,	p_gameDBIdx47			SMALLINT	
,	p_nickname47			VARCHAR(30)	
,	p_charIdx47			BIGINT			
,	p_charType47			INT			
,	p_charLevel47		INT			
,	p_battlePower47		INT			
,	p_memberGrade47		INT			

,	p_userIdx48			BIGINT			
,	p_gameDBIdx48			SMALLINT	
,	p_nickname48			VARCHAR(30)	
,	p_charIdx48			BIGINT			
,	p_charType48			INT			
,	p_charLevel48		INT			
,	p_battlePower48		INT			
,	p_memberGrade48		INT			

,	p_userIdx49			BIGINT			
,	p_gameDBIdx49			SMALLINT	
,	p_nickname49			VARCHAR(30)	
,	p_charIdx49			BIGINT			
,	p_charType49			INT			
,	p_charLevel49		INT			
,	p_battlePower49		INT			
,	p_memberGrade49		INT			

,	p_userIdx50			BIGINT			
,	p_gameDBIdx50			SMALLINT	
,	p_nickname50			VARCHAR(30)	
,	p_charIdx50			BIGINT			
,	p_charType50			INT			
,	p_charLevel50		INT			
,	p_battlePower50		INT			
,	p_memberGrade50		INT			
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;

	IF p_memberCount = 1 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1);
	END;

	ELSEIF p_memberCount = 2 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2);
	END;

	ELSEIF p_memberCount = 3 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3);
	END;
    
    ELSEIF p_memberCount = 4 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4);
	END;
    
    ELSEIF p_memberCount = 5 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5);
	END;
    
    ELSEIF p_memberCount = 6 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6);
	END;
    
    ELSEIF p_memberCount = 7 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7);
	END;
    
    ELSEIF p_memberCount = 8 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8);
	END;
    
    ELSEIF p_memberCount = 9 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9);
	END;
    
    ELSEIF p_memberCount = 10 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10);
	END;
    
    ELSEIF p_memberCount = 11 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11);
	END;
    
    ELSEIF p_memberCount = 12 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12);
	END;
    
    ELSEIF p_memberCount = 13 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13);
	END;
    
    ELSEIF p_memberCount = 14 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14);
	END;
    
    ELSEIF p_memberCount = 15 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15);
	END;
    
    ELSEIF p_memberCount = 16 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16);
	END;
    
    ELSEIF p_memberCount = 17 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17);
	END;
    
    ELSEIF p_memberCount = 18 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18);
	END;
    
    ELSEIF p_memberCount = 19 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19);
	END;
    
    ELSEIF p_memberCount = 20 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20);
	END;
    
    ELSEIF p_memberCount = 21 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21);
	END;
    
    ELSEIF p_memberCount = 22 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22);
	END;
    
    ELSEIF p_memberCount = 23 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23);
	END;
    
    ELSEIF p_memberCount = 24 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24);
	END;
    
    ELSEIF p_memberCount = 25 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25);
	END;
    
    ELSEIF p_memberCount = 26 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26);
	END;
    
    ELSEIF p_memberCount = 27 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27);
	END;
    
    ELSEIF p_memberCount = 28 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28);
	END;
    
    ELSEIF p_memberCount = 29 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29);
	END;
    
    ELSEIF p_memberCount = 30 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30);
	END;
    
    ELSEIF p_memberCount = 31 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31);
	END;
    
    ELSEIF p_memberCount = 32 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32);
	END;
    
    ELSEIF p_memberCount = 33 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33);
	END;
    
    ELSEIF p_memberCount = 34 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34);
	END;
    
    ELSEIF p_memberCount = 35 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35);
	END;
    
    ELSEIF p_memberCount = 36 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36);
	END;
    
    ELSEIF p_memberCount = 37 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37);
	END;
    
    ELSEIF p_memberCount = 38 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38);
	END;
    
    ELSEIF p_memberCount = 39 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39);
	END;
    
    ELSEIF p_memberCount = 40 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40);
	END;
    
    ELSEIF p_memberCount = 41 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41);
	END;
    
    ELSEIF p_memberCount = 42 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42);
	END;
    
    ELSEIF p_memberCount = 43 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43);
	END;
    
    ELSEIF p_memberCount = 44 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44);
	END;
    
    ELSEIF p_memberCount = 45 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44),
            (p_guildIdx, p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45);
	END;
    
    ELSEIF p_memberCount = 46 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44),
            (p_guildIdx, p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45),
            (p_guildIdx, p_userIdx46, p_gameDBIdx46, p_nickname46, p_charIdx46, p_charType46, p_charLevel46, p_battlePower46, p_memberGrade46);
	END;
    
    ELSEIF p_memberCount = 47 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44),
            (p_guildIdx, p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45),
            (p_guildIdx, p_userIdx46, p_gameDBIdx46, p_nickname46, p_charIdx46, p_charType46, p_charLevel46, p_battlePower46, p_memberGrade46),
            (p_guildIdx, p_userIdx47, p_gameDBIdx47, p_nickname47, p_charIdx47, p_charType47, p_charLevel47, p_battlePower47, p_memberGrade47);
	END;
    
    ELSEIF p_memberCount = 48 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44),
            (p_guildIdx, p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45),
            (p_guildIdx, p_userIdx46, p_gameDBIdx46, p_nickname46, p_charIdx46, p_charType46, p_charLevel46, p_battlePower46, p_memberGrade46),
            (p_guildIdx, p_userIdx47, p_gameDBIdx47, p_nickname47, p_charIdx47, p_charType47, p_charLevel47, p_battlePower47, p_memberGrade47),
            (p_guildIdx, p_userIdx48, p_gameDBIdx48, p_nickname48, p_charIdx48, p_charType48, p_charLevel48, p_battlePower48, p_memberGrade48);
	END;
    
    ELSEIF p_memberCount = 49 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44),
            (p_guildIdx, p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45),
            (p_guildIdx, p_userIdx46, p_gameDBIdx46, p_nickname46, p_charIdx46, p_charType46, p_charLevel46, p_battlePower46, p_memberGrade46),
            (p_guildIdx, p_userIdx47, p_gameDBIdx47, p_nickname47, p_charIdx47, p_charType47, p_charLevel47, p_battlePower47, p_memberGrade47),
            (p_guildIdx, p_userIdx48, p_gameDBIdx48, p_nickname48, p_charIdx48, p_charType48, p_charLevel48, p_battlePower48, p_memberGrade48),
            (p_guildIdx, p_userIdx49, p_gameDBIdx49, p_nickname49, p_charIdx49, p_charType49, p_charLevel49, p_battlePower49, p_memberGrade49);
	END;
    
    ELSEIF p_memberCount = 50 THEN
	BEGIN
		INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
		VALUES (p_guildIdx, p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1),
			(p_guildIdx, p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2),
            (p_guildIdx, p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3),
            (p_guildIdx, p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4),
            (p_guildIdx, p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5),
            (p_guildIdx, p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6),
            (p_guildIdx, p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7),
            (p_guildIdx, p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8),
            (p_guildIdx, p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9),
            (p_guildIdx, p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10),
            (p_guildIdx, p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11),
            (p_guildIdx, p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12),
            (p_guildIdx, p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13),
            (p_guildIdx, p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14),
            (p_guildIdx, p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15),
            (p_guildIdx, p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16),
            (p_guildIdx, p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17),
            (p_guildIdx, p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18),
            (p_guildIdx, p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19),
            (p_guildIdx, p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20),
            (p_guildIdx, p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21),
            (p_guildIdx, p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22),
            (p_guildIdx, p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23),
            (p_guildIdx, p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24),
            (p_guildIdx, p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25),
            (p_guildIdx, p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26),
            (p_guildIdx, p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27),
            (p_guildIdx, p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28),
            (p_guildIdx, p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29),
            (p_guildIdx, p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30),
            (p_guildIdx, p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31),
            (p_guildIdx, p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32),
            (p_guildIdx, p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33),
            (p_guildIdx, p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34),
            (p_guildIdx, p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35),
            (p_guildIdx, p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36),
            (p_guildIdx, p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37),
            (p_guildIdx, p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38),
            (p_guildIdx, p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39),
            (p_guildIdx, p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40),
            (p_guildIdx, p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41),
            (p_guildIdx, p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42),
            (p_guildIdx, p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43),
            (p_guildIdx, p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44),
            (p_guildIdx, p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45),
            (p_guildIdx, p_userIdx46, p_gameDBIdx46, p_nickname46, p_charIdx46, p_charType46, p_charLevel46, p_battlePower46, p_memberGrade46),
            (p_guildIdx, p_userIdx47, p_gameDBIdx47, p_nickname47, p_charIdx47, p_charType47, p_charLevel47, p_battlePower47, p_memberGrade47),
            (p_guildIdx, p_userIdx48, p_gameDBIdx48, p_nickname48, p_charIdx48, p_charType48, p_charLevel48, p_battlePower48, p_memberGrade48),
            (p_guildIdx, p_userIdx49, p_gameDBIdx49, p_nickname49, p_charIdx49, p_charType49, p_charLevel49, p_battlePower49, p_memberGrade49),
            (p_guildIdx, p_userIdx50, p_gameDBIdx50, p_nickname50, p_charIdx50, p_charType50, p_charLevel50, p_battlePower50, p_memberGrade50);
	END;
    
    END IF;

	
	IF ROW_COUNT() < 0 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_Multi_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_Multi_Del`(
	p_guildIdx		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	
	DELETE FROM guild_war_unit WHERE guild_idx = p_guildIdx;

	
	DELETE FROM guild_war_setting WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_regist_delete_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_regist_delete_info`(
	p_guildIdx			BIGINT		
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	DELETE FROM guild_war_regist WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_regist_insert_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_regist_insert_info`(
	p_guildIdx			BIGINT		
,	p_name				VARCHAR(50) 
,	p_markId			INT			
,	p_masterNick		VARCHAR(30)	
,	p_masterCharType	INT			
,	p_masterCharLevel	INT			
,	p_guildWarState		INT			
,	p_peoridNum			SMALLINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	INSERT INTO guild_war_regist (guild_idx, `name`, mark_id, master_user_nickname, master_char_type, master_char_level, guild_war_state, peorid_num)
	VALUES (p_guildIdx, p_name, p_markId, p_masterNick, p_masterCharType, p_masterCharLevel, p_guildWarState, p_peoridNum);

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_regist_update_state_multi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_regist_update_state_multi`(
	p_firstGuildIdx			BIGINT		
,	p_secondGuildIdx		BIGINT		
,	p_guildWarState			INT			
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	
	UPDATE guild_war_regist 
	SET guild_war_state = p_guildWarState
	WHERE guild_idx IN (p_firstGuildIdx, p_secondGuildIdx);


	
	IF ROW_COUNT() <> 2 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_setting_Multi_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_setting_Multi_Del`(
	p_guildIdx	BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	DELETE FROM guild_war_setting WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_setting_Multi_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_setting_Multi_Ins`(
	p_guildIdx	BIGINT	
,	p_warSetCnt	INT	
,	p_slot1		TINYINT	
,	p_type1		TINYINT	
,	p_id1		INT	
,	p_slot2		TINYINT	
,	p_type2		TINYINT	
,	p_id2		INT	
,	p_slot3		TINYINT	
,	p_type3		TINYINT	
,	p_id3		INT	
,	p_slot4		TINYINT	
,	p_type4		TINYINT	
,	p_id4		INT	
,	p_slot5		TINYINT	
,	p_type5		TINYINT	
,	p_id5		INT	
,	p_slot6		TINYINT	
,	p_type6		TINYINT	
,	p_id6		INT	
,	p_slot7		TINYINT	
,	p_type7		TINYINT	
,	p_id7		INT	
,	p_slot8		TINYINT	
,	p_type8		TINYINT	
,	p_id8		INT	
,	p_slot9		TINYINT	
,	p_type9		TINYINT	
,	p_id9		INT	
,	p_slot10	TINYINT	
,	p_type10	TINYINT	
,	p_id10		INT	
,	p_slot11	TINYINT	
,	p_type11	TINYINT	
,	p_id11		INT	
,	p_slot12	TINYINT	
,	p_type12	TINYINT	
,	p_id12		INT	
,	p_slot13	TINYINT	
,	p_type13	TINYINT	
,	p_id13		INT	
,	p_slot14	TINYINT	
,	p_type14	TINYINT	
,	p_id14		INT	
,	p_slot15	TINYINT	
,	p_type15	TINYINT	
,	p_id15		INT	
,	p_slot16	TINYINT	
,	p_type16	TINYINT	
,	p_id16		INT	
,	p_slot17	TINYINT	
,	p_type17	TINYINT	
,	p_id17		INT	
,	p_slot18	TINYINT	
,	p_type18	TINYINT	
,	p_id18		INT	
,	p_slot19	TINYINT	
,	p_type19	TINYINT	
,	p_id19		INT	
,	p_slot20	TINYINT	
,	p_type20	TINYINT	
,	p_id20		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	IF p_warSetCnt = 1 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1);
	END;

	ELSEIF p_warSetCnt = 2 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2);
	END;

	ELSEIF p_warSetCnt = 3 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3);
	END;

	ELSEIF p_warSetCnt = 4 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4);
	END;

	ELSEIF p_warSetCnt = 5 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5);
	END;

	ELSEIF p_warSetCnt = 6 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6);
	END;

	ELSEIF p_warSetCnt = 7 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7);
	END;

	ELSEIF p_warSetCnt = 8 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8);
	END;

	ELSEIF p_warSetCnt = 9 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9);
	END;

	ELSEIF p_warSetCnt = 10 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10);
	END;

	ELSEIF p_warSetCnt = 11 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11);
	END;

	ELSEIF p_warSetCnt = 12 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12);
	END;

	ELSEIF p_warSetCnt = 13 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13);
	END;

	ELSEIF p_warSetCnt = 14 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14);
	END;

	ELSEIF p_warSetCnt = 15 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14),
			(p_guildIdx, p_slot15, p_type15, p_id15);
	END;

	ELSEIF p_warSetCnt = 16 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14),
			(p_guildIdx, p_slot15, p_type15, p_id15),
			(p_guildIdx, p_slot16, p_type16, p_id16);
	END;

	ELSEIF p_warSetCnt = 17 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14),
			(p_guildIdx, p_slot15, p_type15, p_id15),
			(p_guildIdx, p_slot16, p_type16, p_id16),
			(p_guildIdx, p_slot17, p_type17, p_id17);
	END;

	ELSEIF p_warSetCnt = 18 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14),
			(p_guildIdx, p_slot15, p_type15, p_id15),
			(p_guildIdx, p_slot16, p_type16, p_id16),
			(p_guildIdx, p_slot17, p_type17, p_id17),
			(p_guildIdx, p_slot18, p_type18, p_id18);
	END;

	ELSEIF p_warSetCnt = 19 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14),
			(p_guildIdx, p_slot15, p_type15, p_id15),
			(p_guildIdx, p_slot16, p_type16, p_id16),
			(p_guildIdx, p_slot17, p_type17, p_id17),
			(p_guildIdx, p_slot18, p_type18, p_id18),
			(p_guildIdx, p_slot19, p_type19, p_id19);
	END;

	ELSEIF p_warSetCnt = 20 THEN
	BEGIN
		INSERT INTO guild_war_setting (guild_idx, slot, `type`, `id`)
		VALUES (p_guildIdx, p_slot1, p_type1, p_id1),
			(p_guildIdx, p_slot2, p_type2, p_id2),
			(p_guildIdx, p_slot3, p_type3, p_id3),
			(p_guildIdx, p_slot4, p_type4, p_id4),
			(p_guildIdx, p_slot5, p_type5, p_id5),
			(p_guildIdx, p_slot6, p_type6, p_id6),
			(p_guildIdx, p_slot7, p_type7, p_id7),
			(p_guildIdx, p_slot8, p_type8, p_id8),
			(p_guildIdx, p_slot9, p_type9, p_id9),
			(p_guildIdx, p_slot10, p_type10, p_id10),
			(p_guildIdx, p_slot11, p_type11, p_id11),
			(p_guildIdx, p_slot12, p_type12, p_id12),
			(p_guildIdx, p_slot13, p_type13, p_id13),
			(p_guildIdx, p_slot14, p_type14, p_id14),
			(p_guildIdx, p_slot15, p_type15, p_id15),
			(p_guildIdx, p_slot16, p_type16, p_id16),
			(p_guildIdx, p_slot17, p_type17, p_id17),
			(p_guildIdx, p_slot18, p_type18, p_id18),
			(p_guildIdx, p_slot19, p_type19, p_id19),
			(p_guildIdx, p_slot20, p_type20, p_id20);
	END;
	END IF;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_unit_Level_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_unit_Level_Upd`(
	p_guildIdx		BIGINT	
,	p_warUnitId		INT	
,	p_warUnitLevel		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE guild_war_unit SET war_unit_level = p_warUnitLevel
	WHERE guild_idx = p_guildIdx
		AND war_unit_id = p_warUnitId;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_unit_Multi_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_unit_Multi_Del`(
	p_guildIdx		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	DELETE FROM guild_war_unit WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_unit_Multi_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_unit_Multi_Ins`(
	p_guildIdx		BIGINT	
,	p_warUnitCnt		INT	
,	p_warUnitId1		INT	
,	p_warUnitLevel1		INT	
,	p_warUnitExp1		INT	
,	p_warUnitId2		INT	
,	p_warUnitLevel2		INT	
,	p_warUnitExp2		INT	
,	p_warUnitId3		INT	
,	p_warUnitLevel3		INT	
,	p_warUnitExp3		INT	
,	p_warUnitId4		INT	
,	p_warUnitLevel4		INT	
,	p_warUnitExp4		INT	
,	p_warUnitId5		INT	
,	p_warUnitLevel5		INT	
,	p_warUnitExp5		INT	
,	p_warUnitId6		INT	
,	p_warUnitLevel6		INT	
,	p_warUnitExp6		INT	
,	p_warUnitId7		INT	
,	p_warUnitLevel7		INT	
,	p_warUnitExp7		INT	
,	p_warUnitId8		INT	
,	p_warUnitLevel8		INT	
,	p_warUnitExp8		INT	
,	p_warUnitId9		INT	
,	p_warUnitLevel9		INT	
,	p_warUnitExp9		INT	
,	p_warUnitId10		INT	
,	p_warUnitLevel10	INT	
,	p_warUnitExp10		INT	
,	p_warUnitId11		INT	
,	p_warUnitLevel11	INT	
,	p_warUnitExp11		INT	
,	p_warUnitId12		INT	
,	p_warUnitLevel12	INT	
,	p_warUnitExp12		INT	
,	p_warUnitId13		INT	
,	p_warUnitLevel13	INT	
,	p_warUnitExp13		INT	
,	p_warUnitId14		INT	
,	p_warUnitLevel14	INT	
,	p_warUnitExp14		INT	
,	p_warUnitId15		INT	
,	p_warUnitLevel15	INT	
,	p_warUnitExp15		INT	
,	p_warUnitId16		INT	
,	p_warUnitLevel16	INT	
,	p_warUnitExp16		INT	
,	p_warUnitId17		INT	
,	p_warUnitLevel17	INT	
,	p_warUnitExp17		INT	
,	p_warUnitId18		INT	
,	p_warUnitLevel18	INT	
,	p_warUnitExp18		INT	
,	p_warUnitId19		INT	
,	p_warUnitLevel19	INT	
,	p_warUnitExp19		INT	
,	p_warUnitId20		INT	
,	p_warUnitLevel20	INT	
,	p_warUnitExp20		INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	IF p_warUnitCnt = 1 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1);
	END;

	ELSEIF p_warUnitCnt = 2 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2);
	END;

	ELSEIF p_warUnitCnt = 3 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3);
	END;

	ELSEIF p_warUnitCnt = 4 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4);
	END;

	ELSEIF p_warUnitCnt = 5 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5);
	END;

	ELSEIF p_warUnitCnt = 6 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6);
	END;

	ELSEIF p_warUnitCnt = 7 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7);
	END;

	ELSEIF p_warUnitCnt = 8 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8);
	END;

	ELSEIF p_warUnitCnt = 9 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9);
	END;

	ELSEIF p_warUnitCnt = 10 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10);
	END;

	ELSEIF p_warUnitCnt = 11 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11);
	END;

	ELSEIF p_warUnitCnt = 12 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12);
	END;

	ELSEIF p_warUnitCnt = 13 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13);
	END;

	ELSEIF p_warUnitCnt = 14 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14);
	END;

	ELSEIF p_warUnitCnt = 15 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14),
			(p_guildIdx, p_warUnitId15, p_warUnitLevel15, p_warUnitExp15);
	END;

	ELSEIF p_warUnitCnt = 16 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14),
			(p_guildIdx, p_warUnitId15, p_warUnitLevel15, p_warUnitExp15),
			(p_guildIdx, p_warUnitId16, p_warUnitLevel16, p_warUnitExp16);
	END;

	ELSEIF p_warUnitCnt = 17 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14),
			(p_guildIdx, p_warUnitId15, p_warUnitLevel15, p_warUnitExp15),
			(p_guildIdx, p_warUnitId16, p_warUnitLevel16, p_warUnitExp16),
			(p_guildIdx, p_warUnitId17, p_warUnitLevel17, p_warUnitExp17);
	END;

	ELSEIF p_warUnitCnt = 18 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14),
			(p_guildIdx, p_warUnitId15, p_warUnitLevel15, p_warUnitExp15),
			(p_guildIdx, p_warUnitId16, p_warUnitLevel16, p_warUnitExp16),
			(p_guildIdx, p_warUnitId17, p_warUnitLevel17, p_warUnitExp17),
			(p_guildIdx, p_warUnitId18, p_warUnitLevel18, p_warUnitExp18);
	END;

	ELSEIF p_warUnitCnt = 19 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14),
			(p_guildIdx, p_warUnitId15, p_warUnitLevel15, p_warUnitExp15),
			(p_guildIdx, p_warUnitId16, p_warUnitLevel16, p_warUnitExp16),
			(p_guildIdx, p_warUnitId17, p_warUnitLevel17, p_warUnitExp17),
			(p_guildIdx, p_warUnitId18, p_warUnitLevel18, p_warUnitExp18),
			(p_guildIdx, p_warUnitId19, p_warUnitLevel19, p_warUnitExp19);
	END;

	ELSEIF p_warUnitCnt = 20 THEN
	BEGIN
		INSERT INTO guild_war_unit (guild_idx, war_unit_id, war_unit_level, war_unit_exp)
		VALUES (p_guildIdx, p_warUnitId1, p_warUnitLevel1, p_warUnitExp1),
			(p_guildIdx, p_warUnitId2, p_warUnitLevel2, p_warUnitExp2),
			(p_guildIdx, p_warUnitId3, p_warUnitLevel3, p_warUnitExp3),
			(p_guildIdx, p_warUnitId4, p_warUnitLevel4, p_warUnitExp4),
			(p_guildIdx, p_warUnitId5, p_warUnitLevel5, p_warUnitExp5),
			(p_guildIdx, p_warUnitId6, p_warUnitLevel6, p_warUnitExp6),
			(p_guildIdx, p_warUnitId7, p_warUnitLevel7, p_warUnitExp7),
			(p_guildIdx, p_warUnitId8, p_warUnitLevel8, p_warUnitExp8),
			(p_guildIdx, p_warUnitId9, p_warUnitLevel9, p_warUnitExp9),
			(p_guildIdx, p_warUnitId10, p_warUnitLevel10, p_warUnitExp10),
			(p_guildIdx, p_warUnitId11, p_warUnitLevel11, p_warUnitExp11),
			(p_guildIdx, p_warUnitId12, p_warUnitLevel12, p_warUnitExp12),
			(p_guildIdx, p_warUnitId13, p_warUnitLevel13, p_warUnitExp13),
			(p_guildIdx, p_warUnitId14, p_warUnitLevel14, p_warUnitExp14),
			(p_guildIdx, p_warUnitId15, p_warUnitLevel15, p_warUnitExp15),
			(p_guildIdx, p_warUnitId16, p_warUnitLevel16, p_warUnitExp16),
			(p_guildIdx, p_warUnitId17, p_warUnitLevel17, p_warUnitExp17),
			(p_guildIdx, p_warUnitId18, p_warUnitLevel18, p_warUnitExp18),
			(p_guildIdx, p_warUnitId19, p_warUnitLevel19, p_warUnitExp19),
			(p_guildIdx, p_warUnitId20, p_warUnitLevel20, p_warUnitExp20);
	END;

	END IF;

	
	IF ROW_COUNT() < 0 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_unit_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_unit_Upd`(
	p_guildIdx		BIGINT	
,	p_warUnitId		INT	
,	p_beforeWarUnitExp	INT	
,	p_afterWarNuintExp	INT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	INT;
	SET p_Result := 1;

	UPDATE guild_war_unit SET war_unit_exp = p_afterWarNuintExp
		WHERE guild_idx = p_guildIdx
		AND war_unit_id = p_warUnitId
		AND war_unit_exp = p_beforeWarUnitExp;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_update_attacker_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_update_attacker_info`(
	p_guildIdx			BIGINT		
,	p_userIdx			BIGINT		
,	p_attackerNum		INT			
,	p_attackerIdx		BIGINT		
,	p_attackerNick		VARCHAR(30)	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	IF p_attackerNum = 1 THEN
    BEGIN
		UPDATE guild_war_member SET first_idx = p_attackerIdx, first_nick = p_attackerNick WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;
	END;
    
    ELSE
    BEGIN
		UPDATE guild_war_member SET second_idx = p_attackerIdx, second_nick = p_attackerNick WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;
	END;
    END IF;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_update_battle_attack_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_update_battle_attack_complete`(
	p_guildIdx				BIGINT		
,	p_userIdx				BIGINT		
,	p_fightCompleteCount	INT			
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	UPDATE guild_war_member SET fight_comp_count = fight_comp_count + p_fightCompleteCount WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_update_battle_defence_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_update_battle_defence_complete`(
	p_guildIdx				BIGINT		
,	p_userIdx				BIGINT		
,	p_defenceCompleteCount	INT			
,	p_attackerNum			INT			
,	p_rewardPoint			INT			
,	p_star					INT			
,	p_destroy				INT			
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

    IF p_attackerNum = 1 THEN
		UPDATE guild_war_member SET first_attack_star = p_star, first_attack_destroy = p_destroy, defence_comp_count = defence_comp_count + p_defenceCompleteCount, reward_point = reward_point + p_rewardPoint WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;
	ELSE
		UPDATE guild_war_member SET second_attack_star = p_star, second_attack_destroy = p_destroy, defence_comp_count = defence_comp_count + p_defenceCompleteCount, reward_point = reward_point + p_rewardPoint WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;
    END IF;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;
    
    RETURN v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_war_update_battle_fight` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_war_update_battle_fight`(
	p_guildIdx			BIGINT		
,	p_userIdx			BIGINT		
,	p_fightCount		INT			
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE v_Result	INT;
	SET v_Result := 1;	

	UPDATE guild_war_member SET fight_count = fight_count + p_fightCount WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET v_Result := -7;	
	END IF;

	RETURN v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `udf_guild_withdraw_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `udf_guild_withdraw_Ins`(
	p_guildIdx	BIGINT	
,	p_iPartKeyMonth	INT	
,	p_TXIDX		BIGINT	
) RETURNS int(11)
    DETERMINISTIC
BEGIN



	DECLARE p_Result	BIGINT;
	SET p_Result := 1;	

	INSERT INTO guild_withdraw (partKeyMonth, TXIDX, guild_idx, master_user_idx, master_char_idx, `name`, exp, `point`, member_cnt, member_max_cnt, mark_id, introduction, join_type, notice, war_cnt, war_win_cnt, 
					grow_target_merc, grow_target_merc_boss, grow_target_tower, battle_idx, buff_type, buff_value, buff_exp_date, reg_date)
	
	SELECT p_iPartKeyMonth, p_TXIDX, guild_idx, master_user_idx, master_char_idx, `name`, exp, `point`, member_cnt, member_max_cnt, mark_id, introduction, join_type, notice, war_cnt, war_win_cnt, 
					grow_target_merc, grow_target_merc_boss, grow_target_tower, battle_idx, buff_type, buff_value, buff_exp_date, reg_date
	FROM guild WHERE guild_idx = p_guildIdx;

	
	IF ROW_COUNT() <> 1 THEN
		SET p_Result := -7;	
	END IF;

	RETURN p_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitemsai_insert_getindex` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitemsai_insert_getindex`(
	OUT	p_Result		INT
,	OUT p_Index			BIGINT
)
    COMMENT '새로운 auction_index 얻기'
BEGIN       
	SET p_Result = 0;
	SET p_Index = 0;
	
	
	INSERT INTO tbl_auction_items_ai () VALUES ();
	IF 0 = ROW_COUNT() THEN
		SET p_Result = 101;	
	END IF;		
	
	SELECT LAST_INSERT_ID() INTO p_Index;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitemssold_select_search_mine` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitemssold_select_search_mine`(
	IN	_useridx			BIGINT		
,	IN	_charidx			BIGINT		
,	IN	_page				SMALLINT
,	IN	_flag_sold			TINYINT		-- 0:내가 구매한 정보, 1: 판매 후 정산 가능한 내 물품, 2: 판매 후 정산 완료된 내 물품
)
    COMMENT '내 팔고/구매한 아이템 검색하기'
BEGIN
    DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    DECLARE	v_pageSize		INT DEFAULT 10;				
	DECLARE v_totalPage		INT DEFAULT 0;				
    DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    DECLARE v_allitemqty 	INT DEFAULT 0;				
	DECLARE v_solditemqty	INT DEFAULT 0;				
    DECLARE v_buyitemqty	INT DEFAULT 0;				
    DECLARE v_needsettleupitemqty	INT DEFAULT 0;		
    
    root:
	BEGIN
    
		IF _page < 1 THEN
			LEAVE root;
		END IF;
        
        IF _flag_sold > 2 THEN
			LEAVE root;
		END IF;
        
        SELECT COUNT(fld_user_idx) v_solditemqty, IFNULL(SUM(CASE WHEN fld_settleup=0 THEN 1 ELSE 0 END), 0) v_needsettleupitemqty
		INTO v_solditemqty, v_needsettleupitemqty
		FROM tbl_auction_items_sold
		WHERE fld_user_idx = _useridx AND fld_char_idx = _charidx;
        
        SELECT count(fld_user_idx) INTO v_buyitemqty 
        FROM tbl_auction_items_sold
        WHERE fld_buy_user_idx = _useridx AND fld_buy_char_idx = _charidx;
        
        -- 2: 판매 후 정산 완료된 내 물품
        IF 2 = _flag_sold THEN
        
			SELECT SQL_CALC_FOUND_ROWS
				fld_index, fld_user_idx, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
				, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
				, fld_sell_price, fld_settleup, fld_buy_user_nick, UNIX_TIMESTAMP(fld_buy_date) AS fld_buy_date
			FROM tbl_auction_items_sold
			WHERE fld_user_idx = _useridx AND fld_char_idx = _charidx AND fld_settleup > 0
			ORDER BY fld_buy_date desc -- ORDER BY fld_expire_date desc
			LIMIT v_startRow, v_pageSize;
        
        END IF;
        
        -- 1: 판매 후 정산 가능한 내 물품
        IF 1 = _flag_sold THEN
        
			SELECT SQL_CALC_FOUND_ROWS
				fld_index, fld_user_idx, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
				, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
				, fld_sell_price, fld_settleup, fld_buy_user_nick, UNIX_TIMESTAMP(fld_buy_date) AS fld_buy_date
			FROM tbl_auction_items_sold
			WHERE fld_user_idx = _useridx AND fld_char_idx = _charidx AND fld_settleup = 0
			ORDER BY fld_buy_date desc -- ORDER BY fld_expire_date desc
			LIMIT v_startRow, v_pageSize;
        
        END IF;
        
        -- 0:내가 구매한 정보
        IF 0 = _flag_sold THEN
        
			SELECT SQL_CALC_FOUND_ROWS
				fld_index, fld_user_idx, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
				, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
				, fld_sell_price, fld_settleup, fld_buy_user_nick, UNIX_TIMESTAMP(fld_buy_date) AS fld_buy_date
			FROM tbl_auction_items_sold
			WHERE fld_buy_user_idx = _useridx AND fld_buy_char_idx = _charidx
			ORDER BY fld_buy_date desc -- ORDER BY fld_expire_date desc
			LIMIT v_startRow, v_pageSize;
        
        END IF;
		
        SET v_allitemqty = FOUND_ROWS();
        SET v_totalPage = Ceil(v_allitemqty / v_pageSize); 
        
		SELECT v_totalPage, v_allitemqty, v_solditemqty, v_buyitemqty, v_needsettleupitemqty;    
  
    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitemssold_update_settleup_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitemssold_update_settleup_one`(
	IN	p_UserID			BIGINT
,	IN	p_CharID			BIGINT
,	IN	p_AuctionID			BIGINT
-- ,	IN  p_Commision_min			INT 	
-- ,	IN 	p_Commision_min_price	INT 	
,	IN 	p_TradeFeeR				DOUBLE	
)
    COMMENT '판매된 아이템 판매금액 정산'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
	
	DECLARE v_final_cashA 		BIGINT DEFAULT 0;

	DECLARE v_sell_price 		BIGINT DEFAULT 0;
    DECLARE v_get_income		BIGINT DEFAULT 0;	
    DECLARE v_commision 		BIGINT DEFAULT 1;
    DECLARE v_settleup 			TINYINT DEFAULT 1;
    
    DECLARE v_fld_index 			BIGINT DEFAULT 0;
    DECLARE v_fld_register_date 	DATETIME DEFAULT now();
    
    DECLARE v_fld_count_item_id			INT DEFAULT 0;
    DECLARE v_fld_count_item_type		INT DEFAULT 0;
    DECLARE v_fld_count_item_qty		INT DEFAULT 0;
    
    DECLARE v_fld_equip_item_id			INT DEFAULT 0;
    DECLARE v_fld_item_idx				BIGINT DEFAULT 0;
    
    DECLARE v_fld_skillbook_item_id			INT DEFAULT 0;
    DECLARE v_fld_skillbook_value			INT DEFAULT 0;
    
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashA, v_sell_price, v_commision, v_get_income, v_fld_index, v_fld_item_idx, v_fld_equip_item_id, v_fld_count_item_id, v_fld_count_item_type, v_fld_count_item_qty, v_fld_skillbook_item_id, v_fld_skillbook_value, v_fld_register_date;
	END;
        
        
	START TRANSACTION;
	
	root:
	BEGIN
    
		
        UPDATE tbl_auction_items_sold
        SET fld_settleup = 1, fld_sell_price = (@sell_price := fld_sell_price)
        WHERE fld_index = p_AuctionID AND fld_user_idx = p_UserID AND fld_char_idx = p_CharID AND fld_settleup = 0;
                                    
		IF 0 = ROW_COUNT() THEN
			SET v_result = 101;		
			LEAVE root;
		END IF;
		
        SET v_sell_price = @sell_price;
        
        
        SELECT fld_index, fld_item_idx, fld_equip_item_id, fld_count_item_id, fld_count_item_type, fld_count_item_qty, fld_skillbook_item_id, fld_skillbook_value, fld_register_date
        INTO v_fld_index, v_fld_item_idx, v_fld_equip_item_id, v_fld_count_item_id, v_fld_count_item_type, v_fld_count_item_qty, v_fld_skillbook_item_id, v_fld_skillbook_value, v_fld_register_date
        FROM tbl_auction_items_sold
        WHERE fld_index = p_AuctionID;
        
        
        -- IF p_Commision_min_price <= v_sell_price THEN
			SET v_commision = ceil(v_sell_price * p_TradeFeeR);
        -- END IF;
        
        SET v_get_income = v_sell_price - v_commision;
        IF v_get_income < 0 THEN
			SET v_result = 102;		
			LEAVE root;
        END IF;
        
		
		CALL sp_mmo_notrans_userinfo_insert_cashAFree(p_UserID, v_get_income, v_final_cashA, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;		
	END;
       
	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
	
    SELECT v_result, v_final_cashA, v_sell_price, v_commision, v_get_income, v_fld_index, v_fld_item_idx, v_fld_equip_item_id, v_fld_count_item_id, v_fld_count_item_type, v_fld_count_item_qty, v_fld_skillbook_item_id, v_fld_skillbook_value, v_fld_register_date;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_delete_buy_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_delete_buy_one`(
	IN	p_UserID			BIGINT			
,	IN	p_CharID			BIGINT			
,	IN	p_NickName			VARCHAR(16)		
,	IN	p_AuctionID			BIGINT
)
    COMMENT '아이템 거래소에서 아이템 구매'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
	
    DECLARE v_final_cashA			BIGINT DEFAULT 0;
	DECLARE v_final_item_qty		INT DEFAULT 0;
    
	DECLARE v_item_idx					BIGINT DEFAULT 0;
    DECLARE	v_count_item_id				INT DEFAULT 0;
    DECLARE	v_count_item_type			TINYINT DEFAULT 0;
    DECLARE	v_count_item_qty			INT DEFAULT 0;
    DECLARE v_equip_item_id				INT DEFAULT 0;
    DECLARE v_equip_type				TINYINT DEFAULT 0;
    DECLARE v_equip_quality_grade		TINYINT DEFAULT 0;
    DECLARE v_equip_level				TINYINT DEFAULT 0;
    DECLARE v_equip_exp					INT DEFAULT 0;
    DECLARE v_equip_enchant_level		TINYINT DEFAULT 0;
	DECLARE v_equip_attr_id				SMALLINT DEFAULT 0;
    DECLARE v_equip_attr_value			SMALLINT DEFAULT 0;
	DECLARE v_equip_jewel_1				INT DEFAULT 0;
    DECLARE v_equip_jewel_2				INT DEFAULT 0;
    DECLARE v_equip_jewel_3				INT DEFAULT 0;
    DECLARE v_equip_jewel_4				INT DEFAULT 0;
    DECLARE v_equip_jewel_5				INT DEFAULT 0;
    DECLARE v_equip_jewel_6				INT DEFAULT 0;
    DECLARE v_equip_identify			TINYINT DEFAULT 0;
	DECLARE v_equip_option_id_1			INT DEFAULT 0;
    DECLARE v_equip_option_value_1		SMALLINT DEFAULT 0;
    DECLARE v_equip_option_id_2			INT DEFAULT 0;
    DECLARE v_equip_option_value_2		SMALLINT DEFAULT 0;
	DECLARE v_equip_option_id_3			INT DEFAULT 0;
    DECLARE v_equip_option_value_3		SMALLINT DEFAULT 0;
    DECLARE v_equip_option_id_4			INT DEFAULT 0;
    DECLARE v_equip_option_value_4		SMALLINT DEFAULT 0;
	DECLARE v_equip_option_id_5			INT DEFAULT 0;
    DECLARE v_equip_option_value_5		SMALLINT DEFAULT 0;
    DECLARE v_equip_option_id_6			INT DEFAULT 0;
    DECLARE v_equip_option_value_6		SMALLINT DEFAULT 0;
	DECLARE v_equip_option_id_7			INT DEFAULT 0;
    DECLARE v_equip_option_value_7		SMALLINT DEFAULT 0;
	DECLARE v_skillbook_item_id			INT DEFAULT 0;
    DECLARE v_skillbook_percent			SMALLINT DEFAULT 0;
    DECLARE v_skillbook_lifetime		TINYINT DEFAULT 0;
    DECLARE v_skillbook_value			SMALLINT DEFAULT 0;
	DECLARE v_sell_price				INT DEFAULT 0;    
	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashA;
	END;
        
        
	START TRANSACTION;
	
	root:
	BEGIN
   	
		
        
        INSERT INTO tbl_auction_items_sold (fld_index, fld_db_idx, fld_user_idx, fld_char_idx, fld_nick, fld_char_class, fld_item_name_id, fld_item_group, fld_item_group_sub
										, fld_item_idx, fld_count_item_id, fld_count_item_type, fld_count_item_qty
										, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
										, fld_equip_attr_id, fld_equip_attr_value
										, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                                        , fld_equip_identify
										, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
										, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
										, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
										, fld_equip_option_id_7, fld_equip_option_value_7
										, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value
                                        , fld_sell_password, fld_register_date, fld_expire_date, fld_sell_price, fld_buy_user_idx, fld_buy_char_idx, fld_buy_user_nick)
				SELECT fld_index, fld_db_idx, fld_user_idx, fld_char_idx, fld_nick, fld_char_class, fld_item_name_id, fld_item_group, fld_item_group_sub
						, fld_item_idx, fld_count_item_id, fld_count_item_type, fld_count_item_qty
						, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
						, fld_equip_attr_id, fld_equip_attr_value
						, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                        , fld_equip_identify
						, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
						, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
						, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
						, fld_equip_option_id_7, fld_equip_option_value_7
						, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value
                        , fld_sell_password, fld_register_date, fld_expire_date, fld_sell_price, p_UserID, p_CharID, p_NickName
                FROM tbl_auction_items 
                WHERE fld_index = p_AuctionID;


		IF 0 = ROW_COUNT() THEN
			SET v_result = 101;	
			LEAVE root;
		END IF;
        
        SELECT fld_item_idx, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
                , fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value, fld_sell_price
		INTO v_item_idx, v_count_item_id, v_count_item_type, v_count_item_qty
			, v_equip_item_id, v_equip_type, v_equip_quality_grade, v_equip_level, v_equip_exp, v_equip_enchant_level
            , v_equip_attr_id, v_equip_attr_value
            , v_equip_jewel_1, v_equip_jewel_2, v_equip_jewel_3, v_equip_jewel_4, v_equip_jewel_5, v_equip_jewel_6
            , v_equip_identify
            , v_equip_option_id_1, v_equip_option_value_1, v_equip_option_id_2, v_equip_option_value_2, v_equip_option_id_3, v_equip_option_value_3
            , v_equip_option_id_4, v_equip_option_value_4, v_equip_option_id_5, v_equip_option_value_5, v_equip_option_id_6, v_equip_option_value_6
            , v_equip_option_id_7, v_equip_option_value_7
            , v_skillbook_item_id, v_skillbook_percent, v_skillbook_lifetime, v_skillbook_value, v_sell_price 
        FROM tbl_auction_items
        WHERE fld_index = p_AuctionID;
        
		IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;	
			LEAVE root;
		END IF;        

		
		DELETE FROM tbl_auction_items
		WHERE fld_index = p_AuctionID;
        
 		IF 0 = ROW_COUNT() THEN
			SET v_result = 102;	
			LEAVE root;
		END IF;
		
		
		        
		CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, v_sell_price, v_final_cashA, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
		
		
		
		IF 0 < v_equip_item_id THEN
        BEGIN
			
			CALL sp_mmo_notrans_charinvenequip_insert_buy( p_UserID, p_CharID
								, v_equip_item_id, v_equip_quality_grade, v_equip_level, v_equip_type, v_equip_exp, v_equip_enchant_level, v_equip_attr_id, v_equip_attr_value
								, v_equip_jewel_1, v_equip_jewel_2, v_equip_jewel_3, v_equip_jewel_4, v_equip_jewel_5, v_equip_jewel_6
                                , v_equip_identify
								, 0, v_equip_option_id_1, v_equip_option_value_1, 1, v_equip_option_id_2, v_equip_option_value_2
								, 2, v_equip_option_id_3, v_equip_option_value_3, 3, v_equip_option_id_4, v_equip_option_value_4
								, 4, v_equip_option_id_5, v_equip_option_value_5, 5, v_equip_option_id_6, v_equip_option_value_6
								, 6, v_equip_option_id_7, v_equip_option_value_7, 0, v_result, v_item_idx);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END;
		ELSEIF 0 < v_count_item_id THEN
        BEGIN
			
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, v_count_item_type, v_count_item_id, v_count_item_qty, v_result, v_final_item_qty);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;
		END;
		ELSEIF 0 < v_skillbook_item_id THEN
        BEGIN
			
			CALL sp_mmo_notrans_charinvenskillbook_insert(p_UserID, p_CharID, v_skillbook_item_id, v_skillbook_percent, v_skillbook_lifetime, v_skillbook_value, 0, v_result, v_item_idx);
			IF v_result <> 0 THEN 
				LEAVE root;
			END IF;
		END;
        ELSE
			SET v_result = 103;	
			LEAVE root;
		END IF;        
	END;

	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
    
	
	SELECT v_result, v_final_cashA;
    
    IF v_result = 0 THEN
		SELECT fld_index, fld_user_idx, fld_nick, fld_char_idx, fld_register_date, fld_sell_password	
				, fld_db_idx, v_item_idx as fld_item_idx, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
                , fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
                , fld_sell_price, v_final_item_qty
		FROM tbl_auction_items_sold
        WHERE fld_index = p_AuctionID;
    END IF;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_delete_unregister_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_delete_unregister_one`(
	IN	p_UserID			BIGINT
,	IN	p_CharID			BIGINT
,	IN	p_AuctionID			BIGINT
)
    COMMENT '아이템 거래소에서 아이템 회수'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
	
    DECLARE v_index						BIGINT DEFAULT 0;
    DECLARE v_db_idx					INT DEFAULT 0;
    DECLARE v_user_idx					BIGINT DEFAULT 0;
    DECLARE v_char_idx					BIGINT DEFAULT 0;
    DECLARE v_nick						VARCHAR(30) CHARACTER SET UTF8MB4 DEFAULT 0;
    DECLARE v_char_class				INT DEFAULT 0;
    DECLARE v_item_name_id				INT DEFAULT 0;
    DECLARE v_item_group				INT DEFAULT 0;
    DECLARE v_item_group_sub			INT DEFAULT 0;
    
	DECLARE v_item_idx					BIGINT DEFAULT 0;
    DECLARE	v_count_item_id				INT DEFAULT 0;
    DECLARE	v_count_item_type			TINYINT DEFAULT 0;
    DECLARE	v_count_item_qty			INT DEFAULT 0;
    DECLARE v_equip_item_id				INT DEFAULT 0;
    DECLARE v_equip_type				TINYINT DEFAULT 0;
    DECLARE v_equip_quality_grade		TINYINT DEFAULT 0;
    DECLARE v_equip_level				TINYINT DEFAULT 0;
    DECLARE v_equip_exp					INT DEFAULT 0;
    DECLARE v_equip_enchant_level		TINYINT DEFAULT 0;
	DECLARE v_equip_attr_id				SMALLINT DEFAULT 0;
    DECLARE v_equip_attr_value			SMALLINT DEFAULT 0;
	DECLARE v_equip_jewel_1				INT DEFAULT 0;
    DECLARE v_equip_jewel_2				INT DEFAULT 0;
    DECLARE v_equip_jewel_3				INT DEFAULT 0;
    DECLARE v_equip_jewel_4				INT DEFAULT 0;
    DECLARE v_equip_jewel_5				INT DEFAULT 0;
    DECLARE v_equip_jewel_6				INT DEFAULT 0;
    DECLARE v_equip_identify			TINYINT DEFAULT 0;
	DECLARE v_equip_option_id_1			INT DEFAULT 0;
    DECLARE v_equip_option_value_1		SMALLINT DEFAULT 0;
    DECLARE v_equip_option_id_2			INT DEFAULT 0;
    DECLARE v_equip_option_value_2		SMALLINT DEFAULT 0;
	DECLARE v_equip_option_id_3			INT DEFAULT 0;
    DECLARE v_equip_option_value_3		SMALLINT DEFAULT 0;
    DECLARE v_equip_option_id_4			INT DEFAULT 0;
    DECLARE v_equip_option_value_4		SMALLINT DEFAULT 0;
	DECLARE v_equip_option_id_5			INT DEFAULT 0;
    DECLARE v_equip_option_value_5		SMALLINT DEFAULT 0;
    DECLARE v_equip_option_id_6			INT DEFAULT 0;
    DECLARE v_equip_option_value_6		SMALLINT DEFAULT 0;
	DECLARE v_equip_option_id_7			INT DEFAULT 0;
    DECLARE v_equip_option_value_7		SMALLINT DEFAULT 0;
	DECLARE v_skillbook_item_id			INT DEFAULT 0;
    DECLARE v_skillbook_percent			SMALLINT DEFAULT 0;
    DECLARE v_skillbook_lifetime		TINYINT DEFAULT 0;
    DECLARE v_skillbook_value			SMALLINT DEFAULT 0;
    DECLARE v_sell_password				INT DEFAULT 0;
    DECLARE v_register_date				BIGINT DEFAULT 0;
    DECLARE v_register_date2			DATETIME;
    DECLARE v_expire_date				BIGINT DEFAULT 0;
	DECLARE v_sell_price				INT DEFAULT 0;

	DECLARE v_final_item_qty	INT DEFAULT 0;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN

		

        SELECT fld_index, fld_db_idx, fld_user_idx, fld_char_idx, fld_nick, fld_char_class, fld_item_name_id, fld_item_group, fld_item_group_sub
				, fld_item_idx, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
                , fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value
                , fld_sell_password, UNIX_TIMESTAMP(fld_register_date), fld_register_date, UNIX_TIMESTAMP(fld_expire_date), fld_sell_price
		INTO v_index, v_db_idx, v_user_idx, v_char_idx, v_nick, v_char_class, v_item_name_id, v_item_group, v_item_group_sub
			, v_item_idx, v_count_item_id, v_count_item_type, v_count_item_qty
			, v_equip_item_id, v_equip_type, v_equip_quality_grade, v_equip_level, v_equip_exp, v_equip_enchant_level
            , v_equip_attr_id, v_equip_attr_value
            , v_equip_jewel_1, v_equip_jewel_2, v_equip_jewel_3, v_equip_jewel_4, v_equip_jewel_5, v_equip_jewel_6
            , v_equip_identify
            , v_equip_option_id_1, v_equip_option_value_1, v_equip_option_id_2, v_equip_option_value_2, v_equip_option_id_3, v_equip_option_value_3
            , v_equip_option_id_4, v_equip_option_value_4, v_equip_option_id_5, v_equip_option_value_5, v_equip_option_id_6, v_equip_option_value_6
            , v_equip_option_id_7, v_equip_option_value_7
            , v_skillbook_item_id, v_skillbook_percent, v_skillbook_lifetime, v_skillbook_value
            , v_sell_password, v_register_date, v_register_date2, v_expire_date, v_sell_price 
        FROM tbl_auction_items
        WHERE fld_user_idx = p_UserID AND fld_char_idx = p_CharID AND fld_index = p_AuctionID;


		IF 0 = ROW_COUNT() THEN
			SET v_result = 101;	
			LEAVE root;			
		END IF;		

		DELETE FROM tbl_auction_items
		WHERE fld_user_idx = p_UserID AND fld_index = p_AuctionID;
        
 		IF 0 = ROW_COUNT() THEN
			SET v_result = 102;	
			LEAVE root;			
		END IF;
		
		
		
		
		
		IF 0 < v_equip_item_id THEN
			CALL sp_mmo_notrans_charinvenequip_insert_reenter( p_UserID, p_CharID
								, v_item_idx, v_equip_item_id, v_equip_quality_grade, v_equip_level, v_equip_type, v_equip_exp, v_equip_enchant_level, v_equip_attr_id, v_equip_attr_value
								, v_equip_jewel_1, v_equip_jewel_2, v_equip_jewel_3, v_equip_jewel_4, v_equip_jewel_5, v_equip_jewel_6
                                , v_equip_identify
								, 0, v_equip_option_id_1, v_equip_option_value_1, 1, v_equip_option_id_2, v_equip_option_value_2
								, 2, v_equip_option_id_3, v_equip_option_value_3, 3, v_equip_option_id_4, v_equip_option_value_4
								, 4, v_equip_option_id_5, v_equip_option_value_5, 5, v_equip_option_id_6, v_equip_option_value_6
								, 6, v_equip_option_id_7, v_equip_option_value_7, 0, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		ELSEIF 0 < v_skillbook_item_id THEN
			
			CALL sp_mmo_notrans_charinvenskillbook_insert_reenter(p_UserID, p_CharID, v_item_idx, v_skillbook_item_id, v_skillbook_percent, v_skillbook_lifetime, v_skillbook_value, 0, v_result);
		ELSEIF 0 < v_count_item_id THEN
			
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, v_count_item_type, v_count_item_id, v_count_item_qty, v_result, v_final_item_qty);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;		
		END IF;
		
	END;
		
        
	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
	
	SELECT v_result, v_index, v_db_idx, v_user_idx, v_char_idx, v_nick, v_char_class, v_item_name_id, v_item_group, v_item_group_sub
			, v_item_idx, v_count_item_id, v_count_item_type, v_count_item_qty, v_final_item_qty
			, v_equip_item_id, v_equip_type, v_equip_quality_grade, v_equip_level, v_equip_exp, v_equip_enchant_level, v_item_group_sub
            , v_equip_attr_id, v_equip_attr_value
            , v_equip_jewel_1, v_equip_jewel_2, v_equip_jewel_3, v_equip_jewel_4, v_equip_jewel_5, v_equip_jewel_6
            , v_equip_identify
            , v_equip_option_id_1, v_equip_option_value_1, v_equip_option_id_2, v_equip_option_value_2, v_equip_option_id_3, v_equip_option_value_3
            , v_equip_option_id_4, v_equip_option_value_4, v_equip_option_id_5, v_equip_option_value_5, v_equip_option_id_6, v_equip_option_value_6
            , v_equip_option_id_7, v_equip_option_value_7
            , v_skillbook_item_id, v_skillbook_percent, v_skillbook_lifetime, v_skillbook_value
            , v_sell_password, v_register_date, v_register_date2, v_expire_date, v_sell_price;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_select_itemid` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_select_itemid`(
	IN	_useridx			BIGINT
,	IN	_charidx			BIGINT
,	IN	_auctionidx			BIGINT
)
    COMMENT '거래소 아이템 ID 얻기'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_count_item_id 		INT DEFAULT 0;
    DECLARE v_count_item_qty 		INT DEFAULT 0;
    DECLARE v_equip_item_id 		INT DEFAULT 0;    
    DECLARE v_skillbook_item_id 	INT DEFAULT 0;
    DECLARE v_sell_price			INT	DEFAULT 0;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_count_item_id, v_count_item_qty, v_equip_item_id, v_skillbook_item_id, v_sell_price;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
		
        SELECT fld_count_item_id, fld_count_item_qty, fld_equip_item_id, fld_skillbook_item_id, fld_sell_price INTO v_count_item_id, v_count_item_qty, v_equip_item_id, v_skillbook_item_id, v_sell_price
        FROM tbl_auction_items
        WHERE fld_index = _auctionidx AND fld_user_idx = _useridx AND fld_char_idx = _charidx;
        
		IF 0 = ROW_COUNT() THEN
			SET v_result = 101;	
			LEAVE root;
		END IF;

	END;
		
        
	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
    
	
	SELECT v_result, v_count_item_id, v_count_item_qty, v_equip_item_id, v_skillbook_item_id, v_sell_price;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_select_search_bybookmark` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_select_search_bybookmark`(
	IN	_char_idx			BIGINT
,	IN	_orderby			TINYINT
,	IN	_page				INT			
)
    COMMENT '거래소 즐겨찾기'
BEGIN
    DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    DECLARE	v_pageSize		INT DEFAULT 10;				
    DECLARE v_totalPage		INT DEFAULT 0;				
    DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    root:
	BEGIN
    
		IF _page < 1 THEN
			LEAVE root;
		END IF;

		
		IF 0 < _orderby THEN
			SELECT B.fld_item_name_id, B.fld_equip_enchant_level, B.fld_equip_identify, B.fld_sell_price, B.fld_count, B.fld_equip_quality_grade
				FROM 
					(SELECT element_id, element_value, element_extra
					 FROM char_auction_bookmark 
					 WHERE char_idx = _char_idx) AS A
				INNER JOIN 
					(SELECT fld_equip_quality_grade, fld_item_name_id, fld_equip_enchant_level, fld_equip_identify, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
					 FROM tbl_auction_items 
					 WHERE -- fld_char_idx <> _char_idx AND 
                     NOW() < fld_expire_date 
					 GROUP BY fld_item_name_id, fld_equip_enchant_level, fld_equip_identify, fld_equip_quality_grade) AS B
				ON A.element_id = B.fld_item_name_id AND A.element_value = B.fld_equip_enchant_level AND A.element_extra = B.fld_equip_identify
                ORDER BY fld_sell_price DESC;
               -- LIMIT v_startRow, v_pageSize;
		ELSE
        
			SELECT B.fld_item_name_id, B.fld_equip_enchant_level, B.fld_equip_identify, B.fld_sell_price, B.fld_count, B.fld_equip_quality_grade
				FROM 
					(SELECT element_id, element_value, element_extra
					 FROM char_auction_bookmark 
					 WHERE char_idx = _char_idx) AS A
				INNER JOIN 
					(SELECT fld_equip_quality_grade, fld_item_name_id, fld_equip_enchant_level, fld_equip_identify, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
					 FROM tbl_auction_items 
					 WHERE -- fld_char_idx <> _char_idx AND 
                     NOW() < fld_expire_date 
					 GROUP BY fld_item_name_id, fld_equip_enchant_level, fld_equip_identify, fld_equip_quality_grade) AS B
				ON A.element_id = B.fld_item_name_id AND A.element_value = B.fld_equip_enchant_level AND A.element_extra = fld_equip_identify
				ORDER BY B.fld_equip_quality_grade DESC;
               -- LIMIT v_startRow, v_pageSize;	
            
		END IF;
        
        SELECT COUNT(1) as Cnt INTO v_totalPage FROM char_auction_bookmark WHERE char_idx = _char_idx;
		SET v_totalPage = Ceil(v_totalPage / v_pageSize);                
		SELECT v_totalPage;

    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_select_search_byitemname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_select_search_byitemname`(
	IN	_char_idx			BIGINT
,	IN	_itemnameid			INT			
,	IN	_enchantlevel		INT			
,	IN	_identified			TINYINT
,	IN	_orderby			TINYINT
,	IN	_page				INT			
)
    COMMENT '검색'
BEGIN
    DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    DECLARE	v_pageSize		INT DEFAULT 10;				
    DECLARE v_totalPage		INT DEFAULT 0;				
    DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    root:
	BEGIN
    
		IF _page < 1 THEN
			LEAVE root;
		END IF;
        
        IF _itemnameid <= 0 THEN
			LEAVE root;
        END IF;



		
		IF 0 < _orderby THEN -- 가격 오름차순
			SELECT SQL_CALC_FOUND_ROWS
					fld_index, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
					, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
					, fld_equip_attr_id, fld_equip_attr_value
					, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                    , fld_equip_identify
					, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
					, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
					, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
					, fld_equip_option_id_7, fld_equip_option_value_7
					, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
					, fld_sell_price, fld_sell_password, UNIX_TIMESTAMP(fld_expire_date) AS fld_expire_date
			FROM tbl_auction_items
			
			WHERE -- fld_char_idx <> _char_idx AND 
            now() < fld_expire_date AND fld_item_name_id = _itemnameid AND fld_equip_enchant_level = _enchantlevel AND fld_equip_identify = _identified
			ORDER BY fld_sell_price 
			LIMIT v_startRow, v_pageSize;
			
			SET v_totalPage = Ceil(FOUND_ROWS() / v_pageSize);                
			SELECT v_totalPage;
		ELSE -- 가격 내림차순
			SELECT SQL_CALC_FOUND_ROWS 
					fld_index, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
					, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
					, fld_equip_attr_id, fld_equip_attr_value
					, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                    , fld_equip_identify
					, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
					, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
					, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
					, fld_equip_option_id_7, fld_equip_option_value_7
					, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
					, fld_sell_price, fld_sell_password, UNIX_TIMESTAMP(fld_expire_date) AS fld_expire_date
			FROM tbl_auction_items
			
			WHERE -- fld_char_idx <> _char_idx AND 
            now() < fld_expire_date AND fld_item_name_id = _itemnameid AND fld_equip_enchant_level = _enchantlevel AND fld_equip_identify = _identified
			ORDER BY fld_sell_price desc 
			LIMIT v_startRow, v_pageSize;
			
			SET v_totalPage = Ceil(FOUND_ROWS() / v_pageSize);                
			SELECT v_totalPage;
		END IF;

    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_select_search_byuserid` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_select_search_byuserid`(
	IN	_useridx			BIGINT
,	IN	_charclass			INT			
,	IN	_orderby			TINYINT		
,	IN	_page				SMALLINT	
)
    COMMENT 'UserId로 검색하기'
BEGIN

    DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    DECLARE	v_pageSize		INT DEFAULT 10;				
	DECLARE v_totalPage		INT DEFAULT 0;				
    DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    root:
	BEGIN
    
		IF _page < 1 THEN
			LEAVE root;
		END IF;
    
    
		IF 0 < _orderby THEN
			SELECT SQL_CALC_FOUND_ROWS
					fld_index, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
					, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
					, fld_equip_attr_id, fld_equip_attr_value
					, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                    , fld_equip_identify
					, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
					, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
					, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
					, fld_equip_option_id_7, fld_equip_option_value_7
					, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
					, fld_sell_price, fld_sell_password, UNIX_TIMESTAMP(fld_expire_date) AS fld_expire_date
			FROM tbl_auction_items
			WHERE now() < fld_expire_date AND fld_user_idx = _useridx AND (fld_char_class = _charclass OR fld_char_class = 0)
			ORDER BY fld_sell_price
			LIMIT v_startRow, v_pageSize;
		
			SET v_totalPage = Ceil(FOUND_ROWS() / v_pageSize);                
			SELECT v_totalPage;        
		ELSE
        
			SELECT SQL_CALC_FOUND_ROWS
					fld_index, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
					, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
					, fld_equip_attr_id, fld_equip_attr_value
					, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                    , fld_equip_identify
					, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
					, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
					, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
					, fld_equip_option_id_7, fld_equip_option_value_7
					, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
					, fld_sell_price, fld_sell_password, UNIX_TIMESTAMP(fld_expire_date) AS fld_expire_date
			FROM tbl_auction_items
			WHERE now() < fld_expire_date AND fld_user_idx = _useridx AND (fld_char_class = _charclass OR fld_char_class = 0)
			ORDER BY fld_sell_price desc 
			LIMIT v_startRow, v_pageSize;
		
			SET v_totalPage = Ceil(FOUND_ROWS() / v_pageSize);                
			SELECT v_totalPage;        
        END IF;
    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_select_search_mine` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_select_search_mine`(
	IN	_useridx			BIGINT
,	IN	_charidx			BIGINT
,	IN	_page				SMALLINT
)
    COMMENT '내가 올린 아이템 검색하기'
BEGIN
    -- DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    -- DECLARE	v_pageSize		INT DEFAULT 10;				 total: 30 개 라서 페이지 구분 무의미
    DECLARE	v_searchPage	INT DEFAULT 0;
    DECLARE v_totalPage		INT DEFAULT 0;				
    -- DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    DECLARE	v_pageSize		INT DEFAULT 30;
    DECLARE v_startRow		INT DEFAULT 0;
    
    DECLARE v_allitemqty 	INT DEFAULT 0;				
    DECLARE v_sellexpireqty	INT DEFAULT 0;				
    DECLARE v_sellitemqty	INT DEFAULT 0;				
    
    root:
	BEGIN
    
		-- IF _page < 1 THEN
		-- 	LEAVE root;
		-- END IF;
        
        
        SELECT count(fld_user_idx) INTO v_sellexpireqty 
        FROM tbl_auction_items
        WHERE fld_user_idx = _useridx AND fld_char_idx = _charidx AND fld_expire_date < now();
        
        
		SELECT SQL_CALC_FOUND_ROWS
				fld_index, fld_user_idx, fld_nick, fld_count_item_id, fld_count_item_type, fld_count_item_qty
				, fld_equip_item_id, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
				, fld_equip_attr_id, fld_equip_attr_value
				, fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                , fld_equip_identify
				, fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
				, fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
				, fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
				, fld_equip_option_id_7, fld_equip_option_value_7
				, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value	
				, fld_sell_price, fld_sell_password, UNIX_TIMESTAMP(fld_expire_date) AS fld_expire_date
		FROM tbl_auction_items
		WHERE fld_user_idx = _useridx AND fld_char_idx = _charidx
		ORDER BY fld_expire_date;
		-- LIMIT v_startRow, v_pageSize;
		
        SET v_allitemqty = FOUND_ROWS();
		SET v_totalPage = Ceil(v_allitemqty / v_pageSize);                
        SET v_sellitemqty = v_allitemqty - v_sellexpireqty;
                
		SELECT v_totalPage, v_allitemqty, v_sellitemqty, v_sellexpireqty;
  
    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auctionitems_select_sellprice` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auctionitems_select_sellprice`(
	IN	_auctionidx			BIGINT
)
    COMMENT '거래소 아이템 판매 가격 얻기'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_sell_price	INT DEFAULT 0;
    DECLARE v_sell_password INT DEFAULT 0;
    DECLARE v_char_class	INT DEFAULT 0;
    DECLARE v_equip_item_id	INT DEFAULT 0;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
        SELECT v_result, v_sell_price, v_sell_password, v_char_class, v_equip_item_id;
	END;	
        
        
	root:
	BEGIN
		
        SELECT fld_sell_price, fld_sell_password, fld_char_class, fld_equip_item_id INTO v_sell_price, v_sell_password, v_char_class, v_equip_item_id
        FROM tbl_auction_items
        WHERE fld_index = _auctionidx;

		IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;	
			LEAVE root;
		END IF;

	END;
	
    
	
	SELECT v_result, v_sell_price, v_sell_password, v_char_class, v_equip_item_id;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auction_countitem_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auction_countitem_select`(
	IN	p_CharID				BIGINT

,	IN 	p_MaterialItemID		INT
)
    COMMENT '거래소 갯수아이템 조회'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, fld_count, fld_sell_price;
	END;
	
	root:
	BEGIN
		SELECT MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
						 FROM tbl_auction_items 
						 WHERE -- fld_char_idx <> _char_idx AND 
                         NOW() < fld_expire_date AND fld_item_name_id = p_MaterialItemID;       
    END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auction_grouplist_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auction_grouplist_select`(
	IN	_char_idx			BIGINT
-- ,	IN	_orderby			TINYINT
,	IN	_flag				TINYINT
,	IN	_page				INT
,	IN	_groupid			INT
,	IN	_subgroupid				INT
)
    COMMENT '거래소 목록'
BEGIN
    DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    DECLARE	v_pageSize		INT DEFAULT 10;				
    DECLARE v_totalPage		INT DEFAULT 0;				
    DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    root:
	BEGIN
    
		IF _page < 1 THEN
			LEAVE root;
		END IF;
		
        IF 1 = _flag THEN -- groupid 조회
		--
			--
            IF 999 = _subgroupid THEN
				SELECT fld_item_group, fld_item_group_sub, fld_item_name_id, fld_sell_price, fld_count
					FROM 
						(SELECT fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
						 FROM tbl_auction_items 
						 WHERE -- fld_char_idx <> _char_idx AND 
                         NOW() < fld_expire_date AND fld_item_group = _groupid -- AND fld_item_group_sub = _subgroupid
						 GROUP BY fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id) AS B
						 
					ORDER BY fld_equip_item_grade desc, fld_item_group, fld_item_group_sub
					LIMIT v_startRow, v_pageSize;
				
				SELECT COUNT(1) as Cnt INTO v_totalPage 
					FROM 
						(SELECT fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
						 FROM tbl_auction_items 
						 WHERE -- fld_char_idx <> _char_idx AND
                         NOW() < fld_expire_date AND fld_item_group = _groupid -- AND fld_item_group_sub = _subgroupid
						 GROUP BY fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id) AS B;
            ELSE
				SELECT fld_item_group, fld_item_group_sub, fld_item_name_id, fld_sell_price, fld_count
					FROM 
						(SELECT fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
						 FROM tbl_auction_items 
						 WHERE -- fld_char_idx <> _char_idx AND 
                         NOW() < fld_expire_date AND fld_item_group = _groupid AND fld_item_group_sub = _subgroupid
						 GROUP BY fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id) AS B
						 
					ORDER BY fld_equip_item_grade desc, fld_item_group, fld_item_group_sub
					LIMIT v_startRow, v_pageSize;
				
				SELECT COUNT(1) as Cnt INTO v_totalPage 
					FROM 
						(SELECT fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
						 FROM tbl_auction_items 
						 WHERE -- fld_char_idx <> _char_idx AND 
                         NOW() < fld_expire_date AND fld_item_group = _groupid AND fld_item_group_sub = _subgroupid
						 GROUP BY fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id) AS B;
			END IF;
			-- 
					 
			SET v_totalPage = Ceil(v_totalPage / v_pageSize);                
			SELECT v_totalPage;
        --
        ELSE
		-- 
			SELECT fld_item_group, fld_item_group_sub, fld_item_name_id, fld_sell_price, fld_count
				FROM 
					(SELECT fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
					 FROM tbl_auction_items 
					 WHERE -- fld_char_idx <> _char_idx AND 
                     NOW() < fld_expire_date 
					 GROUP BY fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id) AS B
					 
				ORDER BY fld_equip_item_grade desc, fld_item_group, fld_item_group_sub
				LIMIT v_startRow, v_pageSize;
			
			SELECT COUNT(1) as Cnt INTO v_totalPage 
				FROM 
					(SELECT fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
					 FROM tbl_auction_items 
					 WHERE -- fld_char_idx <> _char_idx AND 
                     NOW() < fld_expire_date 
					 GROUP BY fld_equip_item_grade, fld_item_group, fld_item_group_sub, fld_item_name_id) AS B;
			-- 
					 
			SET v_totalPage = Ceil(v_totalPage / v_pageSize);                
			SELECT v_totalPage;
		END IF;
        
    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_auction_itemlist_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_auction_itemlist_select`(
	IN	_char_idx			BIGINT
-- ,	IN	_orderby			TINYINT
-- ,	IN	_flag				TINYINT
,	IN	_page				INT
,	IN	_itemid				INT
)
    COMMENT '거래소 장비아이템 목록'
BEGIN
    DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    DECLARE	v_pageSize		INT DEFAULT 10;				
    DECLARE v_totalPage		INT DEFAULT 0;				
    DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    root:
	BEGIN
    
		IF _page < 1 THEN
			LEAVE root;
		END IF;
   
		-- 
		SELECT fld_item_name_id, fld_equip_enchant_level, fld_equip_identify, fld_sell_price, fld_count
			FROM 
				(SELECT fld_item_name_id, fld_equip_enchant_level, fld_equip_identify, MIN(fld_sell_price) AS fld_sell_price, COUNT(1) AS fld_count 
				 FROM tbl_auction_items 
				 WHERE -- fld_char_idx <> _char_idx AND 
                 NOW() < fld_expire_date AND fld_item_name_id = _itemid
				 GROUP BY fld_item_name_id, fld_equip_enchant_level, fld_equip_identify) AS B
				 
			ORDER BY fld_equip_enchant_level
			LIMIT v_startRow, v_pageSize;
		
		SELECT COUNT(1) as Cnt INTO v_totalPage 
			FROM tbl_auction_items 
				 WHERE -- fld_char_idx <> _char_idx AND 
                 NOW() < fld_expire_date AND fld_item_name_id = _itemid
				 GROUP BY fld_item_name_id, fld_equip_enchant_level, fld_equip_identify;
		-- 
				 
		SET v_totalPage = Ceil(v_totalPage / v_pageSize);                
		SELECT v_totalPage;
        
    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_buypackagemission_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_buypackagemission_insert`(
	IN	_worldidx 		BIGINT
,	IN	_world_useridx	BIGINT
,	IN	_world_charidx	BIGINT
,	IN	_packageidx		BIGINT
,	IN	_missionid		INT
)
    COMMENT '패키지 미션 정보 등록'
BEGIN
    DECLARE errno INT DEFAULT 0;
	DECLARE result INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			errno = MYSQL_ERRNO;
			SET result := (errno * -1);
		
		SELECT result;
	END;

	INSERT INTO tbl_buy_package_mission (package_idx, world_idx, world_user_idx, world_char_idx, mission_id, mission_value, is_complete, update_date)
    VALUES(_packageidx, _worldidx, _world_useridx, _world_charidx, _missionid, 0, 0, NOW());
    
    IF ROW_COUNT() <= 0 THEN 
		SET result = 100;
    END IF; 
    
    SELECT result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_buypackagemission_insert30` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_buypackagemission_insert30`(
	IN	_worldidx 		BIGINT
,	IN	_world_useridx	BIGINT
,	IN	_world_charidx	BIGINT
,	IN	_packageidx		BIGINT
,	IN	_missionid1		INT,	IN	_missionmaxvalue1		INT
,	IN	_missionid2		INT,	IN	_missionmaxvalue2		INT
,	IN	_missionid3		INT,	IN	_missionmaxvalue3		INT
,	IN	_missionid4		INT,	IN	_missionmaxvalue4		INT
,	IN	_missionid5		INT,	IN	_missionmaxvalue5		INT
,	IN	_missionid6		INT,	IN	_missionmaxvalue6		INT
,	IN	_missionid7		INT,	IN	_missionmaxvalue7		INT
,	IN	_missionid8		INT,	IN	_missionmaxvalue8		INT
,	IN	_missionid9		INT,	IN	_missionmaxvalue9		INT
,	IN	_missionid10	INT,	IN	_missionmaxvalue10		INT
,	IN	_missionid11	INT,	IN	_missionmaxvalue11		INT
,	IN	_missionid12	INT,	IN	_missionmaxvalue12		INT
,	IN	_missionid13	INT,	IN	_missionmaxvalue13		INT
,	IN	_missionid14	INT,	IN	_missionmaxvalue14		INT
,	IN	_missionid15	INT,	IN	_missionmaxvalue15		INT
,	IN	_missionid16	INT,	IN	_missionmaxvalue16		INT
,	IN	_missionid17	INT,	IN	_missionmaxvalue17		INT
,	IN	_missionid18	INT,	IN	_missionmaxvalue18		INT
,	IN	_missionid19	INT,	IN	_missionmaxvalue19		INT
,	IN	_missionid20	INT,	IN	_missionmaxvalue20		INT
,	IN	_missionid21	INT,	IN	_missionmaxvalue21		INT
,	IN	_missionid22	INT,	IN	_missionmaxvalue22		INT
,	IN	_missionid23	INT,	IN	_missionmaxvalue23		INT
,	IN	_missionid24	INT,	IN	_missionmaxvalue24		INT
,	IN	_missionid25	INT,	IN	_missionmaxvalue25		INT
,	IN	_missionid26	INT,	IN	_missionmaxvalue26		INT
,	IN	_missionid27	INT,	IN	_missionmaxvalue27		INT
,	IN	_missionid28	INT,	IN	_missionmaxvalue28		INT
,	IN	_missionid29	INT,	IN	_missionmaxvalue29		INT
,	IN	_missionid30	INT,	IN	_missionmaxvalue30		INT
)
    COMMENT '패키지 미션 정보 30개  등록'
BEGIN
    DECLARE errno INT DEFAULT 0;
	DECLARE result INT DEFAULT 0;
    
    DECLARE v_insert_cnt_1	INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			errno = MYSQL_ERRNO;
			SET result := (errno * -1);
		ROLLBACK;
		
		SELECT result, v_insert_cnt_1;
	END;


	root:
	BEGIN
    
		
		CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_buypackagemission(user_idx BIGINT, char_idx BIGINT, mission_id INT, mission_value_max INT);
        
        DELETE FROM tbl_temp_buypackagemission WHERE user_idx = _world_useridx and char_idx = _world_charidx;
		
		INSERT INTO tbl_temp_buypackagemission values(_world_useridx, _world_charidx, _missionid1, _missionmaxvalue1), (_world_useridx, _world_charidx, _missionid2, _missionmaxvalue2),
													(_world_useridx, _world_charidx, _missionid3, _missionmaxvalue3), (_world_useridx, _world_charidx, _missionid4, _missionmaxvalue4),
                                                    (_world_useridx, _world_charidx, _missionid5, _missionmaxvalue5), (_world_useridx, _world_charidx, _missionid6, _missionmaxvalue6),
                                                    (_world_useridx, _world_charidx, _missionid7, _missionmaxvalue7), (_world_useridx, _world_charidx, _missionid8, _missionmaxvalue8),
                                                    (_world_useridx, _world_charidx, _missionid9, _missionmaxvalue9), (_world_useridx, _world_charidx, _missionid10, _missionmaxvalue10),
                                                    (_world_useridx, _world_charidx, _missionid11, _missionmaxvalue11), (_world_useridx, _world_charidx, _missionid12, _missionmaxvalue12),
                                                    (_world_useridx, _world_charidx, _missionid13, _missionmaxvalue13), (_world_useridx, _world_charidx, _missionid14, _missionmaxvalue14),
                                                    (_world_useridx, _world_charidx, _missionid15, _missionmaxvalue15), (_world_useridx, _world_charidx, _missionid16, _missionmaxvalue16),
                                                    (_world_useridx, _world_charidx, _missionid17, _missionmaxvalue17), (_world_useridx, _world_charidx, _missionid18, _missionmaxvalue18),
                                                    (_world_useridx, _world_charidx, _missionid19, _missionmaxvalue19), (_world_useridx, _world_charidx, _missionid20, _missionmaxvalue20),
                                                    (_world_useridx, _world_charidx, _missionid21, _missionmaxvalue21), (_world_useridx, _world_charidx, _missionid22, _missionmaxvalue22),
                                                    (_world_useridx, _world_charidx, _missionid23, _missionmaxvalue23), (_world_useridx, _world_charidx, _missionid24, _missionmaxvalue24),
                                                    (_world_useridx, _world_charidx, _missionid25, _missionmaxvalue25), (_world_useridx, _world_charidx, _missionid26, _missionmaxvalue26),
                                                    (_world_useridx, _world_charidx, _missionid27, _missionmaxvalue27), (_world_useridx, _world_charidx, _missionid28, _missionmaxvalue28),
                                                    (_world_useridx, _world_charidx, _missionid29, _missionmaxvalue29), (_world_useridx, _world_charidx, _missionid30, _missionmaxvalue30);

    
		START TRANSACTION;
        
		subroot:
        BEGIN    

			INSERT INTO tbl_buy_package_mission (package_idx, world_idx, world_user_idx, world_char_idx, mission_id, mission_value, mission_max_value, is_complete, update_date)
				SELECT _packageidx, _worldidx, _world_useridx, _world_charidx, mission_id, 0, mission_value_max, 0, NOW() 
                FROM tbl_temp_buypackagemission WHERE user_idx = _world_useridx AND char_idx = _world_charidx AND mission_id > 0;
			SET v_insert_cnt_1 = ROW_COUNT();
            
			IF v_insert_cnt_1 <= 0 THEN 
				SET result = 101;
				LEAVE subroot;
			END IF;
		END;
        
		IF result != 0 THEN
			ROLLBACK;
		ELSE
			COMMIT;
		END IF;
	END;
    
	
	DELETE FROM tbl_temp_buypackagemission WHERE user_idx = _world_useridx and char_idx = _world_charidx;
	
    SELECT result, v_insert_cnt_1;	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_buypackage_delete_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_buypackage_delete_all`(
	IN	_worldid	BIGINT
,	IN	_useridx	BIGINT
,	IN	_packageidx	BIGINT
)
    COMMENT 'post / friend 존재 확인'
BEGIN	
	
    DELETE FROM tbl_buy_package WHERE idx = _packageidx;
    
    DELETE FROM tbl_buy_package_mission WHERE world_idx = _worldid and world_user_idx = _useridx and package_idx = _packageidx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_buypackage_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_buypackage_insert`(
	IN	_worldidx 		BIGINT
,	IN	_world_useridx	BIGINT
,	IN	_world_charidx	BIGINT
,	IN	_packageid		INT
,	IN	_max_count		SMALLINT
)
    COMMENT '패키지 정보 등록'
BEGIN
	DECLARE errno INT DEFAULT 0;
	DECLARE result INT DEFAULT 0;
    DECLARE package_idx BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			errno = MYSQL_ERRNO;
			SET result := (errno * -1);
		
        ROLLBACK;
        
		SELECT result, package_idx;
	END;

	START TRANSACTION;	
	
	root:
	BEGIN

    
		UPDATE tbl_buy_package SET is_used = 1 WHERE world_idx = _worldidx and _world_useridx = world_user_idx and world_char_idx = _world_charidx and packageid = _packageid;
        
		INSERT INTO tbl_buy_package (world_idx, world_user_idx, world_char_idx, packageid, max_count, cur_count, get_reward, buy_date)
		VALUES(_worldidx, _world_useridx, _world_charidx, _packageid, _max_count, 0, 0, NOW());
		
		IF ROW_COUNT() <= 0 THEN 
			SET result = 100;
            LEAVE root;
		END IF; 
		
		SELECT LAST_INSERT_ID() INTO package_idx;
		
    END;
    
	
	IF result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
    SELECT result, package_idx;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_buypackage_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_buypackage_select`(
	IN	_world_useridx	BIGINT
,	IN	_world_charidx	BIGINT
)
    COMMENT '상점 패키지 정보 로드'
BEGIN

	
	SELECT idx, world_char_idx, packageid, max_count, cur_count, get_reward, UNIX_TIMESTAMP(buy_date) as buy_date, UNIX_TIMESTAMP(complete_date) as complete_date 
    FROM tbl_buy_package 
    WHERE _world_useridx = world_user_idx and is_used = 0;
		
	
	SELECT package_idx, world_char_idx, mission_id, mission_value, is_complete, 
			UNIX_TIMESTAMP(update_date) as update_date, UNIX_TIMESTAMP(value_update_date) AS value_update_date,
            IF(0 < DATEDIFF(NOW(), value_update_date), true, false) AS new_day
    FROM tbl_buy_package_mission 
    WHERE _world_useridx = world_user_idx and (world_char_idx = _world_charidx OR world_char_idx = 0);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `asp_mmo_buypackage_update_mission` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `asp_mmo_buypackage_update_mission`(
	IN	p_PackageID					BIGINT
,	IN	p_PackageValue				SMALLINT		
,	IN	p_PackageGetReward			TINYINT			
,	IN	p_PackageCompleteDate		BIGINT			
,	IN	p_MissionID					INT				
,	IN	p_MissionValue				INT				
,	IN	p_MissionIsComplete			TINYINT			
,	IN	p_MissionGetRewardDate 		BIGINT			
,	IN 	p_MissionValueUpdateDate	BIGINT			
)
    COMMENT '미션 패키지 달성 정보 수정'
BEGIN
	
    DECLARE v_errno INT DEFAULT 0;
	DECLARE v_result INT DEFAULT 0;
    DECLARE v_get_reward TINYINT DEFAULT 1;	
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result;
	END;	
	
	
    START TRANSACTION;	
	
	root:
	BEGIN
        
        IF p_PackageValue != 0 THEN
			UPDATE tbl_buy_package 
            SET cur_count = p_PackageValue, get_reward = @get_reward := get_reward, get_reward = p_PackageGetReward, complete_date = FROM_UNIXTIME(p_PackageCompleteDate) 
            WHERE idx = p_PackageID;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
				LEAVE root;
			END IF;
            
            SET v_get_reward = @get_reward;
            IF 0 < p_PackageGetReward AND 0 <> v_get_reward THEN
				SET v_result = 1011;	
				LEAVE root;				
            END IF;            
            
        END IF;
        
        
        IF p_MissionID != 0 THEN
			UPDATE tbl_buy_package_mission 
            SET mission_value = p_MissionValue, is_complete = @is_complete := is_complete, is_complete = p_MissionIsComplete, update_date = FROM_UNIXTIME(p_MissionGetRewardDate), value_update_date = FROM_UNIXTIME(p_MissionValueUpdateDate)
            WHERE package_idx = p_PackageID AND mission_id = p_MissionID;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1002;
				LEAVE root;
			END IF;
            
            SET v_get_reward = @is_complete;
            IF 0 < p_MissionIsComplete AND 0 <> v_get_reward THEN
				SET v_result = 1012;	
				LEAVE root;				
            END IF;
        END IF;
	END;
    	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ausp_eventserverkillprogress_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `ausp_eventserverkillprogress_select`(
	IN	p_WorldID		INT
)
    COMMENT '서버킬이벤트 진행정보 로드.'
BEGIN

	SELECT eventid, event_sub_id, `count`, maxcount, nicname, UNIX_TIMESTAMP(expire_date) as expire_date
    FROM tbl_event_serverkill_progress 
    WHERE world_idx = p_WorldID;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ausp_eventserverkillprogress_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `ausp_eventserverkillprogress_update`(
	IN	p_WorldID		INT
,	IN	p_EventID		INT
,	IN	p_Event_sub_ID	INT
,	IN	p_Count			INT	
,	IN	p_MaxCount		INT	
,	IN	p_Nicname		VARCHAR(64)
, 	IN 	p_ExpireDate	BIGINT
)
    COMMENT '서버킬이벤트 진행정보 저장.'
BEGIN

	INSERT INTO tbl_event_serverkill_progress (world_idx, eventid, event_sub_id, `count`, maxcount, nicname, expire_date)
									VALUES (p_WorldID, p_EventID, p_Event_sub_ID, p_Count, p_MaxCount, p_Nicname, FROM_UNIXTIME(p_ExpireDate))
	ON DUPLICATE KEY UPDATE `count` = p_Count, nicname = p_Nicname, expire_date = FROM_UNIXTIME(p_ExpireDate);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_chat_delete_chat_msg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_chat_delete_chat_msg`(
	IN	p_guild_idx		BIGINT
)
    COMMENT '길드 채팅 정보 삭제'
BEGIN
	DELETE
    FROM guild_chat 
    WHERE guild_idx = p_guild_idx;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_chat_select_chat_msg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_chat_select_chat_msg`(
	IN p_guild_idx		BIGINT
)
    COMMENT '길드 채팅 정보'
BEGIN
	SELECT gc.chat_idx, gc.member_nick, gc.leader_char, gc.member_grade, gc.chat_msg, UNIX_TIMESTAMP(gc.chat_date) as chat_time_sec
	FROM guild_chat gc
	WHERE gc.guild_idx = p_guild_idx ORDER BY gc.chat_order ASC;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_chat_select_guild_members` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_chat_select_guild_members`(
	IN	p_guild_idx		BIGINT
)
BEGIN
	
	SELECT user_idx, nickname, member_grade
    FROM guild_member
    WHERE guild_idx = p_guild_Idx;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_chat_select_user_guildinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_chat_select_user_guildinfo`(
	IN	p_char_idx		BIGINT
)
BEGIN
	
	SELECT g.guild_idx, g.name as guild_name, g.mark_id, gm.member_grade
    FROM guild_member gm INNER JOIN guild g ON g.guild_idx = gm.guild_idx
    WHERE gm.char_idx = p_char_idx;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_chat_update_chat_msg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_chat_update_chat_msg`(
	IN	p_guild_idx		BIGINT,
    IN	p_new			BOOLEAN,
    IN	p_chat_idx		SMALLINT,
    IN	p_chat_order	SMALLINT,
    IN	p_member_nick	VARCHAR(30),
    IN	p_leader_char	INT,
    IN	p_member_grade	TINYINT,
    IN	p_chat_msg		VARCHAR(61),
    IN	p_chat_date		BIGINT
)
    COMMENT '길드 채팅 정보 업데이트'
BEGIN
	IF true = p_new THEN
		INSERT INTO guild_chat (guild_idx, chat_idx, chat_order, member_nick, leader_char, member_grade, chat_msg, chat_date)
        VALUES (p_guild_idx, p_chat_idx, p_chat_order, p_member_nick, p_leader_char, p_member_grade, p_chat_msg, FROM_UNIXTIME(p_chat_date))
        ON DUPLICATE KEY UPDATE chat_order = p_chat_order, member_nick = p_member_nick, leader_char = p_leader_char,
								member_grade = p_member_grade, chat_msg = p_chat_msg,
                                chat_date = FROM_UNIXTIME(p_chat_date);
    ELSE
		INSERT INTO guild_chat (guild_idx, chat_idx, chat_order, member_nick, leader_char, member_grade, chat_msg, chat_date)
        VALUES (p_guild_idx, p_chat_idx, p_chat_order, p_member_nick, p_leader_char, p_member_grade, p_chat_msg, FROM_UNIXTIME(p_chat_date))
        ON DUPLICATE KEY UPDATE chat_order = p_chat_order;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_accept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_accept`(
	IN	_guildidx 			BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_sender_guildidx  	BIGINT
)
    COMMENT '동맹 길드 수락.'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    DECLARE p_masterGrade		INT;
    DECLARE v_target_useridx	BIGINT DEFAULT 0;
    DECLARE v_target_charidx	BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
		-- 동맹/적대 테이블 중복 체크
		IF EXISTS(SELECT 1 FROM guild_ally_hostile WHERE guild_idx = _guildidx AND target_guild_idx = _sender_guildidx) THEN 
			SET v_result = 100;		
            LEAVE root;
        END IF;
    
		IF NOT EXISTS(SELECT 1 FROM guild_apply_alliance WHERE guild_idx = _guildidx AND apply_guild_idx = _sender_guildidx) THEN -- 동맹신청 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        -- 
        INSERT INTO guild_ally_hostile(guild_idx, target_guild_idx, ally_hostile)
			VALUES (_sender_guildidx, _guildidx, 0);
            
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
        
        -- 
        INSERT INTO guild_ally_hostile(guild_idx, target_guild_idx, ally_hostile)
			VALUES (_guildidx, _sender_guildidx, 0);
            
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 103; -- // SQL 입력 실패
            LEAVE root;
		END IF;
        
        DELETE FROM `guild_apply_alliance` WHERE guild_idx = _guildidx AND apply_guild_idx = _sender_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 104; -- // SQL 입력 실패
            LEAVE root;
		END IF;
        
        -- 
        SET p_masterGrade := 3;

		SELECT B.user_idx, B.char_idx INTO
			v_target_useridx, v_target_charidx
		FROM guild A 
			INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx
		WHERE A.guild_idx = _guildidx
		AND B.member_grade = p_masterGrade;
        
		-- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
		IF 0 < FOUND_ROWS() THEN 
			DELETE FROM user_reddot WHERE user_idx = v_target_useridx AND char_idx  = v_target_charidx AND type_id = 7 AND element_value = _sender_guildidx;
		END IF;
        
        -- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			SELECT user_idx, char_idx, 8, _sender_guildidx FROM guild_member WHERE guild_idx = _guildidx
		ON DUPLICATE KEY UPDATE type_id = 8, element_value = _sender_guildidx;
        
        -- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			SELECT user_idx, char_idx, 8, _guildidx FROM guild_member WHERE guild_idx = _sender_guildidx
		ON DUPLICATE KEY UPDATE type_id = 8, element_value = _guildidx;
        
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_delete`(
	IN	_guildidx 	BIGINT
    
,	IN	_target_guildidx  	BIGINT
)
    COMMENT '동맹 길드 삭제.'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    DECLARE v_ally_hostile		TINYINT DEFAULT 0;
    DECLARE v_guildName			VARCHAR(50)	DEFAULT '';
    DECLARE v_markID			INT DEFAULT 0;
    DECLARE v_masterNick		VARCHAR(30) DEFAULT '';
    -- DECLARE v_masterCharType	INT DEFAULT 0;
    -- DECLARE v_masterCharLevel	INT DEFAULT 0;
        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		SELECT ally_hostile INTO v_ally_hostile FROM guild_ally_hostile WHERE guild_idx = _guildidx AND target_guild_idx = _target_guildidx;
        IF FOUND_ROWS() = 0 THEN -- 동맹길드 정보에 존재하지 않는 길드
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        IF v_ally_hostile <> 0 THEN -- 타겟길드와는 동맹길드 아님. (적대 길드)
			SET v_result = 102;
            LEAVE root;
        END IF;
        
        DELETE FROM guild_ally_hostile WHERE guild_idx = _guildidx AND target_guild_idx = _target_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 103; -- // SQL 입력 실패
            LEAVE root;
		END IF;
        
        DELETE FROM guild_ally_hostile WHERE guild_idx = _target_guildidx AND target_guild_idx = _guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 104; -- // SQL 입력 실패
            LEAVE root;
		END IF;
		
		-- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
		DELETE A 
			FROM user_reddot A
			INNER JOIN (SELECT user_idx, char_idx FROM guild_member WHERE guild_idx = _target_guildidx) B
			ON A.user_idx = B.user_idx AND A.char_idx = B.char_idx
			WHERE A.type_id = 8 AND element_value = _guildidx;
		
        -- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
		DELETE A 
			FROM user_reddot A
			INNER JOIN (SELECT user_idx, char_idx FROM guild_member WHERE guild_idx = _guildidx) B
			ON A.user_idx = B.user_idx AND A.char_idx = B.char_idx
			WHERE A.type_id = 8 AND element_value = _target_guildidx;
		
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_insert`(
	IN	p_GuildID			BIGINT	
,	IN 	p_AllyGuildName		VARCHAR(64)
, 	IN 	p_MaxAllyGuild		INT 	
)
    COMMENT '동맹 길드 등록 신청.'
BEGIN    
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 1;
	
	DECLARE v_AllyGuildID 		BIGINT DEFAULT 0;
    DECLARE v_AllyGuildName 	VARCHAR(50) DEFAULT '';
    DECLARE v_AllyGuildMarkID 	INT DEFAULT 0;
    DECLARE v_AllyGuildMasterName 	VARCHAR(30) DEFAULT '';
	DECLARE v_Allyguild_qty 	INT DEFAULT 0;
    DECLARE v_ally_hostile		TINYINT DEFAULT 0;
    DECLARE p_masterGrade		INT;
    
    DECLARE v_target_useridx	BIGINT DEFAULT 0;
    DECLARE v_target_charidx	BIGINT DEFAULT 0;
   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_result, v_AllyGuildID, v_AllyGuildName, v_AllyGuildMarkID, v_AllyGuildMasterName;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
    
		SET p_masterGrade := 3;

		SELECT A.guild_idx, A.`name`, A.mark_id, B.nickname, B.user_idx, B.char_idx INTO
			v_AllyGuildID, v_AllyGuildName, v_AllyGuildMarkID, v_AllyGuildMasterName, v_target_useridx, v_target_charidx
		FROM guild A 
			INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx
		WHERE A.`name` collate utf8mb4_unicode_ci = p_AllyGuildName
		AND B.member_grade = p_masterGrade;
        
        IF 0 = ROW_COUNT() THEN -- 존재하지 않는 target길드
			SET v_result = 101;
			LEAVE root;
		END IF;
        
        --
        SELECT ally_hostile INTO v_ally_hostile FROM guild_ally_hostile WHERE guild_idx = p_GuildID AND target_guild_idx = v_AllyGuildID;
        IF 0 < ROW_COUNT() THEN
        
			IF 0 < v_ally_hostile THEN -- 이미 적대길드
				SET v_result = 102;
			ELSE
                SET v_result = 103;		-- 이미 동맹길드
			END IF;
            
			LEAVE root;
		END IF;
        
        IF EXISTS(SELECT 1 FROM guild_apply_alliance WHERE guild_idx = p_GuildID AND apply_guild_idx = v_AllyGuildID) THEN
        BEGIN
			SET v_result = 106;		-- 이미 동맹신청
                
			LEAVE root;
		END;
		END IF;
        
		SELECT COUNT(*) INTO v_Allyguild_qty 
        FROM guild_ally_hostile
		WHERE guild_idx = p_GuildID AND ally_hostile = 0;
		
		IF p_MaxAllyGuild <= v_Allyguild_qty THEN	-- 시스템 최대 제한 갯수 초과
			SET v_result = 100;			
			LEAVE root;
		END IF;
		
		
		-- 
        INSERT INTO `guild_apply_alliance` (`guild_idx`, `apply_guild_idx`)
			VALUES (v_AllyGuildID, p_GuildID);

		IF 0 = ROW_COUNT() THEN
			SET v_result = 105;
			LEAVE root;
		END IF;
        
        -- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (v_target_useridx, v_target_charidx, 7, p_GuildID)
		ON DUPLICATE KEY UPDATE type_id = 7, element_value = p_GuildID;

    END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result, v_AllyGuildID, v_AllyGuildName, v_AllyGuildMarkID, v_AllyGuildMasterName;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_list_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_list_info`(
	IN	_guildidx 	BIGINT
)
    COMMENT '동맹 길드 정보 요청.'
BEGIN

    -- SELECT A.guild_idx, B.master_char_idx, B.exp, B.member_cnt, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
	SELECT A.target_guild_idx, B.`name`, B.mark_id, C.nickname
	FROM guild_ally_hostile A 
		INNER JOIN guild B ON A.target_guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.guild_idx = _guildidx AND A.ally_hostile = 0;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_request_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_request_delete`(
	IN	_sender_guildidx 	BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_target_guildidx  	BIGINT
)
    COMMENT '동맹 길드 신청 정보 삭제.'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		IF NOT EXISTS(SELECT 1 FROM guild_apply_alliance WHERE guild_idx = _target_guildidx AND apply_guild_idx = _sender_guildidx) THEN -- 동맹신청 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        DELETE FROM `guild_apply_alliance` WHERE guild_idx = _target_guildidx AND apply_guild_idx = _sender_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_request_list_received` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_request_list_received`(
	IN	_guildidx 	BIGINT
)
    COMMENT '동맹 길드 등록 신청받은 리스트 요청.'
BEGIN

	-- INSERT INTO `guild_req_hostile_del`(`guild_idx`,`req_guild_idx`)
	-- 		VALUES(_target_guildidx, _sender_guildidx);
	
    -- SELECT A.guild_idx, B.master_char_idx, B.exp, B.member_cnt, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
	SELECT A.apply_guild_idx,B.`name`, B.mark_id, C.nickname
	FROM guild_apply_alliance A 
		INNER JOIN guild B ON A.apply_guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.guild_idx = _guildidx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_request_list_sent` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_request_list_sent`(
	IN	_guildidx 	BIGINT
)
    COMMENT '동맹 길드 등록 신청한 리스트 요청.'
BEGIN

    -- SELECT A.guild_idx, B.master_char_idx, B.exp, B.member_cnt, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
	SELECT A.guild_idx,B.`name`, B.mark_id, C.nickname
	FROM guild_apply_alliance A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.apply_guild_idx = _guildidx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildalliance_request_reject` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildalliance_request_reject`(
	IN	_guildidx 			BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_sender_guildidx  	BIGINT
)
    COMMENT '동맹 길드 등록 거절.'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
	DECLARE p_masterGrade		INT;
    DECLARE v_target_useridx	BIGINT DEFAULT 0;
    DECLARE v_target_charidx	BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		IF NOT EXISTS(SELECT 1 FROM guild_apply_alliance WHERE guild_idx = _guildidx AND apply_guild_idx = _sender_guildidx) THEN -- 동맹신청 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        DELETE FROM `guild_apply_alliance` WHERE guild_idx = _guildidx AND apply_guild_idx = _sender_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
        
        -- 
        SET p_masterGrade := 3;

		SELECT B.user_idx, B.char_idx INTO
			v_target_useridx, v_target_charidx
		FROM guild A 
			INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx
		WHERE A.guild_idx = _guildidx
		AND B.member_grade = p_masterGrade;
        
		-- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
		IF 0 < FOUND_ROWS() THEN 
			DELETE FROM user_reddot WHERE user_idx = v_target_useridx AND char_idx  = v_target_charidx AND type_id = 7 AND element_value = _sender_guildidx;
		END IF;
        
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildAuthority_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildAuthority_Upd`(
	IN	p_guildIdx		BIGINT		
,	IN	p_charIdx		BIGINT		
,	IN	p_authorityCharIdx	BIGINT		
,	IN	p_masterGrade		INT		
,	IN	p_memberGrade		INT		
)
BEGIN



	DECLARE v_nickName	VARCHAR(30);	
    DECLARE	v_charType		INT;		
	DECLARE	v_charLevel		INT;		
	DECLARE	v_battlePower	INT;		
	DECLARE	v_Result		INT;		
	DECLARE	v_Msg			TEXT;		
    
    CALL gusp_guildAuthority_Upd(p_guildIdx, p_charIdx, p_authorityCharIdx, p_masterGrade, p_memberGrade, v_nickName,
								v_charType, v_charLevel, v_battlePower, v_Result, v_Msg);
                                
	SELECT v_nickName, v_charType, v_charLevel, v_battlePower, v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildbuff_insert_reward_rank_guild` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildbuff_insert_reward_rank_guild`( 
	IN p_RewardBuffID			INT		
,	IN p_RewardBuffValue		INT 	
,	IN p_GuildID1 				BIGINT,	IN p_GuildID2 				BIGINT,	IN p_GuildID3 				BIGINT
,	IN p_GuildID4 				BIGINT,	IN p_GuildID5 				BIGINT,	IN p_GuildID6 				BIGINT
,	IN p_GuildID7 				BIGINT,	IN p_GuildID8 				BIGINT,	IN p_GuildID9 				BIGINT
,	IN p_GuildID10 				BIGINT
)
    COMMENT '랭킹 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 101;
    DECLARE v_buff_time		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_buff_time;
	END;
	
    
   	START TRANSACTION;	
    
    root:
    BEGIN
		
        IF 0 < p_RewardBuffID THEN
			
			
            select TIMESTAMPDIFF(second, now(), DATE_ADD(NOW(), INTERVAL 1 day)) INTO v_buff_time;
            
			
			INSERT INTO guild_buff(guild_idx, buff_id, buff_value_1, buff_time, group_id)
            
            SELECT guild_idx, p_RewardBuffID, p_RewardBuffValue, DATE_ADD(NOW(), INTERVAL 1 DAY), 0
			FROM guild 
			WHERE guild_idx IN (p_GuildID1, p_GuildID2, p_GuildID3, p_GuildID4, p_GuildID5, p_GuildID6, p_GuildID7, p_GuildID8, p_GuildID9, p_GuildID10)
			
            ON DUPLICATE KEY UPDATE buff_value_1 = p_RewardBuffValue, buff_time = DATE_ADD(NOW(), INTERVAL 1 DAY), group_id = 0;
            
			SET v_result = 0;
        END IF;
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result, v_buff_time;
	
	IF 0 = v_result THEN
		SELECT guild_idx, user_idx
		FROM guild_member
		WHERE guild_idx IN (p_GuildID1, p_GuildID2, p_GuildID3, p_GuildID4, p_GuildID5, p_GuildID6, p_GuildID7, p_GuildID8, p_GuildID9, p_GuildID10);	
	END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleapplication_delete_cancel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleapplication_delete_cancel`(
	IN	p_CastleID	INT
,	IN	p_GuildID	BIGINT
)
    COMMENT '성 점령전 신청 취소'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	 
    
    DECLARE v_old_castle	INT DEFAULT 0;	
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
		
        SELECT castle_id INTO v_old_castle 
        FROM guild_castle_occupy_application WHERE guild_idx = p_GuildID;
        
        IF v_old_castle != p_CastleID THEN
			SET v_result = 113;	
			LEAVE root;
        END IF;
		
        
        DELETE FROM guild_castle_occupy_application 
        WHERE guild_idx = p_GuildID AND castle_id = p_CastleID;
        		
	END;    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleapplication_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleapplication_insert`(
	IN	p_CastleID	INT		
,	IN	p_GuildID	BIGINT	
, 	IN 	p_CostGold	BIGINT 	
)
    COMMENT '성 점령전 신청'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    

	DECLARE v_final_gold	BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
		
        
        IF EXISTS (SELECT * FROM guild_castle WHERE guild_idx = p_GuildID) THEN
			SET v_result = 104;	
            LEAVE root;
        END IF;
        
        
        IF EXISTS (SELECT * FROM guild_castle_occupy_application WHERE guild_idx = p_GuildID) THEN
			SET v_result = 105;	
            LEAVE root;
        END IF;
             
    
		
        UPDATE guild SET guild_gold = (@v_final_guildgold := guild_gold - p_CostGold) WHERE guild_idx = p_GuildID;
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 100;		
            LEAVE root;
        END IF;        
        
        IF @v_final_guildgold < 0 THEN
			SET v_result = 1001;	
            LEAVE root;
        END IF; 
        SET v_final_gold = @v_final_guildgold;
        
        
        
		INSERT INTO guild_castle_occupy_application(castle_id, guild_idx) VALUES (p_CastleID, p_GuildID);
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102;	
			LEAVE root;
		END IF;        
		
	END;
        
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
	
	SELECT v_result, v_final_gold;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleapplication_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleapplication_select`(
)
BEGIN	
	
    
    SELECT a.guild_idx, a.castle_id, b.name, b.exp, b.mark_id
    FROM guild_castle_occupy_application a
		LEFT JOIN guild b ON a.guild_idx = b.guild_idx
	ORDER BY castle_id DESC;
    
    
    SELECT a.castle_id, a.guild_idx, IFNULL(b.name, '') as guild_name, IFNULL(b.mark_id, 0) as mark_id, IFNULL(c.user_idx, 0) as user_idx, IFNULL(c.nickname,'') as nickname
    FROM guild_castle a 
		LEFT JOIN guild b ON a.guild_idx = b.guild_idx
		LEFT JOIN guild_member c ON a.guild_idx = c.guild_idx AND b.master_user_idx = c.user_idx
    WHERE expire_date > NOW();
    
    
    SELECT a.castle_id, a.guild_idx, a.total_point, b.name 
	FROM guild_castle_occupy_war a 
		LEFT JOIN guild b ON a.guild_idx = b.guild_idx
    ORDER BY a.castle_id DESC;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleoccupywar_delete_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleoccupywar_delete_init`(
)
    COMMENT '성사냥터 점령전 정보 초기화'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
    
		
		TRUNCATE guild_castle_occupy_application;        
        
        TRUNCATE guild_castle_occupy_war;
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

    
	SELECT v_result;
    
    
	
	SELECT a.castle_id, a.guild_idx, IFNULL(b.name, '') as guild_name, IFNULL(b.mark_id, 0) as mark_id, IFNULL(c.user_idx, 0) as user_idx, IFNULL(c.nickname,'') as nickname
	FROM guild_castle a 
		LEFT JOIN guild b ON a.guild_idx = b.guild_idx
		LEFT JOIN guild_member c ON a.guild_idx = c.guild_idx AND b.master_user_idx = c.user_idx
	WHERE castle_id != 0 AND expire_date > NOW();
    
    
    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleoccupywar_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleoccupywar_select`(
	IN	_castleid	INT
)
BEGIN

	
	SELECT gcow.castle_id, gcow.guild_idx, IFNULL(g.name,'') as name, gcow.total_point 
    FROM guild_castle_occupy_war gcow
		LEFT JOIN guild g ON gcow.guild_idx = g.guild_idx
    WHERE castle_id = _castleid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleoccupywar_select_total` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleoccupywar_select_total`(
)
BEGIN

	
	
    SELECT gcow.castle_id, gcow.guild_idx, IFNULL(g.name,'') as name, gcow.total_point 
    FROM guild_castle_occupy_war gcow
		LEFT JOIN guild g ON gcow.guild_idx = g.guild_idx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleoccupywar_update_stealtotalpoint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleoccupywar_update_stealtotalpoint`(
	IN	p_CastleID		INT			
,	IN	p_GuildID 		BIGINT    	
,	IN	p_StealGuildID 	BIGINT    	
,	IN	p_AddPoint 		INT			
,	IN 	p_DecPoint		INT 		
)
    COMMENT '성사냥터 점령전 점수 PK를 통한 강탈'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    
        
	DECLARE v_add_point				BIGINT DEFAULT 0;	
    DECLARE v_dec_point				BIGINT DEFAULT 0;	
    DECLARE v_total_point			BIGINT DEFAULT 0;	
    DECLARE v_stealed_total_point	BIGINT DEFAULT 0;	
    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_add_point, v_dec_point, v_total_point, v_stealed_total_point;
	END;


	SET v_add_point = p_AddPoint;
	SET v_dec_point	= p_DecPoint;
    
    
    START TRANSACTION;
    
    root:
	BEGIN    
    
		SELECT total_point INTO v_dec_point 
        FROM guild_castle_occupy_war 
        WHERE castle_id = p_CastleID AND guild_idx = p_GuildID;
        
        IF v_dec_point > p_DecPoint THEN 
			SET v_dec_point = p_DecPoint;
        END IF;
        

        UPDATE guild_castle_occupy_war 
        SET total_point = CASE WHEN guild_idx = p_GuildID THEN (@v_total_point := total_point - v_dec_point) 
								ELSE (@v_stealed_total_point := total_point + v_add_point) 
                                END
        WHERE castle_id = p_CastleID AND guild_idx IN (p_GuildID, p_StealGuildID);
        IF ROW_COUNT() <= 0 THEN
			SET v_result = 100;
            LEAVE root;
        END IF;

        SET v_total_point = @v_total_point;
        SET v_stealed_total_point = @v_stealed_total_point;
	END;
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_add_point, v_dec_point, v_total_point, v_stealed_total_point;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastleoccupywar_update_totalpoint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastleoccupywar_update_totalpoint`(
	IN	_castleid	INT
,	IN	_guildidx 	BIGINT    
,	IN	_addPoint 	BIGINT    
)
    COMMENT '성사냥터 점령전 점수 업데이트'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
    
        UPDATE guild_castle_occupy_war SET total_point = (@v_total_point := total_point + _addPoint) WHERE castle_id = _castleid AND guild_idx = _guildidx;
        IF ROW_COUNT() <= 0 THEN
			SET v_result = 100;
            LEAVE root;
        END IF;
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

    
	SELECT v_result, @v_total_point as v_total_point;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildcastle_update_winner` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildcastle_update_winner`( 
	IN _castleid	INT
,	IN _guildidx 	BIGINT    

,	IN _useridx1 	BIGINT    
,	IN _useridx2 	BIGINT    
,	IN _useridx3 	BIGINT    
,	IN _useridx4 	BIGINT    
,	IN _useridx5 	BIGINT    
,	IN _useridx6 	BIGINT    
,	IN _useridx7 	BIGINT    
,	IN _useridx8 	BIGINT    
,	IN _useridx9 	BIGINT    
,	IN _useridx10 	BIGINT    
,	IN _useridx11 	BIGINT    
,	IN _useridx12 	BIGINT    
,	IN _useridx13 	BIGINT    
,	IN _useridx14 	BIGINT    
,	IN _useridx15 	BIGINT

,	IN _buffid 		INT
,	IN _buffvalue 	INT
,	IN _bufftime	DATETIME
)
    COMMENT '성 점령전 우승길드 처리'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
     
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   	START TRANSACTION;	
    
    root:
    BEGIN
    
		
		IF _castleid = 0 THEN 
			LEAVE root;
        END IF; 
    
		
		DELETE FROM guild_castle WHERE castle_id = _castleid;
        
        
        IF _guildidx != 0 THEN
			INSERT INTO guild_castle(castle_id, guild_idx, expire_date) VALUES(_castleid, _guildidx, ADDDATE(NOW(), 7));
            
            
			UPDATE guild_member SET join_occupy = 0 WHERE guild_idx = _guildidx; 
			
			
			UPDATE guild_member SET join_occupy = 1 WHERE guild_idx = _guildidx 
			AND user_idx IN 
			(_useridx1, _useridx2, _useridx3, _useridx4, _useridx5, 
			_useridx6, _useridx7, _useridx8, _useridx9, _useridx10, 
			_useridx11, _useridx12, _useridx13, _useridx14, _useridx15);
			
			
			IF _buffid > 0 THEN
				INSERT INTO guild_buff(guild_idx, buff_id, buff_value_1, buff_time) 
				VALUES (_guildidx, _buffid, _buffvalue, _bufftime)
				ON DUPLICATE KEY UPDATE buff_id = _buffid, buff_value_1 = _buffvalue, buff_time = _bufftime;
			END IF;
            
        END IF;
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildeventmission_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildeventmission_insert`(
	IN p_GuildID 		BIGINT
,	IN p_EventID 		INT			
,	IN p_MissionID 		INT			
,	IN p_ExpireTime 	BIGINT		
)
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_nowtime	DATETIME DEFAULT NOW();
    DECLARE v_yesterdaytime DATETIME DEFAULT DATE_SUB(v_nowtime, INTERVAL 1 DAY);
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
		
		INSERT INTO user_event_mission(guild_idx, event_id, mission_id, mission_value, expire_time, update_time)
			VALUES (p_GuildID, p_EventID, p_MissionID, 0, FROM_UNIXTIME(p_ExpireTime), v_yesterdaytime)
		ON DUPLICATE KEY UPDATE mission_value = 0, expire_time = FROM_UNIXTIME(p_ExpireTime), update_time = v_yesterdaytime;

		IF v_insert_cnt <= 0 THEN 
			SET v_result = 101;	
		END IF;
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildeventmission_update_10` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildeventmission_update_10`(
	IN p_GuildID 		BIGINT
,	IN p_EventID1 		INT,	IN 	p_MissionID1 	INT,	IN 	p_MissionVal1 		INT
,	IN p_EventID2 		INT,	IN 	p_MissionID2 	INT,	IN 	p_MissionVal2 		INT
,	IN p_EventID3 		INT,	IN 	p_MissionID3 	INT,	IN 	p_MissionVal3 		INT
,	IN p_EventID4 		INT,	IN 	p_MissionID4 	INT,	IN 	p_MissionVal4 		INT
,	IN p_EventID5 		INT,	IN 	p_MissionID5 	INT,	IN 	p_MissionVal5 		INT
,	IN p_EventID6 		INT,	IN 	p_MissionID6 	INT,	IN 	p_MissionVal6 		INT
,	IN p_EventID7 		INT,	IN 	p_MissionID7 	INT,	IN 	p_MissionVal7 		INT
,	IN p_EventID8 		INT,	IN 	p_MissionID8 	INT,	IN 	p_MissionVal8 		INT
,	IN p_EventID9 		INT,	IN 	p_MissionID9 	INT,	IN 	p_MissionVal9 		INT
,	IN p_EventID10 		INT,	IN 	p_MissionID10 	INT,	IN 	p_MissionVal10 		INT
)
    COMMENT '유저 이벤트 미션 업데이트'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN    
		UPDATE guild_event_mission 
        SET mission_value = CASE 
							WHEN event_id = p_EventID1 AND mission_id = p_MissionID1 THEN p_MissionVal1
							WHEN event_id = p_EventID2 AND mission_id = p_MissionID2 THEN p_MissionVal2
							WHEN event_id = p_EventID3 AND mission_id = p_MissionID3 THEN p_MissionVal3
							WHEN event_id = p_EventID4 AND mission_id = p_MissionID4 THEN p_MissionVal4
							WHEN event_id = p_EventID5 AND mission_id = p_MissionID5 THEN p_MissionVal5
							WHEN event_id = p_EventID6 AND mission_id = p_MissionID6 THEN p_MissionVal6
							WHEN event_id = p_EventID7 AND mission_id = p_MissionID7 THEN p_MissionVal7
							WHEN event_id = p_EventID8 AND mission_id = p_MissionID8 THEN p_MissionVal8
							WHEN event_id = p_EventID9 AND mission_id = p_MissionID9 THEN p_MissionVal9
							WHEN event_id = p_EventID10 AND mission_id = p_MissionID10 THEN p_MissionVal10
                            ELSE mission_value
                            END
        WHERE guild_idx = p_GuildID;    
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;      
    
	SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildeventmission_update_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildeventmission_update_reward`(
	IN p_GuildID 		BIGINT
,	IN p_EventID 		INT,	IN 	p_MissionID 	INT,	IN 	p_MissionVal 		INT
)
    COMMENT '유저 이벤트 미션 업데이트'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;
    
	
    root:
    BEGIN
	
		UPDATE guild_event_mission 
        SET mission_value = p_MissionVal 
		WHERE guild_idx = p_GuildID AND event_id = p_EventID AND mission_id = p_MissionID;

		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 101;	
			LEAVE root;
		END IF;
		
    END;
    
	SELECT v_result;
	
	IF 0 = v_result THEN
		SELECT user_idx 
		FROM guild_member
		WHERE guild_idx = p_GuildID;
	END IF;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildExpPoint_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildExpPoint_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_exp		BIGINT	
,	IN	p_point		BIGINT	
)
BEGIN



	DECLARE	v_expTotal	BIGINT;	
    DECLARE	v_pointTotal	BIGINT;	
	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guildExpPoint_Upd(p_guildIdx, p_userIdx, p_exp, p_point, v_expTotal, v_pointTotal, v_Result, v_Msg);
    
    SELECT v_expTotal, v_pointTotal, v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildExp_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildExp_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_exp		BIGINT	
)
BEGIN



	DECLARE	v_expTotal	BIGINT;	
	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guildExp_Upd(p_guildIdx, p_userIdx, p_exp, v_expTotal, v_Result, v_Msg);
    
    SELECT v_expTotal, v_Result, v_Msg;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete`(
	IN	p_GuildID			BIGINT
,	IN 	p_HostileGuildID	BIGINT
)
    COMMENT '적대 길드 삭제.'
BEGIN    
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 1;
	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
		
		IF NOT EXISTS(SELECT 1 FROM guild_ally_hostile WHERE guild_idx = p_GuildID AND target_guild_idx = p_HostileGuildID AND ally_hostile = 1) THEN -- 적대길드 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        DELETE FROM `guild_ally_hostile` WHERE guild_idx = p_GuildID AND target_guild_idx = p_HostileGuildID;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;

    END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete_request_accept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete_request_accept`(
	IN	_guildidx 			BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_sender_guildidx  	BIGINT
)
    COMMENT '적대 길드 삭제 수락.'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		SELECT 1 FROM guild_req_hostile_del WHERE guild_idx = _guildidx AND req_guild_idx = _sender_guildidx;
        IF FOUND_ROWS() = 0 THEN -- 적대 해제신청 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        DELETE FROM `guild_ally_hostile` WHERE guild_idx = _guildidx AND target_guild_idx = _sender_guildidx AND ally_hostile = 1;
        DELETE FROM `guild_ally_hostile` WHERE guild_idx = _sender_guildidx AND target_guild_idx = _guildidx AND ally_hostile = 1;
        
        DELETE FROM `guild_req_hostile_del` WHERE guild_idx = _guildidx AND req_guild_idx = _sender_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete_request_cancel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete_request_cancel`(
	IN	_sender_guildidx 	BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_target_guildidx  	BIGINT
)
    COMMENT '적대 길드 삭제 신청 취소 .'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		SELECT 1 FROM guild_req_hostile_del WHERE guild_idx = _target_guildidx AND req_guild_idx = _sender_guildidx;
        IF FOUND_ROWS() = 0 THEN -- 적대 해제신청 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        DELETE FROM `guild_req_hostile_del` WHERE guild_idx = _target_guildidx AND req_guild_idx = _sender_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete_request_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete_request_insert`(
	IN	_sender_guildidx 	BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_target_guildidx  	BIGINT
)
    COMMENT '적대 길드 삭제 신청 정보 추가 .'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    DECLARE v_ally_hostile		TINYINT DEFAULT 0;
    DECLARE v_guildName			VARCHAR(50)	DEFAULT '';
    DECLARE v_markID			INT DEFAULT 0;
    DECLARE v_masterNick		VARCHAR(30) DEFAULT '';
    -- DECLARE v_masterCharType	INT DEFAULT 0;
    -- DECLARE v_masterCharLevel	INT DEFAULT 0;
        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		SELECT ally_hostile INTO v_ally_hostile FROM guild_ally_hostile WHERE guild_idx = _sender_guildidx AND target_guild_idx = _target_guildidx;
        IF FOUND_ROWS() = 0 THEN -- 적대길드 정보에 서로 존재하지 않는 길드
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        IF v_ally_hostile <> 1 THEN -- 타겟길드와는 적대길드 아님. (동맹 길드)
			SET v_result = 102;
            LEAVE root;
        END IF;
    
		SELECT A.`name`, A.mark_id, B.nickname -- , B.char_type, B.char_level
			INTO v_guildName, v_markID, v_masterNick -- , v_masterCharType, v_masterCharLevel
		FROM guild A 
			INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx
		WHERE A.guild_idx = _sender_guildidx;
        
        IF FOUND_ROWS() = 0 THEN -- 요청한 길드는 존재하지 않는 길드
			SET v_result = 103;		
            LEAVE root;
        END IF;
		
        IF EXISTS (SELECT * FROM `guild_req_hostile_del` WHERE guild_idx = _target_guildidx AND req_guild_idx = _sender_guildidx) THEN 
			SET v_result = 104; -- 이미 적대 해제신청 했음.
            LEAVE root;
		END IF;
        
        
		INSERT INTO `guild_req_hostile_del`(`guild_idx`,`req_guild_idx`)
			VALUES(_target_guildidx, _sender_guildidx);
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 105; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete_request_list_received` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete_request_list_received`(
	IN	_guildidx 	BIGINT
)
    COMMENT '적대 길드 삭제 신청 받은 리스트 요청.'
BEGIN

	-- INSERT INTO `guild_req_hostile_del`(`guild_idx`,`req_guild_idx`)
	-- 		VALUES(_target_guildidx, _sender_guildidx);
	
    -- SELECT A.guild_idx, B.master_char_idx, B.exp, B.member_cnt, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
	SELECT B.`name`, B.mark_id, C.nickname
	FROM guild_req_hostile_del A 
		INNER JOIN guild B ON A.req_guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.guild_idx = _guildidx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete_request_list_sent` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete_request_list_sent`(
	IN	_guildidx 	BIGINT
)
    COMMENT '적대 길드 삭제 신청 한 리스트 요청.'
BEGIN

	-- INSERT INTO `guild_req_hostile_del`(`guild_idx`,`req_guild_idx`)
	-- 		VALUES(_target_guildidx, _sender_guildidx);
	
    -- SELECT A.guild_idx, B.master_char_idx, B.exp, B.member_cnt, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
	SELECT B.`name`, B.mark_id, C.nickname
	FROM guild_req_hostile_del A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.req_guild_idx = _guildidx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_delete_request_reject` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_delete_request_reject`(
	IN	_guildidx 			BIGINT
-- ,	IN	_sender_dbidx 		INT

,	IN	_sender_guildidx  	BIGINT
)
    COMMENT '적대 길드 삭제 신청 거절.'
BEGIN	
	DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 1;
    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		SELECT 1 FROM guild_req_hostile_del WHERE guild_idx = _guildidx AND req_guild_idx = _sender_guildidx;
        IF FOUND_ROWS() = 0 THEN -- 적대 해제신청 정보에 존재하지 않음
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        DELETE FROM `guild_req_hostile_del` WHERE guild_idx = _guildidx AND req_guild_idx = _sender_guildidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_insert`(
	IN	p_GuildID			BIGINT	
,	IN 	p_HostileGuildName		VARCHAR(64)
-- ,	IN 	p_ExpireTime		BIGINT	
-- ,	IN 	p_CostGuildGold		BIGINT 	
-- ,	IN 	p_CostGuildSeal		BIGINT 	
, 	IN 	p_MaxHotileGuild	INT 	
)
BEGIN    
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 1;
	
	DECLARE v_HostileGuildID 	BIGINT DEFAULT 0;
    DECLARE v_HostileGuildName 	VARCHAR(50) DEFAULT '';
    DECLARE v_HostileGuildMarkID 	INT DEFAULT 0;
    DECLARE v_HostileGuildMasterName 	VARCHAR(30) DEFAULT '';
-- 	DECLARE v_final_guild_gold 	BIGINT DEFAULT 0;			
-- 	DECLARE v_final_guild_seal 	BIGINT DEFAULT 0;			
--   DECLARE v_expire_time 		BIGINT DEFAULT p_ExpireTime;	
	DECLARE v_hostileguild_qty 	INT DEFAULT 0;
    DECLARE v_ally_hostile		TINYINT DEFAULT 0;
    DECLARE p_masterGrade		INT;
   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		-- SELECT v_result, v_final_guild_gold, v_final_guild_seal, v_expire_time;
        SELECT v_result, v_HostileGuildID, v_HostileGuildName, v_HostileGuildMarkID, v_HostileGuildMasterName;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
    
		SET p_masterGrade := 3;

		SELECT A.guild_idx, A.`name`, A.mark_id, B.nickname INTO
			v_HostileGuildID, v_HostileGuildName, v_HostileGuildMarkID, v_HostileGuildMasterName
		FROM guild A 
			INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx
		WHERE A.`name` collate utf8mb4_unicode_ci = p_HostileGuildName
		AND B.member_grade = p_masterGrade;
        
        IF 0 = ROW_COUNT() THEN -- 존재하지 않는 target길드
			SET v_result = 101;
			LEAVE root;
		END IF;
        
        --
        SELECT ally_hostile INTO v_ally_hostile FROM guild_ally_hostile WHERE guild_idx = p_GuildID AND target_guild_idx = v_HostileGuildID;
        IF 0 < ROW_COUNT() THEN
        
			IF 0 < v_ally_hostile THEN -- 이미 적대길드
				SET v_result = 102;
			ELSE
                SET v_result = 103;		-- 이미 동맹길드
			END IF;
            
			LEAVE root;
		END IF;
        
        
		SELECT COUNT(*) INTO v_hostileguild_qty 
        FROM guild_ally_hostile
		WHERE guild_idx = p_GuildID AND ally_hostile = 1; -- AND NOW() < expire_time;
		
		IF p_MaxHotileGuild <= v_hostileguild_qty THEN	-- 시스템 최대 제한 갯수 초과
			SET v_result = 100;			
			LEAVE root;
		END IF;
		
		
		-- IF 0 < p_CostGuildGold OR 0 < p_CostGuildSeal THEN
			
		-- 	UPDATE guild
        --     SET guild_gold = @guild_gold := guild_gold - p_CostGuildGold,
		-- 		guild_seal = @guild_seal := guild_seal - p_CostGuildSeal
		-- 	WHERE guild_idx = p_GuildID;
            
        --     IF 0 = ROW_COUNT() THEN
		-- 		SET v_result = 101;		
		-- 		LEAVE root;
        --     END IF; 
			
		-- 	IF @guild_gold < 0 OR @guild_seal < 0 THEN
		-- 		SET v_result = 102; 	
		-- 		LEAVE root;
		-- 	END IF;
        
		-- 	SET v_final_guild_gold = @guild_gold;
        --     SET v_final_guild_seal = @guild_seal;

		-- ELSE
		-- 	SELECT guild_gold, guild_seal INTO v_final_guild_gold, v_final_guild_seal
        --     FROM guild
		-- 	WHERE guild_idx = p_GuildID;
		-- END IF;
 
		INSERT INTO guild_ally_hostile(guild_idx, target_guild_idx, ally_hostile)
			VALUES (p_GuildID, v_HostileGuildID, 1);

		IF 0 = ROW_COUNT() THEN
			SET v_result = 105;
			LEAVE root;
		END IF;

    END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result, v_HostileGuildID, v_HostileGuildName, v_HostileGuildMarkID, v_HostileGuildMasterName;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildhostile_list_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildhostile_list_info`(
	IN	_guildidx 	BIGINT
)
    COMMENT '적대 길드 리스트 정보 요청.'
BEGIN

    -- SELECT A.guild_idx, B.master_char_idx, B.exp, B.member_cnt, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
	SELECT A.target_guild_idx, B.`name`, B.mark_id, C.nickname
	FROM guild_ally_hostile A 
		INNER JOIN guild B ON A.target_guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.guild_idx = _guildidx AND A.ally_hostile = 1;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildMain_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildMain_Sel`(
	IN	p_guildIdx	BIGINT	
)
BEGIN



	
	CALL gsp_mmo_guild_member_Sel(p_guildIdx);

	
	CALL gsp_mmo_guild_Tower_Sel(p_guildIdx);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guildmember_select_forrank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guildmember_select_forrank`()
BEGIN

	
    SELECT C.user_idx, CA.name
    FROM guild_member C INNER JOIN guild CA
    ON C.guild_idx = CA.guild_idx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_ability_upsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `gsp_mmo_guild_ability_upsert`(
	IN p_charId			BIGINT,		
	IN p_guildId		BIGINT,		
    IN p_categoryId		TINYINT(4),	
    IN p_abilityId		TINYINT(4),
    IN p_step			TINYINT(4),	
    IN p_purchaseType	TINYINT(4),	
	IN p_purchaseValue	INT,			
	IN p_purchaseExp	BIGINT			
)
BEGIN
	/*
    @ 기능 설명  
        - 캐릭터가 소속된 길드에 길드 버프를 추가한다.  
        - 구매한 길드 스킬 정보를 삽입 또는 갱신(upsert)한다.  
        - 구매에 사용된 길드 재화를 차감하고 반영한다.  

    @ 반환 값  
        - 구매 후 변경된 총 길드 재화  

    @ 예외 사항  
        - 해당 캐릭터는 해당 길드의 길드장이어야 한다.  
        - 길드 스킬을 구매하기 위한 충분한 길드 경험치(exp)를 보유하고 있어야 한다.  
        - 길드 스킬 구매 시 다음 조건을 충족해야 한다.  
            - 스킬 구매 단계(step)가 1일 경우, 기존 데이터가 존재해서는 안 된다.  
            - step이 1이상일 경우 기존 step에서 1을 더한 값이 파라미터로 받은 step과 같아야한다.
        - 길드 재화가 구매 비용 이상으로 충분해야 한다.  
    */

	DECLARE v_errno			INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 1;
   
	-- 반환 값
	DECLARE v_guild_wealth		BIGINT DEFAULT 0;		-- 스킬 구매후 남은 길드 재화
	
	-- 조건 체크용 로컬 변수
	DECLARE v_exists 			INT DEFAULT 0;			-- 존재 유무 조건 체크
    DECLARE v_tmp_exp			BIGINT DEFAULT 0;		-- 길드 경험치 조건 체크
    DECLARE v_tmp_gold			BIGINT DEFAULT 0;		-- 골드 재화 조건 체크
    DECLARE v_tmp_cashA 		BIGINT DEFAULT 0;		-- 다이아 재화 조건 체크
   
    DECLARE v_tmp_step			TINYINT DEFAULT 0;		-- 단계
	DECLARE v_tmp_cur_step		TINYINT DEFAULT 0;
    
   -- 예외 처리
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		SELECT v_result, v_guild_wealth;
	END;

    START TRANSACTION;
root:
	BEGIN
		-- 길드장 체크
		SELECT COUNT(1) INTO v_exists FROM guild WHERE master_char_idx = p_charId AND guild_idx = p_guildId;
		IF v_exists = 0 THEN
			SET v_result = 6140;
			LEAVE root;
		END IF;
        
        SELECT exp, guild_gold, guild_cashA INTO v_tmp_exp, v_tmp_gold, v_tmp_cashA
        FROM guild WHERE guild_idx = p_guildId;
        
        -- 경험치 체크
        IF v_tmp_exp < p_purchaseExp THEN
			SET v_result = 6141;
			LEAVE root;
		END IF;
		
        -- 재화 체크
		IF p_purchaseType = 13 /*라임*/ THEN
			IF p_purchaseValue > v_tmp_gold THEN
				SET v_result = 6142;
				LEAVE root;
			END IF;
		ELSEIF p_purchaseType = 14 /*다이아*/ THEN
			IF p_purchaseValue > v_tmp_cashA THEN
				SET v_result = 6142;
				LEAVE root;
			END IF;
        END IF;
    
		-- 단계 체크
		IF p_step = 1 THEN
			-- 데이터 없어야함
			SET v_exists = 0;
			SELECT COUNT(1) INTO v_exists FROM guild_ability
			WHERE guild_idx = p_guildId AND guild_category_id = p_categoryId AND ability_group = p_abilityId;
                
			IF v_exists = 1 THEN
				SET v_result = 6143;
				LEAVE root;
			END IF;
		ELSEIF p_step >= 2 THEN
            -- 단계가 2 이상일 경우  
			SET v_tmp_step = p_step - 1;
            
			SELECT step INTO v_tmp_cur_step FROM guild_ability
			WHERE guild_idx = p_guildId AND guild_category_id = p_categoryId AND ability_group = p_abilityId;
                
			IF v_tmp_step <> v_tmp_cur_step THEN
				SET v_result = 6144;
				LEAVE root;
			END IF;
		ELSE
        	SET v_result = 6145;
			LEAVE root;
		END IF;
    
		-- 길드 버프 적용
        INSERT INTO guild_ability (guild_idx, guild_category_id, ability_group, step,purchase_date)
		VALUES (p_guildId, p_categoryId, p_abilityId, p_step, CURRENT_TIMESTAMP)
		ON DUPLICATE KEY UPDATE 
			step = VALUES(step), purchase_date = VALUES(purchase_date);  
            
        -- 구매에 사용된 길드 재화를 차감하고 반영한다.  
		UPDATE guild
			SET 
				guild_gold = CASE 
                    WHEN p_purchaseType = 13 THEN guild_gold - p_purchaseValue 
                    ELSE guild_gold
				END,
				guild_cashA = CASE 
                    WHEN p_purchaseType = 14 THEN guild_cashA - p_purchaseValue 
                    ELSE guild_cashA 
				END
			WHERE master_char_idx = p_charId AND guild_idx = p_guildId;
            
		-- 업데이트 후 로컬 변수 v_guild_wealth 값 세팅
		IF p_purchaseType = 13 THEN
			SET v_guild_wealth = (SELECT guild_gold FROM guild WHERE master_char_idx = p_charId AND guild_idx = p_guildId);
		ELSEIF p_purchaseType = 14 THEN
			SET v_guild_wealth = (SELECT guild_cashA FROM guild WHERE master_char_idx = p_charId AND guild_idx = p_guildId);
		ELSE
			SET v_guild_wealth = 0;
		END IF;
        
	END;
    
    IF v_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    -- 결과
	SELECT v_result, v_guild_wealth;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_application_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_application_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_userIdx	BIGINT
,	IN	p_charIdx	BIGINT
)
BEGIN



	DECLARE	v_registGuildIdx	BIGINT;	
	DECLARE	v_Result			INT;		
	DECLARE	v_Msg				TEXT;		
    DECLARE v_application_qty	INT DEFAULT 0;	

	CALL gusp_guild_application_Del(p_guildIdx, p_userIdx, p_charIdx, v_registGuildIdx, v_Result, v_Msg);
    
    IF 1 = v_Result THEN
		SELECT COUNT(guild_idx) INTO v_application_qty
        FROM guild_application
        WHERE guild_idx = p_guildIdx;    
    END IF;
    
    SELECT v_Result, v_registGuildIdx, v_application_qty;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_application_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_application_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	SELECT B.char_idx, B.nickname, B.char_type, B.char_level, B.battle_power, B.gamedb_idx, UNIX_TIMESTAMP(B.reg_date) as reg_date
		, application_message
	FROM guild A INNER JOIN guild_application B ON A.guild_idx = B.guild_idx
	WHERE A.guild_idx = p_guildIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_automatic_dismiss` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_automatic_dismiss`(
	IN	p_daycount	TINYINT
)
    COMMENT '1인길드 자동 삭제'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        SELECT v_result;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		DROP TEMPORARY TABLE IF EXISTS tbl_temp_guild;
		CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_guild AS
			SELECT guild_idx
			FROM (
				SELECT A.guild_idx
				FROM guild_member A
				INNER JOIN char_info B 
					ON A.char_idx = B.char_idx
				WHERE B.last_logoff_date < DATE_SUB(NOW(), INTERVAL p_daycount DAY)
				  AND A.guild_idx IN (
					  SELECT guild_idx
					  FROM (
						  SELECT guild_idx, COUNT(1) AS Cnt 
						  FROM guild_member 
						  GROUP BY guild_idx
					  ) AS SubQuery
					  WHERE Cnt = 1
				  )
			) AS FinalQuery;
        
        DELETE FROM guild_event_mission WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        DELETE FROM guild_chat WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        -- guild_war_matching
        
        -- guild_war_unit
        -- guild_war_setting
        -- guild_war_regist
        -- guild_war_member
        -- guild_war_history
        -- guild_raid_unlock
        -- guild_castle_occupy_war
        -- guild_castle_occupy_application
        -- DELETE FROM guild_castle WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        
        DELETE FROM guild_buff WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        DELETE FROM guild_ability WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        DELETE FROM guild_apply_alliance WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        DELETE FROM guild_application WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        DELETE FROM guild_ally_hostile WHERE target_guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        DELETE FROM guild_ally_hostile WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        DELETE FROM guild_member_withdraw WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        DELETE FROM guild_member WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        --
        -- SET v_iPartKeyMonth := fn_Get_PartKeyMonth();
        INSERT INTO guild_withdraw (partKeyMonth, TXIDX, guild_idx, master_user_idx, master_char_idx, `name`, exp, `point`, member_cnt, member_max_cnt, mark_id, introduction, join_type, notice, war_cnt, war_win_cnt, 
					grow_target_merc, grow_target_merc_boss, grow_target_tower, battle_idx, buff_type, buff_value, buff_exp_date, reg_date)
	
			SELECT fn_Get_PartKeyMonth(), CONNECTION_ID(), guild_idx, master_user_idx, master_char_idx, `name`, exp, `point`, member_cnt, member_max_cnt, mark_id, introduction, join_type, notice, war_cnt, war_win_cnt, 
					grow_target_merc, grow_target_merc_boss, grow_target_tower, battle_idx, buff_type, buff_value, buff_exp_date, reg_date
			FROM guild WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        --
        
        DELETE FROM guild WHERE guild_idx IN (SELECT guild_idx FROM tbl_temp_guild);
        
        SET v_result = 1;
        
	END;
    
    IF v_result = 1 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT v_result;

	SELECT guild_idx AS v_guild_idx FROM tbl_temp_guild;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_bookmark_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_bookmark_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_userIdx	BIGINT		
)
BEGIN



	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guild_bookmark_Del(p_guildIdx, p_userIdx, v_Result, v_Msg);

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_bookmark_Detail_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_bookmark_Detail_Sel`(
	IN	p_userIdx	BIGINT	
,	IN	p_guildIdx	BIGINT	
)
BEGIN



	
	SELECT A.guild_idx, B.master_user_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
				C.nickname, C.char_type, C.char_level, C.battle_power
	FROM guild_bookmark A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_user_idx = C.user_idx
	WHERE A.user_idx = p_userIdx AND A.guild_idx = p_guildIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_bookmark_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_bookmark_Ins`(
	IN	p_guildIdx	BIGINT		
,	IN	p_userIdx	BIGINT		
,	IN	p_bookMaxCnt	INT		
)
BEGIN



	DECLARE	v_Result	INT;		
	DECLARE	v_Msg		TEXT;		
    
    CALL gusp_guild_bookmark_Ins(p_guildIdx, p_userIdx, p_bookMaxCnt, v_Result, v_Msg);
    
    SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_bookmark_Ins_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_bookmark_Ins_one`(
	IN	p_guildIdx	BIGINT		
,	IN	p_userIdx	BIGINT		
,	IN	p_bookMaxCnt	INT		
)
BEGIN
	DECLARE	v_Result	INT;		
	DECLARE	v_Msg		TEXT;		
    
    CALL gusp_guild_bookmark_Ins(p_guildIdx, p_userIdx, p_bookMaxCnt, v_Result, v_Msg);
    
    SELECT v_Result;
	
	CALL gsp_mmo_guild_bookmark_Detail_Sel(p_userIdx, p_guildIdx);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_bookmark_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_bookmark_Sel`(
	IN	p_userIdx	BIGINT		
)
BEGIN



	SELECT A.guild_idx, B.master_user_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) AS reg_date,
		C.nickname, C.char_type, C.char_level, C.battle_power
	FROM guild_bookmark A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_user_idx = C.user_idx
	WHERE A.user_idx = p_userIdx
	ORDER BY A.reg_date DESC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_buff_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_buff_insert`( 
	IN 	_guildidx		BIGINT
,	IN	_userid 		BIGINT
,	IN 	_buffid 		INT			
,	IN 	_buffvalue1		INT			
,	IN 	_buffvalue2		INT			
,	IN 	_buffvalue3		INT			
,	IN 	_buffvalue4		INT			
,	IN 	_buffvalue5		INT			
,	IN 	_buffvalue6		INT			
,	IN 	_buffvalue7		INT			
,	IN 	_buffvalue8		INT			
,	IN 	_buffvalue9		INT			
,	IN 	_buffvalue10	INT			
,	IN 	_bufftime 		INT			
,	IN 	_groupid 		INT			
)
    COMMENT '문파 버프 넣기'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 101;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;      

	IF _groupid > 0 THEN 
		DELETE FROM guild_buff WHERE guild_idx = _guildidx AND group_id = _groupid;
    END IF;
    	
	INSERT INTO guild_buff (guild_idx,  buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, buff_time, group_id)
						VALUES (_guildidx, _buffid, _buffvalue1, _buffvalue2, _buffvalue3, _buffvalue4, _buffvalue5, _buffvalue6, _buffvalue7, _buffvalue8, _buffvalue9, _buffvalue10, DATE_ADD(NOW(), INTERVAL _bufftime second), _groupid)
	ON DUPLICATE KEY UPDATE buff_value_1 = _buffvalue1, buff_value_2 = _buffvalue2, buff_value_3 = _buffvalue3, buff_value_4 = _buffvalue4, 
							buff_value_5 = _buffvalue5, buff_value_6 = _buffvalue6, buff_value_7 = _buffvalue7, buff_value_8 = _buffvalue8, buff_value_9 = _buffvalue9, buff_value_10 = _buffvalue10,
							 buff_time = DATE_ADD(NOW(), INTERVAL _bufftime second);
	
	IF 0 < ROW_COUNT() THEN
		SET v_result = 0;	
	END IF;          

        
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_buff_insert_pbj` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_buff_insert_pbj`( 
	IN 	_guildidx		BIGINT
,	IN	_userid 		BIGINT
,	IN 	_buffid 		INT			
,	IN 	_buffvalue1		INT			
,	IN 	_buffvalue2		INT			
,	IN 	_buffvalue3		INT			
,	IN 	_buffvalue4		INT			
,	IN 	_buffvalue5		INT			
,	IN 	_buffvalue6		INT			
,	IN 	_buffvalue7		INT			
,	IN 	_buffvalue8		INT			
,	IN 	_buffvalue9		INT			
,	IN 	_buffvalue10	INT			
,	IN 	_bufftime 		INT			
,	IN 	_groupid 		INT			
)
    COMMENT '문파 버프 넣기'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 101;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;      

	IF _groupid > 0 THEN 
		DELETE FROM guild_buff WHERE guild_idx = _guildidx AND group_id = _groupid;
    END IF;
    	
	INSERT INTO guild_buff (guild_idx,  buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, buff_time, group_id)
						VALUES (_guildidx, _buffid, _buffvalue1, _buffvalue2, _buffvalue3, _buffvalue4, _buffvalue5, _buffvalue6, _buffvalue7, _buffvalue8, _buffvalue9, _buffvalue10, DATE_ADD(NOW(), INTERVAL _bufftime second), _groupid)
	ON DUPLICATE KEY UPDATE buff_value_1 = _buffvalue1, buff_value_2 = _buffvalue2, buff_value_3 = _buffvalue3, buff_value_4 = _buffvalue4, 
							buff_value_5 = _buffvalue5, buff_value_6 = _buffvalue6, buff_value_7 = _buffvalue7, buff_value_8 = _buffvalue8, buff_value_9 = _buffvalue9, buff_value_10 = _buffvalue10,
							 buff_time = DATE_ADD(NOW(), INTERVAL _bufftime second);
	
	IF 0 < ROW_COUNT() THEN
		SET v_result = 0;	
	END IF;          

        
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_castle_select_all_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_castle_select_all_info`( 
)
    COMMENT '성 사냥터 모든 성 정보 조회'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    
    SELECT a.castle_id, a.guild_idx, IFNULL(b.name, '') as guild_name, IFNULL(b.mark_id, 0) as mark_id, IFNULL(c.user_idx, 0) as user_idx, IFNULL(c.nickname,'') as nickname
    FROM guild_castle a 
		LEFT JOIN guild b ON a.guild_idx = b.guild_idx
		LEFT JOIN guild_member c ON a.guild_idx = c.guild_idx AND b.master_user_idx = c.user_idx
    WHERE castle_id != 0 AND expire_date > NOW();
    		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_castle_select_gold_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_castle_select_gold_reward`( 

)
    COMMENT '성 사냥터 모든 성 정보 조회 및 점령 길드 정보 조회'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    
    SELECT castle_id, total_gold
    FROM guild_castle
    WHERE expire_date > NOW();
    
    
    SELECT a.castle_id, IFNULL(b.user_idx, 0) as user_idx, IFNULL(b.gamedb_idx, 0) as gamedb_idx
    
    FROM guild_castle a 
		LEFT JOIN guild_member b ON a.guild_idx = b.guild_idx AND b.join_occupy = 1
    WHERE expire_date > NOW();
    
    
    UPDATE guild_castle SET total_gold = 0 WHERE castle_id > 0;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_castle_select_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_castle_select_info`( 
	IN _regioncode	INT
)
    COMMENT '성 사냥터 정보 조회'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
    IF NOT EXISTS (SELECT * FROM guild_castle WHERE castle_id = _regioncode AND expire_date > NOW()) THEN 
		SET v_result = 100;
    END IF;
    
    
	SELECT v_result;
    
    
    SELECT a.castle_id, a.guild_idx, IFNULL(b.name, '') as guild_name, IFNULL(b.mark_id, 0) as mark_id, IFNULL(c.user_idx, 0) as user_idx, IFNULL(c.nickname,'') as nickname
    FROM guild_castle a 
		LEFT JOIN guild b ON a.guild_idx = b.guild_idx
		LEFT JOIN guild_member c ON a.guild_idx = c.guild_idx AND b.master_user_idx = c.user_idx
    WHERE castle_id = _regioncode AND expire_date > NOW();
    		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_castle_update_monsterdrop` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_castle_update_monsterdrop`( 
	IN _castleid	INT
,	IN _guildidx 	BIGINT    
,	IN _addGold 	BIGINT
,	IN _addPoint 	BIGINT
)
    COMMENT '성 사냥터 몬스터처치 결과 업데이트'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_total_point BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
                
		SELECT v_result;
	END;
   
    
    root:
    BEGIN    
		IF _castleid <> 0 AND _addGold > 0  THEN 
			IF EXISTS (SELECT * FROM guild_castle WHERE castle_id = _castleid) THEN 
				UPDATE guild_castle SET total_gold = total_gold + _addGold WHERE castle_id = _castleid;
                
                IF ROW_COUNT() <= 0 THEN 
					set v_result = 100;
                END IF;
			END IF; 
        END IF; 
        
        IF _addPoint <> 0 THEN 
			UPDATE guild_castle_occupy_war SET total_point = (@v_total_point := total_point + _addPoint) WHERE castle_id = _castleid AND guild_idx = _guildidx;
			IF ROW_COUNT() <= 0 THEN
				SET v_result = 101;
				LEAVE root;
			END IF;
            
		ELSE
			SELECT total_point INTO v_total_point
            FROM guild_castle_occupy_war
            WHERE castle_id = _castleid AND guild_idx = _guildidx;
        END IF;         
	END;
		
	
	SELECT v_result, v_total_point;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_castle_update_monsterdrop_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_castle_update_monsterdrop_one`( 
	IN p_CastleID		INT
,	IN p_GuildID 		BIGINT    
,	IN p_AddGold 		BIGINT
,	IN p_AddPoint 		BIGINT
,	OUT p_Total_Point	BIGINT
,	OUT p_Result		INT
)
    COMMENT '성 사냥터 몬스터처치 결과 업데이트'
BEGIN   
	DECLARE	v_errno		INT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET p_Result := (v_errno * -1);
	END;

    SET p_Result = 0;
	SET p_Total_Point = 0;   
    
    root:
    BEGIN
		IF p_CastleID <> 0 AND p_AddGold > 0  THEN 
			IF EXISTS (SELECT * FROM guild_castle WHERE castle_id = p_CastleID) THEN 
				UPDATE guild_castle 
				SET total_gold = total_gold + p_AddGold 
				WHERE castle_id = p_CastleID;
                
                IF ROW_COUNT() <= 0 THEN 
					set p_Result = 100;
                END IF;
			END IF; 
        END IF; 
        
        IF p_AddPoint <> 0 THEN 
			UPDATE guild_castle_occupy_war 
			SET total_point = (@v_total_point := total_point + p_AddPoint) 
			WHERE castle_id = p_CastleID AND guild_idx = p_GuildID;
			IF ROW_COUNT() <= 0 THEN
				SET p_Result = 101;
				LEAVE root;
			END IF;
            
			SET p_Total_Point = @v_total_point;
		ELSE
			SELECT total_point INTO p_Total_Point
            FROM guild_castle_occupy_war
            WHERE castle_id = p_CastleID AND guild_idx = p_GuildID;
        END IF;         
	END;		

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_delete_raid_open` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_delete_raid_open`(
	IN	p_GuildIdx		BIGINT			
,	IN 	p_CostType		INT				
,	IN	p_OpenCost		INT				
)
BEGIN


	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 1;		

	DECLARE v_final_value	BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1) + v_result;
		ROLLBACK;
        
        SELECT v_result, v_final_value;
	END;

	root:
	BEGIN
		
		
		START TRANSACTION;
		
        
		
        
        IF 1 = p_CostType THEN
        BEGIN
			
			UPDATE guild
			SET guild_gold = @guild_gold := guild_gold - p_OpenCost
			WHERE guild_idx = p_GuildIdx;
			IF 0 = ROW_COUNT() THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
            
			IF @guild_gold < 0 THEN
				SET v_result = 102; 	
				LEAVE root;
			END IF;
            
            SET v_final_value = @guild_gold;
        END;
        ELSEIF 2 = p_Costtype THEN
        BEGIN
			
			UPDATE guild
			SET guild_seal = @guild_seal := guild_seal - p_OpenCost
			WHERE guild_idx = p_GuildIdx;
			IF 0 = ROW_COUNT() THEN
				SET v_result = 201;		
				LEAVE root;
			END IF;        
            
			IF @guild_seal < 0 THEN
				SET v_result = 202; 	
				LEAVE root;
			END IF;
        
			SET v_final_value = @guild_seal;
		END;
        END IF;
        
	END;
    
    
	IF v_result = 1 THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
    SELECT v_result, v_final_value;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_GrowTarget_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_GrowTarget_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_growType	TINYINT	
,	IN	p_growTarget	INT	
)
BEGIN


	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guild_GrowTarget_Upd(p_guildIdx, p_userIdx, p_growType, p_growTarget, v_Result, v_Msg);
    
    SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_Ins`(
	IN	p_userIdx		BIGINT		
,	IN	p_name			VARCHAR(50)	
,	IN	p_nickname		VARCHAR(30)	
,	IN	p_charIdx		BIGINT		
,	IN	p_charType		INT		
,	IN	p_charLevel		INT		
,	IN	p_battlePower		INT		
,	IN	p_gamedbIdx		SMALLINT	
,	IN	p_memberGrade		INT		
,	IN	p_memberMaxCnt		INT		
,	IN	p_markId		INT		
,	IN	p_joinType		CHAR(1)		
,	IN	p_introduction		VARCHAR(256)	
,	IN	p_notice		VARCHAR(512)	
,	IN 	p_rejoinTime	INT		
)
BEGIN


	DECLARE	v_errno			INT;
	DECLARE	v_guildIdx		BIGINT DEFAULT(0);
	DECLARE	v_Result		INT;		
	DECLARE	v_Msg			TEXT;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			-- SET p_Result := (v_errno * -1000) + p_Result;
            SET v_Result := v_errno;
			-- SET p_Msg := v_msg;
		ROLLBACK;
	END;
    
	CALL gusp_guild_Ins_c9(p_userIdx, p_name, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_memberGrade, p_memberMaxCnt, p_markId,
						p_joinType, p_introduction, p_notice, p_rejoinTime, v_guildIdx, v_Result, v_Msg);
                        
	SELECT v_guildIdx, v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_master_automatic_delegation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_master_automatic_delegation`(
	IN	p_guildIdx	BIGINT
,	IN	p_daycount	TINYINT

,	OUT	v_result 	INT
,	OUT	p_newmaster_charidx	BIGINT

,	OUT	p_master_nickname VARCHAR(30)		-- 길드 마스터 닉네임			
,	OUT	p_master_chartype	INT				-- 길드 마스터 캐릭터 타입
,	OUT	p_master_charexp	BIGINT			-- 길드 마스터 캐릭터 레벨
,	OUT	p_master_battlepower INT				-- 길드 마스터 캐릭터 전투력
)
    COMMENT '길드마스터 자동 위임'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    -- DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE	p_needchange	TINYINT DEFAULT 0;
	DECLARE	p_master_charidx	BIGINT;
    DECLARE	p_newmaster_useridx	BIGINT;
    -- DECLARE	p_newmaster_charidx	BIGINT;

	-- DECLARE	p_master_nickname VARCHAR(30) DEFAULT '';		-- 길드 마스터 닉네임			
	-- DECLARE	p_master_chartype	INT DEFAULT 0;				-- 길드 마스터 캐릭터 타입
	-- DECLARE	p_master_charexp	BIGINT DEFAULT 0;			-- 길드 마스터 캐릭터 레벨
	-- DECLARE	p_master_battlepower INT DEFAULT 0;				-- 길드 마스터 캐릭터 전투력

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        -- SELECT v_result, p_newmaster_charidx, p_master_nickname, p_master_chartype, p_master_charexp, p_master_battlepower;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		SELECT master_char_idx INTO p_master_charidx FROM guild WHERE guild_idx = p_guildIdx;
		IF 0 = ROW_COUNT() THEN
			 SET v_result = 101;	
			LEAVE root;
		END IF;
        
        SELECT B.last_logoff_date < DATE_SUB(NOW(), INTERVAL p_daycount DAY) INTO p_needchange
			FROM guild_member A 
			INNER JOIN char_info B ON A.char_idx = B.char_idx
			WHERE A.guild_idx = p_guildIdx AND B.char_idx = p_master_charidx;
            
		IF 0 = ROW_COUNT() OR 0 = p_needchange THEN
			 SET v_result = 102;	
			LEAVE root;
		END IF;
        
        SELECT user_idx, char_idx INTO p_newmaster_useridx, p_newmaster_charidx
			FROM guild_member
			WHERE guild_idx = p_guildIdx AND char_idx <> p_master_charidx
			AND member_status < 2 AND visit_date > DATE_SUB(NOW(), INTERVAL p_daycount DAY)
			ORDER BY member_grade DESC, guild_contribution DESC LIMIT 1;
        
        IF 0 = ROW_COUNT() OR 0 = p_newmaster_charidx THEN
			 SET v_result = 103;
			LEAVE root;
		END IF;
        
        SELECT char_type, char_exp, battle_power, nickname INTO p_master_chartype, p_master_charexp, p_master_battlepower, p_master_nickname
			FROM char_info WHERE user_idx = p_newmaster_useridx AND char_idx = p_newmaster_charidx;
        
        IF 0 = ROW_COUNT() THEN
			 SET v_result = 104;
			LEAVE root;
		END IF;
        
        -- 
		UPDATE guild SET master_user_idx = p_newmaster_useridx, master_char_idx = p_newmaster_charidx
			WHERE guild_idx = p_guildIdx;
		IF 0 = ROW_COUNT() THEN
			 SET v_result = 105;
			LEAVE root;
		END IF;

		-- 
        UPDATE
			guild_member AS A,
			guild_member AS B
		SET
			A.member_grade = 0,
			B.member_grade = 3
		WHERE	A.guild_idx = p_guildIdx
		AND A.char_idx = p_master_charidx
		AND B.guild_idx = p_guildIdx
		AND B.char_idx = p_newmaster_charidx;
        
        IF 0 = ROW_COUNT() THEN
			 SET v_result = 106;
			LEAVE root;
		END IF;
        
        SET v_result = 1;
        
	END;
    
    IF v_result = 1 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	-- SELECT v_result, p_newmaster_charidx, p_master_nickname, p_master_chartype, p_master_charexp, p_master_battlepower;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_memberApproval_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_memberApproval_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_charIdx	BIGINT		
,	IN	p_joinCharIdx	BIGINT		
)
BEGIN



	DECLARE	v_Result	INT;		
	DECLARE	v_Msg		TEXT;		

	CALL gusp_guild_memberApproval_Del(p_guildIdx, p_charIdx, p_joinCharIdx, v_Result, v_Msg);
    
    SELECT v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_memberApproval_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_memberApproval_Upd`(
	IN	p_guildIdx	BIGINT		
,	IN	p_charIdx	BIGINT
,	IN	p_joinCharIdx	BIGINT		
)
BEGIN


	DECLARE	p_joinUserIdx	BIGINT DEFAULT 0;
	DECLARE	v_nickName		VARCHAR(30) DEFAULT '';	
	DECLARE v_charIdx		BIGINT DEFAULT 0;			
	DECLARE	v_charType		INT DEFAULT 0;			
	DECLARE	v_charLevel		INT DEFAULT 0;			
	DECLARE	v_battlePower	INT DEFAULT 0;			
	DECLARE v_memberGrade	INT DEFAULT 0;			
	DECLARE	v_gamedbIdx		SMALLINT DEFAULT 0;		
	DECLARE	v_Result		INT DEFAULT -1;			
	DECLARE	v_Msg			TEXT DEFAULT '';			
	
	DECLARE	v_errno		INT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberCnt	INT;	
	DECLARE v_memberMaxCnt	INT;	
	DECLARE v_upType	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_Msg = MESSAGE_TEXT;
			SET v_Result := (v_errno * -1000);
		ROLLBACK;						
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
    
		SELECT user_idx INTO p_joinUserIdx
				FROM char_info WHERE char_idx = p_joinCharIdx;

		IF (p_charIdx IS NULL) || (p_charIdx < 1) || (p_joinUserIdx IS NULL) || (p_joinUserIdx < 1) THEN
		BEGIN
			SET v_Result := -4;
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET v_Result := v_Resultfn;
			END;

			ELSE
			
			root:
			BEGIN
				
				SELECT member_cnt, member_max_cnt INTO v_memberCnt, v_memberMaxCnt
				FROM guild WHERE guild_idx = p_guildIdx;

				
				CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);

				
				IF (v_memberGrade IS NULL) || (v_memberGrade < 1) THEN
				BEGIN
					SET v_Result := -102;	
					LEAVE root;
				END;

				
				ELSEIF v_memberCnt >= v_memberMaxCnt THEN
				BEGIN
					SET v_Result := -100;	
					LEAVE root;
				END;

				ELSE
				BEGIN
					
					CALL gusp_guild_member_Check_Sel(p_joinUserIdx, p_joinCharIdx, v_Resultfn);
					IF v_Resultfn = -93 THEN	
					BEGIN
						SET v_Result := v_Resultfn;	

						
						
						
						START TRANSACTION;
							
							SET v_Resultfn := udf_guild_application_Del(p_guildIdx, p_joinCharIdx);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET v_Result := v_Resultfn;
								ROLLBACK;
								LEAVE root;
							END;
							END IF;
						COMMIT;
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						IF EXISTS( SELECT * FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_joinCharIdx ) THEN
						BEGIN
							
							SELECT nickname, char_idx, char_type, char_level, battle_power, gamedb_idx INTO
								v_nickName, v_charIdx, v_charType, v_charLevel, v_battlePower, v_gamedbIdx
							FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_joinCharIdx;
							SET v_memberGrade := 0;

							
							SET v_upType := 1;

							
							
							START TRANSACTION;
								
								SET v_Resultfn := udf_guild_memberCnt_Upd(p_guildIdx, v_upType);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET v_Result := v_Resultfn;
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

								
								SET v_Resultfn := udf_guild_member_Ins(p_guildIdx, p_joinUserIdx, v_nickName, v_charIdx, v_charType, v_charLevel, v_battlePower, v_gamedbIdx, v_memberGrade);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET v_Result := v_Resultfn;
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
                                
								
								SET v_Resultfn := udf_guild_applicationApproval_Del(p_joinCharIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET v_Result := v_Resultfn;
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
                                
                                -- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
                                DELETE A
                                FROM user_reddot A
                                JOIN guild_member B ON A.char_idx = B.char_idx
                                WHERE B.guild_idx = p_guildIdx AND B.member_grade > 0 AND type_id = 9 AND element_value = p_joinCharIdx;

							COMMIT;
                            
                            
                            SET v_Result = 1;
                            
							LEAVE root;

						END;

						ELSE
						BEGIN
							SET v_Result := -103;	
							LEAVE root;
						END;
						END IF;

					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

	SELECT v_nickName, v_charIdx, v_charType, v_charLevel, v_battlePower, v_memberGrade, v_gamedbIdx, v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_charIdx	BIGINT		
,	IN	p_TXIDX		BIGINT		
)
BEGIN



	DECLARE	v_memberGrade	INT;			
	DECLARE	v_guildName		VARCHAR(50);	
    DECLARE	v_afterMemberCnt	INT;		
	DECLARE	v_joinType		VARCHAR(1);		
	DECLARE	v_exp			BIGINT;			
	DECLARE	v_Result		INT;			
	DECLARE	v_Msg			TEXT;			

	CALL gusp_guild_member_Del(p_guildIdx, p_charIdx, p_TXIDX, v_memberGrade, v_guildName, v_afterMemberCnt, v_joinType, v_exp, v_Result, v_Msg);
    
    SELECT v_memberGrade, v_guildName, v_afterMemberCnt, v_joinType, v_exp, v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_exile_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_exile_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_charIdx	BIGINT		
,	IN	p_TXIDX		BIGINT		
)
BEGIN



	DECLARE	v_memberGrade	INT;			
	DECLARE	v_guildName		VARCHAR(50);	
    DECLARE	v_afterMemberCnt	INT;		
	DECLARE	v_joinType		VARCHAR(1);		
	DECLARE	v_exp			BIGINT;			
	DECLARE	v_Result		INT DEFAULT 0;	
	DECLARE	v_Msg			TEXT;			

	DECLARE	v_errno		INT;
	DECLARE v_err_msg	TEXT;
	DECLARE v_Resultfn	INT;	
					
	DECLARE	v_useridx		BIGINT;

	DECLARE v_memberCnt	INT;	
	DECLARE v_memberMaxCnt	INT;	
	DECLARE v_upType	INT;	
	DECLARE v_iPartKeyMonth	INT;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_err_msg = MESSAGE_TEXT;
			SET v_Result := (v_errno * -1000) + v_Result;
			SET v_Msg := v_err_msg;
		ROLLBACK;
       
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_memberGrade := 0;
		SET v_guildName := '';
		SET v_afterMemberCnt := 0;
		SET v_joinType := '';
		SET v_exp := 0;
		SET v_Result := -4;
		SET v_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET v_memberGrade := 0;
			SET v_guildName := '';
			SET v_afterMemberCnt := 0;
			SET v_joinType := '';
			SET v_exp := 0;
			SET v_Result := -4;
			SET v_Msg := '';
		END;

		ELSE
		BEGIN

			SELECT user_idx INTO v_useridx FROM char_info WHERE char_idx = p_charIdx;
			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET v_memberGrade := 0;
				SET v_guildName := '';
				SET v_afterMemberCnt := 0;
				SET v_joinType := '';
				SET v_exp := 0;
				SET v_Result := v_Resultfn;
				SET v_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET v_memberGrade := 0;
					SET v_guildName := '';
					SET v_afterMemberCnt := 0;
					SET v_joinType := '';
					SET v_exp := 0;
					SET v_Result := v_Resultfn;
					SET v_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					SET v_iPartKeyMonth := fn_Get_PartKeyMonth();

					
					SELECT `name`, member_cnt, join_type, exp INTO v_guildName, v_memberCnt, v_joinType, v_exp FROM guild WHERE guild_idx = p_guildIdx;
					
					SET v_afterMemberCnt := v_memberCnt - 1;

					
					
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);

					
					IF v_memberGrade > 2 THEN
					BEGIN

						IF v_memberCnt > 1 THEN
						BEGIN
							SET v_memberGrade := 0;
							SET v_guildName := '';
							SET v_afterMemberCnt := 0;
							SET v_joinType := '';
							SET v_exp := 0;
							SET v_Result := -107;	
							SET v_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN
							
							
							START TRANSACTION;
								
								SET v_Resultfn := udf_guild_withdraw_Ins(p_guildIdx, v_iPartKeyMonth, p_TXIDX);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET v_memberGrade := 0;
									SET v_guildName := '';
									SET v_afterMemberCnt := 0;
									SET v_joinType := '';
									SET v_exp := 0;
									SET v_Result := v_Resultfn;
									SET v_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

								
								SET v_Resultfn := udf_guild_member_Del(p_guildIdx, p_charIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET v_memberGrade := 0;
									SET v_guildName := '';
									SET v_afterMemberCnt := 0;
									SET v_joinType := '';
									SET v_exp := 0;
									SET v_Result := v_Resultfn;
									SET v_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
                                
								
								SET v_Resultfn := udf_guild_Del(p_guildIdx, p_charIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET v_memberGrade := 0;
									SET v_guildName := '';
									SET v_afterMemberCnt := 0;
									SET v_joinType := '';
									SET v_exp := 0;
									SET v_Result := v_Resultfn;
									SET v_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
								
								-- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
								-- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
								-- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
								-- RDT_GUILD_ATTENDANCE = 10,		// 길드 출석
								DELETE FROM user_reddot WHERE user_idx = v_useridx AND char_idx = p_charIdx AND type_id IN (7,8,9,10);
                                
							COMMIT;

							SET v_Result := 1;	
							SET v_Msg := '';
							LEAVE root;
						END;
						END IF;
					END;

					ELSE
					BEGIN
						
						SET v_upType := 2;

						
						
						START TRANSACTION;
                        
							SET v_Resultfn := udf_guild_member_withdraw_Ins(p_guildIdx, p_charIdx, v_iPartKeyMonth, p_TXIDX);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET v_memberGrade := 0;
								SET v_guildName := '';
								SET v_afterMemberCnt := 0;
								SET v_joinType := '';
								SET v_exp := 0;
								SET v_Result := v_Resultfn;
								SET v_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;
							
							SET v_Resultfn := udf_guild_memberCnt_Upd(p_guildIdx, v_upType);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET v_memberGrade := 0;
								SET v_guildName := '';
								SET v_afterMemberCnt := 0;
								SET v_joinType := '';
								SET v_exp := 0;
								SET v_Result := v_Resultfn;
								SET v_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

							
							SET v_Resultfn := udf_guild_member_Del(p_guildIdx, p_charIdx);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET v_memberGrade := 0;
								SET v_guildName := '';
								SET v_afterMemberCnt := 0;
								SET v_joinType := '';
								SET v_exp := 0;
								SET v_Result := v_Resultfn;
								SET v_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;
							
							-- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
							-- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
							-- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
							-- RDT_GUILD_ATTENDANCE = 10,		// 길드 출석
							DELETE FROM user_reddot WHERE user_idx = v_useridx AND char_idx = p_charIdx AND type_id IN (7,8,9,10);
                           
						COMMIT;

						SET v_Result := 1;	
						SET v_Msg := '';
						LEAVE root;
					END;
					END IF;


				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;
    
    SELECT v_memberGrade, v_guildName, v_afterMemberCnt, v_joinType, v_exp, v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_GradeEntitle_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_GradeEntitle_Upd`(
	IN	p_guildIdx		BIGINT	
,	IN	p_charIdx		BIGINT	
,	IN	p_entitleCharIdx	BIGINT	
,	IN	p_masterGrade		INT	
,	IN	p_memberGrade		INT	
,	IN	p_limitCnt		INT	
)
BEGIN



	DECLARE	v_Result		INT;	
	DECLARE	v_Msg			TEXT;	

	CALL gusp_guild_member_GradeEntitle_Upd(p_guildIdx, p_charIdx, p_entitleCharIdx, p_masterGrade, p_memberGrade, p_limitCnt, v_Result, v_Msg);
    
    SELECT v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_Grade_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_Grade_Upd`(
	IN	p_guildIdx		BIGINT	
,	IN	p_charIdx		BIGINT	
,	IN	p_entitleCharIdx	BIGINT	
,	IN	p_masterGrade		INT	
,	IN	p_memberGrade		INT	
)
BEGIN



	DECLARE	v_Result		INT;	
	DECLARE	v_Msg			TEXT;	

	CALL gusp_guild_member_Grade_Upd(p_guildIdx, p_charIdx, p_entitleCharIdx, p_masterGrade, p_memberGrade, v_Result, v_Msg);
    
    SELECT v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_Ins`(
	IN	p_guildIdx		BIGINT		
,	IN	p_userIdx		BIGINT		
,	IN	p_nickname		VARCHAR(30)	
,	IN	p_charIdx		BIGINT		
,	IN	p_charType		INT		
,	IN	p_charLevel		INT		
,	IN	p_battlePower		INT		
,	IN	p_gamedbIdx		SMALLINT	
,	IN	p_memberGrade		INT		
,	IN	p_applicationCnt	INT		
,	IN 	p_rejoinTime	INT		
,	IN	p_application_message	VARCHAR(256)
)
BEGIN



	DECLARE	v_joinType		VARCHAR(1);	
	DECLARE	v_Result		INT;		
	DECLARE	v_Msg			TEXT;		

	CALL gusp_guild_member_Ins_c9(p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_memberGrade, p_applicationCnt, p_rejoinTime, p_application_message, v_joinType, v_Result, v_Msg);
    
    SELECT v_joinType, v_Result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_IsEntryWar_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_IsEntryWar_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_IsEntryWar	TINYINT	
)
BEGIN



	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guild_member_IsEntryWar_Upd(p_guildIdx, p_userIdx, p_IsEntryWar, v_Result, v_Msg);
    
    SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN
	DECLARE	v_montime	DATETIME;

	DECLARE	p_memberStatus	TINYINT;	
	SET p_memberStatus := 3;
    
    -- weekly_contribution init
	SET v_montime = fn_Get_ThisWeekMonday5am();
	-- 

	SELECT B.user_idx, B.nickname, B.char_idx, B.char_type, B.char_level, B.battle_power, B.gamedb_idx, B.member_grade, B.play_cnt, B.win_cnt, B.lose_cnt, B.draw_cnt,
		UNIX_TIMESTAMP(B.visit_date) as visit_date, UNIX_TIMESTAMP(B.last_play_date) as last_play_date, B.is_entry_war, B.selected_entry_war, B.join_war_cnt, B.member_status, 
        UNIX_TIMESTAMP(B.reg_date) as reg_date, B.guild_contribution, B.introduction
        , IF(v_montime < current_timestamp() AND v_montime > B.last_play_date, 0, B.weekly_contribution) AS weekly_contribution
	FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx
	WHERE A.guild_idx = p_guildIdx
	AND B.member_status < p_memberStatus
	ORDER BY B.member_grade DESC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_update_character_change` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_update_character_change`(
	IN	p_userIdx			BIGINT		
,	IN	p_charIdx			BIGINT		
,	IN	p_charType			INT			
,	IN	p_charLevel			INT			
,	IN	p_battlePower		INT			
)
BEGIN
	
    UPDATE guild_member
    -- SET char_idx = p_charIdx, char_type = p_charType, char_level = p_charLevel, battle_power = p_battlePower
    SET char_level = p_charLevel, battle_power = p_battlePower
    -- WHERE user_idx = p_userIdx;
    WHERE char_idx = p_charIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_update_contribution` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_update_contribution`(
	IN	p_userIdx			BIGINT		
,	IN	p_contribution		BIGINT		
)
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE v_final_guild_contribution 	BIGINT DEFAULT 0;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_guild_contribution; 
	END; 

	
	UPDATE guild_member
	SET guild_contribution = @guild_contribution := guild_contribution + p_contribution
	WHERE user_idx = p_userIdx;

	IF 0 = found_rows() THEN
		SET v_result = 101; 
    END IF;
    
    SET v_final_guild_contribution = @guild_contribution;

    
	SELECT v_result, v_final_guild_contribution; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_member_update_introduce` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_member_update_introduce`(
	IN	p_charIdx			BIGINT
,	IN	p_introduction		varchar(256)
)
BEGIN
	
    UPDATE guild_member
    SET introduction = p_introduction
    WHERE char_idx = p_charIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_raid_unlock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_raid_unlock_insert`(
	IN	p_GuildIdx		BIGINT			
,	IN 	p_GuildRaidId	INT				
,	IN	p_UnlockCost	INT				
)
BEGIN


	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 1;	

	DECLARE v_final_seal	BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1) + v_result;
		ROLLBACK;
        
        SELECT v_result, v_final_seal;
	END;

	root:
	BEGIN
		
		
		START TRANSACTION;
		
        
		
        
        UPDATE guild
        SET guild_seal = @guild_seal := guild_seal - p_UnlockCost
        WHERE guild_idx = p_GuildIdx;
        IF 0 = ROW_COUNT() THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
        
        IF @guild_seal < 0 THEN
			SET v_result = 102; 	
            LEAVE root;
        END IF;
        
        SET v_final_seal = @guild_seal;
        
        
        
        
        
        INSERT INTO guild_raid_unlock (guild_idx, raid_id) VALUES (p_GuildIdx, p_GuildRaidId);
        IF 0 = ROW_COUNT() THEN
			SET v_result = 103;		
			LEAVE root;
        END IF;
        
	END;
    
    
	IF v_result = 1 THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
    SELECT v_result, v_final_seal;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_Search_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_Search_Sel`(
	IN	p_name		VARCHAR(50)	
,	IN	p_joinTypeA	CHAR(1)		
,	IN	p_joinTypeB	CHAR(1)		
,	IN	p_joinTypeC	CHAR(1)		
,	IN	p_rank		BIGINT		
,	IN	p_exp		BIGINT		
,	IN	p_memMin	INT		
,	IN	p_memMax	INT		
,	IN	p_From		INT		
,	IN	p_Max		INT		
)
BEGIN



	
	

	DECLARE v_queryStringField	VARCHAR(500);	
	DECLARE v_queryStringFrom	VARCHAR(500);	

	
	SET v_queryStringField := ' A.guild_idx, A.master_char_idx, A.`name`, A.exp, A.`point`, A.member_cnt, A.member_max_cnt, A.mark_id, A.introduction, A.join_type, A.notice, A.war_win_cnt, A.rank_num, UNIX_TIMESTAMP(A.reg_date) as reg_date,
					B.nickname, B.char_type, B.char_level, B.battle_power ';

	
	SET v_queryStringFrom := ' FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx ';

	
	SET @queryStringMember := CONCAT( ' A.member_cnt BETWEEN ', p_memMin, ' AND ', p_memMax);

	
	IF p_name <> '' THEN
	BEGIN
		SET @queryStringName := CONCAT( ' AND A.`name` = ''', p_name, '''' );
	END;

	ELSE
	BEGIN
		SET @queryStringName := '';
	END;
	END IF;

	
	IF p_exp >= 0 THEN
	BEGIN
		SET @queryStringExp := CONCAT( ' AND A.exp >= ', p_exp );
	END;

	ELSE
	BEGIN
		SET @queryStringExp := '';
	END;
	END IF;

	
	IF p_rank >= 1 THEN
	BEGIN
		SET @queryStringRank := CONCAT( ' AND A.rank_num <= ', p_rank, ' AND NOT A.rank_num = 0 ' );
	END;

	ELSE
	BEGIN
		SET @queryStringRank := '';
	END;
	END IF;

	
	IF ( (p_joinTypeA <> '') || (p_joinTypeB <> '') || (p_joinTypeC <> '') ) THEN
	BEGIN
		SET @queryStringJoin := CONCAT(' AND A.join_type IN (', '''', p_joinTypeA, '''' ' , ' '''', p_joinTypeB, '''' ' , ' '''', p_joinTypeC, ''')');
	END;

	ELSE
	BEGIN
		SET @queryStringJoin := CONCAT(' AND A.join_type = '''' ') ;
	END;
	END IF;


	SET @queryString := CONCAT('SELECT', v_queryStringField, v_queryStringFrom, ' WHERE ', @queryStringMember, @queryStringName, @queryStringExp, @queryStringRank, @queryStringJoin,
					' ORDER BY A.rank_num, A.exp DESC LIMIT ', p_From, ', ', p_Max);

	PREPARE preSql FROM @queryString;
	EXECUTE preSql;

	
	

	DEALLOCATE PREPARE preSql;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	DECLARE p_memberGrade	INT;	
	SET p_memberGrade := 3;

	SELECT A.guild_idx, A.master_char_idx, A.`name`, A.exp, A.`point`, A.`guild_gold`, A.`guild_cashA`, A.`guild_seal`, A.member_cnt, A.member_max_cnt, A.mark_id, A.introduction, A.join_type, A.notice, 
		A.war_cnt, A.war_application, A.war_win_cnt, A.grow_target_merc, A.grow_target_merc_boss,
		A.grow_target_tower, A.battle_idx, A.buff_type, A.buff_value, UNIX_TIMESTAMP(A.buff_exp_date) as buff_exp_date, A.rank_num, UNIX_TIMESTAMP(A.reg_date) as reg_date,
		B.nickname, B.char_type, B.char_level, B.battle_power, B.gamedb_idx,
        A.member_visit_cnt, A.member_visit_point, UNIX_TIMESTAMP(A.attend_date) as attend_date,
        UNIX_TIMESTAMP(A.emblem_last_update_date) as emblem_last_update_date,
        UNIX_TIMESTAMP(A.name_last_update_date) as name_last_update_date
	FROM guild A 
		INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_char_idx = B.char_idx
	WHERE A.guild_idx = p_guildIdx
	AND B.member_grade = p_memberGrade;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_all_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_all_info`(
	IN	p_guildIdx	BIGINT	
)
BEGIN
	
    CALL gsp_mmo_guild_Sel(p_guildIdx);    
	
	CALL gsp_mmo_guild_member_Sel(p_guildIdx);
	
	CALL gsp_mmo_guild_Tower_Sel(p_guildIdx);    
    
    CALL gsp_mmo_guild_application_Sel(p_guildIdx);    
    
    CALL gusp_guild_war_history_Sel(p_guildIdx);    
    
    CALL gsp_mmo_guild_war_select_state(p_guildIdx);
        
    SELECT raid_id 
    FROM guild_raid_unlock
    WHERE guild_idx = p_guildIdx;
    
    SELECT guild_idx, event_id, mission_id, mission_value, UNIX_TIMESTAMP(expire_time) as expire_time
    FROM guild_event_mission
    WHERE guild_idx = p_guildIdx;
    
    
    -- SELECT target_guild_idx, ally_hostile FROM guild_ally_hostile WHERE guild_idx = p_guildIdx;
    
     SELECT A.target_guild_idx, B.`name`, B.mark_id, C.nickname, A.ally_hostile
	 FROM guild_ally_hostile A 
	 	INNER JOIN guild B ON A.target_guild_idx = B.guild_idx
	 	INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	 WHERE A.guild_idx = p_guildIdx;

	CALL gsp_mmo_guildalliance_request_list_sent(p_guildIdx);

	CALL gsp_mmo_guildalliance_request_list_received(p_guildIdx);
                
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_exp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_exp`(
	IN _guildidx bigint
)
BEGIN	
    SELECT exp
    FROM guild 
	WHERE _guildidx = guild_idx;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_forrank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_forrank`()
BEGIN

	
	select C.guild_idx, C.name, CA.nickname as master_name, mark_id, member_cnt, member_max_cnt, exp
    FROM guild C INNER JOIN guild_member CA
    ON C.guild_idx = CA.guild_idx AND C.master_user_idx = CA.user_idx;     
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_guildbuff` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `gsp_mmo_guild_select_guildbuff`(
	IN	p_guildId		BIGINT
)
BEGIN
	SELECT guild_idx, guild_category_id, ability_group, step FROM guild_ability WHERE guild_idx = p_guildId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_guildgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_guildgold`(
	IN	p_guildIdx		BIGINT    
)
BEGIN

	
    SELECT guild_gold FROM guild WHERE guild_idx = p_guildIdx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_rank_exp_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_rank_exp_topinfo`(
	IN 	p_guildIdx_my	BIGINT
,	IN	p_guildIdx1		BIGINT,	IN	p_guildIdx2		BIGINT,	IN	p_guildIdx3		BIGINT,	IN	p_guildIdx4		BIGINT,	IN	p_guildIdx5		BIGINT
,	IN	p_guildIdx6		BIGINT,	IN	p_guildIdx7		BIGINT,	IN	p_guildIdx8		BIGINT,	IN	p_guildIdx9		BIGINT,	IN	p_guildIdx10	BIGINT
,	IN	p_guildIdx11	BIGINT,	IN	p_guildIdx12	BIGINT,	IN	p_guildIdx13	BIGINT,	IN	p_guildIdx14	BIGINT,	IN	p_guildIdx15	BIGINT
,	IN	p_guildIdx16	BIGINT,	IN	p_guildIdx17	BIGINT,	IN	p_guildIdx18	BIGINT,	IN	p_guildIdx19	BIGINT,	IN	p_guildIdx20	BIGINT
,	IN	p_guildIdx21	BIGINT,	IN	p_guildIdx22	BIGINT,	IN	p_guildIdx23	BIGINT,	IN	p_guildIdx24	BIGINT,	IN	p_guildIdx25	BIGINT
,	IN	p_guildIdx26	BIGINT,	IN	p_guildIdx27	BIGINT,	IN	p_guildIdx28	BIGINT,	IN	p_guildIdx29	BIGINT,	IN	p_guildIdx30	BIGINT
,	IN	p_guildIdx31	BIGINT,	IN	p_guildIdx32	BIGINT,	IN	p_guildIdx33	BIGINT,	IN	p_guildIdx34	BIGINT,	IN	p_guildIdx35	BIGINT
,	IN	p_guildIdx36	BIGINT,	IN	p_guildIdx37	BIGINT,	IN	p_guildIdx38	BIGINT,	IN	p_guildIdx39	BIGINT,	IN	p_guildIdx40	BIGINT
,	IN	p_guildIdx41	BIGINT,	IN	p_guildIdx42	BIGINT,	IN	p_guildIdx43	BIGINT,	IN	p_guildIdx44	BIGINT,	IN	p_guildIdx45	BIGINT
,	IN	p_guildIdx46	BIGINT,	IN	p_guildIdx47	BIGINT,	IN	p_guildIdx48	BIGINT,	IN	p_guildIdx49	BIGINT,	IN	p_guildIdx50	BIGINT
,	IN	p_guildIdx51	BIGINT,	IN	p_guildIdx52	BIGINT,	IN	p_guildIdx53	BIGINT,	IN	p_guildIdx54	BIGINT,	IN	p_guildIdx55	BIGINT
,	IN	p_guildIdx56	BIGINT,	IN	p_guildIdx57	BIGINT,	IN	p_guildIdx58	BIGINT,	IN	p_guildIdx59	BIGINT,	IN	p_guildIdx60	BIGINT
,	IN	p_guildIdx61	BIGINT,	IN	p_guildIdx62	BIGINT,	IN	p_guildIdx63	BIGINT,	IN	p_guildIdx64	BIGINT,	IN	p_guildIdx65	BIGINT
,	IN	p_guildIdx66	BIGINT,	IN	p_guildIdx67	BIGINT,	IN	p_guildIdx68	BIGINT,	IN	p_guildIdx69	BIGINT,	IN	p_guildIdx70	BIGINT
,	IN	p_guildIdx71	BIGINT,	IN	p_guildIdx72	BIGINT,	IN	p_guildIdx73	BIGINT,	IN	p_guildIdx74	BIGINT,	IN	p_guildIdx75	BIGINT
,	IN	p_guildIdx76	BIGINT,	IN	p_guildIdx77	BIGINT,	IN	p_guildIdx78	BIGINT,	IN	p_guildIdx79	BIGINT,	IN	p_guildIdx80	BIGINT
,	IN	p_guildIdx81	BIGINT,	IN	p_guildIdx82	BIGINT,	IN	p_guildIdx83	BIGINT,	IN	p_guildIdx84	BIGINT,	IN	p_guildIdx85	BIGINT
,	IN	p_guildIdx86	BIGINT,	IN	p_guildIdx87	BIGINT,	IN	p_guildIdx88	BIGINT,	IN	p_guildIdx89	BIGINT,	IN	p_guildIdx90	BIGINT
,	IN	p_guildIdx91	BIGINT,	IN	p_guildIdx92	BIGINT,	IN	p_guildIdx93	BIGINT,	IN	p_guildIdx94	BIGINT,	IN	p_guildIdx95	BIGINT
,	IN	p_guildIdx96	BIGINT,	IN	p_guildIdx97	BIGINT,	IN	p_guildIdx98	BIGINT,	IN	p_guildIdx99	BIGINT,	IN	p_guildIdx100	BIGINT
)
    COMMENT 'TOP 100 부가 정보 받아오기'
BEGIN
	
	SELECT A.guild_idx, A.name AS guild_name, A.exp, A.member_cnt, A.member_max_cnt, A.mark_id, B.nickname AS master_name
	FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_user_idx = B.user_idx
	WHERE A.guild_idx IN(p_guildIdx_my, 
			p_guildIdx1, p_guildIdx2, p_guildIdx3, p_guildIdx4, p_guildIdx5, p_guildIdx6, p_guildIdx7, p_guildIdx8, p_guildIdx9, p_guildIdx10,
			p_guildIdx11, p_guildIdx12, p_guildIdx13, p_guildIdx14, p_guildIdx15, p_guildIdx16, p_guildIdx17, p_guildIdx18, p_guildIdx19, p_guildIdx20,
			p_guildIdx21, p_guildIdx22, p_guildIdx23, p_guildIdx24, p_guildIdx25, p_guildIdx26, p_guildIdx27, p_guildIdx28, p_guildIdx29, p_guildIdx30,
			p_guildIdx31, p_guildIdx32, p_guildIdx33, p_guildIdx34, p_guildIdx35, p_guildIdx36, p_guildIdx37, p_guildIdx38, p_guildIdx39, p_guildIdx40,
			p_guildIdx41, p_guildIdx42, p_guildIdx43, p_guildIdx44, p_guildIdx45, p_guildIdx46, p_guildIdx47, p_guildIdx48, p_guildIdx49, p_guildIdx50,
			p_guildIdx51, p_guildIdx52, p_guildIdx53, p_guildIdx54, p_guildIdx55, p_guildIdx56, p_guildIdx57, p_guildIdx58, p_guildIdx59, p_guildIdx60,
			p_guildIdx61, p_guildIdx62, p_guildIdx63, p_guildIdx64, p_guildIdx65, p_guildIdx66, p_guildIdx67, p_guildIdx68, p_guildIdx69, p_guildIdx70,
			p_guildIdx71, p_guildIdx72, p_guildIdx73, p_guildIdx74, p_guildIdx75, p_guildIdx76, p_guildIdx77, p_guildIdx78, p_guildIdx79, p_guildIdx80,
			p_guildIdx81, p_guildIdx82, p_guildIdx83, p_guildIdx84, p_guildIdx85, p_guildIdx86, p_guildIdx87, p_guildIdx88, p_guildIdx89, p_guildIdx90,
			p_guildIdx91, p_guildIdx92, p_guildIdx93, p_guildIdx94, p_guildIdx95, p_guildIdx96, p_guildIdx97, p_guildIdx98, p_guildIdx99, p_guildIdx100
			);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_rank_war_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_rank_war_topinfo`(
	IN 	p_guildIdx_my	BIGINT
,	IN	p_guildIdx1		BIGINT,	IN	p_guildIdx2		BIGINT,	IN	p_guildIdx3		BIGINT,	IN	p_guildIdx4		BIGINT,	IN	p_guildIdx5		BIGINT
,	IN	p_guildIdx6		BIGINT,	IN	p_guildIdx7		BIGINT,	IN	p_guildIdx8		BIGINT,	IN	p_guildIdx9		BIGINT,	IN	p_guildIdx10	BIGINT
,	IN	p_guildIdx11	BIGINT,	IN	p_guildIdx12	BIGINT,	IN	p_guildIdx13	BIGINT,	IN	p_guildIdx14	BIGINT,	IN	p_guildIdx15	BIGINT
,	IN	p_guildIdx16	BIGINT,	IN	p_guildIdx17	BIGINT,	IN	p_guildIdx18	BIGINT,	IN	p_guildIdx19	BIGINT,	IN	p_guildIdx20	BIGINT
,	IN	p_guildIdx21	BIGINT,	IN	p_guildIdx22	BIGINT,	IN	p_guildIdx23	BIGINT,	IN	p_guildIdx24	BIGINT,	IN	p_guildIdx25	BIGINT
,	IN	p_guildIdx26	BIGINT,	IN	p_guildIdx27	BIGINT,	IN	p_guildIdx28	BIGINT,	IN	p_guildIdx29	BIGINT,	IN	p_guildIdx30	BIGINT
,	IN	p_guildIdx31	BIGINT,	IN	p_guildIdx32	BIGINT,	IN	p_guildIdx33	BIGINT,	IN	p_guildIdx34	BIGINT,	IN	p_guildIdx35	BIGINT
,	IN	p_guildIdx36	BIGINT,	IN	p_guildIdx37	BIGINT,	IN	p_guildIdx38	BIGINT,	IN	p_guildIdx39	BIGINT,	IN	p_guildIdx40	BIGINT
,	IN	p_guildIdx41	BIGINT,	IN	p_guildIdx42	BIGINT,	IN	p_guildIdx43	BIGINT,	IN	p_guildIdx44	BIGINT,	IN	p_guildIdx45	BIGINT
,	IN	p_guildIdx46	BIGINT,	IN	p_guildIdx47	BIGINT,	IN	p_guildIdx48	BIGINT,	IN	p_guildIdx49	BIGINT,	IN	p_guildIdx50	BIGINT
,	IN	p_guildIdx51	BIGINT,	IN	p_guildIdx52	BIGINT,	IN	p_guildIdx53	BIGINT,	IN	p_guildIdx54	BIGINT,	IN	p_guildIdx55	BIGINT
,	IN	p_guildIdx56	BIGINT,	IN	p_guildIdx57	BIGINT,	IN	p_guildIdx58	BIGINT,	IN	p_guildIdx59	BIGINT,	IN	p_guildIdx60	BIGINT
,	IN	p_guildIdx61	BIGINT,	IN	p_guildIdx62	BIGINT,	IN	p_guildIdx63	BIGINT,	IN	p_guildIdx64	BIGINT,	IN	p_guildIdx65	BIGINT
,	IN	p_guildIdx66	BIGINT,	IN	p_guildIdx67	BIGINT,	IN	p_guildIdx68	BIGINT,	IN	p_guildIdx69	BIGINT,	IN	p_guildIdx70	BIGINT
,	IN	p_guildIdx71	BIGINT,	IN	p_guildIdx72	BIGINT,	IN	p_guildIdx73	BIGINT,	IN	p_guildIdx74	BIGINT,	IN	p_guildIdx75	BIGINT
,	IN	p_guildIdx76	BIGINT,	IN	p_guildIdx77	BIGINT,	IN	p_guildIdx78	BIGINT,	IN	p_guildIdx79	BIGINT,	IN	p_guildIdx80	BIGINT
,	IN	p_guildIdx81	BIGINT,	IN	p_guildIdx82	BIGINT,	IN	p_guildIdx83	BIGINT,	IN	p_guildIdx84	BIGINT,	IN	p_guildIdx85	BIGINT
,	IN	p_guildIdx86	BIGINT,	IN	p_guildIdx87	BIGINT,	IN	p_guildIdx88	BIGINT,	IN	p_guildIdx89	BIGINT,	IN	p_guildIdx90	BIGINT
,	IN	p_guildIdx91	BIGINT,	IN	p_guildIdx92	BIGINT,	IN	p_guildIdx93	BIGINT,	IN	p_guildIdx94	BIGINT,	IN	p_guildIdx95	BIGINT
,	IN	p_guildIdx96	BIGINT,	IN	p_guildIdx97	BIGINT,	IN	p_guildIdx98	BIGINT,	IN	p_guildIdx99	BIGINT,	IN	p_guildIdx100	BIGINT
)
    COMMENT 'TOP 100 부가 정보 받아오기'
BEGIN
	
	SELECT A.guild_idx, A.name AS guild_name, A.exp, A.mark_id, B.nickname AS master_name, A.war_cnt, A.war_win_cnt, A.war_lose_cnt
	FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_user_idx = B.user_idx
	WHERE A.guild_idx IN(p_guildIdx_my, 
			p_guildIdx1, p_guildIdx2, p_guildIdx3, p_guildIdx4, p_guildIdx5, p_guildIdx6, p_guildIdx7, p_guildIdx8, p_guildIdx9, p_guildIdx10,
			p_guildIdx11, p_guildIdx12, p_guildIdx13, p_guildIdx14, p_guildIdx15, p_guildIdx16, p_guildIdx17, p_guildIdx18, p_guildIdx19, p_guildIdx20,
			p_guildIdx21, p_guildIdx22, p_guildIdx23, p_guildIdx24, p_guildIdx25, p_guildIdx26, p_guildIdx27, p_guildIdx28, p_guildIdx29, p_guildIdx30,
			p_guildIdx31, p_guildIdx32, p_guildIdx33, p_guildIdx34, p_guildIdx35, p_guildIdx36, p_guildIdx37, p_guildIdx38, p_guildIdx39, p_guildIdx40,
			p_guildIdx41, p_guildIdx42, p_guildIdx43, p_guildIdx44, p_guildIdx45, p_guildIdx46, p_guildIdx47, p_guildIdx48, p_guildIdx49, p_guildIdx50,
			p_guildIdx51, p_guildIdx52, p_guildIdx53, p_guildIdx54, p_guildIdx55, p_guildIdx56, p_guildIdx57, p_guildIdx58, p_guildIdx59, p_guildIdx60,
			p_guildIdx61, p_guildIdx62, p_guildIdx63, p_guildIdx64, p_guildIdx65, p_guildIdx66, p_guildIdx67, p_guildIdx68, p_guildIdx69, p_guildIdx70,
			p_guildIdx71, p_guildIdx72, p_guildIdx73, p_guildIdx74, p_guildIdx75, p_guildIdx76, p_guildIdx77, p_guildIdx78, p_guildIdx79, p_guildIdx80,
			p_guildIdx81, p_guildIdx82, p_guildIdx83, p_guildIdx84, p_guildIdx85, p_guildIdx86, p_guildIdx87, p_guildIdx88, p_guildIdx89, p_guildIdx90,
			p_guildIdx91, p_guildIdx92, p_guildIdx93, p_guildIdx94, p_guildIdx95, p_guildIdx96, p_guildIdx97, p_guildIdx98, p_guildIdx99, p_guildIdx100
			);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_user_approval` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_user_approval`(
	IN	p_charIdx		BIGINT
)
BEGIN

    
	SELECT A.guild_idx, A.application_message, B.master_char_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) as reg_date,
		C.nickname, C.char_type, C.char_level, C.battle_power
	FROM guild_application A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	WHERE A.char_idx = p_charIdx;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_user_bookmark` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_user_bookmark`(
	IN	p_userIdx		BIGINT
)
BEGIN
    
    
	SELECT A.guild_idx, B.master_user_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) as reg_date,
		C.nickname, C.char_type, C.char_level, C.battle_power
	FROM guild_bookmark A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_user_idx = C.user_idx
	WHERE A.user_idx = p_userIdx
	ORDER BY A.reg_date DESC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_user_guildinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_user_guildinfo`(
	IN	_userId		BIGINT
,	IN	_charId		BIGINT
)
BEGIN
	DECLARE v_guild_idx 		BIGINT DEFAULT 0;	
    DECLARE v_castle_id 		INT DEFAULT 0;		
    DECLARE v_occupy_castle_id 	INT DEFAULT 0;
    DECLARE v_DLRT				DATETIME;
	DECLARE	v_montime			DATETIME;
    DECLARE	v_guildValue		BIGINT DEFAULT 0;
    
    
    SET v_DLRT = fn_Get_DateLineReferenceTime();
    
	-- weekly_contribution init
	SET v_montime = fn_Get_ThisWeekMonday5am();
	-- 
    
    
	-- SELECT guild_idx INTO v_guild_idx FROM guild_member WHERE user_idx = _userId;
    SELECT guild_idx INTO v_guild_idx FROM guild_member WHERE char_idx = _charId;
    
	SELECT castle_id INTO v_castle_id FROM guild_castle_occupy_application WHERE guild_idx = v_guild_idx;
	
    SELECT castle_id INTO v_occupy_castle_id FROM guild_castle WHERE guild_idx = v_guild_idx limit 1;
    
    
	
	SELECT G.guild_idx, G.name, G.mark_id, GM.member_grade, GM.guild_contribution
		, IF(v_montime < current_timestamp() AND v_montime > GM.last_play_date, 0, GM.weekly_contribution) AS weekly_contribution
        , v_castle_id, v_occupy_castle_id
		, IF(v_DLRT >= GM.visit_date, true, false) AS visit_new_day
    FROM guild_member GM, guild G
    -- WHERE gm.user_idx = _userId AND G.guild_idx = GM.guild_idx;
    WHERE gm.char_idx = _charId AND G.guild_idx = GM.guild_idx;
        
    
    SELECT buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, UNIX_TIMESTAMP(buff_time) as buff_time FROM guild_buff 
    WHERE guild_idx = v_guild_idx AND buff_time > now();  
    
    -- 길드 어빌리티
	SELECT guild_idx INTO v_guildValue FROM guild_member WHERE char_idx = _charId;
	SELECT guild_idx, guild_category_id, ability_group, step FROM guild_ability WHERE guild_idx = v_guildValue;

   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_user_guildinfo_weblobby2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_user_guildinfo_weblobby2`(
	IN	p_userIdx		BIGINT
,	IN	p_charIdx		BIGINT
)
BEGIN
	DECLARE v_guild_idx 		BIGINT DEFAULT 0;	
    DECLARE v_castle_id 		INT DEFAULT 0;		
    DECLARE v_occupy_castle_id 	INT DEFAULT 0;		
    
    
	-- SELECT guild_idx INTO v_guild_idx FROM guild_member WHERE user_idx = p_userIdx;    
    SELECT guild_idx INTO v_guild_idx FROM guild_member WHERE char_idx = p_charIdx;    
    
	SELECT castle_id INTO v_castle_id FROM guild_castle_occupy_application WHERE guild_idx = v_guild_idx;
	
    SELECT castle_id INTO v_occupy_castle_id FROM guild_castle WHERE guild_idx = v_guild_idx limit 1;    
    

	
	SELECT G.guild_idx, G.name, G.mark_id, GM.member_grade, GM.guild_contribution, v_castle_id, v_occupy_castle_id, IF(0 < DATEDIFF(NOW(), GM.visit_date), true, false) AS visit_new_day
    FROM guild_member GM, guild G
    WHERE GM.user_idx = p_userIdx AND G.guild_idx = GM.guild_idx;

	
	-- SELECT A.guild_idx, B.master_user_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) as reg_date,
    SELECT A.guild_idx, B.master_char_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) as reg_date,
		C.nickname, C.char_type, C.char_level, C.battle_power
	FROM guild_bookmark A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		-- INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_user_idx = C.user_idx
        INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	-- WHERE A.user_idx = p_userIdx
    WHERE A.char_idx = p_charIdx
	ORDER BY A.reg_date DESC;

	
	-- SELECT A.guild_idx, B.master_user_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) as reg_date,
    SELECT A.guild_idx, A.application_message, B.master_char_idx, B.`name`, B.exp, B.`point`, B.member_cnt, B.member_max_cnt, B.mark_id, B.introduction, B.join_type, B.notice, B.rank_num, UNIX_TIMESTAMP(B.reg_date) as reg_date,
		C.nickname, C.char_type, C.char_level, C.battle_power
	FROM guild_application A 
		INNER JOIN guild B ON A.guild_idx = B.guild_idx
		-- INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_user_idx = C.user_idx
        INNER JOIN guild_member C ON B.guild_idx = C.guild_idx AND B.master_char_idx = C.char_idx
	-- WHERE A.user_idx = p_userIdx;
    WHERE A.char_idx = p_charIdx;

    
    SELECT buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, UNIX_TIMESTAMP(buff_time) as buff_time FROM guild_buff 
    WHERE guild_idx = v_guild_idx AND buff_time > now();        
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_user_guild_index` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_user_guild_index`(
	IN	_userId		BIGINT
)
BEGIN

	
	SELECT G.guild_idx
    FROM guild_member GM, guild G
    WHERE gm.user_idx = _userId AND G.guild_idx = GM.guild_idx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_select_war_target` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_select_war_target`(
	IN	p_GuildWar_MinMember_Qty	INT		
)
    COMMENT '문파 대전 대상 문파 목록 얻기'
BEGIN
	
    
	SELECT guild_idx
    FROM guild 
    WHERE member_cnt >= p_GuildWar_MinMember_Qty;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_Tower_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_Tower_Sel`(
	IN	p_guildIdx	BIGINT	
)
BEGIN



	
	CALL gsp_mmo_guild_war_unit_Sel(p_guildIdx);

	
	CALL gsp_mmo_guild_war_setting_Sel(p_guildIdx);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_Upd`(
	IN	p_guildIdx				BIGINT		
,	IN	p_charIdx				BIGINT		
,	IN	p_markId				INT		
,	IN	p_joinType				CHAR(1)		
,	IN	p_introduction			VARCHAR(256)	
,	IN	p_notice				VARCHAR(512)
,   IN	p_isManagement			BOOL			-- TRUE:길드관리 FALSE:길드마크 
,	IN	p_guildMarkChangeCost	INT UNSIGNED 	-- 길드 마크 교체 비용
)
BEGIN
	
    DECLARE	v_Result			INT;	
	DECLARE	v_GuildTotalWealth	BIGINT;
	DECLARE	v_Msg				TEXT;		

	CALL gusp_guild_Upd(p_guildIdx, p_charIdx, p_markId, p_joinType, p_introduction, p_notice, p_isManagement, p_guildMarkChangeCost, v_Result, v_GuildTotalWealth, v_Msg);
    
    SELECT v_Result,v_GuildTotalWealth;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_application_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_application_finish`(
	IN p_basePoint1	INT
,	IN p_basePoint2	INT
,	IN p_basePoint3	INT
)
    COMMENT '성 점령전 신청 종료 처리'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    
    START TRANSACTION;
    
    root:
	BEGIN 
    
		
        TRUNCATE TABLE guild_castle_occupy_war;
		
		
        INSERT INTO guild_castle_occupy_war(castle_id, guild_idx, total_point)
		SELECT castle_id, guild_idx, p_basePoint1 FROM guild_castle;
        
        
        INSERT INTO guild_castle_occupy_war(castle_id, guild_idx, total_point)
		SELECT castle_id, guild_idx, p_basePoint2
		FROM guild_castle_occupy_application;
        
        
        TRUNCATE TABLE guild_castle;
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT v_result;
    
    
    IF v_result = 0 THEN
		SELECT a.castle_id, a.guild_idx, a.total_point, b.name 
		FROM guild_castle_occupy_war a 
			LEFT JOIN guild b ON a.guild_idx = b.guild_idx;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_cheat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_cheat`(
	IN	p_GuildID		BIGINT		
,	IN	p_GuildExp		BIGINT	
,	IN	p_GuildGold		BIGINT	
,	IN	p_GuildSeal		BIGINT	
)
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	
	DECLARE v_guild_exp 	BIGINT DEFAULT 0;			
	DECLARE v_guild_gold 	BIGINT DEFAULT 0;			
	DECLARE v_guild_seal 	BIGINT DEFAULT 0;			


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result, v_guild_exp, v_guild_gold, v_guild_seal;
	END;
	

	START TRANSACTION;
    
    root:
    BEGIN
		
		
		IF 0 < p_GuildExp THEN
			
			UPDATE guild
            SET exp = @guild_exp := p_GuildExp
			WHERE guild_idx = p_GuildID;
            
            IF 0 = ROW_COUNT() THEN
				SET v_result = 101;		
				LEAVE root;
            END IF; 

			SET v_guild_exp = @guild_exp;
		END IF;

		
		IF 0 < p_GuildGold THEN
			
			UPDATE guild
            SET guild_gold = @guild_gold := p_GuildGold
			WHERE guild_idx = p_GuildID;
            
            IF 0 = ROW_COUNT() THEN
				SET v_result = 102;		
				LEAVE root;
            END IF; 

			SET v_guild_gold = @guild_gold;
		END IF;

		
		IF 0 < p_GuildSeal THEN
			
			UPDATE guild
            SET guild_seal = @guild_seal := p_GuildSeal
			WHERE guild_idx = p_GuildID;
            
            IF 0 = ROW_COUNT() THEN
				SET v_result = 103;		
				LEAVE root;
            END IF; 

			SET v_guild_seal = @guild_seal;
		END IF;


		SELECT exp, guild_gold, guild_seal INTO v_guild_exp, v_guild_gold, v_guild_seal
		FROM guild
		WHERE guild_idx = p_GuildID;

		IF 0 = FOUND_ROWS() THEN
			SET v_result = 110;		
			LEAVE root;
		END IF; 

    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result, v_guild_exp, v_guild_gold, v_guild_seal;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_donation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_donation`(
	IN	p_GuildIdx			BIGINT	
,	IN 	p_UserID			BIGINT 	
,	IN 	p_DonationGold		BIGINT	
,	IN 	p_DonationSeal		BIGINT	
,	IN 	p_Contribution		BIGINT	
)
BEGIN


    DECLARE v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 1;	

	DECLARE v_final_guild_gold	BIGINT DEFAULT 0;	
    DECLARE v_final_guild_seal 	BIGINT DEFAULT 0;	
    DECLARE v_final_guild_contribution 	BIGINT DEFAULT 0;	
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_guild_gold, v_final_guild_seal, v_final_guild_contribution;
	END; 
    
    
	root:
    BEGIN
    
		
		IF v_final_guild_gold < 0 OR v_final_guild_seal < 0 THEN 
			SET v_result = 101;	
            LEAVE root;
        END IF;
    
		START TRANSACTION;
        subroot:
        BEGIN
			UPDATE guild
            SET guild_gold = @guild_gold := guild_gold + p_DonationGold,
				guild_seal = @guild_seal := guild_seal + p_DonationSeal
			WHERE guild_idx = p_GuildIdx;
            
            IF 0 = ROW_COUNT() THEN
				SET v_result = 111;	
				LEAVE subroot;
            END IF; 
        
			SET v_final_guild_gold = @guild_gold;
            SET v_final_guild_seal = @guild_seal;
            
            IF 0 < p_Contribution THEN
				UPDATE guild_member
				SET guild_contribution = @guild_contribution := guild_contribution + p_Contribution
				WHERE user_idx = p_UserID;
				
				IF 0 = ROW_COUNT() THEN
					SET v_result = 112;	
					LEAVE subroot;
				END IF; 
                
                SET v_final_guild_contribution = @guild_contribution;
            END IF;
            
        END;
        
		
		if 1 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;        
    END;
    

	SELECT v_result, v_final_guild_gold, v_final_guild_seal, v_final_guild_contribution;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_guildname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_guildname`(
	IN	p_GuildKey		BIGINT
,	IN 	p_GuildName		VARCHAR(30)
)
    COMMENT '길드명 업데이트'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);

		SELECT v_result;
	END;    
    	
   
    root:
    BEGIN
		IF (SELECT 1 = 1 FROM guild WHERE name = p_GuildName) THEN
			SET v_result = 101;	
			LEAVE root;
		END IF;

		START TRANSACTION;
		
		subroot:
		BEGIN
			
			
			UPDATE guild
			SET name = p_GuildName
			WHERE guild_idx = p_GuildKey;
			
			IF ROW_COUNT() = 0 THEN
				SET v_result = 102;	
				LEAVE subroot;
			END IF;
			
			UPDATE guild_war_regist
			SET name = p_GuildName
			WHERE guild_idx = p_GuildKey;
		END;
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;
		
	END;
		
	SELECT v_result;	  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_init`(
	IN	p_guildIdx		BIGINT	

,	IN	p_nextInitDate	BIGINT	
)
BEGIN


	DECLARE v_attendance_cnt 		SMALLINT 	DEFAULT 0;
    DECLARE v_attendance_init_date 	BIGINT 		DEFAULT 0;

    DECLARE v_errno	INT DEFAULT 0;
	DECLARE _result INT DEFAULT 0;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result, v_attendance_cnt, v_attendance_init_date;
	END; 
    
    UPDATE guild SET attendance_cnt = 0, attendance_init_date = FROM_UNIXTIME(p_nextInitDate)
    WHERE guild_idx = p_guildIdx AND attendance_init_date < now();
	
    SELECT attendance_cnt, UNIX_TIMESTAMP(attendance_init_date) INTO v_attendance_cnt, v_attendance_init_date FROM guild WHERE guild_idx = p_guildIdx ;
    
	SELECT _result, v_attendance_cnt, v_attendance_init_date;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_membermaxcnt` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_membermaxcnt`(
	IN	p_GuildKey		BIGINT	
,	IN 	p_MemberMaxCnt	INT		
)
    COMMENT '길드 최대 인원 업데이트'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);

		SELECT v_result;
	END;    

	
	
	UPDATE guild
	SET member_max_cnt = p_MemberMaxCnt
	WHERE guild_idx = p_GuildKey;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 101;	
	END IF;
		
	SELECT v_result;	  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_rank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_rank`(
	IN	_guildidx	BIGINT		
,	IN	_rank		INT			
)
BEGIN

	UPDATE guild
    SET rank_num = _rank
    WHERE guild_idx = _guildidx;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_resetrank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_resetrank`()
BEGIN

	UPDATE guild
    SET rank_num = 0;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_update_warrecord_reset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_update_warrecord_reset`(
)
BEGIN

	UPDATE guild
    SET war_cnt = 0, war_win_cnt = 0, war_lose_cnt = 0;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_Upd_attend` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_Upd_attend`(
	IN	p_guildIdx			BIGINT	
,	IN	p_charIdx			BIGINT	

,	IN	p_exp				BIGINT
,	IN 	p_addguildpoint		INT
,	IN	p_guildmaxexp		BIGINT
)
    COMMENT '길드 출석'
BEGIN
	DECLARE v_final_exp BIGINT DEFAULT 0;
	
	DECLARE v_useridx BIGINT DEFAULT 0;
    
    DECLARE v_final_attend_cnt INT DEFAULT 0;
    DECLARE v_final_attend_date BIGINT DEFAULT 0;
    
    DECLARE v_DLRT					DATETIME;
    DECLARE v_last_attend_date datetime DEFAULT NOW();
    DECLARE v_last_play_date datetime DEFAULT NOW();

	DECLARE v_errno	INT DEFAULT 0;
	DECLARE v_result INT DEFAULT 0;
    
	DECLARE v_final_guildpoint	INT DEFAULT 0;
    
	DECLARE	v_montime				DATETIME;
    DECLARE v_weekly_contribution	INT DEFAULT 0;
    DECLARE v_final_contribution	BIGINT DEFAULT 0;
       
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_exp, v_final_attend_cnt, unix_timestamp(v_final_attend_date) as v_final_attend_date
				, v_final_guildpoint, v_weekly_contribution, v_final_contribution;
	END; 
    
    START TRANSACTION;
    
    root:
    BEGIN
		SET v_DLRT = fn_Get_DateLineReferenceTime();
		
		IF NOT EXISTS (SELECT * FROM guild WHERE guild_idx = p_guildIdx) THEN
			SET v_result = 100;
            LEAVE root;
		END IF;
        
        SELECT user_idx INTO v_useridx FROM char_info WHERE char_idx = p_charIdx;
        IF row_count() <= 0 THEN
			SET v_result = 109;
			LEAVE root;	
		END IF;
        
        SELECT attend_date INTO v_final_attend_date FROM guild WHERE guild_idx = p_guildIdx;
                
        
        IF v_final_attend_date < v_DLRT THEN
			UPDATE guild SET member_visit_cnt = 0, member_visit_point = 0, attend_date = current_timestamp() WHERE guild_idx = p_guildIdx;
            IF row_count() <= 0 THEN
				SET v_result = 101;
				LEAVE root;	
            END IF;
            
            SET v_final_attend_date = current_timestamp();
		END IF;
        
		
        IF NOT EXISTS (SELECT * FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx) THEN
			SET v_result = 102;
            LEAVE root;
		END IF;
		
        
        SELECT visit_date, guild_contribution, weekly_contribution, last_play_date INTO v_last_attend_date, v_final_contribution, v_weekly_contribution, v_last_play_date FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;
        
        
        IF v_last_attend_date >= v_DLRT THEN
			SET v_result = 103;
            LEAVE root;
        END IF;
        
        -- weekly_contribution init
		SET v_montime = fn_Get_ThisWeekMonday5am();
		IF v_montime < current_timestamp() AND v_montime > v_last_play_date THEN
			SET v_weekly_contribution = 0;
			UPDATE guild_member SET weekly_contribution = 0 WHERE guild_idx = p_guildIdx;
        END IF;
        
        IF p_exp > 0 THEN
			SET v_weekly_contribution = v_weekly_contribution + p_exp;
            SET v_final_contribution = v_final_contribution + p_exp;
        END IF;
        -- 
        
        UPDATE guild_member SET visit_date = current_timestamp(), weekly_contribution = v_weekly_contribution, guild_contribution = v_final_contribution, last_play_date = current_timestamp() WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;
        IF row_count() <= 0 THEN
			SET v_result = 104;
			LEAVE root;	
		END IF;
        
        
        IF p_exp > 0 THEN
			UPDATE guild SET exp = (
				CASE 
					WHEN (@guild_exp := exp + p_exp) > p_guildmaxexp THEN (@guild_exp := p_guildmaxexp)
					ELSE @guild_exp 
				END
				) WHERE guild_idx = p_guildIdx;
                
			IF row_count() <= 0 THEN
				SET v_result = 105;
				LEAVE root;	
			END IF;
        END IF;
        
        --
        IF p_addguildpoint > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_guildpoint(p_charIdx, p_addguildpoint, v_final_guildpoint, v_result);		
			IF v_result != 0 THEN
				SET v_result = 106;
				LEAVE root;
			END IF;
        END IF;
        --
        
        UPDATE guild SET member_visit_cnt = (@guild_member_visit_cnt := member_visit_cnt + 1) WHERE guild_idx = p_guildIdx;
        IF row_count() <= 0 THEN
			SET v_result = 106;
			LEAVE root;	
		END IF;
        
        SET v_final_exp = @guild_exp
			, v_final_attend_cnt = @guild_member_visit_cnt;
			
	END;
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
    SELECT v_result, v_final_exp, v_final_attend_cnt, unix_timestamp(v_final_attend_date) as v_final_attend_date
			, v_final_guildpoint, v_weekly_contribution, v_final_contribution;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_insert_guild_info_make` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_insert_guild_info_make`(
	IN	p_guildIdx			BIGINT		
,	IN 	p_guildWarState		INT			
,	IN 	p_periodNum			TINYINT		
,	IN 	p_warMemberCntMin	SMALLINT	
,	IN 	p_warMemberCntMax	SMALLINT	
)
BEGIN	
    DECLARE v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 1;			
    
    DECLARE v_callresult		INT DEFAULT 0;
		
	DECLARE v_guildIdx			BIGINT DEFAULT 0;
	DECLARE v_guildName			VARCHAR(50)	DEFAULT '';	
    DECLARE v_markID			INT DEFAULT 0;			
    DECLARE v_masterNick		VARCHAR(30) DEFAULT '';	
    DECLARE v_masterCharType	INT DEFAULT 0;			
    DECLARE v_masterCharLevel	INT DEFAULT 0;			

    DECLARE v_warApplication	TINYINT DEFAULT 0;		
    DECLARE v_warMemberCnt		INT DEFAULT 0;			
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result; 
	END;        
    
    
    
	root:
    BEGIN
		
        SELECT A.guild_idx, A.`name`, A.mark_id, A.war_application, B.nickname, B.char_type, B.char_level
		INTO v_guildIdx, v_guildName, v_markID, v_warApplication, v_masterNick, v_masterCharType, v_masterCharLevel
		FROM guild A 
			INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_user_idx = B.user_idx
		WHERE A.guild_idx = p_guildIdx;
        
        IF FOUND_ROWS() = 0 THEN 
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
		SELECT count(*) INTO v_warMemberCnt
		FROM guild_member
		WHERE guild_idx = p_guildIdx;
        
        IF v_warMemberCnt < p_warMemberCntMin THEN
			SET v_result = 102;		
			LEAVE root;
        END IF;


		DELETE FROM guild_war_regist
		WHERE guild_idx = p_guildIdx;  

		DELETE FROM guild_war_member
		WHERE guild_idx = p_guildIdx;

            
		START TRANSACTION;
                
		
        subroot:
        BEGIN

			SET v_callresult := udf_guild_war_regist_insert_info(p_guildIdx, v_guildName, v_markID, v_masterNick, v_masterCharType, v_masterCharLevel, p_guildWarState, p_periodNum);			
			IF v_callresult <> 1 THEN
			BEGIN
				SET v_result = 103;		
				LEAVE subroot;
			END;
			END IF;

			INSERT INTO guild_war_member (guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade)
			SELECT guild_idx, user_idx, gamedb_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade
			FROM guild_member
			WHERE guild_idx = p_guildIdx order by selected_entry_war desc, rand() limit p_warMemberCntMin;
			
			IF ROW_COUNT() = 0 THEN
				SET v_result = 104;	
                LEAVE subroot;
            END IF;
		END;
                
		IF 1 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;
       
	END;

	
    SELECT v_result;
    
    
    IF 1 = v_result THEN
    BEGIN   
		
		
		SELECT guild_idx, `name`, mark_id, master_user_nickname, master_char_type, master_char_level, guild_war_state, peorid_num, UNIX_TIMESTAMP(reg_date) as reg_date
		FROM guild_war_regist
        WHERE guild_idx = p_guildIdx;
		
		
		SELECT guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade, 
				reward_contribution, reward_gold, reward_point,
				first_nick, first_attack_star, first_attack_destroy, second_nick, second_attack_star, second_attack_destroy,
				fight_count, first_idx, second_idx, fight_comp_count, defence_comp_count
		FROM guild_war_member
        WHERE guild_idx = p_guildIdx;

		
		CALL gsp_mmo_guild_Tower_Sel(p_guildIdx);
		
		
		CALL gusp_guild_war_history_Sel(p_guildIdx);        
    
    END;
    END IF;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_matching_insert_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_matching_insert_info`(
	IN	p_battleIdx			BIGINT		
,	IN	p_firstGuildIdx		BIGINT		
,	IN	p_secondGuildIdx	BIGINT		
,	IN	p_startTime			BIGINT		
,	IN	p_endTime			BIGINT		
,	IN	p_guildWarState		INT			
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1000);
		ROLLBACK;
        
        SELECT v_Result;
	END;


	
	
	IF (p_battleIdx IS NULL) || (p_battleIdx < 1) || (p_firstGuildIdx IS NULL) || (p_firstGuildIdx < 1) || (p_secondGuildIdx IS NULL) || (p_secondGuildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
				
                SET v_Resultfn := udf_guild_war_regist_update_state_multi(p_firstGuildIdx, p_secondGuildIdx, p_guildWarState);
                
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;
                        
				
				SET v_Resultfn := udf_guild_war_matching_insert_info(p_battleIdx, p_firstGuildIdx, p_secondGuildIdx, p_guildWarState, p_startTime, p_endTime);
				
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;
                
                
                SET v_Resultfn := udf_guild_BattleIdx_Upd(p_firstGuildIdx, p_battleIdx);
				
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;
                
                
                SET v_Resultfn := udf_guild_BattleIdx_Upd(p_secondGuildIdx, p_battleIdx);
				
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_Multi_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_Multi_Ins`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_warUnitCnt		INT	
,	IN	p_warSetCnt		INT	
,	IN	p_slot1			TINYINT	
,	IN	p_type1			TINYINT	
,	IN	p_id1			INT	
,	IN	p_slot2			TINYINT	
,	IN	p_type2			TINYINT	
,	IN	p_id2			INT	
,	IN	p_slot3			TINYINT	
,	IN	p_type3			TINYINT	
,	IN	p_id3			INT	
,	IN	p_slot4			TINYINT	
,	IN	p_type4			TINYINT	
,	IN	p_id4			INT	
,	IN	p_slot5			TINYINT	
,	IN	p_type5			TINYINT	
,	IN	p_id5			INT	
,	IN	p_slot6			TINYINT	
,	IN	p_type6			TINYINT	
,	IN	p_id6			INT	
,	IN	p_slot7			TINYINT	
,	IN	p_type7			TINYINT	
,	IN	p_id7			INT	
,	IN	p_slot8			TINYINT	
,	IN	p_type8			TINYINT	
,	IN	p_id8			INT	
,	IN	p_slot9			TINYINT	
,	IN	p_type9			TINYINT	
,	IN	p_id9			INT	
,	IN	p_slot10		TINYINT	
,	IN	p_type10		TINYINT	
,	IN	p_id10			INT	
,	IN	p_slot11		TINYINT	
,	IN	p_type11		TINYINT	
,	IN	p_id11			INT	
,	IN	p_slot12		TINYINT	
,	IN	p_type12		TINYINT	
,	IN	p_id12			INT	
,	IN	p_slot13		TINYINT	
,	IN	p_type13		TINYINT	
,	IN	p_id13			INT	
,	IN	p_slot14		TINYINT	
,	IN	p_type14		TINYINT	
,	IN	p_id14			INT	
,	IN	p_slot15		TINYINT	
,	IN	p_type15		TINYINT	
,	IN	p_id15			INT	
,	IN	p_slot16		TINYINT	
,	IN	p_type16		TINYINT	
,	IN	p_id16			INT	
,	IN	p_slot17		TINYINT	
,	IN	p_type17		TINYINT	
,	IN	p_id17			INT	
,	IN	p_slot18		TINYINT	
,	IN	p_type18		TINYINT	
,	IN	p_id18			INT	
,	IN	p_slot19		TINYINT	
,	IN	p_type19		TINYINT	
,	IN	p_id19			INT	
,	IN	p_slot20		TINYINT	
,	IN	p_type20		TINYINT	
,	IN	p_id20			INT	
,	IN	p_warUnitId1		INT	
,	IN	p_warUnitLevel1		INT	
,	IN	p_warUnitExp1		INT	
,	IN	p_warUnitId2		INT	
,	IN	p_warUnitLevel2		INT	
,	IN	p_warUnitExp2		INT	
,	IN	p_warUnitId3		INT	
,	IN	p_warUnitLevel3		INT	
,	IN	p_warUnitExp3		INT	
,	IN	p_warUnitId4		INT	
,	IN	p_warUnitLevel4		INT	
,	IN	p_warUnitExp4		INT	
,	IN	p_warUnitId5		INT	
,	IN	p_warUnitLevel5		INT	
,	IN	p_warUnitExp5		INT	
,	IN	p_warUnitId6		INT	
,	IN	p_warUnitLevel6		INT	
,	IN	p_warUnitExp6		INT	
,	IN	p_warUnitId7		INT	
,	IN	p_warUnitLevel7		INT	
,	IN	p_warUnitExp7		INT	
,	IN	p_warUnitId8		INT	
,	IN	p_warUnitLevel8		INT	
,	IN	p_warUnitExp8		INT	
,	IN	p_warUnitId9		INT	
,	IN	p_warUnitLevel9		INT	
,	IN	p_warUnitExp9		INT	
,	IN	p_warUnitId10		INT	
,	IN	p_warUnitLevel10	INT	
,	IN	p_warUnitExp10		INT	
,	IN	p_warUnitId11		INT	
,	IN	p_warUnitLevel11	INT	
,	IN	p_warUnitExp11		INT	
,	IN	p_warUnitId12		INT	
,	IN	p_warUnitLevel12	INT	
,	IN	p_warUnitExp12		INT	
,	IN	p_warUnitId13		INT	
,	IN	p_warUnitLevel13	INT	
,	IN	p_warUnitExp13		INT	
,	IN	p_warUnitId14		INT	
,	IN	p_warUnitLevel14	INT	
,	IN	p_warUnitExp14		INT	
,	IN	p_warUnitId15		INT	
,	IN	p_warUnitLevel15	INT	
,	IN	p_warUnitExp15		INT	
,	IN	p_warUnitId16		INT	
,	IN	p_warUnitLevel16	INT	
,	IN	p_warUnitExp16		INT	
,	IN	p_warUnitId17		INT	
,	IN	p_warUnitLevel17	INT	
,	IN	p_warUnitExp17		INT	
,	IN	p_warUnitId18		INT	
,	IN	p_warUnitLevel18	INT	
,	IN	p_warUnitExp18		INT	
,	IN	p_warUnitId19		INT	
,	IN	p_warUnitLevel19	INT	
,	IN	p_warUnitExp19		INT	
,	IN	p_warUnitId20		INT	
,	IN	p_warUnitLevel20	INT	
,	IN	p_warUnitExp20		INT	
)
BEGIN



	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guild_war_Multi_Ins(p_guildIdx, p_userIdx, p_warUnitCnt, p_warSetCnt,
									p_slot1, p_type1, p_id1,
									p_slot2, p_type2, p_id2,
									p_slot3, p_type3, p_id3,
									p_slot4, p_type4, p_id4,
									p_slot5, p_type5, p_id5,
									p_slot6, p_type6, p_id6,
									p_slot7, p_type7, p_id7,
									p_slot8, p_type8, p_id8,
									p_slot9, p_type9, p_id9,
									p_slot10, p_type10, p_id10,
									p_slot11, p_type11, p_id11,
									p_slot12, p_type12, p_id12,
									p_slot13, p_type13, p_id13,
									p_slot14, p_type14, p_id14,
									p_slot15, p_type15, p_id15,
									p_slot16, p_type16, p_id16,
									p_slot17, p_type17, p_id17,
									p_slot18, p_type18, p_id18,
									p_slot19, p_type19, p_id19,
									p_slot20, p_type20, p_id20,
									p_warUnitId1, p_warUnitLevel1, p_warUnitExp1,
									p_warUnitId2, p_warUnitLevel2, p_warUnitExp2,
									p_warUnitId3, p_warUnitLevel3, p_warUnitExp3,
									p_warUnitId4, p_warUnitLevel4, p_warUnitExp4,
									p_warUnitId5, p_warUnitLevel5, p_warUnitExp5,
									p_warUnitId6, p_warUnitLevel6, p_warUnitExp6,
									p_warUnitId7, p_warUnitLevel7, p_warUnitExp7,
									p_warUnitId8, p_warUnitLevel8, p_warUnitExp8,
									p_warUnitId9, p_warUnitLevel9, p_warUnitExp9,
									p_warUnitId10, p_warUnitLevel10, p_warUnitExp10,
									p_warUnitId11, p_warUnitLevel11, p_warUnitExp11,
									p_warUnitId12, p_warUnitLevel12, p_warUnitExp12,
									p_warUnitId13, p_warUnitLevel13, p_warUnitExp13,
									p_warUnitId14, p_warUnitLevel14, p_warUnitExp14,
									p_warUnitId15, p_warUnitLevel15, p_warUnitExp15,
									p_warUnitId16, p_warUnitLevel16, p_warUnitExp16,
									p_warUnitId17, p_warUnitLevel17, p_warUnitExp17,
									p_warUnitId18, p_warUnitLevel18, p_warUnitExp18,
									p_warUnitId19, p_warUnitLevel19, p_warUnitExp19,
									p_warUnitId20, p_warUnitLevel20, p_warUnitExp20,
                                    v_Result, v_Msg);
                                    
	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_regist_delete_all_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_regist_delete_all_info`(
	IN	p_guildIdx			BIGINT		
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_Result;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
				
                SET v_Resultfn := udf_guild_war_regist_delete_info(p_guildIdx);
                
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;
                        
				
				SET v_Resultfn := udf_guild_war_member_delete_multi(p_guildIdx);
				
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_regist_delete_application` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_regist_delete_application`(
	IN	p_guildIdx			BIGINT		
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_Result;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
            
				UPDATE guild
                SET war_application = 0
                WHERE guild_idx = p_guildIdx;
                
				
				DELETE FROM guild_war_regist WHERE guild_idx = p_guildIdx;
                
				
				DELETE FROM guild_war_member WHERE guild_idx = p_guildIdx;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_regist_delete_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_regist_delete_info`(
	IN	p_guildIdx			BIGINT		
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_Result;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
            
				
				DELETE FROM guild_war_regist WHERE guild_idx = p_guildIdx;
                
				
				DELETE FROM guild_war_member WHERE guild_idx = p_guildIdx;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_regist_insert_all_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_regist_insert_all_info`(
	IN	p_guildIdx			BIGINT		
,	IN	p_name				VARCHAR(50) 
,	IN	p_markId			INT			
,	IN	p_masterNick		VARCHAR(30)	
,	IN	p_masterCharType	INT			
,	IN	p_masterCharLevel	INT			
,	IN	p_guildWarState		INT			
,	IN	p_peoridNum			SMALLINT	
,	IN	p_memberCount		INT			

,	IN	p_userIdx1			BIGINT			
,	IN	p_gameDBIdx1		SMALLINT	
,	IN	p_nickname1			VARCHAR(30)	
,	IN	p_charIdx1			BIGINT			
,	IN	p_charType1			INT			
,	IN	p_charLevel1		INT			
,	IN	p_battlePower1		INT			
,	IN	p_memberGrade1		INT			

,	IN	p_userIdx2			BIGINT			
,	IN	p_gameDBIdx2		SMALLINT	
,	IN	p_nickname2			VARCHAR(30)	
,	IN	p_charIdx2			BIGINT			
,	IN	p_charType2			INT			
,	IN	p_charLevel2		INT			
,	IN	p_battlePower2		INT			
,	IN	p_memberGrade2		INT			

,	IN	p_userIdx3			BIGINT			
,	IN	p_gameDBIdx3		SMALLINT	
,	IN	p_nickname3			VARCHAR(30)	
,	IN	p_charIdx3			BIGINT			
,	IN	p_charType3			INT			
,	IN	p_charLevel3		INT			
,	IN	p_battlePower3		INT			
,	IN	p_memberGrade3		INT			

,	IN	p_userIdx4			BIGINT			
,	IN	p_gameDBIdx4		SMALLINT	
,	IN	p_nickname4			VARCHAR(30)	
,	IN	p_charIdx4			BIGINT			
,	IN	p_charType4			INT			
,	IN	p_charLevel4		INT			
,	IN	p_battlePower4		INT			
,	IN	p_memberGrade4		INT			

,	IN	p_userIdx5			BIGINT			
,	IN	p_gameDBIdx5		SMALLINT	
,	IN	p_nickname5			VARCHAR(30)	
,	IN	p_charIdx5			BIGINT			
,	IN	p_charType5			INT			
,	IN	p_charLevel5		INT			
,	IN	p_battlePower5		INT			
,	IN	p_memberGrade5		INT			

,	IN	p_userIdx6			BIGINT			
,	IN	p_gameDBIdx6		SMALLINT	
,	IN	p_nickname6			VARCHAR(30)	
,	IN	p_charIdx6			BIGINT			
,	IN	p_charType6			INT			
,	IN	p_charLevel6		INT			
,	IN	p_battlePower6		INT			
,	IN	p_memberGrade6		INT			

,	IN	p_userIdx7			BIGINT			
,	IN	p_gameDBIdx7		SMALLINT	
,	IN	p_nickname7			VARCHAR(30)	
,	IN	p_charIdx7			BIGINT			
,	IN	p_charType7			INT			
,	IN	p_charLevel7		INT			
,	IN	p_battlePower7		INT			
,	IN	p_memberGrade7		INT			

,	IN	p_userIdx8			BIGINT			
,	IN	p_gameDBIdx8			SMALLINT	
,	IN	p_nickname8			VARCHAR(30)	
,	IN	p_charIdx8			BIGINT			
,	IN	p_charType8			INT			
,	IN	p_charLevel8		INT			
,	IN	p_battlePower8		INT			
,	IN	p_memberGrade8		INT			

,	IN	p_userIdx9			BIGINT			
,	IN	p_gameDBIdx9			SMALLINT	
,	IN	p_nickname9			VARCHAR(30)	
,	IN	p_charIdx9			BIGINT			
,	IN	p_charType9			INT			
,	IN	p_charLevel9		INT			
,	IN	p_battlePower9		INT			
,	IN	p_memberGrade9		INT			

,	IN	p_userIdx10			BIGINT			
,	IN	p_gameDBIdx10			SMALLINT	
,	IN	p_nickname10			VARCHAR(30)	
,	IN	p_charIdx10			BIGINT			
,	IN	p_charType10			INT			
,	IN	p_charLevel10		INT			
,	IN	p_battlePower10		INT			
,	IN	p_memberGrade10		INT			

,	IN	p_userIdx11			BIGINT			
,	IN	p_gameDBIdx11			SMALLINT	
,	IN	p_nickname11			VARCHAR(30)	
,	IN	p_charIdx11			BIGINT			
,	IN	p_charType11			INT			
,	IN	p_charLevel11		INT			
,	IN	p_battlePower11		INT			
,	IN	p_memberGrade11		INT			

,	IN	p_userIdx12			BIGINT			
,	IN	p_gameDBIdx12			SMALLINT	
,	IN	p_nickname12			VARCHAR(30)	
,	IN	p_charIdx12			BIGINT			
,	IN	p_charType12			INT			
,	IN	p_charLevel12		INT			
,	IN	p_battlePower12		INT			
,	IN	p_memberGrade12		INT			

,	IN	p_userIdx13			BIGINT			
,	IN	p_gameDBIdx13			SMALLINT	
,	IN	p_nickname13			VARCHAR(30)	
,	IN	p_charIdx13			BIGINT			
,	IN	p_charType13			INT			
,	IN	p_charLevel13		INT			
,	IN	p_battlePower13		INT			
,	IN	p_memberGrade13		INT			

,	IN	p_userIdx14			BIGINT			
,	IN	p_gameDBIdx14			SMALLINT	
,	IN	p_nickname14			VARCHAR(30)	
,	IN	p_charIdx14			BIGINT			
,	IN	p_charType14			INT			
,	IN	p_charLevel14		INT			
,	IN	p_battlePower14		INT			
,	IN	p_memberGrade14		INT			

,	IN	p_userIdx15			BIGINT			
,	IN	p_gameDBIdx15			SMALLINT	
,	IN	p_nickname15			VARCHAR(30)	
,	IN	p_charIdx15			BIGINT			
,	IN	p_charType15			INT			
,	IN	p_charLevel15		INT			
,	IN	p_battlePower15		INT			
,	IN	p_memberGrade15		INT			

,	IN	p_userIdx16			BIGINT			
,	IN	p_gameDBIdx16			SMALLINT	
,	IN	p_nickname16			VARCHAR(30)	
,	IN	p_charIdx16			BIGINT			
,	IN	p_charType16			INT			
,	IN	p_charLevel16		INT			
,	IN	p_battlePower16		INT			
,	IN	p_memberGrade16		INT			

,	IN	p_userIdx17			BIGINT			
,	IN	p_gameDBIdx17			SMALLINT	
,	IN	p_nickname17			VARCHAR(30)	
,	IN	p_charIdx17			BIGINT			
,	IN	p_charType17			INT			
,	IN	p_charLevel17		INT			
,	IN	p_battlePower17		INT			
,	IN	p_memberGrade17		INT			

,	IN	p_userIdx18			BIGINT			
,	IN	p_gameDBIdx18			SMALLINT	
,	IN	p_nickname18			VARCHAR(30)	
,	IN	p_charIdx18			BIGINT			
,	IN	p_charType18			INT			
,	IN	p_charLevel18		INT			
,	IN	p_battlePower18		INT			
,	IN	p_memberGrade18		INT			

,	IN	p_userIdx19			BIGINT			
,	IN	p_gameDBIdx19			SMALLINT	
,	IN	p_nickname19			VARCHAR(30)	
,	IN	p_charIdx19			BIGINT			
,	IN	p_charType19			INT			
,	IN	p_charLevel19		INT			
,	IN	p_battlePower19		INT			
,	IN	p_memberGrade19		INT			

,	IN	p_userIdx20			BIGINT			
,	IN	p_gameDBIdx20			SMALLINT	
,	IN	p_nickname20			VARCHAR(30)	
,	IN	p_charIdx20			BIGINT			
,	IN	p_charType20			INT			
,	IN	p_charLevel20		INT			
,	IN	p_battlePower20		INT			
,	IN	p_memberGrade20		INT			

,	IN	p_userIdx21			BIGINT			
,	IN	p_gameDBIdx21			SMALLINT	
,	IN	p_nickname21			VARCHAR(30)	
,	IN	p_charIdx21			BIGINT			
,	IN	p_charType21			INT			
,	IN	p_charLevel21		INT			
,	IN	p_battlePower21		INT			
,	IN	p_memberGrade21		INT			

,	IN	p_userIdx22			BIGINT			
,	IN	p_gameDBIdx22			SMALLINT	
,	IN	p_nickname22			VARCHAR(30)	
,	IN	p_charIdx22			BIGINT			
,	IN	p_charType22			INT			
,	IN	p_charLevel22		INT			
,	IN	p_battlePower22		INT			
,	IN	p_memberGrade22		INT			

,	IN	p_userIdx23			BIGINT			
,	IN	p_gameDBIdx23			SMALLINT	
,	IN	p_nickname23			VARCHAR(30)	
,	IN	p_charIdx23			BIGINT			
,	IN	p_charType23			INT			
,	IN	p_charLevel23		INT			
,	IN	p_battlePower23		INT			
,	IN	p_memberGrade23		INT			

,	IN	p_userIdx24			BIGINT			
,	IN	p_gameDBIdx24			SMALLINT	
,	IN	p_nickname24			VARCHAR(30)	
,	IN	p_charIdx24			BIGINT			
,	IN	p_charType24			INT			
,	IN	p_charLevel24		INT			
,	IN	p_battlePower24		INT			
,	IN	p_memberGrade24		INT			

,	IN	p_userIdx25			BIGINT			
,	IN	p_gameDBIdx25			SMALLINT	
,	IN	p_nickname25			VARCHAR(30)	
,	IN	p_charIdx25			BIGINT			
,	IN	p_charType25			INT			
,	IN	p_charLevel25		INT			
,	IN	p_battlePower25		INT			
,	IN	p_memberGrade25		INT			

,	IN	p_userIdx26			BIGINT			
,	IN	p_gameDBIdx26			SMALLINT	
,	IN	p_nickname26			VARCHAR(30)	
,	IN	p_charIdx26			BIGINT			
,	IN	p_charType26			INT			
,	IN	p_charLevel26		INT			
,	IN	p_battlePower26		INT			
,	IN	p_memberGrade26		INT			

,	IN	p_userIdx27			BIGINT			
,	IN	p_gameDBIdx27			SMALLINT	
,	IN	p_nickname27			VARCHAR(30)	
,	IN	p_charIdx27			BIGINT			
,	IN	p_charType27			INT			
,	IN	p_charLevel27		INT			
,	IN	p_battlePower27		INT			
,	IN	p_memberGrade27		INT			

,	IN	p_userIdx28			BIGINT			
,	IN	p_gameDBIdx28			SMALLINT	
,	IN	p_nickname28			VARCHAR(30)	
,	IN	p_charIdx28			BIGINT			
,	IN	p_charType28			INT			
,	IN	p_charLevel28		INT			
,	IN	p_battlePower28		INT			
,	IN	p_memberGrade28		INT			

,	IN	p_userIdx29			BIGINT			
,	IN	p_gameDBIdx29			SMALLINT	
,	IN	p_nickname29			VARCHAR(30)	
,	IN	p_charIdx29			BIGINT			
,	IN	p_charType29			INT			
,	IN	p_charLevel29		INT			
,	IN	p_battlePower29		INT			
,	IN	p_memberGrade29		INT			

,	IN	p_userIdx30			BIGINT			
,	IN	p_gameDBIdx30			SMALLINT	
,	IN	p_nickname30			VARCHAR(30)	
,	IN	p_charIdx30			BIGINT			
,	IN	p_charType30			INT			
,	IN	p_charLevel30		INT			
,	IN	p_battlePower30		INT			
,	IN	p_memberGrade30		INT			

,	IN	p_userIdx31			BIGINT			
,	IN	p_gameDBIdx31			SMALLINT	
,	IN	p_nickname31			VARCHAR(30)	
,	IN	p_charIdx31			BIGINT			
,	IN	p_charType31			INT			
,	IN	p_charLevel31		INT			
,	IN	p_battlePower31		INT			
,	IN	p_memberGrade31		INT			

,	IN	p_userIdx32			BIGINT			
,	IN	p_gameDBIdx32			SMALLINT	
,	IN	p_nickname32			VARCHAR(30)	
,	IN	p_charIdx32			BIGINT			
,	IN	p_charType32			INT			
,	IN	p_charLevel32		INT			
,	IN	p_battlePower32		INT			
,	IN	p_memberGrade32		INT			

,	IN	p_userIdx33			BIGINT			
,	IN	p_gameDBIdx33			SMALLINT	
,	IN	p_nickname33			VARCHAR(30)	
,	IN	p_charIdx33			BIGINT			
,	IN	p_charType33			INT			
,	IN	p_charLevel33		INT			
,	IN	p_battlePower33		INT			
,	IN	p_memberGrade33		INT			

,	IN	p_userIdx34			BIGINT			
,	IN	p_gameDBIdx34			SMALLINT	
,	IN	p_nickname34			VARCHAR(30)	
,	IN	p_charIdx34			BIGINT			
,	IN	p_charType34			INT			
,	IN	p_charLevel34		INT			
,	IN	p_battlePower34		INT			
,	IN	p_memberGrade34		INT			

,	IN	p_userIdx35			BIGINT			
,	IN	p_gameDBIdx35			SMALLINT	
,	IN	p_nickname35			VARCHAR(30)	
,	IN	p_charIdx35			BIGINT			
,	IN	p_charType35			INT			
,	IN	p_charLevel35		INT			
,	IN	p_battlePower35		INT			
,	IN	p_memberGrade35		INT			

,	IN	p_userIdx36			BIGINT			
,	IN	p_gameDBIdx36			SMALLINT	
,	IN	p_nickname36			VARCHAR(30)	
,	IN	p_charIdx36			BIGINT			
,	IN	p_charType36			INT			
,	IN	p_charLevel36		INT			
,	IN	p_battlePower36		INT			
,	IN	p_memberGrade36		INT			

,	IN	p_userIdx37			BIGINT			
,	IN	p_gameDBIdx37			SMALLINT	
,	IN	p_nickname37			VARCHAR(30)	
,	IN	p_charIdx37			BIGINT			
,	IN	p_charType37			INT			
,	IN	p_charLevel37		INT			
,	IN	p_battlePower37		INT			
,	IN	p_memberGrade37		INT			

,	IN	p_userIdx38			BIGINT			
,	IN	p_gameDBIdx38			SMALLINT	
,	IN	p_nickname38			VARCHAR(30)	
,	IN	p_charIdx38			BIGINT			
,	IN	p_charType38			INT			
,	IN	p_charLevel38		INT			
,	IN	p_battlePower38		INT			
,	IN	p_memberGrade38		INT			

,	IN	p_userIdx39			BIGINT			
,	IN	p_gameDBIdx39			SMALLINT	
,	IN	p_nickname39			VARCHAR(30)	
,	IN	p_charIdx39			BIGINT			
,	IN	p_charType39			INT			
,	IN	p_charLevel39		INT			
,	IN	p_battlePower39		INT			
,	IN	p_memberGrade39		INT			

,	IN	p_userIdx40			BIGINT			
,	IN	p_gameDBIdx40			SMALLINT	
,	IN	p_nickname40			VARCHAR(30)	
,	IN	p_charIdx40			BIGINT			
,	IN	p_charType40			INT			
,	IN	p_charLevel40		INT			
,	IN	p_battlePower40		INT			
,	IN	p_memberGrade40		INT			

,	IN	p_userIdx41			BIGINT			
,	IN	p_gameDBIdx41			SMALLINT	
,	IN	p_nickname41			VARCHAR(30)	
,	IN	p_charIdx41			BIGINT			
,	IN	p_charType41			INT			
,	IN	p_charLevel41		INT			
,	IN	p_battlePower41		INT			
,	IN	p_memberGrade41		INT			

,	IN	p_userIdx42			BIGINT			
,	IN	p_gameDBIdx42			SMALLINT	
,	IN	p_nickname42			VARCHAR(30)	
,	IN	p_charIdx42			BIGINT			
,	IN	p_charType42			INT			
,	IN	p_charLevel42		INT			
,	IN	p_battlePower42		INT			
,	IN	p_memberGrade42		INT			

,	IN	p_userIdx43			BIGINT			
,	IN	p_gameDBIdx43			SMALLINT	
,	IN	p_nickname43			VARCHAR(30)	
,	IN	p_charIdx43			BIGINT			
,	IN	p_charType43			INT			
,	IN	p_charLevel43		INT			
,	IN	p_battlePower43		INT			
,	IN	p_memberGrade43		INT			

,	IN	p_userIdx44			BIGINT			
,	IN	p_gameDBIdx44			SMALLINT	
,	IN	p_nickname44			VARCHAR(30)	
,	IN	p_charIdx44			BIGINT			
,	IN	p_charType44			INT			
,	IN	p_charLevel44		INT			
,	IN	p_battlePower44		INT			
,	IN	p_memberGrade44		INT			

,	IN	p_userIdx45			BIGINT			
,	IN	p_gameDBIdx45			SMALLINT	
,	IN	p_nickname45			VARCHAR(30)	
,	IN	p_charIdx45			BIGINT			
,	IN	p_charType45			INT			
,	IN	p_charLevel45		INT			
,	IN	p_battlePower45		INT			
,	IN	p_memberGrade45		INT			

,	IN	p_userIdx46			BIGINT			
,	IN	p_gameDBIdx46			SMALLINT	
,	IN	p_nickname46			VARCHAR(30)	
,	IN	p_charIdx46			BIGINT			
,	IN	p_charType46			INT			
,	IN	p_charLevel46		INT			
,	IN	p_battlePower46		INT			
,	IN	p_memberGrade46		INT			

,	IN	p_userIdx47			BIGINT			
,	IN	p_gameDBIdx47			SMALLINT	
,	IN	p_nickname47			VARCHAR(30)	
,	IN	p_charIdx47			BIGINT			
,	IN	p_charType47			INT			
,	IN	p_charLevel47		INT			
,	IN	p_battlePower47		INT			
,	IN	p_memberGrade47		INT			

,	IN	p_userIdx48			BIGINT			
,	IN	p_gameDBIdx48			SMALLINT	
,	IN	p_nickname48			VARCHAR(30)	
,	IN	p_charIdx48			BIGINT			
,	IN	p_charType48			INT			
,	IN	p_charLevel48		INT			
,	IN	p_battlePower48		INT			
,	IN	p_memberGrade48		INT			

,	IN	p_userIdx49			BIGINT			
,	IN	p_gameDBIdx49			SMALLINT	
,	IN	p_nickname49			VARCHAR(30)	
,	IN	p_charIdx49			BIGINT			
,	IN	p_charType49			INT			
,	IN	p_charLevel49		INT			
,	IN	p_battlePower49		INT			
,	IN	p_memberGrade49		INT			

,	IN	p_userIdx50			BIGINT			
,	IN	p_gameDBIdx50			SMALLINT	
,	IN	p_nickname50			VARCHAR(30)	
,	IN	p_charIdx50			BIGINT			
,	IN	p_charType50			INT			
,	IN	p_charLevel50		INT			
,	IN	p_battlePower50		INT			
,	IN	p_memberGrade50		INT			
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					
	DECLARE v_Msg VARCHAR(2000);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_Result, v_Msg;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN

		IF (p_memberCount IS NULL) || (p_memberCount < 1) THEN
		BEGIN
			SET v_Result := -5;
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET v_Result := v_Resultfn;
			END;

			ELSE
			BEGIN
				root:
				BEGIN
					
					
					START TRANSACTION;
						
                        SET v_Resultfn := udf_guild_war_regist_insert_info(p_guildIdx, p_name, p_markId, p_masterNick, p_masterCharType, p_masterCharLevel, p_guildWarState, p_peoridNum);
                        
						IF v_Resultfn <> 1 THEN
						BEGIN
							SET v_Result := v_Resultfn;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;
                        
						
						SET v_Resultfn := udf_guild_war_member_insert_multi(p_guildIdx, p_memberCount,
												p_userIdx1, p_gameDBIdx1, p_nickname1, p_charIdx1, p_charType1, p_charLevel1, p_battlePower1, p_memberGrade1,
												p_userIdx2, p_gameDBIdx2, p_nickname2, p_charIdx2, p_charType2, p_charLevel2, p_battlePower2, p_memberGrade2,
												p_userIdx3, p_gameDBIdx3, p_nickname3, p_charIdx3, p_charType3, p_charLevel3, p_battlePower3, p_memberGrade3,
												p_userIdx4, p_gameDBIdx4, p_nickname4, p_charIdx4, p_charType4, p_charLevel4, p_battlePower4, p_memberGrade4,
												p_userIdx5, p_gameDBIdx5, p_nickname5, p_charIdx5, p_charType5, p_charLevel5, p_battlePower5, p_memberGrade5,
												p_userIdx6, p_gameDBIdx6, p_nickname6, p_charIdx6, p_charType6, p_charLevel6, p_battlePower6, p_memberGrade6,
												p_userIdx7, p_gameDBIdx7, p_nickname7, p_charIdx7, p_charType7, p_charLevel7, p_battlePower7, p_memberGrade7,
												p_userIdx8, p_gameDBIdx8, p_nickname8, p_charIdx8, p_charType8, p_charLevel8, p_battlePower8, p_memberGrade8,
												p_userIdx9, p_gameDBIdx9, p_nickname9, p_charIdx9, p_charType9, p_charLevel9, p_battlePower9, p_memberGrade9,
												p_userIdx10, p_gameDBIdx10, p_nickname10, p_charIdx10, p_charType10, p_charLevel10, p_battlePower10, p_memberGrade10,
												p_userIdx11, p_gameDBIdx11, p_nickname11, p_charIdx11, p_charType11, p_charLevel11, p_battlePower11, p_memberGrade11,
												p_userIdx12, p_gameDBIdx12, p_nickname12, p_charIdx12, p_charType12, p_charLevel12, p_battlePower12, p_memberGrade12,
												p_userIdx13, p_gameDBIdx13, p_nickname13, p_charIdx13, p_charType13, p_charLevel13, p_battlePower13, p_memberGrade13,
												p_userIdx14, p_gameDBIdx14, p_nickname14, p_charIdx14, p_charType14, p_charLevel14, p_battlePower14, p_memberGrade14,
												p_userIdx15, p_gameDBIdx15, p_nickname15, p_charIdx15, p_charType15, p_charLevel15, p_battlePower15, p_memberGrade15,
												p_userIdx16, p_gameDBIdx16, p_nickname16, p_charIdx16, p_charType16, p_charLevel16, p_battlePower16, p_memberGrade16,
												p_userIdx17, p_gameDBIdx17, p_nickname17, p_charIdx17, p_charType17, p_charLevel17, p_battlePower17, p_memberGrade17,
												p_userIdx18, p_gameDBIdx18, p_nickname18, p_charIdx18, p_charType18, p_charLevel18, p_battlePower18, p_memberGrade18,
												p_userIdx19, p_gameDBIdx19, p_nickname19, p_charIdx19, p_charType19, p_charLevel19, p_battlePower19, p_memberGrade19,
												p_userIdx20, p_gameDBIdx20, p_nickname20, p_charIdx20, p_charType20, p_charLevel20, p_battlePower20, p_memberGrade20,
												p_userIdx21, p_gameDBIdx21, p_nickname21, p_charIdx21, p_charType21, p_charLevel21, p_battlePower21, p_memberGrade21,
												p_userIdx22, p_gameDBIdx22, p_nickname22, p_charIdx22, p_charType22, p_charLevel22, p_battlePower22, p_memberGrade22,
												p_userIdx23, p_gameDBIdx23, p_nickname23, p_charIdx23, p_charType23, p_charLevel23, p_battlePower23, p_memberGrade23,
												p_userIdx24, p_gameDBIdx24, p_nickname24, p_charIdx24, p_charType24, p_charLevel24, p_battlePower24, p_memberGrade24,
												p_userIdx25, p_gameDBIdx25, p_nickname25, p_charIdx25, p_charType25, p_charLevel25, p_battlePower25, p_memberGrade25,
												p_userIdx26, p_gameDBIdx26, p_nickname26, p_charIdx26, p_charType26, p_charLevel26, p_battlePower26, p_memberGrade26,
												p_userIdx27, p_gameDBIdx27, p_nickname27, p_charIdx27, p_charType27, p_charLevel27, p_battlePower27, p_memberGrade27,
												p_userIdx28, p_gameDBIdx28, p_nickname28, p_charIdx28, p_charType28, p_charLevel28, p_battlePower28, p_memberGrade28,
												p_userIdx29, p_gameDBIdx29, p_nickname29, p_charIdx29, p_charType29, p_charLevel29, p_battlePower29, p_memberGrade29,
												p_userIdx30, p_gameDBIdx30, p_nickname30, p_charIdx30, p_charType30, p_charLevel30, p_battlePower30, p_memberGrade30,
												p_userIdx31, p_gameDBIdx31, p_nickname31, p_charIdx31, p_charType31, p_charLevel31, p_battlePower31, p_memberGrade31,
												p_userIdx32, p_gameDBIdx32, p_nickname32, p_charIdx32, p_charType32, p_charLevel32, p_battlePower32, p_memberGrade32,
												p_userIdx33, p_gameDBIdx33, p_nickname33, p_charIdx33, p_charType33, p_charLevel33, p_battlePower33, p_memberGrade33,
												p_userIdx34, p_gameDBIdx34, p_nickname34, p_charIdx34, p_charType34, p_charLevel34, p_battlePower34, p_memberGrade34,
												p_userIdx35, p_gameDBIdx35, p_nickname35, p_charIdx35, p_charType35, p_charLevel35, p_battlePower35, p_memberGrade35,
												p_userIdx36, p_gameDBIdx36, p_nickname36, p_charIdx36, p_charType36, p_charLevel36, p_battlePower36, p_memberGrade36,
												p_userIdx37, p_gameDBIdx37, p_nickname37, p_charIdx37, p_charType37, p_charLevel37, p_battlePower37, p_memberGrade37,
												p_userIdx38, p_gameDBIdx38, p_nickname38, p_charIdx38, p_charType38, p_charLevel38, p_battlePower38, p_memberGrade38,
												p_userIdx39, p_gameDBIdx39, p_nickname39, p_charIdx39, p_charType39, p_charLevel39, p_battlePower39, p_memberGrade39,
												p_userIdx40, p_gameDBIdx40, p_nickname40, p_charIdx40, p_charType40, p_charLevel40, p_battlePower40, p_memberGrade40,
												p_userIdx41, p_gameDBIdx41, p_nickname41, p_charIdx41, p_charType41, p_charLevel41, p_battlePower41, p_memberGrade41,
												p_userIdx42, p_gameDBIdx42, p_nickname42, p_charIdx42, p_charType42, p_charLevel42, p_battlePower42, p_memberGrade42,
												p_userIdx43, p_gameDBIdx43, p_nickname43, p_charIdx43, p_charType43, p_charLevel43, p_battlePower43, p_memberGrade43,
												p_userIdx44, p_gameDBIdx44, p_nickname44, p_charIdx44, p_charType44, p_charLevel44, p_battlePower44, p_memberGrade44,
												p_userIdx45, p_gameDBIdx45, p_nickname45, p_charIdx45, p_charType45, p_charLevel45, p_battlePower45, p_memberGrade45,
												p_userIdx46, p_gameDBIdx46, p_nickname46, p_charIdx46, p_charType46, p_charLevel46, p_battlePower46, p_memberGrade46,
												p_userIdx47, p_gameDBIdx47, p_nickname47, p_charIdx47, p_charType47, p_charLevel47, p_battlePower47, p_memberGrade47,
												p_userIdx48, p_gameDBIdx48, p_nickname48, p_charIdx48, p_charType48, p_charLevel48, p_battlePower48, p_memberGrade48,
												p_userIdx49, p_gameDBIdx49, p_nickname49, p_charIdx49, p_charType49, p_charLevel49, p_battlePower49, p_memberGrade49,
												p_userIdx50, p_gameDBIdx50, p_nickname50, p_charIdx50, p_charType50, p_charLevel50, p_battlePower50, p_memberGrade50);
						
						IF v_Resultfn <> 1 THEN
						BEGIN
							SET v_Result := v_Resultfn;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;

					COMMIT;

					SET v_Result := 1;	
					LEAVE root;
				END;
			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_regist_insert_application` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_regist_insert_application`(
	IN	p_guildIdx			BIGINT		
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					
	DECLARE v_Msg VARCHAR(2000);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_Result, v_Msg;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN

		
		CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
		IF v_Resultfn = -92 THEN	
		BEGIN
			SET v_Result := v_Resultfn;
		END;

		ELSE
		BEGIN

			UPDATE guild
			SET war_application = 1
			WHERE guild_idx = p_guildIdx;

        
			SET v_Result := 1;	
		END;
		END IF;

	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_select_additional_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_select_additional_info`(
	IN	p_guildIdx	BIGINT	
)
BEGIN



	
	CALL gsp_mmo_guild_Tower_Sel(p_guildIdx);
    
    
    CALL gusp_guild_war_history_Sel(p_guildIdx);
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_select_info_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_select_info_all`(
)
BEGIN


	
    SELECT guild_idx, `name`, mark_id, master_user_nickname, master_char_type, master_char_level, guild_war_state, peorid_num, UNIX_TIMESTAMP(reg_date) as reg_date
    FROM guild_war_regist;
    
    
    SELECT guild_idx, user_idx, game_db_idx, nickname, char_idx, char_type, char_level, battle_power, member_grade, 
			reward_contribution, reward_gold, reward_point,
			first_nick, first_attack_star, first_attack_destroy, second_nick, second_attack_star, second_attack_destroy,
            fight_count, first_idx, second_idx, fight_comp_count, defence_comp_count
	FROM guild_war_member;
    
    
    SELECT battle_idx, first_guild_idx, second_guild_idx, guild_war_state, UNIX_TIMESTAMP(start_date) as start_date, UNIX_TIMESTAMP(end_date) as end_date
    FROM guild_war_matching;

	
    SELECT guild_idx, war_application
    FROM guild
    WHERE war_application = 1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_select_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_select_state`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	DECLARE	v_war_state		INT	DEFAULT 1;

	IF EXISTS(SELECT * FROM guild_war_regist WHERE guild_idx = p_guildIdx) THEN
	BEGIN
		SELECT guild_war_state INTO v_war_state FROM guild_war_regist WHERE guild_idx = p_guildIdx;
    END;
    END IF;

	SELECT v_war_state;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_setting_Multi_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_setting_Multi_Ins`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_warSetCnt	INT	
,	IN	p_slot1		TINYINT	
,	IN	p_type1		TINYINT	
,	IN	p_id1		INT	
,	IN	p_slot2		TINYINT	
,	IN	p_type2		TINYINT	
,	IN	p_id2		INT	
,	IN	p_slot3		TINYINT	
,	IN	p_type3		TINYINT	
,	IN	p_id3		INT	
,	IN	p_slot4		TINYINT	
,	IN	p_type4		TINYINT	
,	IN	p_id4		INT	
,	IN	p_slot5		TINYINT	
,	IN	p_type5		TINYINT	
,	IN	p_id5		INT	
,	IN	p_slot6		TINYINT	
,	IN	p_type6		TINYINT	
,	IN	p_id6		INT	
,	IN	p_slot7		TINYINT	
,	IN	p_type7		TINYINT	
,	IN	p_id7		INT	
,	IN	p_slot8		TINYINT	
,	IN	p_type8		TINYINT	
,	IN	p_id8		INT	
,	IN	p_slot9		TINYINT	
,	IN	p_type9		TINYINT	
,	IN	p_id9		INT	
,	IN	p_slot10	TINYINT	
,	IN	p_type10	TINYINT	
,	IN	p_id10		INT	
,	IN	p_slot11	TINYINT	
,	IN	p_type11	TINYINT	
,	IN	p_id11		INT	
,	IN	p_slot12	TINYINT	
,	IN	p_type12	TINYINT	
,	IN	p_id12		INT	
,	IN	p_slot13	TINYINT	
,	IN	p_type13	TINYINT	
,	IN	p_id13		INT	
,	IN	p_slot14	TINYINT	
,	IN	p_type14	TINYINT	
,	IN	p_id14		INT	
,	IN	p_slot15	TINYINT	
,	IN	p_type15	TINYINT	
,	IN	p_id15		INT	
,	IN	p_slot16	TINYINT	
,	IN	p_type16	TINYINT	
,	IN	p_id16		INT	
,	IN	p_slot17	TINYINT	
,	IN	p_type17	TINYINT	
,	IN	p_id17		INT	
,	IN	p_slot18	TINYINT	
,	IN	p_type18	TINYINT	
,	IN	p_id18		INT	
,	IN	p_slot19	TINYINT	
,	IN	p_type19	TINYINT	
,	IN	p_id19		INT	
,	IN	p_slot20	TINYINT	
,	IN	p_type20	TINYINT	
,	IN	p_id20		INT	
)
BEGIN



	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL gusp_guild_war_setting_Multi_Ins(p_guildIdx, p_userIdx, p_warSetCnt,
										p_slot1, p_type1, p_id1,
										p_slot2, p_type2, p_id2,
										p_slot3, p_type3, p_id3,
										p_slot4, p_type4, p_id4,
										p_slot5, p_type5, p_id5,
										p_slot6, p_type6, p_id6,
										p_slot7, p_type7, p_id7,
										p_slot8, p_type8, p_id8,
										p_slot9, p_type9, p_id9,
										p_slot10, p_type10, p_id10,
										p_slot11, p_type11, p_id11,
										p_slot12, p_type12, p_id12,
										p_slot13, p_type13, p_id13,
										p_slot14, p_type14, p_id14,
										p_slot15, p_type15, p_id15,
										p_slot16, p_type16, p_id16,
										p_slot17, p_type17, p_id17,
										p_slot18, p_type18, p_id18,
										p_slot19, p_type19, p_id19,
										p_slot20, p_type20, p_id20,
                                        v_Result, v_Msg);
    
    SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_setting_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_setting_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	SELECT A.guild_idx, B.slot, B.`type`, B.`id`
	FROM guild A INNER JOIN guild_war_setting B ON A.guild_idx = B.guild_idx
	WHERE A.guild_idx = p_guildIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_state_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_state_update`(
	IN	p_battleIdx			BIGINT		
,	IN	p_firstGuildIdx		BIGINT		
,	IN	p_secondGuildIdx	BIGINT		
,	IN	p_guildWarState		INT			
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1000);
		ROLLBACK;
        
        SELECT v_Result;
	END;


	
	
	IF (p_firstGuildIdx IS NULL) || (p_firstGuildIdx < 1) || (p_secondGuildIdx IS NULL) || (p_secondGuildIdx < 1) || (p_battleIdx IS NULL) || (p_battleIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
				
                SET v_Resultfn := udf_guild_war_matching_update_state(p_battleIdx, p_guildWarState);
                
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
                END IF;
                
				
                SET v_Resultfn := udf_guild_war_regist_update_state_multi(p_firstGuildIdx, p_secondGuildIdx, p_guildWarState);
                
				IF v_Resultfn <> 1 THEN
				BEGIN
					SET v_Result := v_Resultfn;
					ROLLBACK;
					LEAVE root;
				END;
				END IF;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_unit_Execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_unit_Execute`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_warUnitId		INT	
,	IN	p_warUnitLevel		INT	
,	IN	p_warUnitExp		INT	
,	IN	p_flag			TINYINT	
)
BEGIN



	DECLARE	v_afterWarUnitExp	INT;	
	DECLARE	v_Result			INT;	
	DECLARE	v_Msg				TEXT;	

	CALL gusp_guild_war_unit_Execute(p_guildIdx, p_userIdx, p_warUnitId, p_warUnitLevel, p_warUnitExp, p_flag,
									v_afterWarUnitExp, v_Result, v_Msg);
                                    
	SELECT v_afterWarUnitExp, v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_unit_Level_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_unit_Level_Upd`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_warUnitId		INT	
,	IN	p_warUnitLevel		INT	
)
BEGIN



	DECLARE	v_Result		INT;	
	DECLARE	v_Msg			TEXT;	

	CALL gusp_guild_war_unit_Level_Upd(p_guildIdx, p_userIdx, p_warUnitId, p_warUnitLevel, v_Result, v_Msg);
    
    SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_unit_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_unit_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	SELECT A.guild_idx, B.war_unit_id, B.war_unit_level, B.war_unit_exp
	FROM guild A INNER JOIN guild_war_unit B ON A.guild_idx = B.guild_idx
	WHERE A.guild_idx = p_guildIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_update_battle_result` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_update_battle_result`(
	IN	p_attackerGuildIdx		BIGINT		
,	IN	p_attackerUserIdx		BIGINT		
,	IN	p_targetGuildIdx		BIGINT		
,	IN	p_targetUserIdx			BIGINT		
,	IN	p_fightCompleteCount	INT			
,	IN	p_defenceCompleteCount	INT			
,	IN	p_attackNum				int			
,	IN	p_rewardContribution	BIGINT		
,	IN 	p_rewardGold			BIGINT		
,	IN 	p_rewardGuildPoint		BIGINT		
,	IN 	p_star					INT			
,	IN	p_destroy				INT			
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					
                    
	DECLARE v_final_guild_contribution BIGINT DEFAULT 0;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1000);
		ROLLBACK;
        
        SELECT v_Result, v_final_guild_contribution;
	END;


	
	
	IF (p_attackerGuildIdx IS NULL) || (p_attackerGuildIdx < 1) || (p_attackerUserIdx IS NULL) || (p_attackerUserIdx < 1) ||
	   (p_targetGuildIdx IS NULL) || (p_targetGuildIdx < 1) || (p_targetUserIdx IS NULL) || (p_targetUserIdx < 1)THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
				
				UPDATE guild_war_member 
				SET defence_comp_count = defence_comp_count + p_defenceCompleteCount
				WHERE guild_idx = p_targetGuildIdx AND user_idx = p_targetUserIdx;

				
				IF ROW_COUNT() <> 1 THEN
					SET v_Result := -7;	
					ROLLBACK;
					LEAVE root;
				END IF;				
                
                
				IF p_attackNum = 1 THEN
					UPDATE guild_war_member 
					SET fight_comp_count = fight_comp_count + p_fightCompleteCount, first_attack_star = p_star, first_attack_destroy = p_destroy,
						reward_contribution = reward_contribution + p_rewardContribution, reward_gold = reward_gold + p_rewardGold, reward_point = reward_point + p_rewardGuildPoint
					WHERE guild_idx = p_attackerGuildIdx AND user_idx = p_attackerUserIdx;
				ELSE
					UPDATE guild_war_member 
					SET fight_comp_count = fight_comp_count + p_fightCompleteCount, second_attack_star = p_star, second_attack_destroy = p_destroy,
						reward_contribution = reward_contribution + p_rewardContribution, reward_gold = reward_gold + p_rewardGold, reward_point = reward_point + p_rewardGuildPoint
					WHERE guild_idx = p_attackerGuildIdx AND user_idx = p_attackerUserIdx;				
				END IF;

				
				IF ROW_COUNT() <> 1 THEN
					SET v_Result := -7;	
					ROLLBACK;
					LEAVE root;					
				END IF;
                
                
                IF 0 < p_rewardContribution THEN
					UPDATE guild_member
                    SET guild_contribution = (@guild_contribution := guild_contribution + p_rewardContribution)
                    WHERE user_idx = p_attackerUserIdx;
                    
                    IF 0 < ROW_COUNT() THEN
						SET v_final_guild_contribution = @guild_contribution;
					END IF;
				ELSE
					SELECT guild_contribution INTO v_final_guild_contribution
                    FROM guild_member
                    WHERE user_idx = p_attackerUserIdx;
                END IF;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result, v_final_guild_contribution;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_update_battle_start` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_update_battle_start`(
	IN	p_attackerGuildIdx	BIGINT		
,	IN	p_attackerUserIdx	BIGINT		
,	IN	p_targetGuildIdx	BIGINT		
,	IN	p_targetUserIdx		BIGINT		
,	IN	p_targetNick		VARCHAR(30)	
,	IN	p_fightCount		INT			
,	IN	p_attackNum			INT			
)
BEGIN



	DECLARE	v_errno		INT	DEFAULT 0;
	DECLARE	v_Result	INT	DEFAULT 0;
	DECLARE v_Resultfn	INT	DEFAULT 0;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1000);
		ROLLBACK;
        
        SELECT v_Result;
	END;


	
	
	IF (p_attackerGuildIdx IS NULL) || (p_attackerGuildIdx < 1) || (p_attackerUserIdx IS NULL) || (p_attackerUserIdx < 1) ||
	   (p_targetGuildIdx IS NULL) || (p_targetGuildIdx < 1) || (p_targetUserIdx IS NULL) || (p_targetUserIdx < 1)THEN
	BEGIN
		SET v_Result := -4;
	END;

	ELSE
	BEGIN
		root:
		BEGIN
			
			
			START TRANSACTION;
				
                
				IF p_attackNum = 1 THEN
				BEGIN
					UPDATE guild_war_member SET first_idx = p_targetUserIdx, first_nick = p_targetNick, fight_count = fight_count + p_fightCount WHERE guild_idx = p_attackerGuildIdx AND user_idx = p_attackerUserIdx;
				END;
				
				ELSE
				BEGIN
					UPDATE guild_war_member SET second_idx = p_targetUserIdx, second_nick = p_targetNick, fight_count = fight_count + p_fightCount WHERE guild_idx = p_attackerGuildIdx AND user_idx = p_attackerUserIdx;
				END;
				END IF;				

                
				IF ROW_COUNT() <> 1 THEN
				BEGIN
					SET v_Result := -7;	
					ROLLBACK;
					LEAVE root;
				END;
				END IF;

			COMMIT;

			SET v_Result := 1;	
			LEAVE root;
		END;
	END;
	END IF;

	SELECT v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_update_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_update_finish`(
	IN	p_battleIdx		BIGINT			
,	IN	p_fGuildIdx		BIGINT			
,	IN	p_fName			VARCHAR(50)		
,	IN	p_fMarkId		INT				
,	IN	p_fMasterNick	VARCHAR(30)		
,	IN	p_fCharType		INT				
,	IN	p_fCharLevel	INT				
,	IN	p_fWinType		TINYINT			
,	IN	p_fScore		INT				
,	IN	p_fDestroy		INT				
,	IN	p_fWinCnt		INT				
,	IN	p_fStarCnt		int				
,	IN	p_fExp			BIGINT			
,	IN	p_fGold			BIGINT			
,	IN 	p_fSeal			BIGINT			
,	IN	p_sGuildIdx		BIGINT			
,	IN	p_sName			VARCHAR(50)		
,	IN	p_sMarkId		INT				
,	IN	p_sMasterNick	VARCHAR(30)		
,	IN	p_sCharType		INT				
,	IN	p_sCharLevel	INT				
,	IN	p_sWinType		TINYINT			
,	IN	p_sScore		INT				
,	IN	p_sDestroy		INT				
,	IN	p_sWinCnt		INT				
,	IN	p_sStarCnt		INT				
,	IN	p_sExp			BIGINT			
,	IN	p_sGold			BIGINT			
,	IN 	p_sSeal			BIGINT			
)
BEGIN


	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 1;	

	DECLARE v_fFinalExp		BIGINT DEFAULT 0;
    DECLARE v_fFinalGold	BIGINT DEFAULT 0;
    DECLARE v_fFinalSeal	BIGINT DEFAULT 0;
	DECLARE v_sFinalExp		BIGINT DEFAULT 0;
    DECLARE v_sFinalGold	BIGINT DEFAULT 0;
    DECLARE v_sFinalSeal	BIGINT DEFAULT 0;
    
    DECLARE v_fFinalWarCnt	SMALLINT DEFAULT 0;	
    DECLARE v_fFinalWinCnt	SMALLINT DEFAULT 0;	
    DECLARE v_fFinalLoseCnt	SMALLINT DEFAULT 0;	
    DECLARE v_sFinalWarCnt	SMALLINT DEFAULT 0;	
    DECLARE v_sFinalWinCnt	SMALLINT DEFAULT 0;	
    DECLARE v_sFinalLoseCnt	SMALLINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1) + v_result;
		ROLLBACK;
        
        SELECT v_result, v_fFinalExp, v_fFinalGold, v_fFinalSeal, v_sFinalExp, v_sFinalGold, v_sFinalSeal;
	END;

	root:
	BEGIN
		
		
		START TRANSACTION;
		
        
		
        
		INSERT INTO guild_war_history (guild_idx, opponent_idx, opponent_name, opponent_mark_id, opponent_masterNick, opponent_char_typ, opponent_char_level,
					opponent_score, opponent_destroy, opponent_win_cnt, opponent_star_cnt, score, destroy, win_cnt, star_cnt, get_exp, get_gold, get_seal)
		VALUES (p_fGuildIdx, p_sGuildIdx, p_sName, p_sMarkId, p_sMasterNick, p_sCharType, p_sCharLevel,	
					p_sScore, p_sDestroy, p_sWinCnt, p_sStarCnt, p_fScore, p_fDestroy, p_fWinCnt, p_fStarCnt, p_fExp, p_fGold, p_fSeal)
		ON DUPLICATE KEY UPDATE opponent_idx = p_sGuildIdx, opponent_name = p_sName, opponent_mark_id = p_sMarkId, opponent_masterNick = p_sMasterNick,
								opponent_char_typ = p_sCharType, opponent_char_level = p_sCharLevel, opponent_score = p_sScore, opponent_destroy = p_sDestroy,
								opponent_win_cnt = p_sWinCnt, opponent_star_cnt = p_sStarCnt, score = p_fScore, destroy = p_fDestroy, win_cnt = p_fWinCnt, 
                                star_cnt = p_fStarCnt, get_exp = p_fExp, get_gold = p_fGold, get_seal = p_fSeal;		

		
        IF 0 = ROW_COUNT() THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;

        
        
        
        
		UPDATE guild 
        SET exp = exp + p_fExp, guild_gold = guild_gold + p_fGold, guild_seal = guild_seal + p_fSeal, 
			war_win_cnt = war_win_cnt + IF(p_fWinType = 1, 1, 0),
            war_lose_cnt = war_lose_cnt + IF(p_fWinType = 2, 1, 0),
            battle_idx = 0
		WHERE guild_idx = p_fGuildIdx;
        
        IF 0 < p_fExp OR 0 < p_fGold OR 0 < p_fSeal THEN
			IF 0 = ROW_COUNT() THEN
				SET v_result = 102;	
				LEAVE root;
			END IF;
        END IF;

		
        SELECT exp, guild_gold, guild_seal, war_cnt, war_win_cnt, war_lose_cnt 
        INTO v_fFinalExp, v_fFinalGold, v_fFinalSeal, v_fFinalWarCnt, v_fFinalWinCnt, v_fFinalLoseCnt
        FROM guild
        WHERE guild_idx = p_fGuildIdx;
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 103;	
			LEAVE root;			
        END IF;       
        
        
        
        
        
        DELETE FROM guild_war_regist WHERE guild_idx = p_fGuildIdx;
        
        
        
        
        DELETE FROM guild_war_member WHERE guild_idx = p_fGuildIdx;
        
        
        
		
        
		INSERT INTO guild_war_history (guild_idx, opponent_idx, opponent_name, opponent_mark_id, opponent_masterNick, opponent_char_typ, opponent_char_level,
					opponent_score, opponent_destroy, opponent_win_cnt, opponent_star_cnt, score, destroy, win_cnt, star_cnt, get_exp, get_gold, get_seal)
		VALUES (p_sGuildIdx, p_fGuildIdx, p_fName, p_fMarkId, p_fMasterNick, p_fCharType, p_fCharLevel,	
					p_fScore, p_fDestroy, p_fWinCnt, p_fStarCnt, p_sScore, p_sDestroy, p_sWinCnt, p_sStarCnt, p_sExp, p_sGold, p_sSeal)
		ON DUPLICATE KEY UPDATE opponent_idx = p_fGuildIdx, opponent_name = p_fName,	opponent_mark_id = p_fMarkId, opponent_masterNick = p_fMasterNick,
								opponent_char_typ = p_fCharType, opponent_char_level = p_fCharLevel, opponent_score = p_fScore, opponent_destroy = p_fDestroy,
								opponent_win_cnt = p_fWinCnt, opponent_star_cnt = p_fStarCnt,	score = p_sScore, destroy = p_sDestroy, win_cnt = p_sWinCnt, 
                                star_cnt = p_sStarCnt, get_exp = p_sExp, get_gold = p_sGold, get_seal = p_sSeal;

		
        IF 0 = ROW_COUNT() THEN
			SET v_result = 201;	
			LEAVE root;
        END IF;

        

        
        
        
		UPDATE guild 
        SET exp = exp + p_sExp, guild_gold = guild_gold + p_sGold, guild_seal = guild_seal + p_sSeal, 
			war_win_cnt = war_win_cnt + IF(p_sWinType = 1, 1, 0),
            war_lose_cnt = war_lose_cnt + IF(p_sWinType = 2, 1, 0),
            battle_idx = 0
		WHERE guild_idx = p_sGuildIdx;
        
        IF 0 < p_sExp OR 0 < p_sGold OR 0 < p_sSeal THEN
			IF 0 = ROW_COUNT() THEN
				SET v_result = 202;	
				LEAVE root;
			END IF;
        END IF;       
        

		
        SELECT exp, guild_gold, guild_seal, war_cnt, war_win_cnt, war_lose_cnt 
        INTO v_sFinalExp, v_sFinalGold, v_sFinalSeal, v_sFinalWarCnt, v_sFinalWinCnt, v_sFinalLoseCnt        
        FROM guild
        WHERE guild_idx = p_sGuildIdx;
        
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 203;	
			LEAVE root;			
        END IF;
        
        
        
        
        
        DELETE FROM guild_war_regist WHERE guild_idx = p_sGuildIdx;   
        
        
        
        
        DELETE FROM guild_war_member WHERE guild_idx = p_sGuildIdx;
        
        
        
        
        DELETE FROM guild_war_matching WHERE battle_idx = p_battleIdx;
        
	END;
    
    
	IF v_result = 1 THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
    SELECT v_result, v_fFinalExp, v_fFinalGold, v_fFinalSeal, v_sFinalExp, v_sFinalGold, v_sFinalSeal, v_fFinalWarCnt, v_fFinalWinCnt, v_fFinalLoseCnt, v_sFinalWarCnt, v_sFinalWinCnt, v_sFinalLoseCnt ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gsp_mmo_guild_war_update_selected_member` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gsp_mmo_guild_war_update_selected_member`(
	IN	p_guildIdx			BIGINT		
,	IN	p_userIdx1			BIGINT		
,	IN	p_userIdx2			BIGINT		
,	IN	p_userIdx3			BIGINT		
,	IN	p_userIdx4			BIGINT		
,	IN	p_userIdx5			BIGINT		
,	IN	p_userIdx6			BIGINT		
,	IN	p_userIdx7			BIGINT		
,	IN	p_userIdx8			BIGINT		
,	IN	p_userIdx9			BIGINT		
,	IN	p_userIdx10			BIGINT		
,	IN	p_userIdx11			BIGINT		
,	IN	p_userIdx12			BIGINT		
,	IN	p_userIdx13			BIGINT		
,	IN	p_userIdx14			BIGINT		
,	IN	p_userIdx15			BIGINT		
,	IN	p_userIdx16			BIGINT		
,	IN	p_userIdx17			BIGINT		
,	IN	p_userIdx18			BIGINT		
,	IN	p_userIdx19			BIGINT		
,	IN	p_userIdx20			BIGINT		
)
BEGIN


	DECLARE	v_errno			INT	DEFAULT 0;
	DECLARE	v_result		INT	DEFAULT 0;
    
	DECLARE	p_memberStatus	TINYINT DEFAULT 3;	
    
 	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_Result := (v_errno * -1);
		ROLLBACK;
        
        SELECT v_result;
	END;   
    
    root:
    BEGIN
    
		START TRANSACTION;
        
		
		UPDATE guild_member
		SET selected_entry_war = 0
		WHERE guild_idx = p_guildIdx;
        
		
		UPDATE guild_member
		SET selected_entry_war = 1
		WHERE guild_idx = p_guildIdx AND is_entry_war = 1 
			AND user_idx IN (p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10
							, p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20);
    END;
    
    SELECT v_result;

	IF 0 = v_result THEN
    BEGIN
		COMMIT;
        
		CALL gsp_mmo_guild_member_Sel(p_guildIdx);
	END;
    ELSE
		ROLLBACK;
	END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guildAuthority_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guildAuthority_Upd`(
	IN	p_guildIdx		BIGINT		
,	IN	p_charIdx		BIGINT		
,	IN	p_authorityCharIdx	BIGINT		
,	IN	p_masterGrade		INT		
,	IN	p_memberGrade		INT		
,	OUT	p_nickName		VARCHAR(30)	
,	OUT	p_charType		INT		
,	OUT	p_charLevel		INT		
,	OUT	p_battlePower		INT		
,	OUT	p_Result		INT		
,	OUT	p_Msg			TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_nickName := '';
		SET p_charType := 0;
		SET p_charLevel := 0;
		SET p_battlePower := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_nickName := '';
			SET p_charType := 0;
			SET p_charLevel := 0;
			SET p_battlePower := 0;
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_nickName := '';
				SET p_charType := 0;
				SET p_charLevel := 0;
				SET p_battlePower := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_nickName := '';
					SET p_charType := 0;
					SET p_charLevel := 0;
					SET p_battlePower := 0;
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_authorityCharIdx, v_Resultfn);
					IF v_Resultfn = -94 THEN	
					BEGIN
						SET p_nickName := '';
						SET p_charType := 0;
						SET p_charLevel := 0;
						SET p_battlePower := 0;
						SET p_Result := v_Resultfn;
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);
						IF v_memberGrade <> p_masterGrade THEN
						BEGIN
							SET p_nickName := '';
							SET p_charType := 0;
							SET p_charLevel := 0;
							SET p_battlePower := 0;
							SET p_Result := -102;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN
							
							SELECT nickname, char_type, char_level, battle_power INTO p_nickName, p_charType, p_charLevel, p_battlePower
							FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_authorityCharIdx;

							
							
							START TRANSACTION;

								
								SET v_Resultfn := udf_guildAuthority_Upd(p_guildIdx, p_charIdx, p_authorityCharIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_nickName := '';
									SET p_charType := 0;
									SET p_charLevel := 0;
									SET p_battlePower := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

								
								SET v_Resultfn := udf_guild_member_GradeAuthority_Upd(p_guildIdx, p_charIdx, p_authorityCharIdx, p_masterGrade, p_memberGrade);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_nickName := '';
									SET p_charType := 0;
									SET p_charLevel := 0;
									SET p_battlePower := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;
						END;
						END IF;
					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guildExpPoint_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guildExpPoint_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_exp		BIGINT	
,	IN	p_point		BIGINT	
,	OUT	p_expTotal	BIGINT	
,	OUT	p_pointTotal	BIGINT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_exp		BIGINT;
	DECLARE v_point		BIGINT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_expTotal := 0;
		SET p_pointTotal := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_expTotal := 0;
			SET p_pointTotal := 0;
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_expTotal := 0;
				SET p_pointTotal := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_expTotal := 0;
					SET p_pointTotal := 0;
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN

					
					SELECT exp, `point` INTO v_exp, v_point FROM guild WHERE guild_idx = p_guildIdx;

					SET p_expTotal := v_exp + p_exp;
					SET p_pointTotal := v_point + p_point;
					
					
					
					START TRANSACTION;
						
						SET v_Resultfn := udf_guildExpPoint_Upd(p_guildIdx, v_exp, p_exp, v_point, p_point);
						
						IF v_Resultfn <> 1 THEN
						BEGIN
							SET p_expTotal := 0;
							SET p_pointTotal := 0;
							SET p_Result := v_Resultfn;
							SET p_Msg := '';
							ROLLBACK;
							LEAVE root;
						END;
						END IF;

					COMMIT;

					SET p_Result := 1;	
					SET p_Msg := '';
					LEAVE root;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guildExp_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guildExp_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_exp		BIGINT	
,	OUT	p_expTotal	BIGINT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_exp		BIGINT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_expTotal := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_expTotal := 0;
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_expTotal := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_expTotal := 0;
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN

					
					SELECT exp INTO v_exp FROM guild WHERE guild_idx = p_guildIdx;

					SET p_expTotal := v_exp + p_exp;
					
					
					
					START TRANSACTION;
						
						SET v_Resultfn := udf_guildExp_Upd(p_guildIdx, v_exp, p_exp);
						
						IF v_Resultfn <> 1 THEN
						BEGIN
							SET p_expTotal := 0;
							SET p_Result := v_Resultfn;
							SET p_Msg := '';
							ROLLBACK;
							LEAVE root;
						END;
						END IF;

					COMMIT;

					SET p_Result := 1;	
					SET p_Msg := '';
					LEAVE root;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_application_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_application_Del`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_charIdx		BIGINT
,	OUT	p_registGuildIdx	BIGINT	
,	OUT	p_Result		INT	
,	OUT	p_Msg			TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_registGuildIdx := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_registGuildIdx := 0;
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		root:
		BEGIN

			
			CALL gusp_guild_member_Check_Sel(p_userIdx, p_charIdx, v_Resultfn);
			IF v_Resultfn = -93 THEN	
			BEGIN
				
				SELECT guild_idx INTO p_registGuildIdx FROM guild_member WHERE char_idx = p_charIdx;

				SET p_Result := -93;
				SET p_Msg := '';
				LEAVE root;
			END;

			ELSE
			BEGIN
				
				IF EXISTS( SELECT * FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx ) THEN
				BEGIN
					
					
					START TRANSACTION;
						
						SET v_Resultfn := udf_guild_application_Del(p_guildIdx, p_charIdx);
						
						IF v_Resultfn <> 1 THEN
						BEGIN
							SET p_registGuildIdx := 0;
							SET p_Result := v_Resultfn;
							SET p_Msg := '';
							ROLLBACK;
							LEAVE root;
						END;
						END IF;
					COMMIT;

					SET p_registGuildIdx := 0;
					SET p_Result := 1;	
					SET p_Msg := '';
					LEAVE root;
				END;

				ELSE
				BEGIN
					SET p_registGuildIdx := 0;
					SET p_Result := -8;	
					SET p_Msg := '';
					LEAVE root;
				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_bookmark_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_bookmark_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_userIdx	BIGINT		
,	OUT	p_Result	INT		
,	OUT	p_Msg		TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		root:
		BEGIN

			
			IF EXISTS( SELECT * FROM guild_bookmark WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx ) THEN
			BEGIN
				
				
				START TRANSACTION;
					
					SET v_Resultfn := udf_guild_bookmark_Del(p_guildIdx, p_userIdx);
					
					IF v_Resultfn <> 1 THEN
					BEGIN
						SET p_Result := v_Resultfn;
						SET p_Msg := '';
						ROLLBACK;
						LEAVE root;
					END;
					END IF;
				COMMIT;

				SET p_Result := 1;	
				SET p_Msg := '';
				LEAVE root;
			END;

			ELSE
			BEGIN
				SET p_Result := -8;	
				SET p_Msg := '';
				LEAVE root;
			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_bookmark_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_bookmark_Ins`(
	IN	p_guildIdx	BIGINT		
,	IN	p_userIdx	BIGINT		
,	IN	p_bookMaxCnt	INT		
,	OUT	p_Result	INT		
,	OUT	p_Msg		TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
	DECLARE v_MaxCnt	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				IF EXISTS( SELECT * FROM guild_member WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx ) THEN
				BEGIN
					SET p_Result := -93;	
					SET p_Msg := '';
				END;

				ELSE
				BEGIN
					
					IF EXISTS( SELECT * FROM guild_bookmark WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx ) THEN
					BEGIN
						SET p_Result := -5;	
						SET p_Msg := '';
					END;

					ELSE
					root:
					BEGIN
						
						SELECT COUNT(guild_idx) INTO v_MaxCnt FROM guild_bookmark WHERE user_idx = p_userIdx;
						IF v_MaxCnt > p_bookMaxCnt THEN
						BEGIN
							SET p_Result := -101;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN
							
							
							START TRANSACTION;
								
								SET v_Resultfn := udf_guild_bookmark_Ins(p_guildIdx, p_userIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;
						END;
						END IF;
					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_Check_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_Check_Sel`(
	IN	p_guildIdx	BIGINT		
,	OUT	p_Result	INT		
)
BEGIN



	
	IF EXISTS( SELECT * FROM guild WHERE guild_idx = p_guildIdx ) THEN
	BEGIN
		SET p_Result = -91;	
	END;

	ELSE
	BEGIN
		SET p_Result := -92;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_GrowTarget_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_GrowTarget_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_growType	TINYINT	
,	IN	p_growTarget	INT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;

	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN

				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_userIdx, v_memberGrade);
					IF 1 > v_memberGrade THEN
					BEGIN
						SET p_Result := -102;	
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						
						START TRANSACTION;

							
							SET v_Resultfn := udf_guild_growTarget_Upd(p_guildIdx, p_growType, p_growTarget);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

						COMMIT;

						SET p_Result := 1;	
						SET p_Msg := '';
						LEAVE root;
					END;
					END IF;
				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_Ins_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_Ins_c9`(
	IN	p_userIdx		BIGINT		
,	IN	p_name			VARCHAR(50)	
,	IN	p_nickname		VARCHAR(30)	
,	IN	p_charIdx		BIGINT		
,	IN	p_charType		INT		
,	IN	p_charLevel		INT		
,	IN	p_battlePower		INT		
,	IN	p_gamedbIdx		SMALLINT	
,	IN	p_memberGrade		INT		
,	IN	p_memberMaxCnt		INT		
,	IN	p_markId		INT		
,	IN	p_joinType		CHAR(1)		
,	IN	p_introduction		VARCHAR(256)	
,	IN	p_notice		VARCHAR(512)	
,	IN 	p_rejoinTime	INT		
,	OUT	p_guildIdx		BIGINT		
,	OUT	p_Result		INT		
,	OUT	p_Msg			TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	root:
    BEGIN
	
		IF (p_name IS NULL) || (p_name = "") THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
			SET p_guildIdx := 0;
			
			LEAVE root;
		END;
        END IF;

		IF (p_userIdx IS NULL) || (p_userIdx < 1) || (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
			SET p_guildIdx := 0;
			
			LEAVE root;
		END;
        END IF;
		
		CALL gusp_guild_member_withdraw_Check_Sel_c9(p_userIdx, p_charIdx, p_rejoinTime, v_Resultfn);
		IF v_Resultfn <> 1 THEN	
		BEGIN
			SET p_Result := v_Resultfn;
			SET p_Msg := '';
			
			LEAVE root;
		END;
        END IF;
					
		-- IF EXISTS( SELECT * FROM guild WHERE master_user_idx = p_userIdx ) THEN
        IF EXISTS( SELECT * FROM guild WHERE master_char_idx = p_charIdx ) THEN
		BEGIN
			SET p_Result := -95;	
			SET p_Msg := '';
			-- SELECT guild_idx INTO p_guildIdx FROM guild WHERE master_user_idx = p_userIdx;
            SELECT guild_idx INTO p_guildIdx FROM guild WHERE master_char_idx = p_charIdx;
			
			LEAVE root;
		END;
        END IF;

		-- CALL gusp_guild_member_Check_Sel(p_userIdx, v_Resultfn);
        CALL gusp_guild_member_Check_Sel(p_userIdx, p_charIdx, v_Resultfn);
		IF v_Resultfn <> -94 THEN
		BEGIN
			SET p_Result := v_Resultfn;
			SET p_Msg := '';
			-- SELECT guild_idx INTO p_guildIdx FROM guild_member WHERE user_idx = p_userIdx;
            SELECT guild_idx INTO p_guildIdx FROM guild_member WHERE char_idx = p_charIdx;
			
			LEAVE root;
		END;
        END IF;

		CALL gusp_guild_name_Check_Sel(p_name, v_Resultfn);
		IF v_Resultfn = -96 THEN	
		BEGIN
			SET p_guildIdx := 0;
			SET p_Result := v_Resultfn;
			SET p_Msg := '';
			LEAVE root;
		END;
		END IF;
				
		START TRANSACTION;
			
			SET p_guildIdx := udf_guild_Ins(p_userIdx, p_charIdx, p_name, p_memberMaxCnt, p_markId, p_joinType, p_introduction, p_notice);
			
			IF p_guildIdx < 1 THEN	
			BEGIN
				SET p_guildIdx := 0;
				SET p_Result := -7;
				SET p_Msg := '';
				ROLLBACK;
				LEAVE root;
			END;
			END IF;

			
			SET v_Resultfn := udf_guild_member_Ins(p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_memberGrade);
			
			IF v_Resultfn <> 1 THEN	
			BEGIN
				SET p_guildIdx := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
				ROLLBACK;
				LEAVE root;
			END;
			END IF;
            
            -- 가입 신청 했던 것들 삭제
            DELETE FROM guild_application WHERE char_idx = p_charIdx;
			
		COMMIT;

		SET p_Result := 1;	
		SET p_Msg := '';
		LEAVE root;
						

	END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_MainRank_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_MainRank_Sel`(
	IN	p_guildIdx	BIGINT	

,	IN	p_guildIdx1	BIGINT
,	IN	p_guildIdx2	BIGINT
,	IN	p_guildIdx3	BIGINT
,	IN	p_guildIdx4	BIGINT
,	IN	p_guildIdx5	BIGINT
,	IN	p_guildIdx6	BIGINT
,	IN	p_guildIdx7	BIGINT
,	IN	p_guildIdx8	BIGINT
,	IN	p_guildIdx9	BIGINT
,	IN	p_guildIdx10	BIGINT
,	IN	p_guildIdx11	BIGINT
,	IN	p_guildIdx12	BIGINT
,	IN	p_guildIdx13	BIGINT
,	IN	p_guildIdx14	BIGINT
,	IN	p_guildIdx15	BIGINT
,	IN	p_guildIdx16	BIGINT
,	IN	p_guildIdx17	BIGINT
,	IN	p_guildIdx18	BIGINT
,	IN	p_guildIdx19	BIGINT
,	IN	p_guildIdx20	BIGINT
,	IN	p_guildIdx21	BIGINT
,	IN	p_guildIdx22	BIGINT
,	IN	p_guildIdx23	BIGINT
,	IN	p_guildIdx24	BIGINT
,	IN	p_guildIdx25	BIGINT
,	IN	p_guildIdx26	BIGINT
,	IN	p_guildIdx27	BIGINT
,	IN	p_guildIdx28	BIGINT
,	IN	p_guildIdx29	BIGINT
,	IN	p_guildIdx30	BIGINT
,	IN	p_guildIdx31	BIGINT
,	IN	p_guildIdx32	BIGINT
,	IN	p_guildIdx33	BIGINT
,	IN	p_guildIdx34	BIGINT
,	IN	p_guildIdx35	BIGINT
,	IN	p_guildIdx36	BIGINT
,	IN	p_guildIdx37	BIGINT
,	IN	p_guildIdx38	BIGINT
,	IN	p_guildIdx39	BIGINT
,	IN	p_guildIdx40	BIGINT
,	IN	p_guildIdx41	BIGINT
,	IN	p_guildIdx42	BIGINT
,	IN	p_guildIdx43	BIGINT
,	IN	p_guildIdx44	BIGINT
,	IN	p_guildIdx45	BIGINT
,	IN	p_guildIdx46	BIGINT
,	IN	p_guildIdx47	BIGINT
,	IN	p_guildIdx48	BIGINT
,	IN	p_guildIdx49	BIGINT
,	IN	p_guildIdx50	BIGINT
,	IN	p_guildIdx51	BIGINT
,	IN	p_guildIdx52	BIGINT
,	IN	p_guildIdx53	BIGINT
,	IN	p_guildIdx54	BIGINT
,	IN	p_guildIdx55	BIGINT
,	IN	p_guildIdx56	BIGINT
,	IN	p_guildIdx57	BIGINT
,	IN	p_guildIdx58	BIGINT
,	IN	p_guildIdx59	BIGINT
,	IN	p_guildIdx60	BIGINT
,	IN	p_guildIdx61	BIGINT
,	IN	p_guildIdx62	BIGINT
,	IN	p_guildIdx63	BIGINT
,	IN	p_guildIdx64	BIGINT
,	IN	p_guildIdx65	BIGINT
,	IN	p_guildIdx66	BIGINT
,	IN	p_guildIdx67	BIGINT
,	IN	p_guildIdx68	BIGINT
,	IN	p_guildIdx69	BIGINT
,	IN	p_guildIdx70	BIGINT
,	IN	p_guildIdx71	BIGINT
,	IN	p_guildIdx72	BIGINT
,	IN	p_guildIdx73	BIGINT
,	IN	p_guildIdx74	BIGINT
,	IN	p_guildIdx75	BIGINT
,	IN	p_guildIdx76	BIGINT
,	IN	p_guildIdx77	BIGINT
,	IN	p_guildIdx78	BIGINT
,	IN	p_guildIdx79	BIGINT
,	IN	p_guildIdx80	BIGINT
,	IN	p_guildIdx81	BIGINT
,	IN	p_guildIdx82	BIGINT
,	IN	p_guildIdx83	BIGINT
,	IN	p_guildIdx84	BIGINT
,	IN	p_guildIdx85	BIGINT
,	IN	p_guildIdx86	BIGINT
,	IN	p_guildIdx87	BIGINT
,	IN	p_guildIdx88	BIGINT
,	IN	p_guildIdx89	BIGINT
,	IN	p_guildIdx90	BIGINT
,	IN	p_guildIdx91	BIGINT
,	IN	p_guildIdx92	BIGINT
,	IN	p_guildIdx93	BIGINT
,	IN	p_guildIdx94	BIGINT
,	IN	p_guildIdx95	BIGINT
,	IN	p_guildIdx96	BIGINT
,	IN	p_guildIdx97	BIGINT
,	IN	p_guildIdx98	BIGINT
,	IN	p_guildIdx99	BIGINT
,	IN	p_guildIdx100	BIGINT
)
BEGIN



	
	CALL gusp_guild_Sel(p_guildIdx);
	
	CALL gusp_guild_TopRank_Sel(p_guildIdx1, p_guildIdx2, p_guildIdx3, p_guildIdx4, p_guildIdx5, p_guildIdx6, p_guildIdx7, p_guildIdx8, p_guildIdx9, p_guildIdx10,
				p_guildIdx11, p_guildIdx12, p_guildIdx13, p_guildIdx14, p_guildIdx15, p_guildIdx16, p_guildIdx17, p_guildIdx18, p_guildIdx19, p_guildIdx20,
				p_guildIdx21, p_guildIdx22, p_guildIdx23, p_guildIdx24, p_guildIdx25, p_guildIdx26, p_guildIdx27, p_guildIdx28, p_guildIdx29, p_guildIdx30,
				p_guildIdx31, p_guildIdx32, p_guildIdx33, p_guildIdx34, p_guildIdx35, p_guildIdx36, p_guildIdx37, p_guildIdx38, p_guildIdx39, p_guildIdx40,
				p_guildIdx41, p_guildIdx42, p_guildIdx43, p_guildIdx44, p_guildIdx45, p_guildIdx46, p_guildIdx47, p_guildIdx48, p_guildIdx49, p_guildIdx50,
				p_guildIdx51, p_guildIdx52, p_guildIdx53, p_guildIdx54, p_guildIdx55, p_guildIdx56, p_guildIdx57, p_guildIdx58, p_guildIdx59, p_guildIdx60,
				p_guildIdx61, p_guildIdx62, p_guildIdx63, p_guildIdx64, p_guildIdx65, p_guildIdx66, p_guildIdx67, p_guildIdx68, p_guildIdx69, p_guildIdx70,
				p_guildIdx71, p_guildIdx72, p_guildIdx73, p_guildIdx74, p_guildIdx75, p_guildIdx76, p_guildIdx77, p_guildIdx78, p_guildIdx79, p_guildIdx80,
				p_guildIdx81, p_guildIdx82, p_guildIdx83, p_guildIdx84, p_guildIdx85, p_guildIdx86, p_guildIdx87, p_guildIdx88, p_guildIdx89, p_guildIdx90,
				p_guildIdx91, p_guildIdx92, p_guildIdx93, p_guildIdx94, p_guildIdx95, p_guildIdx96, p_guildIdx97, p_guildIdx98, p_guildIdx99, p_guildIdx100
				);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_memberApproval_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_memberApproval_Del`(
	IN	p_guildIdx	BIGINT		
,	IN	p_charIdx	BIGINT		
,	IN	p_joinCharIdx	BIGINT		
,	OUT	p_Result	INT		
,	OUT	p_Msg		TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			root:
			BEGIN

				
				CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);

				
				IF (v_memberGrade IS NULL) || (v_memberGrade < 1) THEN
				BEGIN
					SET p_Result := -102;	
					SET p_Msg := '';
					LEAVE root;
				END;

				ELSE
				BEGIN
					
					IF EXISTS( SELECT * FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_joinCharIdx ) THEN
					BEGIN

						
						
						START TRANSACTION;

							
							SET v_Resultfn := udf_guild_applicationApproval_Detail_Del(p_guildIdx, p_joinCharIdx);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;
                            
                            -- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
							DELETE A
                                FROM user_reddot A
                                JOIN guild_member B ON A.char_idx = B.char_idx
                                WHERE B.guild_idx = p_guildIdx AND B.member_grade > 0 AND type_id = 9 AND element_value = p_joinCharIdx;

						COMMIT;

						SET p_Result := 1;	
						SET p_Msg := '';
						LEAVE root;

					END;

					ELSE
					BEGIN
						SET p_Result := -103;	
						SET p_Msg := '';
						LEAVE root;
					END;
					END IF;
				
				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_Check_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_Check_Sel`(
	IN	p_userIdx	BIGINT
,	IN	p_charIdx	BIGINT
,	OUT	p_Result	INT		
)
BEGIN

	-- IF EXISTS( SELECT * FROM guild_member WHERE user_idx = p_userIdx ) THEN
    IF EXISTS( SELECT * FROM guild_member WHERE char_idx = p_charIdx ) THEN
	BEGIN
		SET p_Result = -93;	
	END;

	ELSE
	BEGIN
		SET p_Result := -94;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_Del` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_Del`(
	IN	p_guildIdx		BIGINT		
,	IN	p_charIdx		BIGINT		
,	IN	p_TXIDX			BIGINT		
,	OUT	p_memberGrade		INT		
,	OUT	p_guildName		VARCHAR(50)	
,	OUT	p_afterMemberCnt	INT		
,	OUT	p_joinType		VARCHAR(1)	
,	OUT	p_exp			BIGINT	
,	OUT	p_Result		INT		
,	OUT	p_Msg			TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	

	DECLARE v_useridx	BIGINT;
					
					

	DECLARE v_memberCnt	INT;	
	DECLARE v_memberMaxCnt	INT;	
	DECLARE v_upType	INT;	
	DECLARE v_iPartKeyMonth	INT;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_memberGrade := 0;
		SET p_guildName := '';
		SET p_afterMemberCnt := 0;
		SET p_joinType := '';
		SET p_exp := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_memberGrade := 0;
			SET p_guildName := '';
			SET p_afterMemberCnt := 0;
			SET p_joinType := '';
			SET p_exp := 0;
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			SELECT user_idx INTO v_userIdx FROM char_info WHERE char_idx = p_charIdx;
			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_memberGrade := 0;
				SET p_guildName := '';
				SET p_afterMemberCnt := 0;
				SET p_joinType := '';
				SET p_exp := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_memberGrade := 0;
					SET p_guildName := '';
					SET p_afterMemberCnt := 0;
					SET p_joinType := '';
					SET p_exp := 0;
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					SET v_iPartKeyMonth := fn_Get_PartKeyMonth();

					
					SELECT `name`, member_cnt, join_type, exp INTO p_guildName, v_memberCnt, p_joinType, p_exp FROM guild WHERE guild_idx = p_guildIdx;
					
					SET p_afterMemberCnt := v_memberCnt - 1;

					
					
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, p_memberGrade);

					
					IF p_memberGrade > 2 THEN
					BEGIN

						IF v_memberCnt > 1 THEN
						BEGIN
							SET p_memberGrade := 0;
							SET p_guildName := '';
							SET p_afterMemberCnt := 0;
							SET p_joinType := '';
							SET p_exp := 0;
							SET p_Result := -107;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN
							
							
							START TRANSACTION;
								
								SET v_Resultfn := udf_guild_member_withdraw_Ins(p_guildIdx, p_charIdx, v_iPartKeyMonth, p_TXIDX);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_memberGrade := 0;
									SET p_guildName := '';
									SET p_afterMemberCnt := 0;
									SET p_joinType := '';
									SET p_exp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

								
								SET v_Resultfn := udf_guild_withdraw_Ins(p_guildIdx, v_iPartKeyMonth, p_TXIDX);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_memberGrade := 0;
									SET p_guildName := '';
									SET p_afterMemberCnt := 0;
									SET p_joinType := '';
									SET p_exp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

								
								SET v_Resultfn := udf_guild_member_Del(p_guildIdx, p_charIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_memberGrade := 0;
									SET p_guildName := '';
									SET p_afterMemberCnt := 0;
									SET p_joinType := '';
									SET p_exp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
                                
								
								SET v_Resultfn := udf_guild_Del(p_guildIdx, p_charIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_memberGrade := 0;
									SET p_guildName := '';
									SET p_afterMemberCnt := 0;
									SET p_joinType := '';
									SET p_exp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
                                
                                
								SET v_Resultfn := udf_guild_war_unit_Multi_Del(p_guildIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_memberGrade := 0;
									SET p_guildName := '';
									SET p_afterMemberCnt := 0;
									SET p_joinType := '';
									SET p_exp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
                                
                                
								SET v_Resultfn := udf_guild_war_setting_Multi_Del(p_guildIdx);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_memberGrade := 0;
									SET p_guildName := '';
									SET p_afterMemberCnt := 0;
									SET p_joinType := '';
									SET p_exp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;
								
								-- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
								-- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
								-- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
								-- RDT_GUILD_ATTENDANCE = 10,		// 길드 출석
								DELETE FROM user_reddot WHERE user_idx = v_userIdx AND char_idx = p_charIdx AND type_id IN (7,8,9,10);
								
							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;
						END;
						END IF;
					END;

					ELSE
					BEGIN
						
						SET v_upType := 2;

						
						
						START TRANSACTION;
							
							SET v_Resultfn := udf_guild_member_withdraw_Ins(p_guildIdx, p_charIdx, v_iPartKeyMonth, p_TXIDX);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_memberGrade := 0;
								SET p_guildName := '';
								SET p_afterMemberCnt := 0;
								SET p_joinType := '';
								SET p_exp := 0;
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

							
							SET v_Resultfn := udf_guild_memberCnt_Upd(p_guildIdx, v_upType);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_memberGrade := 0;
								SET p_guildName := '';
								SET p_afterMemberCnt := 0;
								SET p_joinType := '';
								SET p_exp := 0;
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

							
							SET v_Resultfn := udf_guild_member_Del(p_guildIdx, p_charIdx);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_memberGrade := 0;
								SET p_guildName := '';
								SET p_afterMemberCnt := 0;
								SET p_joinType := '';
								SET p_exp := 0;
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;
							
							-- RDT_GUILD_ALLIANCE_REQUEST	= 7,	// GuildIdx
							-- RDT_NEW_GUILD_ALLIANCE	= 8,		// GuildIdx
							-- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
							-- RDT_GUILD_ATTENDANCE = 10,		// 길드 출석
							DELETE FROM user_reddot WHERE user_idx = v_userIdx AND char_idx = p_charIdx AND type_id IN (7,8,9,10);
                            
						COMMIT;

						SET p_Result := 1;	
						SET p_Msg := '';
						LEAVE root;
					END;
					END IF;


				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_DetailCheck_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_DetailCheck_Sel`(
	IN	p_guildIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	OUT	p_Result	INT	
)
BEGIN



	
	IF EXISTS( SELECT * FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx ) THEN
	BEGIN
		SET p_Result = -93;	
	END;

	ELSE
	BEGIN
		SET p_Result := -94;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_GradeCheck_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_GradeCheck_Sel`(
	IN	p_guildIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	OUT	p_Result	INT	
)
BEGIN



	SET p_Result := -1;	

	SELECT member_grade INTO p_Result
	FROM guild_member WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_GradeEntitle_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_GradeEntitle_Upd`(
	IN	p_guildIdx		BIGINT	
,	IN	p_charIdx		BIGINT	
,	IN	p_entitleCharIdx	BIGINT	
,	IN	p_masterGrade		INT	
,	IN	p_memberGrade		INT	
,	IN	p_limitCnt		INT	
,	OUT	p_Result		INT	
,	OUT	p_Msg			TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;
	DECLARE v_memCnt	INT;	
       

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;
    

	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_entitleCharIdx, v_Resultfn);
					IF v_Resultfn = -94 THEN	
					BEGIN
						SET p_Result := v_Resultfn;
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);
						IF v_memberGrade <> p_masterGrade THEN
						BEGIN
							SET p_Result := -102;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN

							
							SET v_memCnt := 0;
							SELECT COUNT(char_idx) INTO v_memCnt FROM guild_member WHERE guild_idx = p_guildIdx AND member_grade = p_memberGrade; 

							IF v_memCnt >= p_limitCnt THEN
							BEGIN
								SET p_Result := -108;	
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;

							ELSE
							BEGIN
								
								
								START TRANSACTION;

									
									SET v_Resultfn := udf_guild_member_Grade_Upd(p_guildIdx, p_entitleCharIdx, p_memberGrade);
									
									IF v_Resultfn <> 1 THEN
									BEGIN
										SET p_Result := v_Resultfn;
										SET p_Msg := '';
										ROLLBACK;
										LEAVE root;
									END;
									END IF;

								COMMIT;

								SET p_Result := 1;	
								SET p_Msg := '';
								LEAVE root;
							END;
							END IF;

						END;
						END IF;
					END;
					END IF;
						
				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_Grade_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_Grade_Upd`(
	IN	p_guildIdx		BIGINT	
,	IN	p_charIdx		BIGINT	
,	IN	p_entitleCharIdx	BIGINT	
,	IN	p_masterGrade		INT	
,	IN	p_memberGrade		INT	
,	OUT	p_Result		INT	
,	OUT	p_Msg			TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;
	DECLARE v_memCnt	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_entitleCharIdx, v_Resultfn);
					IF v_Resultfn = -94 THEN	
					BEGIN
						SET p_Result := v_Resultfn;
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);
						IF v_memberGrade <> p_masterGrade THEN
						BEGIN
							SET p_Result := -102;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN
							
							
							START TRANSACTION;

								
								SET v_Resultfn := udf_guild_member_Grade_Upd(p_guildIdx, p_entitleCharIdx, p_memberGrade);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;
						END;
						END IF;
					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_Ins_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_Ins_c9`(
	IN	p_guildIdx		BIGINT		
,	IN	p_userIdx		BIGINT		
,	IN	p_nickname		VARCHAR(30)	
,	IN	p_charIdx		BIGINT		
,	IN	p_charType		INT		
,	IN	p_charLevel		INT		
,	IN	p_battlePower		INT		
,	IN	p_gamedbIdx		SMALLINT	
,	IN	p_memberGrade		INT		
,	IN	p_applicationCnt	INT		
,	IN 	p_rejoinTime	INT
,	IN	p_application_message	VARCHAR(256)
,	OUT	p_joinType		VARCHAR(1)	
,	OUT	p_Result		INT		
,	OUT	p_Msg			TEXT		
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberCnt	INT;	
	DECLARE v_memberMaxCnt	INT;	
	DECLARE v_upType	INT;	
	DECLARE v_applicationCnt	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_joinType := '';
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) || (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_joinType := '';
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_member_withdraw_Check_Sel_c9(p_userIdx, p_charIdx, p_rejoinTime, v_Resultfn);
			IF v_Resultfn <> 1 THEN	
			BEGIN
				SET p_joinType := '';
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN

				
				CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
				IF v_Resultfn = -92 THEN	
				BEGIN
					SET p_joinType := '';
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				BEGIN
					
					CALL gusp_guild_member_Check_Sel(p_userIdx, p_charIdx, v_Resultfn);
					IF v_Resultfn = -93 THEN	
					BEGIN
						SET p_joinType := '';
						SET p_Result := v_Resultfn;
						SET p_Msg := '';
					END;

					ELSE
					root:
					BEGIN
						
						SELECT member_cnt, member_max_cnt, join_type INTO v_memberCnt, v_memberMaxCnt, p_joinType
						FROM guild WHERE guild_idx = p_guildIdx;

						IF p_joinType = 'B' THEN	
						BEGIN
							SET p_joinType := '';
							SET p_Result := -98;
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSEIF p_joinType = 'A' THEN	
						BEGIN
							IF v_memberCnt >= v_memberMaxCnt THEN	
							BEGIN
								SET p_joinType := '';
								SET p_Result := -99;	
								SET p_Msg := '';
								LEAVE root;
							END;

							ELSE
							BEGIN
								SET v_upType := 1;

								
								
								START TRANSACTION;
									
									SET v_Resultfn := udf_guild_member_Ins(p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_memberGrade);
									
									IF v_Resultfn <> 1 THEN	
									BEGIN
										SET p_joinType := '';
										SET p_Result := v_Resultfn;
										SET p_Msg := '';
										ROLLBACK;
										LEAVE root;
									END;
									END IF;
                                    
									
									SET v_Resultfn := udf_guild_memberCnt_Upd(p_guildIdx, v_upType);
									
									IF v_Resultfn <> 1 THEN
									BEGIN
										SET p_joinType := '';
										SET p_Result := v_Resultfn;
										SET p_Msg := '';
										ROLLBACK;
										LEAVE root;
									END;
									END IF;
                                    
                                    SET v_Resultfn := udf_guild_applicationApproval_Del(p_charIdx);
									-- IF v_Resultfn <> 1 THEN
									-- BEGIN
									-- 	SET p_joinType := '';
									-- 	SET p_Result := v_Resultfn;
									-- 	SET p_Msg := '';
									-- 	ROLLBACK;
									-- 	LEAVE root;
									-- END;
									-- END IF;

								COMMIT;

								SET p_Result := 1;	
								SET p_Msg := '';
								LEAVE root;
							END;
							END IF;
						END;

						ELSEIF p_joinType = 'M' THEN	
						BEGIN
							-- SELECT COUNT(guild_idx) INTO v_applicationCnt FROM guild_application WHERE user_idx = p_userIdx;
                            SELECT COUNT(guild_idx) INTO v_applicationCnt FROM guild_application WHERE char_idx = p_charIdx;
							
							IF v_applicationCnt > p_applicationCnt THEN	
							BEGIN
								SET p_joinType := '';
								SET p_Result := -100;	
								SET p_Msg := '';
								LEAVE root;
							END;

							ELSE
							BEGIN
								
								-- IF EXISTS( SELECT * FROM guild_application WHERE guild_idx = p_guildIdx AND user_idx = p_userIdx ) THEN
                                IF EXISTS( SELECT * FROM guild_application WHERE guild_idx = p_guildIdx AND char_idx = p_charIdx ) THEN
								BEGIN
									SET p_joinType := '';
									SET p_Result := -107;	
									SET p_Msg := '';
									LEAVE root;
								END;

								ELSE
								BEGIN

									
									
									START TRANSACTION;
										
										SET v_Resultfn := udf_guild_application_Ins(p_guildIdx, p_userIdx, p_nickname, p_charIdx, p_charType, p_charLevel, p_battlePower, p_gamedbIdx, p_application_message);
										
										IF v_Resultfn <> 1 THEN	
										BEGIN
											SET p_joinType := '';
											SET p_Result := v_Resultfn;
											SET p_Msg := '';
											ROLLBACK;
											LEAVE root;
										END;
										END IF;
                                        
                                        -- RDT_GUILD_MEMBER_APPLICATION = 9,	// CharDBIdx
										INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
											SELECT user_idx, char_idx, 9, p_charIdx FROM guild_member WHERE guild_idx = p_guildIdx AND member_grade > 0
										ON DUPLICATE KEY UPDATE type_id = 9, element_value = p_charIdx;
                                        
									COMMIT;

									SET p_Result := 1;	
									SET p_Msg := '';
									LEAVE root;
								END;
								END IF;

							END;
							END IF;
						END;

						ELSE	
						BEGIN
							SET p_joinType := '';
							SET p_Result := -1;
							SET p_Msg := '';
							LEAVE root;
						END;
						END IF;

					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_IsEntryWar_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_IsEntryWar_Upd`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_IsEntryWar	TINYINT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					
					START TRANSACTION;

						
						SET v_Resultfn := udf_guild_member_IsEntryWar_Upd(p_guildIdx, p_userIdx, p_IsEntryWar);
						
						IF v_Resultfn <> 1 THEN
						BEGIN
							SET p_Result := v_Resultfn;
							SET p_Msg := '';
							ROLLBACK;
							LEAVE root;
						END;
						END IF;

					COMMIT;

					SET p_Result := 1;	
					SET p_Msg := '';
					LEAVE root;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_LobbyCheck_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_LobbyCheck_Sel`(
	IN	p_userIdx	BIGINT		
,	OUT	p_guildIdx	BIGINT		
,	OUT	p_memberGrade	INT		
,	OUT	p_guildName	VARCHAR(50)	
,	OUT	p_guildMarkId	INT		
,	OUT	p_result	INT		
)
BEGIN



	DECLARE	p_memberStatus	TINYINT;	
	SET p_memberStatus := 3;

	SET p_result := 0;
	SET p_guildIdx := 0;
	SET p_memberGrade := 0;
	SET p_guildName := '';
	SET p_guildMarkId := 0;

	SELECT A.guild_idx, A.member_grade, B.`name`, B.mark_id INTO p_guildIdx, p_memberGrade, p_guildName, p_guildMarkId
	FROM guild_member A INNER JOIN guild B ON A.guild_idx = B.guild_idx
	WHERE A.user_idx = p_userIdx
	AND A.member_status < p_memberStatus;

	SET p_result := 1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	DECLARE	p_memberStatus	TINYINT;	
	SET p_memberStatus := 3;

	SELECT B.user_idx, B.nickname, B.char_type, B.char_level, B.battle_power, B.gamedb_idx, B.member_grade, B.play_cnt, B.win_cnt, B.lose_cnt, B.draw_cnt,
		B.visit_date, B.last_play_date, B.is_entry_war, B.join_war_cnt, B.member_status, B.reg_date
	FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx
	WHERE A.guild_idx = p_guildIdx
	AND B.member_status < p_memberStatus
	ORDER BY B.member_grade DESC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_member_withdraw_Check_Sel_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_member_withdraw_Check_Sel_c9`(
	IN	p_userIdx	BIGINT
,	IN	p_charIdx	BIGINT
,	IN 	p_rejoinTime	INT		
,	OUT	p_Result	INT		
)
BEGIN



	DECLARE p_unregDate	DATETIME DEFAULT NOW();	
	
	SET p_unregDate := DATE_SUB(NOW(), INTERVAL p_rejoinTime hour);	
	
	
	-- IF EXISTS( SELECT * FROM guild_member_withdraw WHERE user_idx = p_userIdx AND unreg_date > p_unregDate) THEN
    IF EXISTS( SELECT * FROM guild_member_withdraw WHERE char_idx = p_charIdx AND unreg_date > p_unregDate) THEN
	BEGIN
		SET p_Result = -106;	
	END;

	ELSE
	BEGIN
		SET p_Result := 1;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_name_Check_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_name_Check_Sel`(
	IN	p_guildName	VARCHAR(50)	
,	OUT	p_Result	INT		
)
BEGIN



	IF EXISTS( SELECT * FROM guild WHERE `name` = p_guildName collate utf8mb4_general_ci) THEN
	-- IF EXISTS( SELECT * FROM guild WHERE `name` collate utf8mb4_unicode_ci = p_guildName ) THEN
	BEGIN
		SET p_Result = -96;	
	END;

	ELSE
	BEGIN
		SET p_Result := -97;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	DECLARE p_memberGrade	INT;	
	SET p_memberGrade := 2;

	SELECT A.guild_idx, A.master_user_idx, A.`name`, A.exp, A.`point`, A.member_cnt, A.member_max_cnt, A.mark_id, A.introduction, A.join_type, A.notice, A.war_cnt, A.war_win_cnt, A.grow_target_merc, A.grow_target_merc_boss,
		A.grow_target_tower, A.battle_idx, A.buff_type, A.buff_value, A.buff_exp_date, A.rank_num, A.reg_date,
		B.nickname, B.char_type, B.char_level, B.battle_power, B.gamedb_idx
	FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_user_idx = B.user_idx
	WHERE A.guild_idx = p_guildIdx
	AND B.member_grade = p_memberGrade;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_TopRank_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_TopRank_Sel`(
	IN	p_guildIdx1	BIGINT
,	IN	p_guildIdx2	BIGINT
,	IN	p_guildIdx3	BIGINT
,	IN	p_guildIdx4	BIGINT
,	IN	p_guildIdx5	BIGINT
,	IN	p_guildIdx6	BIGINT
,	IN	p_guildIdx7	BIGINT
,	IN	p_guildIdx8	BIGINT
,	IN	p_guildIdx9	BIGINT
,	IN	p_guildIdx10	BIGINT
,	IN	p_guildIdx11	BIGINT
,	IN	p_guildIdx12	BIGINT
,	IN	p_guildIdx13	BIGINT
,	IN	p_guildIdx14	BIGINT
,	IN	p_guildIdx15	BIGINT
,	IN	p_guildIdx16	BIGINT
,	IN	p_guildIdx17	BIGINT
,	IN	p_guildIdx18	BIGINT
,	IN	p_guildIdx19	BIGINT
,	IN	p_guildIdx20	BIGINT
,	IN	p_guildIdx21	BIGINT
,	IN	p_guildIdx22	BIGINT
,	IN	p_guildIdx23	BIGINT
,	IN	p_guildIdx24	BIGINT
,	IN	p_guildIdx25	BIGINT
,	IN	p_guildIdx26	BIGINT
,	IN	p_guildIdx27	BIGINT
,	IN	p_guildIdx28	BIGINT
,	IN	p_guildIdx29	BIGINT
,	IN	p_guildIdx30	BIGINT
,	IN	p_guildIdx31	BIGINT
,	IN	p_guildIdx32	BIGINT
,	IN	p_guildIdx33	BIGINT
,	IN	p_guildIdx34	BIGINT
,	IN	p_guildIdx35	BIGINT
,	IN	p_guildIdx36	BIGINT
,	IN	p_guildIdx37	BIGINT
,	IN	p_guildIdx38	BIGINT
,	IN	p_guildIdx39	BIGINT
,	IN	p_guildIdx40	BIGINT
,	IN	p_guildIdx41	BIGINT
,	IN	p_guildIdx42	BIGINT
,	IN	p_guildIdx43	BIGINT
,	IN	p_guildIdx44	BIGINT
,	IN	p_guildIdx45	BIGINT
,	IN	p_guildIdx46	BIGINT
,	IN	p_guildIdx47	BIGINT
,	IN	p_guildIdx48	BIGINT
,	IN	p_guildIdx49	BIGINT
,	IN	p_guildIdx50	BIGINT
,	IN	p_guildIdx51	BIGINT
,	IN	p_guildIdx52	BIGINT
,	IN	p_guildIdx53	BIGINT
,	IN	p_guildIdx54	BIGINT
,	IN	p_guildIdx55	BIGINT
,	IN	p_guildIdx56	BIGINT
,	IN	p_guildIdx57	BIGINT
,	IN	p_guildIdx58	BIGINT
,	IN	p_guildIdx59	BIGINT
,	IN	p_guildIdx60	BIGINT
,	IN	p_guildIdx61	BIGINT
,	IN	p_guildIdx62	BIGINT
,	IN	p_guildIdx63	BIGINT
,	IN	p_guildIdx64	BIGINT
,	IN	p_guildIdx65	BIGINT
,	IN	p_guildIdx66	BIGINT
,	IN	p_guildIdx67	BIGINT
,	IN	p_guildIdx68	BIGINT
,	IN	p_guildIdx69	BIGINT
,	IN	p_guildIdx70	BIGINT
,	IN	p_guildIdx71	BIGINT
,	IN	p_guildIdx72	BIGINT
,	IN	p_guildIdx73	BIGINT
,	IN	p_guildIdx74	BIGINT
,	IN	p_guildIdx75	BIGINT
,	IN	p_guildIdx76	BIGINT
,	IN	p_guildIdx77	BIGINT
,	IN	p_guildIdx78	BIGINT
,	IN	p_guildIdx79	BIGINT
,	IN	p_guildIdx80	BIGINT
,	IN	p_guildIdx81	BIGINT
,	IN	p_guildIdx82	BIGINT
,	IN	p_guildIdx83	BIGINT
,	IN	p_guildIdx84	BIGINT
,	IN	p_guildIdx85	BIGINT
,	IN	p_guildIdx86	BIGINT
,	IN	p_guildIdx87	BIGINT
,	IN	p_guildIdx88	BIGINT
,	IN	p_guildIdx89	BIGINT
,	IN	p_guildIdx90	BIGINT
,	IN	p_guildIdx91	BIGINT
,	IN	p_guildIdx92	BIGINT
,	IN	p_guildIdx93	BIGINT
,	IN	p_guildIdx94	BIGINT
,	IN	p_guildIdx95	BIGINT
,	IN	p_guildIdx96	BIGINT
,	IN	p_guildIdx97	BIGINT
,	IN	p_guildIdx98	BIGINT
,	IN	p_guildIdx99	BIGINT
,	IN	p_guildIdx100	BIGINT
)
BEGIN



	DECLARE p_memberGrade	INT;	
	SET p_memberGrade := 2;

	SELECT A.guild_idx, A.master_user_idx, A.`name`, A.exp, A.`point`, A.member_cnt, A.member_max_cnt, A.mark_id, A.introduction, A.join_type, A.notice, A.war_cnt, A.war_win_cnt, A.grow_target_merc, A.grow_target_merc_boss,
		A.grow_target_tower, A.battle_idx, A.buff_type, A.buff_value, A.buff_exp_date, A.rank_num, A.reg_date,
		B.nickname, B.char_type, B.char_level, B.battle_power, B.gamedb_idx
	FROM guild A INNER JOIN guild_member B ON A.guild_idx = B.guild_idx AND A.master_user_idx = B.user_idx
	WHERE A.guild_idx IN(p_guildIdx1, p_guildIdx2, p_guildIdx3, p_guildIdx4, p_guildIdx5, p_guildIdx6, p_guildIdx7, p_guildIdx8, p_guildIdx9, p_guildIdx10,
			p_guildIdx11, p_guildIdx12, p_guildIdx13, p_guildIdx14, p_guildIdx15, p_guildIdx16, p_guildIdx17, p_guildIdx18, p_guildIdx19, p_guildIdx20,
			p_guildIdx21, p_guildIdx22, p_guildIdx23, p_guildIdx24, p_guildIdx25, p_guildIdx26, p_guildIdx27, p_guildIdx28, p_guildIdx29, p_guildIdx30,
			p_guildIdx31, p_guildIdx32, p_guildIdx33, p_guildIdx34, p_guildIdx35, p_guildIdx36, p_guildIdx37, p_guildIdx38, p_guildIdx39, p_guildIdx40,
			p_guildIdx41, p_guildIdx42, p_guildIdx43, p_guildIdx44, p_guildIdx45, p_guildIdx46, p_guildIdx47, p_guildIdx48, p_guildIdx49, p_guildIdx50,
			p_guildIdx51, p_guildIdx52, p_guildIdx53, p_guildIdx54, p_guildIdx55, p_guildIdx56, p_guildIdx57, p_guildIdx58, p_guildIdx59, p_guildIdx60,
			p_guildIdx61, p_guildIdx62, p_guildIdx63, p_guildIdx64, p_guildIdx65, p_guildIdx66, p_guildIdx67, p_guildIdx68, p_guildIdx69, p_guildIdx70,
			p_guildIdx71, p_guildIdx72, p_guildIdx73, p_guildIdx74, p_guildIdx75, p_guildIdx76, p_guildIdx77, p_guildIdx78, p_guildIdx79, p_guildIdx80,
			p_guildIdx81, p_guildIdx82, p_guildIdx83, p_guildIdx84, p_guildIdx85, p_guildIdx86, p_guildIdx87, p_guildIdx88, p_guildIdx89, p_guildIdx90,
			p_guildIdx91, p_guildIdx92, p_guildIdx93, p_guildIdx94, p_guildIdx95, p_guildIdx96, p_guildIdx97, p_guildIdx98, p_guildIdx99, p_guildIdx100
			)
	AND B.member_grade = p_memberGrade;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_Upd`(
	IN	p_guildIdx				BIGINT		
,	IN	p_charIdx				BIGINT		
,	IN	p_markId				INT		
,	IN	p_joinType				CHAR(1)		
,	IN	p_introduction			VARCHAR(256)	
,	IN	p_notice				VARCHAR(512)	
,   IN	p_isManagement			BOOL			-- TRUE:길드관리 FALSE:길드마크 
,	IN	p_guildMarkChangeCost	INT UNSIGNED 	-- 길드 마크 교체 비용
,	OUT	p_result				INT	
,	OUT	p_guildWealth 			BIGINT
,	OUT	p_msg					TEXT		
)
BEGIN

	DECLARE v_errno		INT;
	DECLARE v_msg			TEXT;
	DECLARE v_result		INT;
					
	-- 조건 체크용 로컬 변수
    DECLARE p_memberGrade	INT;
    DECLARE v_tmp_gold			BIGINT DEFAULT 0;		-- 골드 재화 조건 체크

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_result := (v_errno * -1);
			SET p_guildWealth := 0;	
			SET p_msg := v_msg;
		ROLLBACK;
	END;
    
	SET p_result := 1;	
    SET p_guildWealth := 0;
    
START TRANSACTION;
root:
BEGIN
    
    -- 길드 인덱스 유효성 체크
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
		BEGIN
			SET p_result := -4;
			SET p_msg := '';
			LEAVE root;
		END;
	END IF;
    
     -- 캐릭터 유효성 체크
    IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET p_result := -4;
			SET p_msg := '';
			LEAVE root;
		END;
	END IF;
    
    -- 길드 멤버 유효성 체크
    CALL gusp_guild_Check_Sel(p_guildIdx, v_result);
		IF v_result = -92 THEN	
		BEGIN
			SET p_result := v_result;
			SET p_msg := '';
			LEAVE root;
		END;
    END IF;
    
    -- 길드 멤버 체크
	CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_result);
		IF v_result = -94 THEN	
		BEGIN
			SET p_result := v_result;
			SET p_msg := '';
            LEAVE root;
		END;
    END IF;
    
    -- 길드 멤버 등급 체크
    CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, p_memberGrade);
		IF 3 > p_memberGrade THEN
			BEGIN
				SET p_result := -102;	
				SET p_msg := '';
				LEAVE root;
		END;
    END IF;
    
    -- 길드 마크 변경은 재화체크
	IF p_isManagement = FALSE THEN
		BEGIN
			SELECT guild_gold INTO v_tmp_gold FROM guild WHERE guild_idx = p_guildIdx;
            IF p_guildMarkChangeCost > v_tmp_gold THEN
				BEGIN
					SET p_result := -103;	
					SET p_msg := '';
					LEAVE root;
                END;
            END IF;
        END;
	END IF;
    
    -- 데이터 적용
	SET v_result := udf_guild_Upd(p_guildIdx, p_markId, p_joinType, p_introduction, p_notice);
	IF v_result <> 1 THEN
		BEGIN
			SET p_result := v_result;
			SET p_msg := '';
			LEAVE root;
		END;
	END IF;
    
    -- 재화 소모
    IF p_isManagement = FALSE THEN
		BEGIN
			UPDATE guild
			SET guild_gold = guild_gold - p_guildMarkChangeCost 
			WHERE master_char_idx = p_charIdx AND guild_idx = p_guildIdx;
		END;
    END IF;
END;
    
    IF p_result != 1 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SET p_guildWealth = (SELECT guild_gold FROM guild WHERE guild_idx = p_guildIdx);
    SET p_msg := '';
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_war_history_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_war_history_Sel`(
	IN	p_guildIdx	BIGINT		
)
BEGIN



	SELECT opponent_idx, opponent_name, opponent_mark_id, opponent_masterNick, opponent_char_typ, opponent_char_level,
		opponent_score, opponent_destroy, opponent_win_cnt, opponent_star_cnt,
		score, destroy, win_cnt, star_cnt, get_reward_type, get_reward_id, get_amount, get_exp, get_gold, get_seal
	FROM guild_war_history WHERE guild_idx = p_guildIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_war_Multi_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_war_Multi_Ins`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_warUnitCnt		INT	
,	IN	p_warSetCnt		INT	
,	IN	p_slot1			TINYINT	
,	IN	p_type1			TINYINT	
,	IN	p_id1			INT	
,	IN	p_slot2			TINYINT	
,	IN	p_type2			TINYINT	
,	IN	p_id2			INT	
,	IN	p_slot3			TINYINT	
,	IN	p_type3			TINYINT	
,	IN	p_id3			INT	
,	IN	p_slot4			TINYINT	
,	IN	p_type4			TINYINT	
,	IN	p_id4			INT	
,	IN	p_slot5			TINYINT	
,	IN	p_type5			TINYINT	
,	IN	p_id5			INT	
,	IN	p_slot6			TINYINT	
,	IN	p_type6			TINYINT	
,	IN	p_id6			INT	
,	IN	p_slot7			TINYINT	
,	IN	p_type7			TINYINT	
,	IN	p_id7			INT	
,	IN	p_slot8			TINYINT	
,	IN	p_type8			TINYINT	
,	IN	p_id8			INT	
,	IN	p_slot9			TINYINT	
,	IN	p_type9			TINYINT	
,	IN	p_id9			INT	
,	IN	p_slot10		TINYINT	
,	IN	p_type10		TINYINT	
,	IN	p_id10			INT	
,	IN	p_slot11		TINYINT	
,	IN	p_type11		TINYINT	
,	IN	p_id11			INT	
,	IN	p_slot12		TINYINT	
,	IN	p_type12		TINYINT	
,	IN	p_id12			INT	
,	IN	p_slot13		TINYINT	
,	IN	p_type13		TINYINT	
,	IN	p_id13			INT	
,	IN	p_slot14		TINYINT	
,	IN	p_type14		TINYINT	
,	IN	p_id14			INT	
,	IN	p_slot15		TINYINT	
,	IN	p_type15		TINYINT	
,	IN	p_id15			INT	
,	IN	p_slot16		TINYINT	
,	IN	p_type16		TINYINT	
,	IN	p_id16			INT	
,	IN	p_slot17		TINYINT	
,	IN	p_type17		TINYINT	
,	IN	p_id17			INT	
,	IN	p_slot18		TINYINT	
,	IN	p_type18		TINYINT	
,	IN	p_id18			INT	
,	IN	p_slot19		TINYINT	
,	IN	p_type19		TINYINT	
,	IN	p_id19			INT	
,	IN	p_slot20		TINYINT	
,	IN	p_type20		TINYINT	
,	IN	p_id20			INT	
,	IN	p_warUnitId1		INT	
,	IN	p_warUnitLevel1		INT	
,	IN	p_warUnitExp1		INT	
,	IN	p_warUnitId2		INT	
,	IN	p_warUnitLevel2		INT	
,	IN	p_warUnitExp2		INT	
,	IN	p_warUnitId3		INT	
,	IN	p_warUnitLevel3		INT	
,	IN	p_warUnitExp3		INT	
,	IN	p_warUnitId4		INT	
,	IN	p_warUnitLevel4		INT	
,	IN	p_warUnitExp4		INT	
,	IN	p_warUnitId5		INT	
,	IN	p_warUnitLevel5		INT	
,	IN	p_warUnitExp5		INT	
,	IN	p_warUnitId6		INT	
,	IN	p_warUnitLevel6		INT	
,	IN	p_warUnitExp6		INT	
,	IN	p_warUnitId7		INT	
,	IN	p_warUnitLevel7		INT	
,	IN	p_warUnitExp7		INT	
,	IN	p_warUnitId8		INT	
,	IN	p_warUnitLevel8		INT	
,	IN	p_warUnitExp8		INT	
,	IN	p_warUnitId9		INT	
,	IN	p_warUnitLevel9		INT	
,	IN	p_warUnitExp9		INT	
,	IN	p_warUnitId10		INT	
,	IN	p_warUnitLevel10	INT	
,	IN	p_warUnitExp10		INT	
,	IN	p_warUnitId11		INT	
,	IN	p_warUnitLevel11	INT	
,	IN	p_warUnitExp11		INT	
,	IN	p_warUnitId12		INT	
,	IN	p_warUnitLevel12	INT	
,	IN	p_warUnitExp12		INT	
,	IN	p_warUnitId13		INT	
,	IN	p_warUnitLevel13	INT	
,	IN	p_warUnitExp13		INT	
,	IN	p_warUnitId14		INT	
,	IN	p_warUnitLevel14	INT	
,	IN	p_warUnitExp14		INT	
,	IN	p_warUnitId15		INT	
,	IN	p_warUnitLevel15	INT	
,	IN	p_warUnitExp15		INT	
,	IN	p_warUnitId16		INT	
,	IN	p_warUnitLevel16	INT	
,	IN	p_warUnitExp16		INT	
,	IN	p_warUnitId17		INT	
,	IN	p_warUnitLevel17	INT	
,	IN	p_warUnitExp17		INT	
,	IN	p_warUnitId18		INT	
,	IN	p_warUnitLevel18	INT	
,	IN	p_warUnitExp18		INT	
,	IN	p_warUnitId19		INT	
,	IN	p_warUnitLevel19	INT	
,	IN	p_warUnitExp19		INT	
,	IN	p_warUnitId20		INT	
,	IN	p_warUnitLevel20	INT	
,	IN	p_warUnitExp20		INT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_userIdx, v_memberGrade);
					
					IF (v_memberGrade IS NULL) || (v_memberGrade < 1) THEN
					BEGIN
						SET p_Result := -102;	
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN

						
						
						START TRANSACTION;

							
							SET v_Resultfn := udf_guild_war_Multi_Del(p_guildIdx);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

							
							SET v_Resultfn := udf_guild_war_setting_Multi_Ins(p_guildIdx, p_warSetCnt, 
													p_slot1, p_type1, p_id1,
													p_slot2, p_type2, p_id2,
													p_slot3, p_type3, p_id3,
													p_slot4, p_type4, p_id4,
													p_slot5, p_type5, p_id5,
													p_slot6, p_type6, p_id6,
													p_slot7, p_type7, p_id7,
													p_slot8, p_type8, p_id8,
													p_slot9, p_type9, p_id9,
													p_slot10, p_type10, p_id10,
													p_slot11, p_type11, p_id11,
													p_slot12, p_type12, p_id12,
													p_slot13, p_type13, p_id13,
													p_slot14, p_type14, p_id14,
													p_slot15, p_type15, p_id15,
													p_slot16, p_type16, p_id16,
													p_slot17, p_type17, p_id17,
													p_slot18, p_type18, p_id18,
													p_slot19, p_type19, p_id19,
													p_slot20, p_type20, p_id20);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;


							
							SET v_Resultfn := udf_guild_war_unit_Multi_Ins(p_guildIdx, p_warUnitCnt, 
													p_warUnitId1, p_warUnitLevel1, p_warUnitExp1,
													p_warUnitId2, p_warUnitLevel2, p_warUnitExp2,
													p_warUnitId3, p_warUnitLevel3, p_warUnitExp3,
													p_warUnitId4, p_warUnitLevel4, p_warUnitExp4,
													p_warUnitId5, p_warUnitLevel5, p_warUnitExp5,
													p_warUnitId6, p_warUnitLevel6, p_warUnitExp6,
													p_warUnitId7, p_warUnitLevel7, p_warUnitExp7,
													p_warUnitId8, p_warUnitLevel8, p_warUnitExp8,
													p_warUnitId9, p_warUnitLevel9, p_warUnitExp9,
													p_warUnitId10, p_warUnitLevel10, p_warUnitExp10,
													p_warUnitId11, p_warUnitLevel11, p_warUnitExp11,
													p_warUnitId12, p_warUnitLevel12, p_warUnitExp12,
													p_warUnitId13, p_warUnitLevel13, p_warUnitExp13,
													p_warUnitId14, p_warUnitLevel14, p_warUnitExp14,
													p_warUnitId15, p_warUnitLevel15, p_warUnitExp15,
													p_warUnitId16, p_warUnitLevel16, p_warUnitExp16,
													p_warUnitId17, p_warUnitLevel17, p_warUnitExp17,
													p_warUnitId18, p_warUnitLevel18, p_warUnitExp18,
													p_warUnitId19, p_warUnitLevel19, p_warUnitExp19,
													p_warUnitId20, p_warUnitLevel20, p_warUnitExp20);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

						COMMIT;

						SET p_Result := 1;	
						SET p_Msg := '';
						LEAVE root;

					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_war_setting_Multi_Ins` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_war_setting_Multi_Ins`(
	IN	p_guildIdx	BIGINT	
,	IN	p_userIdx	BIGINT	
,	IN	p_warSetCnt	INT	
,	IN	p_slot1		TINYINT	
,	IN	p_type1		TINYINT	
,	IN	p_id1		INT	
,	IN	p_slot2		TINYINT	
,	IN	p_type2		TINYINT	
,	IN	p_id2		INT	
,	IN	p_slot3		TINYINT	
,	IN	p_type3		TINYINT	
,	IN	p_id3		INT	
,	IN	p_slot4		TINYINT	
,	IN	p_type4		TINYINT	
,	IN	p_id4		INT	
,	IN	p_slot5		TINYINT	
,	IN	p_type5		TINYINT	
,	IN	p_id5		INT	
,	IN	p_slot6		TINYINT	
,	IN	p_type6		TINYINT	
,	IN	p_id6		INT	
,	IN	p_slot7		TINYINT	
,	IN	p_type7		TINYINT	
,	IN	p_id7		INT	
,	IN	p_slot8		TINYINT	
,	IN	p_type8		TINYINT	
,	IN	p_id8		INT	
,	IN	p_slot9		TINYINT	
,	IN	p_type9		TINYINT	
,	IN	p_id9		INT	
,	IN	p_slot10	TINYINT	
,	IN	p_type10	TINYINT	
,	IN	p_id10		INT	
,	IN	p_slot11	TINYINT	
,	IN	p_type11	TINYINT	
,	IN	p_id11		INT	
,	IN	p_slot12	TINYINT	
,	IN	p_type12	TINYINT	
,	IN	p_id12		INT	
,	IN	p_slot13	TINYINT	
,	IN	p_type13	TINYINT	
,	IN	p_id13		INT	
,	IN	p_slot14	TINYINT	
,	IN	p_type14	TINYINT	
,	IN	p_id14		INT	
,	IN	p_slot15	TINYINT	
,	IN	p_type15	TINYINT	
,	IN	p_id15		INT	
,	IN	p_slot16	TINYINT	
,	IN	p_type16	TINYINT	
,	IN	p_id16		INT	
,	IN	p_slot17	TINYINT	
,	IN	p_type17	TINYINT	
,	IN	p_id17		INT	
,	IN	p_slot18	TINYINT	
,	IN	p_type18	TINYINT	
,	IN	p_id18		INT	
,	IN	p_slot19	TINYINT	
,	IN	p_type19	TINYINT	
,	IN	p_id19		INT	
,	IN	p_slot20	TINYINT	
,	IN	p_type20	TINYINT	
,	IN	p_id20		INT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_userIdx, v_memberGrade);
					
					IF (v_memberGrade IS NULL) || (v_memberGrade < 1) THEN
					BEGIN
						SET p_Result := -102;	
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN

						
						
						START TRANSACTION;

							
							SET v_Resultfn := udf_guild_war_setting_Multi_Del(p_guildIdx);
							
							IF v_Resultfn <> 1 THEN
							BEGIN
								SET p_Result := v_Resultfn;
								SET p_Msg := '';
								ROLLBACK;
								LEAVE root;
							END;
							END IF;

							
							SET v_Resultfn := udf_guild_war_setting_Multi_Ins(p_guildIdx, p_warSetCnt, 
													p_slot1, p_type1, p_id1,
													p_slot2, p_type2, p_id2,
													p_slot3, p_type3, p_id3,
													p_slot4, p_type4, p_id4,
													p_slot5, p_type5, p_id5,
													p_slot6, p_type6, p_id6,
													p_slot7, p_type7, p_id7,
													p_slot8, p_type8, p_id8,
													p_slot9, p_type9, p_id9,
													p_slot10, p_type10, p_id10,
													p_slot11, p_type11, p_id11,
													p_slot12, p_type12, p_id12,
													p_slot13, p_type13, p_id13,
													p_slot14, p_type14, p_id14,
													p_slot15, p_type15, p_id15,
													p_slot16, p_type16, p_id16,
													p_slot17, p_type17, p_id17,
													p_slot18, p_type18, p_id18,
													p_slot19, p_type19, p_id19,
													p_slot20, p_type20, p_id20);
						COMMIT;

						SET p_Result := 1;	
						SET p_Msg := '';
						LEAVE root;

					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_war_unit_Detail_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_war_unit_Detail_Sel`(
	IN	p_guildIdx	BIGINT	
,	IN	p_warUnitId	INT	
)
BEGIN



	SELECT B.war_unit_level, B.war_unit_exp
	FROM guild A INNER JOIN guild_war_unit B ON A.guild_idx = B.guild_idx
	WHERE A.guild_idx = p_guildIdx
	AND B.war_unit_id = p_warUnitId;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_war_unit_Execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_war_unit_Execute`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_warUnitId		INT	
,	IN	p_warUnitLevel		INT	
,	IN	p_warUnitExp		INT	
,	IN	p_flag			TINYINT	
,	OUT	p_afterWarUnitExp	INT	
,	OUT	p_Result		INT	
,	OUT	p_Msg			TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;	
	DECLARE v_beforeWarUnitExp	INT;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_afterWarUnitExp := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_afterWarUnitExp := 0;
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_afterWarUnitExp := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_afterWarUnitExp := 0;
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_userIdx, v_memberGrade);
					
					IF (v_memberGrade IS NULL) || (v_memberGrade < 0) THEN
					BEGIN
						SET p_afterWarUnitExp := 0;
						SET p_Result := -102;	
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						IF EXISTS( SELECT * FROM guild A INNER JOIN guild_war_unit B ON A.guild_idx = B.guild_idx WHERE A.guild_idx = p_guildIdx AND B.war_unit_id = p_warUnitId ) THEN
						BEGIN
							
							SELECT war_unit_exp INTO v_beforeWarUnitExp FROM guild_war_unit WHERE guild_idx = p_guildIdx AND war_unit_id = p_warUnitId;
							
							IF p_flag = 1 THEN
							BEGIN
								SET p_afterWarUnitExp := v_beforeWarUnitExp + p_warUnitExp;
							END;

							ELSE
							BEGIN
								SET p_afterWarUnitExp := v_beforeWarUnitExp - p_warUnitExp;
								IF p_afterWarUnitExp < 0 THEN	
								BEGIN
									SET p_afterWarUnitExp := 0;
								END;
								END IF;
							END;
							END IF;

							
							
							START TRANSACTION;

								
								SET v_Resultfn := udf_guild_war_unit_Upd(p_guildIdx, p_warUnitId, v_beforeWarUnitExp, p_afterWarUnitExp);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_afterWarUnitExp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN

							SET p_afterWarUnitExp := p_warUnitExp;

							
							
							START TRANSACTION;

								
								SET v_Resultfn := udf_guild_war_unit_Ins(p_guildIdx, p_warUnitId, p_warUnitLevel, p_warUnitExp);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_afterWarUnitExp := 0;
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;

						END;
						END IF;

					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gusp_guild_war_unit_Level_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `gusp_guild_war_unit_Level_Upd`(
	IN	p_guildIdx		BIGINT	
,	IN	p_userIdx		BIGINT	
,	IN	p_warUnitId		INT	
,	IN	p_warUnitLevel		INT	
,	OUT	p_Result		INT	
,	OUT	p_Msg			TEXT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
					
					
	DECLARE v_memberGrade	INT;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;


	
	
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
	BEGIN
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN

		IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
		BEGIN
			SET p_Result := -4;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN

			
			CALL gusp_guild_Check_Sel(p_guildIdx, v_Resultfn);
			IF v_Resultfn = -92 THEN	
			BEGIN
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			BEGIN
				
				CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_userIdx, v_Resultfn);
				IF v_Resultfn = -94 THEN	
				BEGIN
					SET p_Result := v_Resultfn;
					SET p_Msg := '';
				END;

				ELSE
				root:
				BEGIN
					
					CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_userIdx, v_memberGrade);
					
					IF (v_memberGrade IS NULL) || (v_memberGrade < 1) THEN
					BEGIN
						SET p_Result := -102;	
						SET p_Msg := '';
						LEAVE root;
					END;

					ELSE
					BEGIN
						
						IF EXISTS( SELECT * FROM guild A INNER JOIN guild_war_unit B ON A.guild_idx = B.guild_idx WHERE A.guild_idx = p_guildIdx AND B.war_unit_id = p_warUnitId ) THEN
						BEGIN
							
							
							START TRANSACTION;

								
								SET v_Resultfn := udf_guild_war_unit_Level_Upd(p_guildIdx, p_warUnitId, p_warUnitLevel);
								
								IF v_Resultfn <> 1 THEN
								BEGIN
									SET p_Result := v_Resultfn;
									SET p_Msg := '';
									ROLLBACK;
									LEAVE root;
								END;
								END IF;

							COMMIT;

							SET p_Result := 1;	
							SET p_Msg := '';
							LEAVE root;
						END;

						ELSE
						BEGIN

							SET p_Result := -8;
							SET p_Msg := '';
							LEAVE root;

						END;
						END IF;

					END;
					END IF;

				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_admin_userchatpunish_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_admin_userchatpunish_delete`(
	IN p_UserID			BIGINT		
)
    COMMENT '채팅 금지 해제'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
		
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result;
	END;
	
	root:
	BEGIN	
		DELETE FROM user_chat_punish
		WHERE user_idx = p_UserID;

	END;
    
    SELECT v_result;        
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_admin_userchatpunish_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_admin_userchatpunish_insert`(
	IN p_UserID			BIGINT		
,	IN p_BlockMinTime	INT			
)
    COMMENT '채팅 금지 설정'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
		
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result;
	END;
	
	root:
	BEGIN	
		INSERT INTO user_chat_punish(user_idx, punish_finish_time)
		VALUES (p_UserID, date_add(now(), interval + p_BlockMinTime minute))
		ON DUPLICATE KEY UPDATE punish_finish_time = date_add(now(), interval + p_BlockMinTime minute);
        
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 101;
		END IF;        
	END;
    
    SELECT v_result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_admin_userchatpunish_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_admin_userchatpunish_select`(
)
    COMMENT '채팅 금지 목록 얻기'
BEGIN
	
	SELECT user_idx, TIMESTAMPDIFF(MINUTE, NOW(), punish_finish_time) as remain_minute
	FROM user_chat_punish
	WHERE NOW() < punish_finish_time;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_event_happynewyear` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_event_happynewyear`(
	IN p_ID			INT		
)
    COMMENT '새해 이벤트 아이템 지급'
BEGIN	
    
	IF 1 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202101, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001001, 100
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001002, 30
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006201, 10
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006034, 1
		FROM userinfo;    
	END;
	ELSEIF 2 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202103, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001001, 100
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006203, 5
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006202, 5
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006046, 1
		FROM userinfo;    
	END;        
	ELSEIF 3 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202101, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001001, 100
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006203, 5
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006034, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006046, 1
		FROM userinfo;    
	END;        
	ELSEIF 4 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202102, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001002, 30
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006201, 10
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006046, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006034, 1
		FROM userinfo;    
	END;
	ELSEIF 5 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202101, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001001, 100
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001002, 30
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006202, 5
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006034, 1
		FROM userinfo;    
	END;
	ELSEIF 6 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202103, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001001, 100
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001002, 30
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006201, 10
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006046, 1
		FROM userinfo;    
	END;
	ELSEIF 7 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202103, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001001, 100
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001002, 30
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006203, 5
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006046, 1
		FROM userinfo;    
	END;
	ELSEIF 8 = p_ID THEN
	BEGIN
		
        
		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 57202103, 1
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 58001002, 30
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006201, 10
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006203, 5
		FROM userinfo;    

		INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)			
		SELECT user_idx, 0, 'CM산비', 0, 0, 0, '', 0, 0, 1, 0, '게릴라이벤트:새해 복 많이 받으세요!', date_add(now(), interval + 3 MINUTE), 2, 54006034, 1
		FROM userinfo;    
	END;      
    END IF;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_mmo_redis_datas` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_mmo_redis_datas`( 
)
    COMMENT '레디스에 넣을 데이터 얻기'
BEGIN

	
    SELECT user_idx, char_idx, char_type, char_exp, battle_power
    FROM char_info;

	
	SELECT guild_idx, exp, war_cnt, war_win_cnt, war_lose_cnt
    FROM guilddb.guild;
    
    
	SELECT group_id, user_idx, raid_exp
    FROM user_raid_exp;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_schedule_givepost` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_schedule_givepost`( 
	IN	p_Type		INT		
,	IN 	p_Content	INT 	
)
BEGIN
	DECLARE 	v_weekday	INT DEFAULT 0;	

	
	
	SELECT DAYOFWEEK(NOW()) INTO v_weekday;

    
    IF p_Type = 0 THEN    
		
        IF v_weekday IN (2, 3, 4, 5, 6) THEN			
			IF p_Content = 1 THEN
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '좋은 아침이오. 여행길이 지치지 않게 축복해드리지요.', date_add(now(), interval + 3 hour), 2, 54004201, 1
				FROM userinfo;
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '좋은 아침이오. 여행길이 지치지 않게 축복해드리지요.', date_add(now(), interval + 3 hour), 2, 53020003, 1
				FROM userinfo;         

				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '좋은 아침이오. 여행길이 지치지 않게 축복해드리지요.', date_add(now(), interval + 3 hour), 2, 54006024, 1
				FROM userinfo;        
			
			ELSEIF p_Content = 2 THEN
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '악귀들이 날뛰고 있소. 어서 토벌에 참여해보시지요.', date_add(now(), interval + 3 hour), 2, 54004201, 1
				FROM userinfo;
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '악귀들이 날뛰고 있소. 어서 토벌에 참여해보시지요.', date_add(now(), interval + 3 hour), 2, 53020003, 1
				FROM userinfo;        
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '악귀들이 날뛰고 있소. 어서 토벌에 참여해보시지요.', date_add(now(), interval + 3 hour), 2, 54006024, 1
				FROM userinfo;
				
			ELSEIF p_Content = 3 THEN
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '오늘 하루도 고생하였소. 내 작은 선물을 드리지요.', date_add(now(), interval + 3 hour), 2, 54004201, 1
				FROM userinfo;
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '오늘 하루도 고생하였소. 내 작은 선물을 드리지요.', date_add(now(), interval + 3 hour), 2, 53020003, 1
				FROM userinfo;        
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '오늘 하루도 고생하였소. 내 작은 선물을 드리지요.', date_add(now(), interval + 3 hour), 2, 54006024, 1
				FROM userinfo;
				
			END IF; 
		
		ELSEIF v_weekday IN (1, 7) THEN
			IF p_Content = 1 THEN
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '좋은 아침이오. 여행길이 지치지 않게 축복해드리지요.', date_add(now(), interval + 3 hour), 2, 54004201, 1
				FROM userinfo;
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '좋은 아침이오. 여행길이 지치지 않게 축복해드리지요.', date_add(now(), interval + 3 hour), 2, 53020003, 1
				FROM userinfo;         

				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '좋은 아침이오. 여행길이 지치지 않게 축복해드리지요.', date_add(now(), interval + 3 hour), 2, 54006024, 1
				FROM userinfo;        
			
			ELSEIF p_Content = 2 THEN
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '악귀들이 날뛰고 있소. 어서 토벌에 참여해보시지요.', date_add(now(), interval + 3 hour), 2, 54004201, 2
				FROM userinfo;
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '악귀들이 날뛰고 있소. 어서 토벌에 참여해보시지요.', date_add(now(), interval + 3 hour), 2, 53020003, 2
				FROM userinfo;        
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '악귀들이 날뛰고 있소. 어서 토벌에 참여해보시지요.', date_add(now(), interval + 3 hour), 2, 54006024, 1
				FROM userinfo;
				
			ELSEIF p_Content = 3 THEN
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '오늘 하루도 고생하였소. 내 작은 선물을 드리지요.', date_add(now(), interval + 3 hour), 2, 54004201, 3
				FROM userinfo;
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '오늘 하루도 고생하였소. 내 작은 선물을 드리지요.', date_add(now(), interval + 3 hour), 2, 53020003, 3
				FROM userinfo;        
				
				
				INSERT INTO user_post 
					(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
				SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, '오늘 하루도 고생하였소. 내 작은 선물을 드리지요.', date_add(now(), interval + 3 hour), 2, 54006024, 1
				FROM userinfo;
				
			END IF;       
        
        END IF;
        

 
    ELSEIF p_Type = 1 THEN
		
        IF v_weekday IN (2, 3, 4, 5, 6) THEN
        BEGIN
        
        END;
        END IF;
        
    ELSEIF p_Type = 2 THEN
		
		IF v_weekday IN (1, 7) THEN
		BEGIN
        
        
        END;
        END IF;
    
    END IF;    


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `msp_schedule_givepost_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `msp_schedule_givepost_event`( 
)
BEGIN
	DECLARE p_Type int DEFAULT DAY(now());

    IF p_Type = 24 THEN    
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;
        
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 0, 50000001, 200000
		FROM userinfo;
        
	ELSEIF p_Type = 25 THEN
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;
        
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 54006045, 1
		FROM userinfo;        
        
	ELSEIF p_Type = 26 THEN
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;
        
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 56050003, 1
		FROM userinfo;          
        
	ELSEIF p_Type = 27 THEN
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;
        
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 58001001, 50
		FROM userinfo;          
        
	ELSEIF p_Type = 28 THEN
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;
        
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 54006206, 1
		FROM userinfo;          
        
	ELSEIF p_Type = 29 THEN
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;
        
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 54006212, 1
		FROM userinfo;         
        
	ELSEIF p_Type = 30 THEN
		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 2, 51020628, 2
		FROM userinfo;        

		INSERT INTO user_post 
			(user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)		
		SELECT user_idx, 0, 'GM', 0, 0, 0, '', 0, 0, 1, 0, 'Lets enjoy the worlds biggest festival event with Four Gods', date_add(now(), interval + 12 hour), 3, 41003001, 5
		FROM userinfo;
        
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_battlepower_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_battlepower_topinfo`(
	IN  p_charType	INT, 	IN 	p_myUserIdx BIGINT
,	IN	p_userIdx1	BIGINT,	IN	p_userIdx2	BIGINT,	IN	p_userIdx3	BIGINT,	IN	p_userIdx4	BIGINT,	IN	p_userIdx5	BIGINT
,	IN	p_userIdx6	BIGINT,	IN	p_userIdx7	BIGINT,	IN	p_userIdx8	BIGINT,	IN	p_userIdx9	BIGINT,	IN	p_userIdx10	BIGINT
,	IN	p_userIdx11	BIGINT,	IN	p_userIdx12	BIGINT,	IN	p_userIdx13	BIGINT,	IN	p_userIdx14	BIGINT,	IN	p_userIdx15	BIGINT
,	IN	p_userIdx16	BIGINT,	IN	p_userIdx17	BIGINT,	IN	p_userIdx18	BIGINT,	IN	p_userIdx19	BIGINT,	IN	p_userIdx20	BIGINT
,	IN	p_userIdx21	BIGINT,	IN	p_userIdx22	BIGINT,	IN	p_userIdx23	BIGINT,	IN	p_userIdx24	BIGINT,	IN	p_userIdx25	BIGINT
,	IN	p_userIdx26	BIGINT,	IN	p_userIdx27	BIGINT,	IN	p_userIdx28	BIGINT,	IN	p_userIdx29	BIGINT,	IN	p_userIdx30	BIGINT
,	IN	p_userIdx31	BIGINT,	IN	p_userIdx32	BIGINT,	IN	p_userIdx33	BIGINT,	IN	p_userIdx34	BIGINT,	IN	p_userIdx35	BIGINT
,	IN	p_userIdx36	BIGINT,	IN	p_userIdx37	BIGINT,	IN	p_userIdx38	BIGINT,	IN	p_userIdx39	BIGINT,	IN	p_userIdx40	BIGINT
,	IN	p_userIdx41	BIGINT,	IN	p_userIdx42	BIGINT,	IN	p_userIdx43	BIGINT,	IN	p_userIdx44	BIGINT,	IN	p_userIdx45	BIGINT
,	IN	p_userIdx46	BIGINT,	IN	p_userIdx47	BIGINT,	IN	p_userIdx48	BIGINT,	IN	p_userIdx49	BIGINT,	IN	p_userIdx50	BIGINT
,	IN	p_userIdx51	BIGINT,	IN	p_userIdx52	BIGINT,	IN	p_userIdx53	BIGINT,	IN	p_userIdx54	BIGINT,	IN	p_userIdx55	BIGINT
,	IN	p_userIdx56	BIGINT,	IN	p_userIdx57	BIGINT,	IN	p_userIdx58	BIGINT,	IN	p_userIdx59	BIGINT,	IN	p_userIdx60	BIGINT
,	IN	p_userIdx61	BIGINT,	IN	p_userIdx62	BIGINT,	IN	p_userIdx63	BIGINT,	IN	p_userIdx64	BIGINT,	IN	p_userIdx65	BIGINT
,	IN	p_userIdx66	BIGINT,	IN	p_userIdx67	BIGINT,	IN	p_userIdx68	BIGINT,	IN	p_userIdx69	BIGINT,	IN	p_userIdx70	BIGINT
,	IN	p_userIdx71	BIGINT,	IN	p_userIdx72	BIGINT,	IN	p_userIdx73	BIGINT,	IN	p_userIdx74	BIGINT,	IN	p_userIdx75	BIGINT
,	IN	p_userIdx76	BIGINT,	IN	p_userIdx77	BIGINT,	IN	p_userIdx78	BIGINT,	IN	p_userIdx79	BIGINT,	IN	p_userIdx80	BIGINT
,	IN	p_userIdx81	BIGINT,	IN	p_userIdx82	BIGINT,	IN	p_userIdx83	BIGINT,	IN	p_userIdx84	BIGINT,	IN	p_userIdx85	BIGINT
,	IN	p_userIdx86	BIGINT,	IN	p_userIdx87	BIGINT,	IN	p_userIdx88	BIGINT,	IN	p_userIdx89	BIGINT,	IN	p_userIdx90	BIGINT
,	IN	p_userIdx91	BIGINT,	IN	p_userIdx92	BIGINT,	IN	p_userIdx93	BIGINT,	IN	p_userIdx94	BIGINT,	IN	p_userIdx95	BIGINT
,	IN	p_userIdx96	BIGINT,	IN	p_userIdx97	BIGINT,	IN	p_userIdx98	BIGINT,	IN	p_userIdx99	BIGINT,	IN	p_userIdx100	BIGINT
)
    COMMENT 'TOP 100 닉네임 받아오기'
BEGIN


	IF 0 = p_charType THEN
		SELECT A.user_idx, A.nick, B.char_exp, B.char_type, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
		FROM userinfo A INNER JOIN char_info B ON A.user_idx = B.user_idx AND B.char_idx = A.base_char_idx
			LEFT JOIN guild_member C ON A.user_idx = C.user_idx
			LEFT JOIN guild D ON C.guild_idx = D.guild_idx        
		WHERE A.user_idx IN(p_myUserIdx, 
				p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10,
				p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20,
				p_userIdx21, p_userIdx22, p_userIdx23, p_userIdx24, p_userIdx25, p_userIdx26, p_userIdx27, p_userIdx28, p_userIdx29, p_userIdx30,
				p_userIdx31, p_userIdx32, p_userIdx33, p_userIdx34, p_userIdx35, p_userIdx36, p_userIdx37, p_userIdx38, p_userIdx39, p_userIdx40,
				p_userIdx41, p_userIdx42, p_userIdx43, p_userIdx44, p_userIdx45, p_userIdx46, p_userIdx47, p_userIdx48, p_userIdx49, p_userIdx50,
				p_userIdx51, p_userIdx52, p_userIdx53, p_userIdx54, p_userIdx55, p_userIdx56, p_userIdx57, p_userIdx58, p_userIdx59, p_userIdx60,
				p_userIdx61, p_userIdx62, p_userIdx63, p_userIdx64, p_userIdx65, p_userIdx66, p_userIdx67, p_userIdx68, p_userIdx69, p_userIdx70,
				p_userIdx71, p_userIdx72, p_userIdx73, p_userIdx74, p_userIdx75, p_userIdx76, p_userIdx77, p_userIdx78, p_userIdx79, p_userIdx80,
				p_userIdx81, p_userIdx82, p_userIdx83, p_userIdx84, p_userIdx85, p_userIdx86, p_userIdx87, p_userIdx88, p_userIdx89, p_userIdx90,
				p_userIdx91, p_userIdx92, p_userIdx93, p_userIdx94, p_userIdx95, p_userIdx96, p_userIdx97, p_userIdx98, p_userIdx99, p_userIdx100
				);
	ELSE
		SELECT A.user_idx, A.nick, B.char_exp, B.char_type, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
		FROM userinfo A INNER JOIN char_info B ON A.user_idx = B.user_idx AND B.char_type = p_charType
			LEFT JOIN guild_member C ON A.user_idx = C.user_idx
			LEFT JOIN guild D ON C.guild_idx = D.guild_idx        
		WHERE A.user_idx IN(p_myUserIdx, 
				p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10,
				p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20,
				p_userIdx21, p_userIdx22, p_userIdx23, p_userIdx24, p_userIdx25, p_userIdx26, p_userIdx27, p_userIdx28, p_userIdx29, p_userIdx30,
				p_userIdx31, p_userIdx32, p_userIdx33, p_userIdx34, p_userIdx35, p_userIdx36, p_userIdx37, p_userIdx38, p_userIdx39, p_userIdx40,
				p_userIdx41, p_userIdx42, p_userIdx43, p_userIdx44, p_userIdx45, p_userIdx46, p_userIdx47, p_userIdx48, p_userIdx49, p_userIdx50,
				p_userIdx51, p_userIdx52, p_userIdx53, p_userIdx54, p_userIdx55, p_userIdx56, p_userIdx57, p_userIdx58, p_userIdx59, p_userIdx60,
				p_userIdx61, p_userIdx62, p_userIdx63, p_userIdx64, p_userIdx65, p_userIdx66, p_userIdx67, p_userIdx68, p_userIdx69, p_userIdx70,
				p_userIdx71, p_userIdx72, p_userIdx73, p_userIdx74, p_userIdx75, p_userIdx76, p_userIdx77, p_userIdx78, p_userIdx79, p_userIdx80,
				p_userIdx81, p_userIdx82, p_userIdx83, p_userIdx84, p_userIdx85, p_userIdx86, p_userIdx87, p_userIdx88, p_userIdx89, p_userIdx90,
				p_userIdx91, p_userIdx92, p_userIdx93, p_userIdx94, p_userIdx95, p_userIdx96, p_userIdx97, p_userIdx98, p_userIdx99, p_userIdx100
				);
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_castle_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_castle_topinfo`(
	IN	p_UserID1	BIGINT
,	IN	p_UserID2	BIGINT
,	IN	p_UserID3	BIGINT
)
    COMMENT 'TOP 3 닉네임 받아오기'
BEGIN


	SELECT A.user_idx, 1 as gamedb_idx, A.nick, B.char_exp, B.char_type, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
	FROM userinfo A INNER JOIN char_info B ON A.user_idx = B.user_idx AND B.char_idx = A.base_char_idx
		LEFT JOIN guild_member C ON A.user_idx = C.user_idx
        LEFT JOIN guild D ON C.guild_idx = D.guild_idx    
	WHERE A.user_idx IN(p_UserID1, p_UserID2, p_UserID3);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_combatrival_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_combatrival_info`(
	IN	p_UserID1	BIGINT
,	IN	p_UserID2	BIGINT
,	IN	p_UserID3	BIGINT
,	IN	p_UserID4	BIGINT
,	IN	p_UserID5	BIGINT
)
    COMMENT '5개의 계정 닉네임 받아오기'
BEGIN

	SELECT user_idx, 1 as gamedb_idx , nick
	FROM userinfo
	WHERE user_idx IN(p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_combat_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_combat_topinfo`(
	IN 	p_myUserIdx	BIGINT
,	IN	p_userIdx1	BIGINT,	IN	p_userIdx2	BIGINT,	IN	p_userIdx3	BIGINT,	IN	p_userIdx4	BIGINT,	IN	p_userIdx5	BIGINT
,	IN	p_userIdx6	BIGINT,	IN	p_userIdx7	BIGINT,	IN	p_userIdx8	BIGINT,	IN	p_userIdx9	BIGINT,	IN	p_userIdx10	BIGINT
,	IN	p_userIdx11	BIGINT,	IN	p_userIdx12	BIGINT,	IN	p_userIdx13	BIGINT,	IN	p_userIdx14	BIGINT,	IN	p_userIdx15	BIGINT
,	IN	p_userIdx16	BIGINT,	IN	p_userIdx17	BIGINT,	IN	p_userIdx18	BIGINT,	IN	p_userIdx19	BIGINT,	IN	p_userIdx20	BIGINT
,	IN	p_userIdx21	BIGINT,	IN	p_userIdx22	BIGINT,	IN	p_userIdx23	BIGINT,	IN	p_userIdx24	BIGINT,	IN	p_userIdx25	BIGINT
,	IN	p_userIdx26	BIGINT,	IN	p_userIdx27	BIGINT,	IN	p_userIdx28	BIGINT,	IN	p_userIdx29	BIGINT,	IN	p_userIdx30	BIGINT
,	IN	p_userIdx31	BIGINT,	IN	p_userIdx32	BIGINT,	IN	p_userIdx33	BIGINT,	IN	p_userIdx34	BIGINT,	IN	p_userIdx35	BIGINT
,	IN	p_userIdx36	BIGINT,	IN	p_userIdx37	BIGINT,	IN	p_userIdx38	BIGINT,	IN	p_userIdx39	BIGINT,	IN	p_userIdx40	BIGINT
,	IN	p_userIdx41	BIGINT,	IN	p_userIdx42	BIGINT,	IN	p_userIdx43	BIGINT,	IN	p_userIdx44	BIGINT,	IN	p_userIdx45	BIGINT
,	IN	p_userIdx46	BIGINT,	IN	p_userIdx47	BIGINT,	IN	p_userIdx48	BIGINT,	IN	p_userIdx49	BIGINT,	IN	p_userIdx50	BIGINT
,	IN	p_userIdx51	BIGINT,	IN	p_userIdx52	BIGINT,	IN	p_userIdx53	BIGINT,	IN	p_userIdx54	BIGINT,	IN	p_userIdx55	BIGINT
,	IN	p_userIdx56	BIGINT,	IN	p_userIdx57	BIGINT,	IN	p_userIdx58	BIGINT,	IN	p_userIdx59	BIGINT,	IN	p_userIdx60	BIGINT
,	IN	p_userIdx61	BIGINT,	IN	p_userIdx62	BIGINT,	IN	p_userIdx63	BIGINT,	IN	p_userIdx64	BIGINT,	IN	p_userIdx65	BIGINT
,	IN	p_userIdx66	BIGINT,	IN	p_userIdx67	BIGINT,	IN	p_userIdx68	BIGINT,	IN	p_userIdx69	BIGINT,	IN	p_userIdx70	BIGINT
,	IN	p_userIdx71	BIGINT,	IN	p_userIdx72	BIGINT,	IN	p_userIdx73	BIGINT,	IN	p_userIdx74	BIGINT,	IN	p_userIdx75	BIGINT
,	IN	p_userIdx76	BIGINT,	IN	p_userIdx77	BIGINT,	IN	p_userIdx78	BIGINT,	IN	p_userIdx79	BIGINT,	IN	p_userIdx80	BIGINT
,	IN	p_userIdx81	BIGINT,	IN	p_userIdx82	BIGINT,	IN	p_userIdx83	BIGINT,	IN	p_userIdx84	BIGINT,	IN	p_userIdx85	BIGINT
,	IN	p_userIdx86	BIGINT,	IN	p_userIdx87	BIGINT,	IN	p_userIdx88	BIGINT,	IN	p_userIdx89	BIGINT,	IN	p_userIdx90	BIGINT
,	IN	p_userIdx91	BIGINT,	IN	p_userIdx92	BIGINT,	IN	p_userIdx93	BIGINT,	IN	p_userIdx94	BIGINT,	IN	p_userIdx95	BIGINT
,	IN	p_userIdx96	BIGINT,	IN	p_userIdx97	BIGINT,	IN	p_userIdx98	BIGINT,	IN	p_userIdx99	BIGINT,	IN	p_userIdx100	BIGINT
)
    COMMENT 'TOP 100 닉네임 받아오기'
BEGIN


	SELECT A.user_idx, A.nick, B.char_exp, IFNULL(E.combat_grade_id, 1) AS combat_grade_id, IFNULL(E.combat_score, 0) AS combat_score, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
	FROM userinfo A INNER JOIN char_info B ON A.user_idx = B.user_idx AND A.base_char_idx = B.char_idx
		LEFT JOIN user_combat E ON A.user_idx = E.user_idx
		LEFT JOIN guild_member C ON A.user_idx = C.user_idx
        LEFT JOIN guild D ON C.guild_idx = D.guild_idx    
	WHERE A.user_idx IN(p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10,
			p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20,
			p_userIdx21, p_userIdx22, p_userIdx23, p_userIdx24, p_userIdx25, p_userIdx26, p_userIdx27, p_userIdx28, p_userIdx29, p_userIdx30,
			p_userIdx31, p_userIdx32, p_userIdx33, p_userIdx34, p_userIdx35, p_userIdx36, p_userIdx37, p_userIdx38, p_userIdx39, p_userIdx40,
			p_userIdx41, p_userIdx42, p_userIdx43, p_userIdx44, p_userIdx45, p_userIdx46, p_userIdx47, p_userIdx48, p_userIdx49, p_userIdx50,
			p_userIdx51, p_userIdx52, p_userIdx53, p_userIdx54, p_userIdx55, p_userIdx56, p_userIdx57, p_userIdx58, p_userIdx59, p_userIdx60,
			p_userIdx61, p_userIdx62, p_userIdx63, p_userIdx64, p_userIdx65, p_userIdx66, p_userIdx67, p_userIdx68, p_userIdx69, p_userIdx70,
			p_userIdx71, p_userIdx72, p_userIdx73, p_userIdx74, p_userIdx75, p_userIdx76, p_userIdx77, p_userIdx78, p_userIdx79, p_userIdx80,
			p_userIdx81, p_userIdx82, p_userIdx83, p_userIdx84, p_userIdx85, p_userIdx86, p_userIdx87, p_userIdx88, p_userIdx89, p_userIdx90,
			p_userIdx91, p_userIdx92, p_userIdx93, p_userIdx94, p_userIdx95, p_userIdx96, p_userIdx97, p_userIdx98, p_userIdx99, p_userIdx100
			);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_exp_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_exp_topinfo`(
	IN  p_charType	INT,	IN 	p_myUserIdx	BIGINT
,	IN	p_userIdx1	BIGINT,	IN	p_userIdx2	BIGINT,	IN	p_userIdx3	BIGINT,	IN	p_userIdx4	BIGINT,	IN	p_userIdx5	BIGINT
,	IN	p_userIdx6	BIGINT,	IN	p_userIdx7	BIGINT,	IN	p_userIdx8	BIGINT,	IN	p_userIdx9	BIGINT,	IN	p_userIdx10	BIGINT
,	IN	p_userIdx11	BIGINT,	IN	p_userIdx12	BIGINT,	IN	p_userIdx13	BIGINT,	IN	p_userIdx14	BIGINT,	IN	p_userIdx15	BIGINT
,	IN	p_userIdx16	BIGINT,	IN	p_userIdx17	BIGINT,	IN	p_userIdx18	BIGINT,	IN	p_userIdx19	BIGINT,	IN	p_userIdx20	BIGINT
,	IN	p_userIdx21	BIGINT,	IN	p_userIdx22	BIGINT,	IN	p_userIdx23	BIGINT,	IN	p_userIdx24	BIGINT,	IN	p_userIdx25	BIGINT
,	IN	p_userIdx26	BIGINT,	IN	p_userIdx27	BIGINT,	IN	p_userIdx28	BIGINT,	IN	p_userIdx29	BIGINT,	IN	p_userIdx30	BIGINT
,	IN	p_userIdx31	BIGINT,	IN	p_userIdx32	BIGINT,	IN	p_userIdx33	BIGINT,	IN	p_userIdx34	BIGINT,	IN	p_userIdx35	BIGINT
,	IN	p_userIdx36	BIGINT,	IN	p_userIdx37	BIGINT,	IN	p_userIdx38	BIGINT,	IN	p_userIdx39	BIGINT,	IN	p_userIdx40	BIGINT
,	IN	p_userIdx41	BIGINT,	IN	p_userIdx42	BIGINT,	IN	p_userIdx43	BIGINT,	IN	p_userIdx44	BIGINT,	IN	p_userIdx45	BIGINT
,	IN	p_userIdx46	BIGINT,	IN	p_userIdx47	BIGINT,	IN	p_userIdx48	BIGINT,	IN	p_userIdx49	BIGINT,	IN	p_userIdx50	BIGINT
,	IN	p_userIdx51	BIGINT,	IN	p_userIdx52	BIGINT,	IN	p_userIdx53	BIGINT,	IN	p_userIdx54	BIGINT,	IN	p_userIdx55	BIGINT
,	IN	p_userIdx56	BIGINT,	IN	p_userIdx57	BIGINT,	IN	p_userIdx58	BIGINT,	IN	p_userIdx59	BIGINT,	IN	p_userIdx60	BIGINT
,	IN	p_userIdx61	BIGINT,	IN	p_userIdx62	BIGINT,	IN	p_userIdx63	BIGINT,	IN	p_userIdx64	BIGINT,	IN	p_userIdx65	BIGINT
,	IN	p_userIdx66	BIGINT,	IN	p_userIdx67	BIGINT,	IN	p_userIdx68	BIGINT,	IN	p_userIdx69	BIGINT,	IN	p_userIdx70	BIGINT
,	IN	p_userIdx71	BIGINT,	IN	p_userIdx72	BIGINT,	IN	p_userIdx73	BIGINT,	IN	p_userIdx74	BIGINT,	IN	p_userIdx75	BIGINT
,	IN	p_userIdx76	BIGINT,	IN	p_userIdx77	BIGINT,	IN	p_userIdx78	BIGINT,	IN	p_userIdx79	BIGINT,	IN	p_userIdx80	BIGINT
,	IN	p_userIdx81	BIGINT,	IN	p_userIdx82	BIGINT,	IN	p_userIdx83	BIGINT,	IN	p_userIdx84	BIGINT,	IN	p_userIdx85	BIGINT
,	IN	p_userIdx86	BIGINT,	IN	p_userIdx87	BIGINT,	IN	p_userIdx88	BIGINT,	IN	p_userIdx89	BIGINT,	IN	p_userIdx90	BIGINT
,	IN	p_userIdx91	BIGINT,	IN	p_userIdx92	BIGINT,	IN	p_userIdx93	BIGINT,	IN	p_userIdx94	BIGINT,	IN	p_userIdx95	BIGINT
,	IN	p_userIdx96	BIGINT,	IN	p_userIdx97	BIGINT,	IN	p_userIdx98	BIGINT,	IN	p_userIdx99	BIGINT,	IN	p_userIdx100	BIGINT
)
    COMMENT 'TOP 100 닉네임 받아오기'
BEGIN



	SELECT A.user_idx, A.nick, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
	FROM userinfo A
		LEFT JOIN guild_member C ON A.user_idx = C.user_idx
        LEFT JOIN guild D ON C.guild_idx = D.guild_idx    
	WHERE A.user_idx IN(p_myUserIdx,
			p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10,
			p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20,
			p_userIdx21, p_userIdx22, p_userIdx23, p_userIdx24, p_userIdx25, p_userIdx26, p_userIdx27, p_userIdx28, p_userIdx29, p_userIdx30,
			p_userIdx31, p_userIdx32, p_userIdx33, p_userIdx34, p_userIdx35, p_userIdx36, p_userIdx37, p_userIdx38, p_userIdx39, p_userIdx40,
			p_userIdx41, p_userIdx42, p_userIdx43, p_userIdx44, p_userIdx45, p_userIdx46, p_userIdx47, p_userIdx48, p_userIdx49, p_userIdx50,
			p_userIdx51, p_userIdx52, p_userIdx53, p_userIdx54, p_userIdx55, p_userIdx56, p_userIdx57, p_userIdx58, p_userIdx59, p_userIdx60,
			p_userIdx61, p_userIdx62, p_userIdx63, p_userIdx64, p_userIdx65, p_userIdx66, p_userIdx67, p_userIdx68, p_userIdx69, p_userIdx70,
			p_userIdx71, p_userIdx72, p_userIdx73, p_userIdx74, p_userIdx75, p_userIdx76, p_userIdx77, p_userIdx78, p_userIdx79, p_userIdx80,
			p_userIdx81, p_userIdx82, p_userIdx83, p_userIdx84, p_userIdx85, p_userIdx86, p_userIdx87, p_userIdx88, p_userIdx89, p_userIdx90,
			p_userIdx91, p_userIdx92, p_userIdx93, p_userIdx94, p_userIdx95, p_userIdx96, p_userIdx97, p_userIdx98, p_userIdx99, p_userIdx100
			);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_freebattle_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_freebattle_topinfo`(
	IN 	p_myUserIdx	BIGINT
,	IN	p_userIdx1	BIGINT,	IN	p_userIdx2	BIGINT,	IN	p_userIdx3	BIGINT,	IN	p_userIdx4	BIGINT,	IN	p_userIdx5	BIGINT
,	IN	p_userIdx6	BIGINT,	IN	p_userIdx7	BIGINT,	IN	p_userIdx8	BIGINT,	IN	p_userIdx9	BIGINT,	IN	p_userIdx10	BIGINT
,	IN	p_userIdx11	BIGINT,	IN	p_userIdx12	BIGINT,	IN	p_userIdx13	BIGINT,	IN	p_userIdx14	BIGINT,	IN	p_userIdx15	BIGINT
,	IN	p_userIdx16	BIGINT,	IN	p_userIdx17	BIGINT,	IN	p_userIdx18	BIGINT,	IN	p_userIdx19	BIGINT,	IN	p_userIdx20	BIGINT
,	IN	p_userIdx21	BIGINT,	IN	p_userIdx22	BIGINT,	IN	p_userIdx23	BIGINT,	IN	p_userIdx24	BIGINT,	IN	p_userIdx25	BIGINT
,	IN	p_userIdx26	BIGINT,	IN	p_userIdx27	BIGINT,	IN	p_userIdx28	BIGINT,	IN	p_userIdx29	BIGINT,	IN	p_userIdx30	BIGINT
,	IN	p_userIdx31	BIGINT,	IN	p_userIdx32	BIGINT,	IN	p_userIdx33	BIGINT,	IN	p_userIdx34	BIGINT,	IN	p_userIdx35	BIGINT
,	IN	p_userIdx36	BIGINT,	IN	p_userIdx37	BIGINT,	IN	p_userIdx38	BIGINT,	IN	p_userIdx39	BIGINT,	IN	p_userIdx40	BIGINT
,	IN	p_userIdx41	BIGINT,	IN	p_userIdx42	BIGINT,	IN	p_userIdx43	BIGINT,	IN	p_userIdx44	BIGINT,	IN	p_userIdx45	BIGINT
,	IN	p_userIdx46	BIGINT,	IN	p_userIdx47	BIGINT,	IN	p_userIdx48	BIGINT,	IN	p_userIdx49	BIGINT,	IN	p_userIdx50	BIGINT
,	IN	p_userIdx51	BIGINT,	IN	p_userIdx52	BIGINT,	IN	p_userIdx53	BIGINT,	IN	p_userIdx54	BIGINT,	IN	p_userIdx55	BIGINT
,	IN	p_userIdx56	BIGINT,	IN	p_userIdx57	BIGINT,	IN	p_userIdx58	BIGINT,	IN	p_userIdx59	BIGINT,	IN	p_userIdx60	BIGINT
,	IN	p_userIdx61	BIGINT,	IN	p_userIdx62	BIGINT,	IN	p_userIdx63	BIGINT,	IN	p_userIdx64	BIGINT,	IN	p_userIdx65	BIGINT
,	IN	p_userIdx66	BIGINT,	IN	p_userIdx67	BIGINT,	IN	p_userIdx68	BIGINT,	IN	p_userIdx69	BIGINT,	IN	p_userIdx70	BIGINT
,	IN	p_userIdx71	BIGINT,	IN	p_userIdx72	BIGINT,	IN	p_userIdx73	BIGINT,	IN	p_userIdx74	BIGINT,	IN	p_userIdx75	BIGINT
,	IN	p_userIdx76	BIGINT,	IN	p_userIdx77	BIGINT,	IN	p_userIdx78	BIGINT,	IN	p_userIdx79	BIGINT,	IN	p_userIdx80	BIGINT
,	IN	p_userIdx81	BIGINT,	IN	p_userIdx82	BIGINT,	IN	p_userIdx83	BIGINT,	IN	p_userIdx84	BIGINT,	IN	p_userIdx85	BIGINT
,	IN	p_userIdx86	BIGINT,	IN	p_userIdx87	BIGINT,	IN	p_userIdx88	BIGINT,	IN	p_userIdx89	BIGINT,	IN	p_userIdx90	BIGINT
,	IN	p_userIdx91	BIGINT,	IN	p_userIdx92	BIGINT,	IN	p_userIdx93	BIGINT,	IN	p_userIdx94	BIGINT,	IN	p_userIdx95	BIGINT
,	IN	p_userIdx96	BIGINT,	IN	p_userIdx97	BIGINT,	IN	p_userIdx98	BIGINT,	IN	p_userIdx99	BIGINT,	IN	p_userIdx100	BIGINT
)
    COMMENT 'TOP 100 닉네임 받아오기'
BEGIN


	SELECT A.user_idx, A.nick, B.char_exp, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
	FROM userinfo A INNER JOIN char_info B ON A.user_idx = B.user_idx AND A.base_char_idx = B.char_idx
		LEFT JOIN guild_member C ON A.user_idx = C.user_idx
        LEFT JOIN guild D ON C.guild_idx = D.guild_idx    
	WHERE A.user_idx IN(p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10,
			p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20,
			p_userIdx21, p_userIdx22, p_userIdx23, p_userIdx24, p_userIdx25, p_userIdx26, p_userIdx27, p_userIdx28, p_userIdx29, p_userIdx30,
			p_userIdx31, p_userIdx32, p_userIdx33, p_userIdx34, p_userIdx35, p_userIdx36, p_userIdx37, p_userIdx38, p_userIdx39, p_userIdx40,
			p_userIdx41, p_userIdx42, p_userIdx43, p_userIdx44, p_userIdx45, p_userIdx46, p_userIdx47, p_userIdx48, p_userIdx49, p_userIdx50,
			p_userIdx51, p_userIdx52, p_userIdx53, p_userIdx54, p_userIdx55, p_userIdx56, p_userIdx57, p_userIdx58, p_userIdx59, p_userIdx60,
			p_userIdx61, p_userIdx62, p_userIdx63, p_userIdx64, p_userIdx65, p_userIdx66, p_userIdx67, p_userIdx68, p_userIdx69, p_userIdx70,
			p_userIdx71, p_userIdx72, p_userIdx73, p_userIdx74, p_userIdx75, p_userIdx76, p_userIdx77, p_userIdx78, p_userIdx79, p_userIdx80,
			p_userIdx81, p_userIdx82, p_userIdx83, p_userIdx84, p_userIdx85, p_userIdx86, p_userIdx87, p_userIdx88, p_userIdx89, p_userIdx90,
			p_userIdx91, p_userIdx92, p_userIdx93, p_userIdx94, p_userIdx95, p_userIdx96, p_userIdx97, p_userIdx98, p_userIdx99, p_userIdx100
			);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_friendrecommend` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_friendrecommend`(
)
    COMMENT '랜덤 친구 정보 가져오기.(서버 시작시 1회만 조회)'
BEGIN

	SELECT user_idx, 1 as gamedb_idx , nick
    FROM userinfo
    ORDER BY RAND() LIMIT 100;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_fromnick` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_fromnick`(
	IN p_NickName		VARCHAR(64)		
)
    COMMENT '캐릭명으로 CharIdx 검색'
BEGIN
    
    
	SELECT 1 as gamedb_idx, user_idx, char_idx, char_type, char_exp
    FROM char_info
    WHERE nickname collate utf8mb4_unicode_ci = p_NickName collate utf8mb4_unicode_ci;
    -- WHERE nickname collate utf8mb4_general_ci = p_NickName;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rsp_mmo_userinfo_select_raid_topinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rsp_mmo_userinfo_select_raid_topinfo`(
	IN 	p_myUserIdx BIGINT
,	IN	p_userIdx1	BIGINT,	IN	p_userIdx2	BIGINT,	IN	p_userIdx3	BIGINT,	IN	p_userIdx4	BIGINT,	IN	p_userIdx5	BIGINT
,	IN	p_userIdx6	BIGINT,	IN	p_userIdx7	BIGINT,	IN	p_userIdx8	BIGINT,	IN	p_userIdx9	BIGINT,	IN	p_userIdx10	BIGINT
,	IN	p_userIdx11	BIGINT,	IN	p_userIdx12	BIGINT,	IN	p_userIdx13	BIGINT,	IN	p_userIdx14	BIGINT,	IN	p_userIdx15	BIGINT
,	IN	p_userIdx16	BIGINT,	IN	p_userIdx17	BIGINT,	IN	p_userIdx18	BIGINT,	IN	p_userIdx19	BIGINT,	IN	p_userIdx20	BIGINT
,	IN	p_userIdx21	BIGINT,	IN	p_userIdx22	BIGINT,	IN	p_userIdx23	BIGINT,	IN	p_userIdx24	BIGINT,	IN	p_userIdx25	BIGINT
,	IN	p_userIdx26	BIGINT,	IN	p_userIdx27	BIGINT,	IN	p_userIdx28	BIGINT,	IN	p_userIdx29	BIGINT,	IN	p_userIdx30	BIGINT
,	IN	p_userIdx31	BIGINT,	IN	p_userIdx32	BIGINT,	IN	p_userIdx33	BIGINT,	IN	p_userIdx34	BIGINT,	IN	p_userIdx35	BIGINT
,	IN	p_userIdx36	BIGINT,	IN	p_userIdx37	BIGINT,	IN	p_userIdx38	BIGINT,	IN	p_userIdx39	BIGINT,	IN	p_userIdx40	BIGINT
,	IN	p_userIdx41	BIGINT,	IN	p_userIdx42	BIGINT,	IN	p_userIdx43	BIGINT,	IN	p_userIdx44	BIGINT,	IN	p_userIdx45	BIGINT
,	IN	p_userIdx46	BIGINT,	IN	p_userIdx47	BIGINT,	IN	p_userIdx48	BIGINT,	IN	p_userIdx49	BIGINT,	IN	p_userIdx50	BIGINT
,	IN	p_userIdx51	BIGINT,	IN	p_userIdx52	BIGINT,	IN	p_userIdx53	BIGINT,	IN	p_userIdx54	BIGINT,	IN	p_userIdx55	BIGINT
,	IN	p_userIdx56	BIGINT,	IN	p_userIdx57	BIGINT,	IN	p_userIdx58	BIGINT,	IN	p_userIdx59	BIGINT,	IN	p_userIdx60	BIGINT
,	IN	p_userIdx61	BIGINT,	IN	p_userIdx62	BIGINT,	IN	p_userIdx63	BIGINT,	IN	p_userIdx64	BIGINT,	IN	p_userIdx65	BIGINT
,	IN	p_userIdx66	BIGINT,	IN	p_userIdx67	BIGINT,	IN	p_userIdx68	BIGINT,	IN	p_userIdx69	BIGINT,	IN	p_userIdx70	BIGINT
,	IN	p_userIdx71	BIGINT,	IN	p_userIdx72	BIGINT,	IN	p_userIdx73	BIGINT,	IN	p_userIdx74	BIGINT,	IN	p_userIdx75	BIGINT
,	IN	p_userIdx76	BIGINT,	IN	p_userIdx77	BIGINT,	IN	p_userIdx78	BIGINT,	IN	p_userIdx79	BIGINT,	IN	p_userIdx80	BIGINT
,	IN	p_userIdx81	BIGINT,	IN	p_userIdx82	BIGINT,	IN	p_userIdx83	BIGINT,	IN	p_userIdx84	BIGINT,	IN	p_userIdx85	BIGINT
,	IN	p_userIdx86	BIGINT,	IN	p_userIdx87	BIGINT,	IN	p_userIdx88	BIGINT,	IN	p_userIdx89	BIGINT,	IN	p_userIdx90	BIGINT
,	IN	p_userIdx91	BIGINT,	IN	p_userIdx92	BIGINT,	IN	p_userIdx93	BIGINT,	IN	p_userIdx94	BIGINT,	IN	p_userIdx95	BIGINT
,	IN	p_userIdx96	BIGINT,	IN	p_userIdx97	BIGINT,	IN	p_userIdx98	BIGINT,	IN	p_userIdx99	BIGINT,	IN	p_userIdx100	BIGINT
)
    COMMENT 'TOP 100 닉네임 받아오기'
BEGIN



	SELECT A.user_idx, A.nick, B.char_exp, IFNULL(C.guild_idx, 0) AS guild_idx, IFNULL(D.name, '') AS guild_nick
	FROM userinfo A INNER JOIN char_info B ON A.user_idx = B.user_idx AND A.base_char_idx = B.char_idx
		LEFT JOIN guild_member C ON A.user_idx = C.user_idx
        LEFT JOIN guild D ON C.guild_idx = D.guild_idx
	WHERE A.user_idx IN(p_myUserIdx,
			p_userIdx1, p_userIdx2, p_userIdx3, p_userIdx4, p_userIdx5, p_userIdx6, p_userIdx7, p_userIdx8, p_userIdx9, p_userIdx10,
			p_userIdx11, p_userIdx12, p_userIdx13, p_userIdx14, p_userIdx15, p_userIdx16, p_userIdx17, p_userIdx18, p_userIdx19, p_userIdx20,
			p_userIdx21, p_userIdx22, p_userIdx23, p_userIdx24, p_userIdx25, p_userIdx26, p_userIdx27, p_userIdx28, p_userIdx29, p_userIdx30,
			p_userIdx31, p_userIdx32, p_userIdx33, p_userIdx34, p_userIdx35, p_userIdx36, p_userIdx37, p_userIdx38, p_userIdx39, p_userIdx40,
			p_userIdx41, p_userIdx42, p_userIdx43, p_userIdx44, p_userIdx45, p_userIdx46, p_userIdx47, p_userIdx48, p_userIdx49, p_userIdx50,
			p_userIdx51, p_userIdx52, p_userIdx53, p_userIdx54, p_userIdx55, p_userIdx56, p_userIdx57, p_userIdx58, p_userIdx59, p_userIdx60,
			p_userIdx61, p_userIdx62, p_userIdx63, p_userIdx64, p_userIdx65, p_userIdx66, p_userIdx67, p_userIdx68, p_userIdx69, p_userIdx70,
			p_userIdx71, p_userIdx72, p_userIdx73, p_userIdx74, p_userIdx75, p_userIdx76, p_userIdx77, p_userIdx78, p_userIdx79, p_userIdx80,
			p_userIdx81, p_userIdx82, p_userIdx83, p_userIdx84, p_userIdx85, p_userIdx86, p_userIdx87, p_userIdx88, p_userIdx89, p_userIdx90,
			p_userIdx91, p_userIdx92, p_userIdx93, p_userIdx94, p_userIdx95, p_userIdx96, p_userIdx97, p_userIdx98, p_userIdx99, p_userIdx100
			);

            
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_auction_charbookmark_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_auction_charbookmark_list`(
	IN	_charid 		BIGINT
-- ,	IN	_category_num		TINYINT
)
    COMMENT '거래소 즐겨찾기 목록'
BEGIN

	SELECT element_id, element_value, element_extra
    FROM char_auction_bookmark
    WHERE char_idx = _charid;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_auction_charbookmark_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_auction_charbookmark_update`(
	IN	_charid 		BIGINT
-- ,	IN	_category_num		TINYINT
,	IN  id_array VARCHAR(4096)
)
    COMMENT '거래소 즐겨찾기 업데이트'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    # Status
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
    DECLARE dot_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
    DECLARE current_extra VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id INT;
    DECLARE v_status_value INT;
    DECLARE v_status_extra INT;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
    root:
    BEGIN
    
		START TRANSACTION;
        
        subroot:
        BEGIN    
			DELETE FROM char_auction_bookmark WHERE char_idx = _charid;
            
            IF 0 = LENGTH(id_array) THEN
				LEAVE subroot;
			END IF;	
            
        -- Status begin
			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);
            SET dot_pos = locate('.', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                SET current_extra = '';
                
                IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
                    
                    IF dot_pos > 0 THEN -- id:value.extra 형태
                        SET current_value = substring(id_array_local, colon_pos + 1, dot_pos - (colon_pos+1));
                        
                        -- select comma_pos, colon_pos, dot_pos;
                        
                        IF comma_pos > 0 THEN
							SET current_extra = substring(id_array_local, dot_pos + 1, comma_pos - (dot_pos+1));
                            
                            -- select current_extra;
                            
							SET end_loop = 0;
						ELSE
							SET current_extra = substring(id_array_local, dot_pos + 1);
							SET end_loop = 1;
						END IF;
					ELSE
						IF comma_pos > 0 THEN
							SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
							SET end_loop = 0;
						ELSE
							SET current_value = substring(id_array_local, colon_pos + 1);
							SET end_loop = 1;
						END IF;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_status_id := CAST(current_id as unsigned);
                SET v_status_value := CAST(current_value as unsigned);
                SET v_status_extra := CAST(current_extra as unsigned);
                
                -- select v_status_id, v_status_value, v_status_extra;
                
				# Place here your code that uses current_id
			    -- IF 0 < v_status_id AND 0 < v_status_value THEN
                IF 0 < v_status_id THEN
					INSERT INTO char_auction_bookmark (char_idx, element_id, element_value, element_extra)
							VALUES (_charid, v_status_id, v_status_value, v_status_extra)
						ON DUPLICATE KEY UPDATE element_id = v_status_id, element_value = v_status_value, element_extra = v_status_extra;
												
					IF 0 = row_count() THEN
						SET v_result = 119;	
                        LEAVE subroot;
					END IF;	
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
                    SET dot_pos = locate('.', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- Status End
		END;
    
		IF v_result <> 0 THEN
			ROLLBACK;
		ELSE
			COMMIT;
		END IF;
	
    END;

	SELECT v_result;
		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_auction_item_price_stat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_auction_item_price_stat`(
	IN	_itemid				INT
,	IN	_enchantlevel		INT
,	IN	_identified		TINYINT
,	IN	_termday			INT
)
    COMMENT '거래소 아이템 시세 정보'
BEGIN
    -- DECLARE	v_searchPage	INT DEFAULT _page - 1;		
    -- DECLARE	v_pageSize		INT DEFAULT 10;				
    -- DECLARE v_totalPage		INT DEFAULT 0;				
    -- DECLARE v_startRow		INT DEFAULT v_searchPage * v_pageSize;	
    
    DECLARE v_Lowest_Price		INT DEFAULT 0; -- 물품 최저 가격
    DECLARE v_Count				INT DEFAULT 0; -- 판매 물품 갯수
    
    DECLARE v_SoldCount			INT DEFAULT 0; -- 판매완료된 물품 갯수
    DECLARE v_Latest_Price		INT DEFAULT 0; -- 가장 최근 가격
    DECLARE v_Average_Price		DOUBLE DEFAULT 0; -- 평균 가격
	DECLARE v_Lowest_SoldPrice	INT DEFAULT 0; -- 판매된 최저 가격
    DECLARE v_Highest_SoldPrice	INT DEFAULT 0; -- 판매된 최고 가격
    
    
    root:
	BEGIN
    
		-- IF _page < 1 THEN
		-- 	LEAVE root;
		-- END IF;
        
        IF _itemid <= 0 THEN
			LEAVE root;
        END IF;
        
        SELECT IFNULL(MIN(fld_sell_price), 0) AS fld_sell_price, COUNT(1) AS fld_count INTO v_Lowest_Price, v_Count
				 FROM tbl_auction_items 
				 WHERE NOW() < fld_expire_date AND fld_item_name_id = _itemid AND fld_equip_enchant_level = _enchantlevel AND fld_equip_identify = _identified;


        SELECT IFNULL(MIN(fld_sell_price), 0) AS min_sell_price, IFNULL(MAX(fld_sell_price), 0) AS max_sell_price, COUNT(1) AS fld_count INTO v_Lowest_SoldPrice, v_Highest_SoldPrice, v_SoldCount
				 FROM tbl_auction_items_sold
				 WHERE NOW() - INTERVAL _termday DAY < fld_buy_date AND fld_item_name_id = _itemid AND fld_equip_enchant_level = _enchantlevel AND fld_equip_identify = _identified;
                 
		SELECT fld_sell_price INTO v_Latest_Price
				 FROM tbl_auction_items_sold
				 WHERE NOW() - INTERVAL _termday DAY < fld_buy_date AND fld_item_name_id = _itemid AND fld_equip_enchant_level = _enchantlevel AND fld_equip_identify = _identified
                 ORDER BY fld_buy_date DESC
                 LIMIT 1;
                 
		SELECT IFNULL(AVG(price), 0) INTO v_Average_Price
		FROM (
			SELECT 
				CASE
					WHEN IFNULL(fld_count_item_qty, 0) > 0 THEN fld_sell_price / fld_count_item_qty
                    -- WHEN 0 < fld_count_item_qty THEN AVG(fld_sell_price / fld_count_item_qty)
					ELSE fld_sell_price
				END AS price
			FROM tbl_auction_items_sold
			WHERE NOW() - INTERVAL _termday DAY < fld_buy_date 
			AND fld_item_name_id = _itemid
			AND fld_equip_enchant_level = _enchantlevel
			AND fld_equip_identify = _identified
		) AS subquery;

        --      

		SELECT v_Lowest_Price, v_Count, v_Lowest_SoldPrice, v_Highest_SoldPrice, v_SoldCount, v_Latest_Price, v_Average_Price;

    END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_awarehouse_keep` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_awarehouse_keep`(
	IN _useridx 			BIGINT		
,	IN _charidx				BIGINT		
,	IN _keepGold			BIGINT		
,	IN _awarehouseMaxGold	BIGINT		
,	IN  id_array VARCHAR(4096)		-- equipItemDBIdx...
,	IN	_arrayResItem VARCHAR(4096) -- countItem
)
    COMMENT '계정창고에 보관'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    # countItem
    DECLARE v_item_warehouse_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    DECLARE v_db_item_qty			INT DEFAULT 0;	
    DECLARE v_affected_row			INT DEFAULT 0; 
    
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
    
    # EquipItem
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id BIGINT;
    DECLARE v_status_value INT;
    
    DECLARE v_final_gold_char				BIGINT DEFAULT 0;	
    DECLARE v_final_gold_awarehouse			BIGINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN
    
        -- countItem begin
        IF 0 < LENGTH(_arrayResItem) THEN
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN

					SELECT item_value INTO v_db_item_qty FROM char_inven_item
					WHERE char_idx = _charidx AND item_id = v_cntitem_id;
					IF FOUND_ROWS() <> 1 THEN
						SET v_result = 101;	
						LEAVE root;			
					END IF;
					
					IF v_db_item_qty < v_cntitem_value THEN
						SET v_result = 102;	
						LEAVE root;			
					END IF;
					
					INSERT INTO char_inven_item (char_idx, user_idx, item_type, item_id, item_value)
					(
						SELECT 0, user_idx, item_type, v_cntitem_id, v_cntitem_value
						FROM char_inven_item AS B
						WHERE char_idx = _charidx AND item_id = v_cntitem_id
					)
					ON DUPLICATE KEY UPDATE item_value = char_inven_item.item_value + v_cntitem_value; 
					
					SET v_affected_row = ROW_COUNT();
					IF NOT (v_affected_row = 2 OR v_affected_row = 1) THEN
						SET v_result = 103;	
						LEAVE root;
					END IF;
					
					IF v_db_item_qty = v_cntitem_value THEN
						
						DELETE FROM char_inven_item
						WHERE char_idx = _charidx AND item_id = v_cntitem_id;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 104;	
							LEAVE root;
						END IF;
					ELSE 
						
						UPDATE char_inven_item
						SET item_value = item_value - v_cntitem_value
						WHERE char_idx = _charidx AND item_id = v_cntitem_id;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 105;	
							LEAVE root;
						END IF;			
					END IF;        
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
        END IF;
        -- countItem end
        
        subroot:
		-- equipItem begin
        BEGIN    
            IF 0 < LENGTH(id_array) THEN
            
				SET id_array_local = id_array;
				SET start_pos = 1;
				SET comma_pos = locate(',', id_array_local);
				SET colon_pos = locate(':', id_array_local);

				REPEAT
					SET current_id = '';
					SET current_value = '';
					
					IF colon_pos > 0 THEN -- id:value 형태
						SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
						IF comma_pos > 0 THEN
							SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
							SET end_loop = 0;
						ELSE
							SET current_value = substring(id_array_local, colon_pos + 1);
							SET end_loop = 1;
						END IF;
					ELSE -- id 만 있는 형태
						IF comma_pos > 0 THEN
							SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
							SET end_loop = 0;
						ELSE
							SET current_id = substring(id_array_local, start_pos);
							SET end_loop = 1;
						END IF;
					END IF;
				 
					SET v_status_id := CAST(current_id as unsigned);
					-- SET v_status_value := CAST(current_value as unsigned);
					# Place here your code that uses current_id
					-- IF 0 < v_status_id AND 0 < v_status_value THEN
					IF 0 < v_status_id THEN
						
                        UPDATE char_inven_equip
							SET char_idx = 0
							WHERE item_idx = v_status_id AND user_idx = _useridx AND equip = 0;
													
						IF 0 = row_count() THEN
							SET v_result = 119;	
							LEAVE subroot;
						END IF;	
					END IF;

					IF end_loop = 0 THEN
						SET id_array_local = substring(id_array_local, comma_pos + 1);
						SET comma_pos = locate(',', id_array_local);
						SET colon_pos = locate(':', id_array_local);
					END IF;
				UNTIL end_loop = 1

				END REPEAT;
			END IF;
		END;
        
        IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        -- equipItem end
        
        IF 0 < _keepGold THEN
        -- 골드 begin
			CALL sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _keepGold, v_final_gold_char, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
			
			
			CALL sp_mmo_notrans_userinfo_insert_awarehouse_gold(_useridx, _keepGold, v_final_gold_awarehouse, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
			
			IF _awarehouseMaxGold < v_final_gold_awarehouse THEN
				SET v_result = 101;	
				LEAVE root;
			END IF;
		ELSE
			SELECT char_gold INTO v_final_gold_char FROM char_info WHERE char_idx = _charidx;
            SELECT awarehouse_gold INTO v_final_gold_awarehouse FROM userinfo WHERE user_idx = _useridx;
        -- 골드 end
        END IF;
        
	END;

	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_awarehouse_take` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_awarehouse_take`(
	IN _useridx 			BIGINT		
,	IN _charidx				BIGINT		
,	IN _keepGold			BIGINT		
,	IN _charMaxGold			BIGINT		
,	IN  id_array VARCHAR(4096)		-- equipItemDBIdx...
,	IN	_arrayResItem VARCHAR(4096) -- countItem
)
    COMMENT '계정창고로 부터 회수'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    # countItem
    DECLARE v_item_inventory_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    DECLARE v_db_item_qty			INT DEFAULT 0;	
    DECLARE v_db_item_type			SMALLINT DEFAULT 0;	
    DECLARE v_affected_row			INT DEFAULT 0; 
    
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
    
    # EquipItem
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id BIGINT;
    DECLARE v_status_value INT;
    
    DECLARE v_final_gold_char				BIGINT DEFAULT 0;	
    DECLARE v_final_gold_awarehouse			BIGINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN
	
		-- countItem begin
        IF 0 < LENGTH(_arrayResItem) THEN
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN

					SELECT item_value, item_type INTO v_db_item_qty, v_db_item_type FROM char_inven_item
					WHERE user_idx = _useridx AND item_id = v_cntitem_id AND char_idx = 0;
					IF FOUND_ROWS() <> 1 THEN
						SET v_result = 101;	
						LEAVE root;			
					END IF;
					
					IF v_db_item_qty < v_cntitem_value THEN
						SET v_result = 102;	
						LEAVE root;			
					END IF;
					
					INSERT INTO char_inven_item (char_idx, user_idx, item_type, item_id, item_value)
					VALUES(_charidx, _useridx, v_db_item_type, v_cntitem_id, v_cntitem_value)
					ON DUPLICATE KEY UPDATE item_value = item_value + v_cntitem_value; 
					
					SET v_affected_row = ROW_COUNT();
					IF NOT (v_affected_row = 2 OR v_affected_row = 1) THEN
						SET v_result = 103;	
						LEAVE root;
					END IF;
					
					IF v_db_item_qty = v_cntitem_value THEN
						
						DELETE FROM char_inven_item
						WHERE user_idx = _useridx AND item_id = v_cntitem_id AND char_idx = 0;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 104;	
							LEAVE root;
						END IF;
					
					ELSE
						
						UPDATE char_inven_item
						SET item_value = item_value - v_cntitem_value
						WHERE user_idx = _useridx AND item_id = v_cntitem_id AND char_idx = 0;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 105;	
							LEAVE root;
						END IF;            
                        
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
        END IF;
        -- countItem end
        
        subroot:
		-- equipItem begin
        BEGIN    
            IF 0 < LENGTH(id_array) THEN
            
				SET id_array_local = id_array;
				SET start_pos = 1;
				SET comma_pos = locate(',', id_array_local);
				SET colon_pos = locate(':', id_array_local);

				REPEAT
					SET current_id = '';
					SET current_value = '';
					
					IF colon_pos > 0 THEN -- id:value 형태
						SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
						IF comma_pos > 0 THEN
							SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
							SET end_loop = 0;
						ELSE
							SET current_value = substring(id_array_local, colon_pos + 1);
							SET end_loop = 1;
						END IF;
					ELSE -- id 만 있는 형태
						IF comma_pos > 0 THEN
							SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
							SET end_loop = 0;
						ELSE
							SET current_id = substring(id_array_local, start_pos);
							SET end_loop = 1;
						END IF;
					END IF;
				 
					SET v_status_id := CAST(current_id as unsigned);
					-- SET v_status_value := CAST(current_value as unsigned);
					# Place here your code that uses current_id
					-- IF 0 < v_status_id AND 0 < v_status_value THEN
					IF 0 < v_status_id THEN
						
                        UPDATE char_inven_equip
							SET char_idx = _charidx
							WHERE item_idx = v_status_id AND user_idx = _useridx AND char_idx = 0;
													
						IF 0 = row_count() THEN
							SET v_result = 119;	
							LEAVE subroot;
						END IF;	
					END IF;

					IF end_loop = 0 THEN
						SET id_array_local = substring(id_array_local, comma_pos + 1);
						SET comma_pos = locate(',', id_array_local);
						SET colon_pos = locate(':', id_array_local);
					END IF;
				UNTIL end_loop = 1

				END REPEAT;
			END IF;
		END;
        
        IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        -- equipItem end
        
        IF 0 < _keepGold THEN
        -- 골드 begin
			CALL sp_mmo_notrans_userinfo_delete_awarehouse_gold(_useridx, _keepGold, v_final_gold_awarehouse, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
			
			CALL sp_mmo_notrans_charinfo_insert_gold(_useridx, _charidx, _keepGold, v_final_gold_char, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
			
			IF _charMaxGold < v_final_gold_char THEN
				SET v_result = 101;	
				LEAVE root;
			END IF;
        -- 골드 end
        ELSE
			SELECT char_gold INTO v_final_gold_char FROM char_info WHERE char_idx = _charidx;
            SELECT awarehouse_gold INTO v_final_gold_awarehouse FROM userinfo WHERE user_idx = _useridx;
        END IF;
        
        -- begin
        
        -- end
        
        -- begin
        
        -- end
        
	END;
	
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_buycashshop_avatargacha` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_buycashshop_avatargacha`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN	_use_gold			BIGINT		
,	IN	_use_cashgreen		BIGINT		
-- ,	IN	_use_cashred		BIGINT		
,	IN	_use_mileage		BIGINT		
-- ,	IN	_use_pkgold			INT			
-- ,	IN	_use_guildpoint		INT			

,	IN	p_AvatarConfirmDuration 		INT

,	IN	_materialid			INT			
, 	IN	_materialcount		INT			

-- ,	IN	_ticketid			INT			
-- , 	IN	_ticketcount		INT			

-- ,	IN	_add_mileage		BIGINT
-- ,	IN 	_sprcialbuffid		INT	

,	IN	p_failAvatarId1	INT,	IN	p_failAvatarId2	INT,	IN	p_failAvatarId3	INT,	IN	p_failAvatarId4	INT,	IN	p_failAvatarId5	INT
,	IN	p_failAvatarId6	INT,	IN	p_failAvatarId7	INT,	IN	p_failAvatarId8	INT,	IN	p_failAvatarId9	INT,	IN	p_failAvatarId10	INT,	IN	p_failAvatarId11	INT

,	IN	p_AvatarId1	INT,	IN	p_AvatarId2	INT,	IN	p_AvatarId3	INT,	IN	p_AvatarId4	INT,	IN	p_AvatarId5	INT
,	IN	p_AvatarId6	INT,	IN	p_AvatarId7	INT,	IN	p_AvatarId8	INT,	IN	p_AvatarId9	INT,	IN	p_AvatarId10	INT,	IN	p_AvatarId11	INT
)
    COMMENT 'cashshop 가챠 이용 변신아바타 획득'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE v_finalMileage			BIGINT DEFAULT 0; 
    -- DECLARE v_finalPkgold			INT DEFAULT 0; 
    -- DECLARE v_finalGuildPoint		INT DEFAULT 0; 
   	-- DECLARE v_useTime				DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB			BIGINT DEFAULT 0; 

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    -- DECLARE v_cashB_old				BIGINT DEFAULT 0;
    -- DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    -- DECLARE v_cashB_new				BIGINT DEFAULT 0;
    -- DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  	
    
    DECLARE final_item_count 		INT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE avatarDBIndex1 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex2 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex3 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex4 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex5 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex6 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex7 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex8 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex9 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex10 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex11 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalgold, v_finalcashA, v_finalMileage, final_item_count, avatarDBIndex1, avatarDBIndex2, avatarDBIndex3, avatarDBIndex4, avatarDBIndex5, avatarDBIndex6, avatarDBIndex7, avatarDBIndex8, avatarDBIndex9, avatarDBIndex10, avatarDBIndex11;
	END;


	START TRANSACTION;	

	root:
	BEGIN

		IF _use_gold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, _use_gold, v_finalgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
		IF _use_cashgreen > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, _use_cashgreen, v_finalcashA, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;

			CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
		END IF;
        
        IF _use_mileage > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_mileage(p_UserID, p_CharID, _use_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
        -- IF _use_pkgold > 0 THEN 
		-- 	CALL sp_mmo_notrans_userinfo_delete_pkgold(p_UserID, _use_pkgold, v_finalPkgold, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --         LEAVE root;
		-- 	END IF;			
		-- END IF;        
        
        -- IF _use_guildpoint > 0 THEN 
		-- 	CALL sp_mmo_notrans_userinfo_delete_guildpoint(p_UserID, _use_guildpoint, v_finalGuildPoint, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --         LEAVE root;
		-- 	END IF;			
		-- END IF;        
        
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, _materialid, _materialcount, final_item_count, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
        -- IF final_item_count <= 0 THEN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;            
        -- END IF;
        
        -- IF _add_mileage > 0 THEN 			
        --     CALL sp_mmo_notrans_charinfo_insert_mileage(p_UserID, p_CharID, _add_mileage, v_finalMileage, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --      LEAVE root;
		-- 	END IF;	
        -- END IF;
        
        
        -- 일반 변신아바타 획득
		IF 0 < p_failAvatarId1 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId2 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId3 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId4 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId5 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId6 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId7 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId8 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId9 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId10 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        IF 0 < p_failAvatarId11 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId11, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 변신아바타 확정대기
        IF 0 < p_AvatarId1 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex1;
		END IF;

		IF 0 < p_AvatarId2 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex2;
		END IF;
        
        IF 0 < p_avatarId3 THEN
			INSERT INTO user_Avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex3;
		END IF;
        
        IF 0 < p_AvatarId4 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex4;
		END IF;
        
        IF 0 < p_AvatarId5 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex5;
		END IF;
        
        IF 0 < p_AvatarId6 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex6;
		END IF;
        
        IF 0 < p_AvatarId7 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex7;
		END IF;
        
        IF 0 < p_AvatarId8 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex8;
		END IF;
        
        IF 0 < p_AvatarId9 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex9;
		END IF;
        
        IF 0 < p_AvatarId10 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex10;
		END IF;
        
        IF 0 < p_AvatarId11 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId11, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6106;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex11;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalgold, v_finalcashA, v_finalMileage, final_item_count, avatarDBIndex1, avatarDBIndex2, avatarDBIndex3, avatarDBIndex4, avatarDBIndex5, avatarDBIndex6, avatarDBIndex7, avatarDBIndex8, avatarDBIndex9, avatarDBIndex10, avatarDBIndex11;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_buycashshop_petgacha` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_buycashshop_petgacha`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN	_use_gold			BIGINT		
,	IN	_use_cashgreen		BIGINT		
-- ,	IN	_use_cashred		BIGINT		
,	IN	_use_mileage		BIGINT		
-- ,	IN	_use_pkgold			INT			
-- ,	IN	_use_guildpoint		INT			

,	IN	p_PetConfirmDuration 		INT

,	IN	_materialid			INT			
, 	IN	_materialcount		INT			

-- ,	IN	_ticketid			INT			
-- , 	IN	_ticketcount		INT			

-- ,	IN	_add_mileage		BIGINT
-- ,	IN 	_sprcialbuffid		INT	

,	IN	p_failPetId1	INT,	IN	p_failPetId2	INT,	IN	p_failPetId3	INT,	IN	p_failPetId4	INT,	IN	p_failPetId5	INT
,	IN	p_failPetId6	INT,	IN	p_failPetId7	INT,	IN	p_failPetId8	INT,	IN	p_failPetId9	INT,	IN	p_failPetId10	INT,	IN	p_failPetId11	INT

,	IN	p_PetId1	INT,	IN	p_PetId2	INT,	IN	p_PetId3	INT,	IN	p_PetId4	INT,	IN	p_PetId5	INT
,	IN	p_PetId6	INT,	IN	p_PetId7	INT,	IN	p_PetId8	INT,	IN	p_PetId9	INT,	IN	p_PetId10	INT,	IN	p_PetId11	INT
)
    COMMENT 'cashshop 가챠 이용 펫 획득'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE v_finalMileage			BIGINT DEFAULT 0; 
    -- DECLARE v_finalPkgold			INT DEFAULT 0; 
    -- DECLARE v_finalGuildPoint		INT DEFAULT 0; 
   	-- DECLARE v_useTime				DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB			BIGINT DEFAULT 0; 

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    -- DECLARE v_cashB_old				BIGINT DEFAULT 0;
    -- DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    -- DECLARE v_cashB_new				BIGINT DEFAULT 0;
    -- DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  	
    
    DECLARE final_item_count 		INT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE petDBIndex1 	BIGINT DEFAULT 0;
    DECLARE petDBIndex2 	BIGINT DEFAULT 0;
    DECLARE petDBIndex3 	BIGINT DEFAULT 0;
    DECLARE petDBIndex4 	BIGINT DEFAULT 0;
    DECLARE petDBIndex5 	BIGINT DEFAULT 0;
    DECLARE petDBIndex6 	BIGINT DEFAULT 0;
    DECLARE petDBIndex7 	BIGINT DEFAULT 0;
    DECLARE petDBIndex8 	BIGINT DEFAULT 0;
    DECLARE petDBIndex9 	BIGINT DEFAULT 0;
    DECLARE petDBIndex10 	BIGINT DEFAULT 0;
    DECLARE petDBIndex11 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalgold, v_finalcashA, v_finalMileage, final_item_count, petDBIndex1, petDBIndex2, petDBIndex3, petDBIndex4, petDBIndex5, petDBIndex6, petDBIndex7, petDBIndex8, petDBIndex9, petDBIndex10, petDBIndex11;
	END;


	START TRANSACTION;	

	root:
	BEGIN

		IF _use_gold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, _use_gold, v_finalgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
		IF _use_cashgreen > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, _use_cashgreen, v_finalcashA, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;

			CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
		END IF;
        
        IF _use_mileage > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_mileage(p_UserID, p_CharID, _use_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
        -- IF _use_pkgold > 0 THEN 
		-- 	CALL sp_mmo_notrans_userinfo_delete_pkgold(p_UserID, _use_pkgold, v_finalPkgold, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --         LEAVE root;
		-- 	END IF;			
		-- END IF;        
        
        -- IF _use_guildpoint > 0 THEN 
		-- 	CALL sp_mmo_notrans_userinfo_delete_guildpoint(p_UserID, _use_guildpoint, v_finalGuildPoint, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --         LEAVE root;
		-- 	END IF;			
		-- END IF;        
        
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, _materialid, _materialcount, final_item_count, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
        -- IF final_item_count <= 0 THEN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;            
        -- END IF;
        
        -- IF _add_mileage > 0 THEN 			
        --     CALL sp_mmo_notrans_charinfo_insert_mileage(p_UserID, p_CharID, _add_mileage, v_finalMileage, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --      LEAVE root;
		-- 	END IF;	
        -- END IF;
        
        
        -- 일반 펫 획득
		IF 0 < p_failPetId1 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId2 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId3 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId4 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId5 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId6 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId7 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId8 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId9 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId10 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        IF 0 < p_failPetId11 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId11, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 펫 확정대기
        IF 0 < p_PetId1 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex1;
		END IF;

		IF 0 < p_PetId2 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex2;
		END IF;
        
        IF 0 < p_PetId3 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex3;
		END IF;
        
        IF 0 < p_PetId4 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex4;
		END IF;
        
        IF 0 < p_PetId5 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex5;
		END IF;
        
        IF 0 < p_PetId6 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex6;
		END IF;
        
        IF 0 < p_PetId7 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex7;
		END IF;
        
        IF 0 < p_PetId8 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex8;
		END IF;
        
        IF 0 < p_PetId9 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex9;
		END IF;
        
        IF 0 < p_PetId10 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex10;
		END IF;
        
        IF 0 < p_PetId11 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId11, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex11;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalgold, v_finalcashA, v_finalMileage, final_item_count, petDBIndex1, petDBIndex2, petDBIndex3, petDBIndex4, petDBIndex5, petDBIndex6, petDBIndex7, petDBIndex8, petDBIndex9, petDBIndex10, petDBIndex11;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_buycashshop_vehiclegacha` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_buycashshop_vehiclegacha`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN	_use_gold			BIGINT		
,	IN	_use_cashgreen		BIGINT		
-- ,	IN	_use_cashred		BIGINT		
,	IN	_use_mileage		BIGINT		
-- ,	IN	_use_pkgold			INT			
-- ,	IN	_use_guildpoint		INT			

,	IN	p_VehicleConfirmDuration 		INT

,	IN	_materialid			INT			
, 	IN	_materialcount		INT			

-- ,	IN	_ticketid			INT			
-- , 	IN	_ticketcount		INT			

-- ,	IN	_add_mileage		BIGINT
-- ,	IN 	_sprcialbuffid		INT	

,	IN	p_failVehicleId1	INT,	IN	p_failVehicleId2	INT,	IN	p_failVehicleId3	INT,	IN	p_failVehicleId4	INT,	IN	p_failVehicleId5	INT
,	IN	p_failVehicleId6	INT,	IN	p_failVehicleId7	INT,	IN	p_failVehicleId8	INT,	IN	p_failVehicleId9	INT,	IN	p_failVehicleId10	INT,	IN	p_failVehicleId11	INT

,	IN	p_VehicleId1	INT,	IN	p_VehicleId2	INT,	IN	p_VehicleId3	INT,	IN	p_VehicleId4	INT,	IN	p_VehicleId5	INT
,	IN	p_VehicleId6	INT,	IN	p_VehicleId7	INT,	IN	p_VehicleId8	INT,	IN	p_VehicleId9	INT,	IN	p_VehicleId10	INT,	IN	p_VehicleId11	INT
)
    COMMENT 'cashshop 가챠 이용 탈것 획득'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE v_finalMileage			BIGINT DEFAULT 0; 
    -- DECLARE v_finalPkgold			INT DEFAULT 0; 
    -- DECLARE v_finalGuildPoint		INT DEFAULT 0; 
   	-- DECLARE v_useTime				DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB			BIGINT DEFAULT 0; 

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    -- DECLARE v_cashB_old				BIGINT DEFAULT 0;
    -- DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    -- DECLARE v_cashB_new				BIGINT DEFAULT 0;
    -- DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  	
    
    DECLARE final_item_count 		INT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE vehicleDBIndex1 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex2 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex3 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex4 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex5 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex6 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex7 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex8 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex9 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex10 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex11 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalgold, v_finalcashA, v_finalMileage, final_item_count, vehicleDBIndex1, vehicleDBIndex2, vehicleDBIndex3, vehicleDBIndex4, vehicleDBIndex5, vehicleDBIndex6, vehicleDBIndex7, vehicleDBIndex8, vehicleDBIndex9, vehicleDBIndex10, vehicleDBIndex11;
	END;


	START TRANSACTION;	

	root:
	BEGIN

		IF _use_gold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, _use_gold, v_finalgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
		IF _use_cashgreen > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, _use_cashgreen, v_finalcashA, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;

			CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
		END IF;
        
        IF _use_mileage > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_mileage(p_UserID, p_CharID, _use_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
        -- IF _use_pkgold > 0 THEN 
		-- 	CALL sp_mmo_notrans_userinfo_delete_pkgold(p_UserID, _use_pkgold, v_finalPkgold, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --         LEAVE root;
		-- 	END IF;			
		-- END IF;        
        
        -- IF _use_guildpoint > 0 THEN 
		-- 	CALL sp_mmo_notrans_userinfo_delete_guildpoint(p_UserID, _use_guildpoint, v_finalGuildPoint, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --         LEAVE root;
		-- 	END IF;			
		-- END IF;        
        
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, _materialid, _materialcount, final_item_count, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
        -- IF final_item_count <= 0 THEN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;            
        -- END IF;
        
        -- IF _add_mileage > 0 THEN 			
        --     CALL sp_mmo_notrans_charinfo_insert_mileage(p_UserID, p_CharID, _add_mileage, v_finalMileage, v_result);
		-- 	
		-- 	IF v_result != 0 THEN 
        --      LEAVE root;
		-- 	END IF;	
        -- END IF;
        
        
        -- 일반  획득
		IF 0 < p_failVehicleId1 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId2 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId3 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId4 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId5 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId6 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId7 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId8 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId9 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId10 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        IF 0 < p_failVehicleId11 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId11, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		--  확정대기
        IF 0 < p_VehicleId1 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex1;
		END IF;

		IF 0 < p_VehicleId2 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex2;
		END IF;
        
        IF 0 < p_VehicleId3 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex3;
		END IF;
        
        IF 0 < p_VehicleId4 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex4;
		END IF;
        
        IF 0 < p_VehicleId5 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex5;
		END IF;
        
        IF 0 < p_VehicleId6 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex6;
		END IF;
        
        IF 0 < p_VehicleId7 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex7;
		END IF;
        
        IF 0 < p_VehicleId8 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex8;
		END IF;
        
        IF 0 < p_VehicleId9 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex9;
		END IF;
        
        IF 0 < p_VehicleId10 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex10;
		END IF;
        
        IF 0 < p_VehicleId11 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId11, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex11;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalgold, v_finalcashA, v_finalMileage, final_item_count, vehicleDBIndex1, vehicleDBIndex2, vehicleDBIndex3, vehicleDBIndex4, vehicleDBIndex5, vehicleDBIndex6, vehicleDBIndex7, vehicleDBIndex8, vehicleDBIndex9, vehicleDBIndex10, vehicleDBIndex11;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charadvertisement_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charadvertisement_update`( 
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT		
,	IN p_AdID		 	INT 		
,	IN p_RewardType		INT
,	IN p_RewardID 		INT
,	IN p_RewardValue	INT
)
    COMMENT '광고 보상 수령'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_postIdx 	BIGINT DEFAULT 0;
    DECLARE v_posttype	INT DEFAULT 1;
    DECLARE v_update_date TIMESTAMP DEFAULT NOW();
        
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_postIdx;
	END;
   
   
   

    root:
    BEGIN

		START TRANSACTION;
        
        
        
        SELECT update_date INTO v_update_date
        FROM char_advertisement
        WHERE char_idx = p_CharID AND ad_idx = p_AdID;
        IF 0 < FOUND_ROWS() THEN
			IF DATEDIFF(now(), v_update_date) <= 0 THEN
				SET v_result = 109;	
				LEAVE root;				
            END IF;
        END IF;
        
		
		
		
		INSERT char_advertisement (char_idx, ad_idx, update_date)
							VALUES (p_CharID, p_AdID, current_timestamp())
		ON DUPLICATE KEY UPDATE update_date = current_timestamp();
        
        IF ROW_COUNT() = 0 THEN
			SET v_result = 101;	
            LEAVE root;
        END IF;

		
		IF 0 < p_RewardID THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'View ads', 0, 0, v_posttype, 0, 0, ADDDATE(NOW(), 1), NOW(), p_RewardType, p_RewardID, p_RewardValue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 102;	
				LEAVE root;
			END IF;	
			
            SET v_postIdx := LAST_INSERT_ID();  
		END IF;

	END;

	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	SELECT v_result, v_postIdx;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charapplyfriend_cancel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charapplyfriend_cancel`(
	IN _charidx 			BIGINT
,	IN _friend_charidx	 	BIGINT
)
BEGIN
	DECLARE v_target_useridx 		BIGINT DEFAULT 0;
	declare result int default 0;
	DELETE FROM char_apply_friend WHERE `char_idx` = _friend_charidx AND `friend_char_idx` = _charidx;
	IF ROW_COUNT() <= 0 THEN 
		SET result = 18020;
	END IF;
    
    -- RDT_APPLY_FRIEND = 4,		// 친구 신청
    SELECT user_idx INTO v_target_useridx FROM `char_info` WHERE `char_idx` = _friend_charidx;
	IF 0 < FOUND_ROWS() THEN 
		DELETE FROM user_reddot WHERE user_idx = v_target_useridx AND char_idx  = _friend_charidx AND type_id = 4 AND element_value = _charidx;
	END IF;
	
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbookmark_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbookmark_list`(
	IN	_charid 		BIGINT
,	IN	_category_num		TINYINT
)
    COMMENT '즐겨찾기 목록'
BEGIN

	SELECT element_id
    FROM char_bookmark
    WHERE char_idx = _charid AND category_num = _category_num;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbookmark_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbookmark_update`(
	IN	_charid 		BIGINT
,	IN	_category_num		TINYINT
,	IN  id_array VARCHAR(4096)
)
    COMMENT '즐겨찾기 업데이트'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    # Status
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id INT;
    DECLARE v_status_value INT;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
    root:
    BEGIN
    
		START TRANSACTION;
        
        subroot:
        BEGIN    
			DELETE FROM char_bookmark WHERE char_idx = _charid and category_num = _category_num;
            
            IF 0 = LENGTH(id_array) THEN
				LEAVE subroot;
			END IF;	
            
        -- Status begin
			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_status_id := CAST(current_id as unsigned);
                -- SET v_status_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    -- IF 0 < v_status_id AND 0 < v_status_value THEN
                IF 0 < v_status_id THEN
					INSERT INTO char_bookmark (char_idx, category_num, element_id)
							VALUES (_charid, _category_num, v_status_id)
						ON DUPLICATE KEY UPDATE category_num = _category_num, element_id = v_status_id;
												
					IF 0 = row_count() THEN
						SET v_result = 119;	
                        LEAVE subroot;
					END IF;	
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- Status End
		END;
    
		IF v_result <> 0 THEN
			ROLLBACK;
		ELSE
			COMMIT;
		END IF;
	
    END;

	SELECT v_result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbuffspecial_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbuffspecial_insert`( 
	IN	p_CharID	 		BIGINT
,	IN 	p_BuffID	 		INT		
,	IN 	p_BuffValue			INT		
,	IN 	p_BuffAffectTime 	INT 	
,	IN 	p_BuffTime 			INT		
,	IN 	p_BuffGroup			INT
,	IN 	p_SubType			INT 	
,	IN 	p_ContentType		INT 	
,	IN 	p_ContentId			INT 	
)
    COMMENT '특별 버프 저장하기'
BEGIN
	DECLARE v_result 	INT DEFAULT 0;
    
   IF v_result = 0 THEN
		INSERT INTO char_buff_special (char_idx,  buff_id, buff_value, buff_affect_time, buff_expire_time, group_id,sub_type,content_type,content_id)
							VALUES (p_CharID, p_BuffID, p_BuffValue, DATE_ADD(NOW(), INTERVAL p_BuffAffectTime second), DATE_ADD(NOW(), INTERVAL p_BuffTime second), p_BuffGroup, p_SubType,p_ContentType,p_ContentId)
		ON DUPLICATE KEY UPDATE buff_value = p_BuffValue, buff_affect_time = DATE_ADD(NOW(), INTERVAL p_BuffAffectTime second)
								, buff_expire_time = DATE_ADD(NOW(), INTERVAL p_BuffTime second)
                                , content_id = p_ContentId;
                                
		IF ROW_COUNT() = 0 THEN
			SET v_result = 101;	
		END IF;   
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbuff_death_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbuff_death_delete`( 
	IN	_charidx 	BIGINT
)
    COMMENT '캐릭터 버프 삭제. '
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	DELETE FROM char_buff WHERE char_idx = _charidx AND flag_death = 1;

    SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbuff_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbuff_delete`( 
	IN	_charidx 	BIGINT    
,	IN	_buffid1 	INT
,	IN	_buffid2 	INT
,	IN	_buffid3 	INT
,	IN	_buffid4 	INT
,	IN	_buffid5 	INT
,	IN	_buffid6 	INT
,	IN	_buffid7 	INT
,	IN	_buffid8 	INT
,	IN	_buffid9 	INT
,	IN	_buffid10 	INT
)
    COMMENT '캐릭터 버프 삭제. '
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	DELETE FROM char_buff WHERE char_idx = _charidx AND buff_id IN (_buffid1, _buffid2, _buffid3, _buffid4, _buffid5, _buffid6, _buffid7, _buffid8, _buffid9, _buffid10);

    SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbuff_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbuff_insert`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
,	IN 	_buffid 		INT			
,	IN 	_buffvalue1		INT			
,	IN 	_buffvalue2		INT			
,	IN 	_buffvalue3		INT			
,	IN 	_buffvalue4		INT			
,	IN 	_buffvalue5		INT			
,	IN 	_buffvalue6		INT			
,	IN 	_buffvalue7		INT			
,	IN 	_buffvalue8		INT			
,	IN 	_buffvalue9		INT			
,	IN 	_buffvalue10	INT			
,	IN 	_bufftime 		INT
,	IN 	_contentid 		INT
,	IN 	_flagview 		TINYINT
,	IN 	_flagdeath 		TINYINT
,	IN _contenttype		INT
,	IN _subtype			INT
)
    COMMENT '버프 저장하기'
BEGIN
	DECLARE v_result 	INT DEFAULT 0;
    
	
	INSERT INTO char_buff (char_idx,  buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_time, remain_time, content_id, flag_view, flag_death, content_type, subtype)
						VALUES (_charid, _buffid, _buffvalue1, _buffvalue2, _buffvalue3, _buffvalue4, _buffvalue5, _buffvalue6, _buffvalue7, _buffvalue8, _buffvalue9, _buffvalue10, DATE_ADD(NOW(), INTERVAL _bufftime second), _bufftime, _contentid, _flagview, _flagdeath,_contenttype,_subtype)
	ON DUPLICATE KEY UPDATE char_idx = _charid, buff_id = _buffid, buff_value = _buffvalue1, buff_value_1 = _buffvalue2, buff_value_2 = _buffvalue3, buff_value_3 = _buffvalue4, buff_value_4 = _buffvalue5, 
							buff_value_5 = _buffvalue6, buff_value_6 = _buffvalue7, buff_value_7 = _buffvalue8, buff_value_8 = _buffvalue9, buff_value_9 = _buffvalue10, 
							 buff_time = DATE_ADD(NOW(), INTERVAL _bufftime second)
                             , remain_time = _bufftime, cause_id = _causeid, flag_view = _flagview, flag_death = _flagdeath;
    
	IF ROW_COUNT() = 0 THEN
		SET v_result = 1132;	
	END IF;   
    
    SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charbuff_insert_reward_rank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charbuff_insert_reward_rank`( 
	IN p_RewardBuffID			INT		
,	IN p_RewardBuffValue		INT 	
,	IN p_RewardID				INT		
,	IN p_RewardValue			INT		
,	IN p_MailPathID				INT		

,	IN p_UserID1 				BIGINT,	IN p_UserID2 				BIGINT,	IN p_UserID3 				BIGINT
,	IN p_UserID4 				BIGINT,	IN p_UserID5 				BIGINT,	IN p_UserID6 				BIGINT
,	IN p_UserID7 				BIGINT,	IN p_UserID8 				BIGINT,	IN p_UserID9 				BIGINT
,	IN p_UserID10 				BIGINT,	IN p_UserID11 				BIGINT,	IN p_UserID12 				BIGINT
,	IN p_UserID13 				BIGINT,	IN p_UserID14 				BIGINT,	IN p_UserID15 				BIGINT
,	IN p_UserID16 				BIGINT,	IN p_UserID17 				BIGINT,	IN p_UserID18 				BIGINT
,	IN p_UserID19 				BIGINT,	IN p_UserID20 				BIGINT,	IN p_UserID21 				BIGINT
,	IN p_UserID22 				BIGINT,	IN p_UserID23 				BIGINT,	IN p_UserID24 				BIGINT
,	IN p_UserID25 				BIGINT,	IN p_UserID26 				BIGINT,	IN p_UserID27 				BIGINT
,	IN p_UserID28 				BIGINT,	IN p_UserID29 				BIGINT,	IN p_UserID30 				BIGINT
,	IN p_UserID31 				BIGINT,	IN p_UserID32 				BIGINT,	IN p_UserID33 				BIGINT
,	IN p_UserID34 				BIGINT,	IN p_UserID35 				BIGINT,	IN p_UserID36 				BIGINT
,	IN p_UserID37 				BIGINT,	IN p_UserID38 				BIGINT,	IN p_UserID39 				BIGINT
,	IN p_UserID40 				BIGINT,	IN p_UserID41 				BIGINT,	IN p_UserID42 				BIGINT
,	IN p_UserID43 				BIGINT,	IN p_UserID44 				BIGINT,	IN p_UserID45 				BIGINT
,	IN p_UserID46 				BIGINT,	IN p_UserID47 				BIGINT,	IN p_UserID48 				BIGINT
,	IN p_UserID49 				BIGINT,	IN p_UserID50 				BIGINT
)
    COMMENT '랭킹 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    DECLARE v_buff_time		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_buff_time;
	END;
	
    
   	START TRANSACTION;	
    
    root:
    BEGIN
		
        
        IF 0 < p_RewardBuffID THEN
			
			
            select TIMESTAMPDIFF(second, now(), DATE_ADD(NOW(), INTERVAL 1 day)) INTO v_buff_time;
			
			INSERT INTO char_buff (char_idx, buff_id, buff_value, buff_time, remain_time, group_id)
            SELECT char_idx, p_RewardBuffID, p_RewardBuffValue, DATE_ADD(NOW(), INTERVAL 1 day), v_buff_time, 0
			FROM char_info 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50)
			
            ON DUPLICATE KEY UPDATE buff_value = p_RewardBuffValue, buff_time = DATE_ADD(NOW(), INTERVAL 1 day), remain_time = v_buff_time, group_id = 0;
            
        END IF;
        
        
        IF 0 < p_RewardID THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, 0, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), 0, p_RewardID, p_RewardValue
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result, v_buff_time;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charcostumesetting_update_show` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charcostumesetting_update_show`(
	IN _charidx 	BIGINT
,	IN _slotid 		TINYINT
,	IN _show 		TINYINT
)
    COMMENT '코스튬 보이기 설정 변경 '
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN	
		INSERT INTO char_costume_setting(char_idx, slot_id, costume_show)
        VALUES (_charidx, _slotid, _show)
        ON DUPLICATE KEY UPDATE costume_show = _show;
		
		
        IF ROW_COUNT() <= 0 THEN 
			SET _result = 1000;
			LEAVE root;
        END IF;
	END;
	
	
	
	if 0 = _result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charfreebattle_update_count_and_point` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charfreebattle_update_count_and_point`( 
	IN _userid			BIGINT
,	IN _charid			BIGINT
,	IN _kill_death		TINYINT   
,	IN _count			INT   
,	IN _score			INT   
,	IN _next_init_time 	BIGINT
)
    COMMENT '난투전 카운트 및 포인트 정보 수정.'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		
        SELECT result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
    
		IF _kill_death = 1 THEN 
			INSERT INTO char_free_battle(char_idx, score, kill_count, death_count, next_init_time) 
			VALUE(_charid, _score, _count, 0, FROM_UNIXTIME(_next_init_time))
            ON DUPLICATE KEY UPDATE score = score + _score, kill_count = kill_count + _count;
			
			
			IF ROW_COUNT() <= 0 THEN
				SET result = 1000;
				LEAVE root;
			END IF;
            
        ELSEIF _kill_death = 2 THEN 
			INSERT INTO char_free_battle(char_idx, score, kill_count, death_count, next_init_time) 
			VALUE(_charid, 0, 0, _count, FROM_UNIXTIME(_next_init_time))
            ON DUPLICATE KEY UPDATE score = (CASE WHEN score < _score THEN 0 ELSE (score - _score) END), death_count = death_count + _count;
			
			
			
			IF ROW_COUNT() <= 0 THEN
				SET result = 1001;
				LEAVE root;
			END IF;	
            
		ELSEIF _kill_death = 3 THEN 
			INSERT INTO char_free_battle(char_idx, score, kill_count, death_count, next_init_time) 
			VALUE(_charid, _score, 0, 0, FROM_UNIXTIME(_next_init_time))
            ON DUPLICATE KEY UPDATE score = score + _score;
			
			IF ROW_COUNT() <= 0 THEN
				SET result = 1002;
				LEAVE root;
			END IF;
            
		ELSE       
			SET result = 1003;
			LEAVE root;
        END IF;
        
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
    
    SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charfreebattle_update_reset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charfreebattle_update_reset`( 
	IN _charid 			BIGINT
,	IN _nextInitTime	BIGINT   
)
    COMMENT '난투전 정보 초기화'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE char_free_battle SET score = 0, kill_count = 0, death_count = 0, next_init_time = FROM_UNIXTIME(_nextInitTime) WHERE char_idx = _charid;
        
        
        UPDATE char_free_battle_reward SET getreward = 0, next_init_time = FROM_UNIXTIME(_nextInitTime) WHERE char_idx = _charid;
        
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_deleted_move` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_deleted_move`(
	IN	_userid 			BIGINT
)
    COMMENT '캐릭터 삭제.. 실제 삭제는 후일에..'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
    DECLARE v_deleted_date 	DATETIME DEFAULT '2024-11-11 00:00:00';
    DECLARE v_now_date 	DATETIME DEFAULT NOW();
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		DROP TEMPORARY TABLE IF EXISTS tbl_temp_deleted_char;
		-- SELECT _result;
	END;
    
	START TRANSACTION;
	root:
	BEGIN
    
		CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_deleted_char(char_idx BIGINT);
        
        DELETE FROM tbl_temp_deleted_char;
		
		INSERT INTO tbl_temp_deleted_char 
			SELECT char_idx FROM char_info WHERE user_idx = _userid 
											AND v_deleted_date < deleted_date
                                            AND NOW() > deleted_date; -- AND NOW() > DATE_ADD(deleted_date, INTERVAL 9 DAY);
                                            
		
        INSERT INTO char_info_deleted (`char_idx`,`user_idx`,`char_type`,`char_gold`,`char_exp`,`char_exp_high`,`char_hp`,`char_semp`,
						`char_stat_point`,`char_skill_point`,`char_buy_skill_point`,`char_raid_ticket`,`char_pvp_ticket`,`char_daily_ticket`,
						`max_mmobag_size`,`memorial_fragment`,`pre_region`,`pre_region_pos_x`,`pre_region_pos_z`,`last_base_region`,`last_region`,
						`region_pos_x`,`region_pos_z`,`guild_point`, `guild_donation_count`, `guild_donation_last_update`, `current_stage`,`current_trial`,`max_trial`,
						`annihil_grade`,`defence_grade`,`annihil_stage`,`defence_stage`,`annihil_count`,`defence_count`,`annihil_time`,`defence_time`,
						`use_ticket_time`,`max_stage`,`bag_open_count`,`bag_open_time`,`max_inven_size`,`char_mileage`,`char_equip_num`,`battle_power`,
						`reg_date`,`skill_gauge1`,`skill_gauge2`,`skill_gauge3`,`skill_gauge4`,`skill_gauge5`,`transform_gauge`,`char_mine_exp`,
						`job_step`,`spirit_marble`,`equip_avatarid`,`show_avatarid`,`equip_petid`,`show_petid`,`equip_vehicleid`,`show_vehicleid`,
						`pk_mode`,`pk_state`,`pk_point`,`costume_point`,`lost_exp_restore_free`,`stat_reset_count`,`nickname`,`disassemble_option`,
						`is_logon`,`last_logoff_date`,`deleted_date`)
			SELECT char_idx,user_idx,char_type,char_gold,char_exp,char_exp_high,char_hp,char_semp,
					char_stat_point,char_skill_point,char_buy_skill_point,char_raid_ticket,char_pvp_ticket,char_daily_ticket,
					max_mmobag_size,memorial_fragment,pre_region,pre_region_pos_x,pre_region_pos_z,last_base_region,last_region,
					region_pos_x,region_pos_z,guild_point, guild_donation_count, guild_donation_last_update,current_stage,current_trial,max_trial,
					annihil_grade,defence_grade,annihil_stage,defence_stage,annihil_count,defence_count,annihil_time,defence_time,
					use_ticket_time,max_stage,bag_open_count,bag_open_time,max_inven_size,char_mileage,char_equip_num,battle_power,
					reg_date,skill_gauge1,skill_gauge2,skill_gauge3,skill_gauge4,skill_gauge5,transform_gauge,char_mine_exp,
					job_step,spirit_marble,equip_avatarid,show_avatarid,equip_petid,show_petid,equip_vehicleid,show_vehicleid,
                    pk_mode,pk_state,pk_point,costume_point,lost_exp_restore_free,stat_reset_count,nickname,disassemble_option,
					is_logon,last_logoff_date,deleted_date
				FROM char_info WHERE user_idx = _userid AND char_idx IN (SELECT char_idx FROM tbl_temp_deleted_char);
		
        
		DELETE FROM char_info WHERE user_idx = _userid AND char_idx IN (SELECT char_idx FROM tbl_temp_deleted_char);
        
	END;    
    
    -- IF _result != 0 THEN
	-- 	ROLLBACK;
	-- ELSE
		COMMIT;
	-- END IF;
    
    DROP TEMPORARY TABLE IF EXISTS tbl_temp_deleted_char;
    
    -- SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_delete_exp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_delete_exp`( 
	IN p_UserID 			BIGINT
,	IN p_CharID 			BIGINT
,	IN p_DelExp 			BIGINT
,	IN p_RestoreCostGold	INT
,	IN p_RestoreCostCash	INT
,	IN p_RestorableTimeS	INT

,	IN	p_ItemIdx1			BIGINT
,	IN	p_ItemIdx2			BIGINT
,	IN	p_ItemIdx3			BIGINT
,	IN 	p_ExpireTime		INT
)
    COMMENT '캐릭터 사망으로 경험치 손실'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE v_final_exp		BIGINT DEFAULT 0;
    -- DECLARE v_final_lostexp	BIGINT DEFAULT 0;
	-- DECLARE v_lostexp		BIGINT DEFAULT 0;
	DECLARE v_lostexp_restorefree	TINYINT DEFAULT 0;
    DECLARE v_lost_exp_dbIndex		BIGINT DEFAULT 0;
    
    DECLARE v_DLRT					DATETIME;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_exp, v_lostexp_restorefree, v_lost_exp_dbIndex;
	END;	    
    
    root:
	BEGIN
    
		SET v_DLRT = fn_Get_DateLineReferenceTime();
        
		-- item
        if 0 < p_ItemIdx1 then
			CALL sp_mmo_notrans_charinvenequiprestorebox_insert(p_CharID, p_ItemIdx1, p_ExpireTime, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        if 0 < p_ItemIdx2 then
			CALL sp_mmo_notrans_charinvenequiprestorebox_insert(p_CharID, p_ItemIdx2, p_ExpireTime, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        if 0 < p_ItemIdx3 then
			CALL sp_mmo_notrans_charinvenequiprestorebox_insert(p_CharID, p_ItemIdx3, p_ExpireTime, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
    
		-- exp
		-- `restored_type` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '복구 유형(0:무료, 1:골드, 2:캐쉬, 3:아이템)',
		-- `restored_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '복구된 시간',
    
		SELECT COUNT(1) INTO v_lostexp_restorefree FROM char_lost_exp WHERE char_idx = p_CharID AND restored_type = 0 AND restored_time IS NOT NULL AND v_DLRT < restored_time;
    
		INSERT INTO char_lost_exp (char_idx, lost_exp, end_time, need_gold, need_cash)
				VALUES (p_CharID, p_DelExp, DATE_ADD(NOW(), INTERVAL p_RestorableTimeS second), p_RestoreCostGold, p_RestoreCostCash);
             
		IF ROW_COUNT() = 0 THEN
			SET v_result = 6025;
			LEAVE root;
		END IF;
            
		SELECT LAST_INSERT_ID() INTO v_lost_exp_dbIndex;
		
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp - (@del_exp := IF(char_exp > p_DelExp, p_DelExp, char_exp)))
		WHERE char_idx = p_CharID;
		IF ROW_COUNT() = 0 THEN
			SET v_result = 6026;	
		    LEAVE root;
		END IF;
        
        SET v_final_exp = @final_exp;

	END;
    
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_exp, v_lostexp_restorefree, v_lost_exp_dbIndex;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_delete_gold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_delete_gold`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_decgold		BIGINT
)
    COMMENT '골드 삭감'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    DECLARE v_final_gold 	BIGINT DEFAULT 0;
   
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_gold; 
	END;    
    
	START TRANSACTION;
    
    root:
    BEGIN
		
        IF _decgold < 0 THEN
			SET v_result = 6051;	
			LEAVE root;
        END IF;
        
		CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _decgold, v_final_gold, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
    
    END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
    
	SELECT v_result, v_final_gold; 
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_delete_gold_auction_reregister` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_delete_gold_auction_reregister`(
	IN	p_UserID		BIGINT
,	IN	p_CharID		BIGINT
,	IN	p_DecGoldCost	BIGINT	
,	IN	p_AuctionID		BIGINT
,	IN	p_RegistDuration	INT
)
    COMMENT '골드 삭감'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    DECLARE v_final_gold 	BIGINT DEFAULT 0;
    DECLARE v_expire_date 	DATETIME DEFAULT now();
   
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_gold, UNIX_TIMESTAMP(v_expire_date) AS v_expire_date;
	END;    
    
	START TRANSACTION;
    
    root:
    BEGIN
		
		
        IF p_DecGoldCost <= 0 OR p_RegistDuration <= 0 THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;
        
		
		CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DecGoldCost, v_final_gold, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
		
        SET v_expire_date = date_add(now(), interval + p_RegistDuration day);
		
        UPDATE tbl_auction_items
        SET fld_expire_date = v_expire_date
        WHERE fld_user_idx = p_UserID AND fld_index = p_AuctionID;
                                    
		IF 0 = ROW_COUNT() THEN
			SET v_result = 102;	
			LEAVE root;			
		END IF;			
    
    END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_gold, UNIX_TIMESTAMP(v_expire_date) AS v_expire_date;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_del_cancel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_del_cancel`(
	IN	_userid 			BIGINT
,	IN	_charid 			BIGINT
)
    COMMENT '캐릭터 삭제 취소'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
    DECLARE _defaultdate 	DATETIME DEFAULT '2000-01-01 00:00:00';
    DECLARE v_deleted_date 	DATETIME DEFAULT '2000-01-01 00:00:00';
    
    DECLARE v_userIdx 	BIGINT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	START TRANSACTION;
	root:
	BEGIN
    
		SELECT user_idx, deleted_date INTO v_userIdx, v_deleted_date FROM char_info WHERE char_idx = _charid;
        
		IF 0 = ROW_COUNT() OR _userid <> v_userIdx THEN
			SET _result = 6033;
			LEAVE root;
        END IF;
        
        IF v_deleted_date IS NULL OR v_deleted_date = _defaultdate THEN
			SET _result = 6037;
			LEAVE root;
        END IF;
        
        UPDATE char_info SET deleted_date = _defaultdate WHERE char_idx = _charid;
        
        
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_increase_pkpoint_byassist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_increase_pkpoint_byassist`( 
	IN	_charid 			BIGINT,
    IN	_check_my_pkstate	TINYINT,		-- 1 인 경우(일방적 살인) 내 상태에 따라, 0인 경우 살인자인 상태이면 pkpoint 증가
    
	IN	_inc_pkpoint1		INT,			-- LAWFUL
    IN	_inc_pkpoint2		INT,			-- NEUTRAL
    IN	_inc_pkpoint3		INT,			-- CHAOTIC
	-- IN	_pkstate	 		TINYINT,
    IN	_max_pkpoint		INT,
    -- IN	_min_pkpoint		INT,
    
	IN	_history_flag		TINYINT,		-- 1 인 경우에만 history 추가.
    
    IN 	p_pPKCharIdx		BIGINT,
    IN	p_pkNick			VARCHAR(30),
	IN	p_pkGuildName		VARCHAR(50)
)
    COMMENT 'pk 포인트 누적(어시스트) 및 pkHistory 추가.'
BEGIN
    DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_pkstate			TINYINT DEFAULT 0;
    DECLARE v_final_pkpoint			INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_final_pkpoint;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN
		SELECT pk_point, pk_state INTO v_final_pkpoint, v_pkstate FROM char_info WHERE char_idx = _charid;
        IF FOUND_ROWS() = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
        
        IF 0 < _check_my_pkstate THEN	-- 상태에 따라 pkpoint 증가
		BEGIN
			IF 2 < v_pkstate THEN
            BEGIN
				IF _max_pkpoint < v_final_pkpoint + _inc_pkpoint3 THEN
				BEGIN
					UPDATE char_info
					SET pk_point = _max_pkpoint -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = _max_pkpoint;
				END;
				ELSE
                BEGIN
					UPDATE char_info
					SET pk_point = (@pkpoint := pk_point + _inc_pkpoint3) -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = @pkpoint;
				END;
				END IF;
                
                IF 0 < _history_flag THEN -- pk_history
					INSERT INTO char_pk_history (char_idx, pk_type, pk_char_idx, pk_nick, pk_guildname)
						VALUES (_charid, 2, p_pPKCharIdx, p_pkNick, p_pkGuildName);
				END IF;
			END;
            ELSEIF 2 = v_pkstate THEN -- 
            BEGIN
				IF _max_pkpoint < v_final_pkpoint + _inc_pkpoint2 THEN
				BEGIN
					UPDATE char_info
					SET pk_point = _max_pkpoint -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = _max_pkpoint;
				END;
				ELSE
                BEGIN
					UPDATE char_info
					SET pk_point = (@pkpoint := pk_point + _inc_pkpoint2) -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = @pkpoint;
				END;
				END IF;
                
                IF 0 < _history_flag THEN -- pk_history
					INSERT INTO char_pk_history (char_idx, pk_type, pk_char_idx, pk_nick, pk_guildname)
						VALUES (_charid, 2, p_pPKCharIdx, p_pkNick, p_pkGuildName);
				END IF;
			END;
            ELSE -- IF 1 <= v_pkstate THEN -- 
            BEGIN
				IF _max_pkpoint < v_final_pkpoint + _inc_pkpoint1 THEN
				BEGIN
					UPDATE char_info
					SET pk_point = _max_pkpoint -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = _max_pkpoint;
				END;
				ELSE
                BEGIN
					UPDATE char_info
					SET pk_point = (@pkpoint := pk_point + _inc_pkpoint1) -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = @pkpoint;
				END;
				END IF;
                
                IF 0 < _history_flag THEN -- pk_history
					INSERT INTO char_pk_history (char_idx, pk_type, pk_char_idx, pk_nick, pk_guildname)
						VALUES (_charid, 2, p_pPKCharIdx, p_pkNick, p_pkGuildName);
				END IF;
			END;
			END IF;
        END;
        ELSE -- 
        BEGIN
			IF 2 < v_pkstate THEN
            BEGIN
				IF _max_pkpoint < v_final_pkpoint + _inc_pkpoint3 THEN
				BEGIN
					UPDATE char_info
					SET pk_point = _max_pkpoint -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = _max_pkpoint;
				END;
				ELSE
                BEGIN
					UPDATE char_info
					SET pk_point = (@pkpoint := pk_point + _inc_pkpoint3) -- , pk_state = _pkstate
					WHERE char_idx = _charid;
					
					SET v_final_pkpoint = @pkpoint;
				END;
				END IF;
                
                IF 0 < _history_flag THEN -- pk_history
					INSERT INTO char_pk_history (char_idx, pk_type, pk_char_idx, pk_nick, pk_guildname)
						VALUES (_charid, 2, p_pPKCharIdx, p_pkNick, p_pkGuildName);
				END IF;
			END;
			END IF;
		END;
        END IF;
        
	END;
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT v_result, v_final_pkpoint;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_expgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_expgold`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT
)
    COMMENT '캐릭터 경험치/금전 추가'
BEGIN
	DECLARE v_result 		INT DEFAULT 0;	    
	DECLARE v_final_exp		BIGINT DEFAULT 0;
    DECLARE v_final_gold	BIGINT DEFAULT 0;
    
    root:
	BEGIN    
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp + _addexp), 
			char_gold = (@final_gold := char_gold + _addgold),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = _charid AND user_idx = _userid;
		IF ROW_COUNT() = 0 THEN
				SET v_result = 101;	
		    LEAVE root;
		END IF;
        
        SET v_final_exp = @final_exp;
        SET v_final_gold = @final_gold;
			
	END;
    
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_exp, v_final_gold;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_expgoldpkbadge` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_expgoldpkbadge`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT
,	IN _addpkbadge 		INT
)
    COMMENT '캐릭터 경험치/금전/pk배찌 추가'
BEGIN
	DECLARE v_result 		INT DEFAULT 0;	    
	DECLARE v_final_exp		BIGINT DEFAULT 0;
    DECLARE v_final_gold	BIGINT DEFAULT 0;
	DECLARE v_final_pkbadge INT DEFAULT 0;
    
    root:
	BEGIN    
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp + _addexp), 
			char_gold = (@final_gold := char_gold + _addgold),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = _charid AND user_idx = _userid;
		IF ROW_COUNT() = 0 THEN
				SET v_result = 101;	
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_insert_pkbadge(_userid, _addpkbadge, v_final_pkbadge, v_result);
        IF result != 0 THEN 
		    LEAVE root;
        END IF;
			        
        SET v_final_exp = @final_exp;
        SET v_final_gold = @final_gold;
			
	END;
    
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_exp, v_final_gold, v_final_pkbadge;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_expgoldpkgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_expgoldpkgold`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT
,	IN _addpkgold 		INT
)
    COMMENT '캐릭터 경험치/금전/pk골드 추가'
BEGIN
	DECLARE v_result 		INT DEFAULT 0;	    
	DECLARE v_final_exp		BIGINT DEFAULT 0;
    DECLARE v_final_gold	BIGINT DEFAULT 0;
	DECLARE v_final_pkgold 	INT DEFAULT 0;
    
    root:
	BEGIN    
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp + _addexp), 
			char_gold = (@final_gold := char_gold + _addgold),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = _charid AND user_idx = _userid;
		IF ROW_COUNT() = 0 THEN
				SET v_result = 101;	
		    LEAVE root;
		END IF;
        
        IF _addpkgold > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_pkgold(_userid, _addpkgold, v_final_pkgold, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;
        END IF;
			        
        SET v_final_exp = @final_exp;
        SET v_final_gold = @final_gold;
			
	END;
    
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_exp, v_final_gold, v_final_pkgold;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_expgoldpkgold_cashb` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_expgoldpkgold_cashb`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT
,	IN _addpkgold 		INT
,	IN _addcashb		INT
)
    COMMENT '캐릭터 경험치/금전/pk골드 추가'
BEGIN
	DECLARE v_result 		INT DEFAULT 0;	    
	DECLARE v_final_exp		BIGINT DEFAULT 0;
    DECLARE v_final_gold	BIGINT DEFAULT 0;
	DECLARE v_final_pkgold 	INT DEFAULT 0;
    DECLARE v_final_cashB 	BIGINT DEFAULT 0;
    
    root:
	BEGIN    
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp + _addexp), 
			char_gold = (@final_gold := char_gold + _addgold),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = _charid AND user_idx = _userid;
		IF ROW_COUNT() = 0 THEN
				SET v_result = 101;	
		    LEAVE root;
		END IF;
        
        SET v_final_exp = @final_exp;
        SET v_final_gold = @final_gold;
        
        
        IF _addpkgold > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_pkgold(_userid, _addpkgold, v_final_pkgold, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;
        END IF;
       
        
        IF _addcashb > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_cashB(_userid, _addcashb, v_final_cashB, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;
        END IF;        
			
	END;
    
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_exp, v_final_gold, v_final_pkgold, v_final_cashB;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_gold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_gold`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_incgold		BIGINT
)
    COMMENT '골드 추가'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    DECLARE v_final_gold 	BIGINT DEFAULT 0;
   
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_gold; 
	END;    
    
	START TRANSACTION;
    
    root:
    BEGIN
		
        IF _incgold <= 0 THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;
        
		CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _incgold, v_final_gold, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
    
    END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
    
	SELECT v_result, v_final_gold; 
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_mfragment` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_mfragment`( 
	IN	_userid 		BIGINT, 
	IN	_charid 		BIGINT, 
	IN	_addvalue 		INT
)
    COMMENT '기억의 파편 지급'
BEGIN
    DECLARE result INT;
    
    SET result = 0;
    
	UPDATE char_info
	SET memorial_fragment = memorial_fragment + _addvalue
	WHERE char_idx = _charid AND user_idx = _userid;
	
	if 0 = row_count() THEN
		SET result = 101;
	END IF;
		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_monsterdrop_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_monsterdrop_one`( 
	IN _userid 					BIGINT
,	IN _charid 					BIGINT
,	IN _addexp 					INT
,	IN _addgold 				INT
,	IN _addpkgold 				INT
,	IN _addcashb				INT

,	IN _pAddGuildPoint			INT	
	
,	IN _addregion 				INT
,	IN _addcastlepoint			INT
,	IN _maxdailypoint			INT
,	IN _expiredate				BIGINT 

,	IN p_GuildID 			BIGINT
,	IN p_AddPoint 			BIGINT
,	IN _addspiritmarble			INT
,	IN	p_guildmaxexp		BIGINT
)
    COMMENT '캐릭터 경험치/금전/pk골드 추가'
BEGIN
	DECLARE v_errno 					INT 	DEFAULT 0;
	DECLARE v_result 					INT 	DEFAULT 0;	  
    
	DECLARE v_final_exp					BIGINT 	DEFAULT 0;
    DECLARE v_final_gold				BIGINT 	DEFAULT 0;
	DECLARE v_final_pkgold 				INT 	DEFAULT 0;
    DECLARE v_final_cashB				BIGINT 	DEFAULT 0;    
    DECLARE v_final_guildpoint			BIGINT 	DEFAULT 0;	
    DECLARE v_final_castletotalpoint 	INT 	DEFAULT 0;
    DECLARE v_final_castledailypoint 	INT 	DEFAULT 0;
    DECLARE v_total_point				BIGINT 	DEFAULT 0;
	DECLARE v_guild_result				INT 	DEFAULT 0;
    DECLARE v_final_spiritmarble		INT 	DEFAULT 0;
    
    DECLARE v_guild_idx 				BIGINT DEFAULT 0;
    DECLARE v_final_guild_contribution 		BIGINT DEFAULT 0;
    DECLARE v_final_my_contribution		BIGINT DEFAULT 0;
    DECLARE v_weekly_contribution 		INT DEFAULT 0;
    DECLARE v_last_play_date			DATETIME;
	
	DECLARE	v_montime					DATETIME;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_final_exp, v_final_gold, v_final_pkgold, v_final_cashB, 
			v_final_guildpoint, v_final_castletotalpoint, v_final_castledailypoint, v_total_point, v_final_spiritmarble
            , v_final_guild_contribution, v_final_my_contribution, v_weekly_contribution;
	END;
    
    
    root:
	BEGIN
    
		SELECT guild_idx, guild_contribution, weekly_contribution, last_play_date INTO v_guild_idx, v_final_my_contribution, v_weekly_contribution, v_last_play_date FROM guild_member WHERE char_idx = _charId;
        IF 0 < FOUND_ROWS() THEN
			-- weekly_contribution init
			SET v_montime = fn_Get_ThisWeekMonday5am();
			IF v_montime < current_timestamp() AND v_montime > v_last_play_date THEN
				SET v_weekly_contribution = 0;
			END IF;
		ELSE
			SET v_weekly_contribution = 0;
        END IF;
        -- 
    
		START TRANSACTION;
		
        IF 0 < _addexp OR 0 < _addgold THEN
			UPDATE char_info 
			SET char_exp = (@final_exp := char_exp + _addexp), 
				char_gold = (@final_gold := char_gold + _addgold),
				char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high),
				spirit_marble = (@final_spiritmarble := spirit_marble + _addspiritmarble)
			WHERE char_idx = _charid AND user_idx = _userid;
			
			IF ROW_COUNT() = 0 THEN
					SET v_result = 101;	
				LEAVE root;
			END IF;
            
			SET v_final_exp 		= @final_exp;
			SET v_final_gold 		= @final_gold;
            SET v_final_spiritmarble = @final_spiritmarble;
        END IF;
        
        -- 
        IF 0 < v_guild_idx AND 0 < _addexp THEN
			SET v_final_my_contribution = v_final_my_contribution + _addexp;
			SET v_weekly_contribution = v_weekly_contribution + _addexp;
            
            UPDATE guild_member SET guild_contribution = v_final_my_contribution, weekly_contribution = v_weekly_contribution, last_play_date = current_timestamp() WHERE guild_idx = v_guild_idx AND char_idx = _charid;
			IF row_count() <= 0 THEN
				SET v_result = 105;
				LEAVE root;	
			END IF;
			
			UPDATE guild SET exp = (
				CASE 
					WHEN (@guild_exp := exp + _addexp) > p_guildmaxexp THEN (@guild_exp := p_guildmaxexp) 
					ELSE @guild_exp 
				END
				) WHERE guild_idx = v_guild_idx;
			IF row_count() <= 0 THEN
				SET v_result = 106;
				LEAVE root;	
			END IF;
            
            SET v_final_guild_contribution = @guild_exp;
            -- SET v_final_my_contribution = @my_contiribution;
        END IF;
        -- 
        
        IF _addpkgold > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_pkgold(_userid, _addpkgold, v_final_pkgold, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;
        END IF;
        
        
        IF _addcashb > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addcashb, v_final_cashB, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;		
        END IF; 
        
        
        IF 0 < _pAddGuildPoint THEN
			UPDATE char_info
            SET guild_point = (@guild_point := guild_point + _pAddGuildPoint)
			WHERE char_idx = _charid;
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 111;	
				LEAVE root;
			END IF;
            
            SET v_final_guildpoint 	= @guild_point;
        END IF;
        
        
		IF _addregion > 0 AND _addcastlepoint > 0 THEN
			INSERT INTO user_castle(user_idx, region_code, total_point, daily_point, daily_reward, expire_date) 
            VALUES (_userid, _addregion, _addcastlepoint, _addcastlepoint, 0, FROM_UNIXTIME(_expiredate)) 
            
            ON DUPLICATE KEY UPDATE total_point = (@v_final_castletotalpoint := total_point + _addcastlepoint), daily_point = (@v_final_castledailypoint := daily_point + _addcastlepoint);
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 121;	
				LEAVE root;
			END IF;		
            
			SET v_final_castletotalpoint = @v_final_castletotalpoint;
            SET v_final_castledailypoint = @v_final_castledailypoint;
        END IF;
		
		
		IF _addregion > 0 AND _addgold > 0 THEN
			CALL gsp_mmo_guild_castle_update_monsterdrop_one(_addregion, p_GuildID, _addgold, p_AddPoint, v_total_point, v_guild_result);
		END IF;
		
	END;
    
    
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT v_result, v_final_exp, v_final_gold, v_final_pkgold, v_final_cashB, 
			v_final_guildpoint, v_final_castletotalpoint, v_final_castledailypoint, v_total_point, v_final_spiritmarble
            , v_final_guild_contribution, v_final_my_contribution, v_weekly_contribution;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_insert_wealth` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_insert_wealth`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		

,	IN	_add_gold			BIGINT		
,	IN	_add_cashgreen		BIGINT		
,	IN	_add_cashred		BIGINT		
,	IN	_add_mileage		BIGINT		
)
    COMMENT '상점 상품 구매 보상 재화 지급'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
	
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    DECLARE v_finalMileage			BIGINT DEFAULT 0;     
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0; 
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result, v_finalgold, v_finalcashA, v_finalcashB, v_finalMileage
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
	END;	
	
   	        
	START TRANSACTION;	
	
	root:
	BEGIN
		IF _add_gold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_insert_gold(_useridx, _charidx, _add_gold, v_finalgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
		IF _add_cashgreen > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_insert_cashA(_useridx, _add_cashgreen, v_finalcashA, v_result);
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
			
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
		END IF;
        
        IF _add_cashred > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_old, v_cashB_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_useridx, _add_cashred, v_finalcashB, v_result);
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	

			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_new, v_cashB_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;				
		END IF;
        
        IF _add_mileage > 0 THEN 			
            CALL sp_mmo_notrans_charinfo_insert_mileage(_useridx, _charidx, _add_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	SELECT v_result, v_finalgold, v_finalcashA, v_finalcashB, v_finalMileage
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
	 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_all`( 
	IN	_userid 	BIGINT
,	IN 	p_MaxPKCount		INT
,	IN 	p_PKHistoryKeepDay	INT
,	IN 	p_PKDefaultPoint	INT
)
    COMMENT '유저 대표 캐릭터 전체 정보'
BEGIN
	DECLARE char_id 				BIGINT DEFAULT 0;

    DECLARE v_delIdx		BIGINT DEFAULT 0;
	DECLARE v_DLRT					DATETIME;
    SET v_DLRT = fn_Get_DateLineReferenceTime();
    
	SELECT base_char_idx INTO char_id
	FROM userinfo 
	WHERE user_idx = _userId;
    
    UPDATE char_info SET is_logon = IF(char_idx = char_id, 1, 0), last_logoff_date =  IF(char_idx = char_id, now(), last_logoff_date)
	WHERE user_idx = _userId;
    
    -- 1:	// 캐릭터 기본 정보
	SELECT char_idx, nickname, cashA + cashA_free as cashA, cashB + cashB_free as cashB, pk_mode, pk_point, pk_state, char_type, 
			char_gold, char_exp, char_exp_high, char_hp, char_semp, char_stat_point, char_skill_point, 0 AS char_stamina, 0 AS char_max_stamina, char_raid_ticket, 
			max_mmobag_size, memorial_fragment, pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z, max_inven_size,
            bag_open_count, UNIX_TIMESTAMP(bag_open_time) AS bag_open_time, char_equip_num, char_buy_skill_point, char_mileage,             
			skill_gauge1, skill_gauge2, skill_gauge3, skill_gauge4, skill_gauge5, transform_gauge, guild_point, tutorial, char_mine_exp,
            guild_donation_count, UNIX_TIMESTAMP(guild_donation_last_update) AS guild_donation_last_update,
            awarehouse_buyslot, awarehouse_gold,
            annihil_grade, defence_grade, annihil_stage, defence_stage, max_trial, job_step, spirit_marble, costume_point,
            equip_avatarid, show_avatarid, equip_petid, show_petid, equip_vehicleid, show_vehicleid, equip_title_id,
            IF(last_login_date > v_DLRT OR last_login_date = '0000-00-00 00:00:00', true, false) AS new_day, visit_cnt, visit_cnt2,
            freebattle_season_reward, combat_season_reward,
            UNIX_TIMESTAMP(CA.last_logoff_date) AS last_logoff_date, nonstop_play_time,
            iap_qty, iap_amount, client_option_switch, disassemble_option,
			-- IF(0 <> DATEDIFF(lost_exp_time, NOW()), 0, lost_exp) as lost_exp, 
			-- IF(0 <> DATEDIFF(lost_exp_time, NOW()), 0, lost_exp_restore_free) as lost_exp_restore_free,
            stat_reset_count,
            wemix_ft_exchange_cnt, wemix_ft_exchange_decimal_cnt, UNIX_TIMESTAMP(wemix_ft_exchange_date) AS wemix_ft_exchange_date
	FROM userinfo C 
		INNER JOIN char_info CA	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = _userId;
    
    -- 2:	// 유저가 찍은 스탯 정보
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = char_id;
    
    
    -- 3: // 착용 장비 전체 목록
    SELECT C.item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, equip_slot, belong, identify, remove_lock, IFNULL(CA.nft_token_id, '') AS nft_token_id
    FROM char_inven_equip C
		LEFT JOIN char_inven_equip_nft CA	ON C.item_idx = CA.item_idx
    WHERE char_idx = char_id;
	
	-- 4:	// 착용장비 옵션
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = char_id; 
        
	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = char_id;
    
	-- 6:	// 착용장비 보석
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = char_id;
	
	-- 7:	// 스킬 정보
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = char_id;
	
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = char_id;
	
	
	SELECT item_idx, item_id, percent, life_time, ability_value, skill_id, belong
	FROM char_inven_skillbook
	WHERE char_idx = char_id;	
	
    
    
    SELECT item_idx, item_id 
	FROM char_inven_bag
    WHERE char_idx = char_id
	ORDER BY item_idx DESC;
	
	
	SELECT slot_0, slot_1, slot_2, slot_3, slot_4
	FROM char_inven_beads
	WHERE char_idx = char_id;
		
	
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = char_id AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = char_id AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
	
	-- 12:	// 퀘스트 정보(진행)
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date
	FROM char_quest_progress
	WHERE char_idx = char_id;
	
	
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = char_id AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = char_id AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
    -- 13:	// 퀘스트 정보(완료)
	SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date
	FROM char_quest_done
	WHERE char_idx = char_id;
	
	-- 14:	// 퀘스트 스크롤
	SELECT party_idx, quest_id, quest_value
	FROM char_quest_scroll
	WHERE (char_idx = char_id) or (user_idx = _userId and party_idx > 0);
    
    -- 15:	// 퀵슬롯 정보
	SELECT set_num, quick_use_type, is_skill_flag, is_auto_flag, item_id, slot_cooltime
	FROM char_quick_use
	WHERE char_idx = char_id;
    
	-- 16:	// 재료 아이템 정보
    SELECT item_type, item_id, item_value
    FROM char_inven_item
    WHERE char_idx = char_id;
    
	-- 17:	// waypoint
    SELECT waypoint_idx
    FROM char_waypoint
    WHERE char_idx = char_id;
    
	-- 18: // 친구 정보
	SELECT friend_char_idx, friend_db_sharding_idx, friend_nick, B.is_logon as is_logon, UNIX_TIMESTAMP(A.reg_date) as reg_date
	FROM `char_friend` AS A JOIN `char_info` AS B ON A.`char_idx` = B.`char_idx` 
	WHERE A.char_idx = char_id; -- order by reg_date desc;
	
	-- 19: // 친구 신청 받은 정보
	SELECT friend_char_idx, friend_db_sharding_idx, friend_nick, friend_char_type, friend_char_level, UNIX_TIMESTAMP(reg_date) as reg_date
	FROM `char_apply_friend` 
	WHERE char_idx = char_id; -- order by reg_date desc;
	
	-- 20: // 도감 정보 
	-- select book_type, item_id, level as book_level, value as book_value from char_monster_book where char_idx = char_id;
    select collect_type, collect_id, collect_order, item_id, `level`, 'value' from user_collect where user_idx = _userId;
	
	-- 21: // 몬스터 도감 정보
	SELECT collect_id, ability_order FROM user_monster_book WHERE user_idx = _userId;
    
    -- 22: // 버프 정보
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    , group_id, content_id, flag_view, flag_death, content_type, subtype FROM char_buff 
    WHERE char_idx = char_id AND 5 < remain_time; -- buff_time > now();
            
    
	SELECT ticket_id, ticket_value, UNIX_TIMESTAMP(ticket_use_time) as ticket_use_time FROM char_refilled_ticket
    WHERE char_idx = char_id;
    
    
	SELECT event_id, event_attend_id, event_type, day_count, UNIX_TIMESTAMP(last_date) as last_date, get_reward FROM user_event_attend
    WHERE user_idx = _userId;
    
    
	SELECT event_id, event_attend_mission_id, event_day, get_reward FROM user_event_attend_mission
    WHERE user_idx = _userId;
    
    
    SELECT event_id, mission_id, mission_value, get_reward, UNIX_TIMESTAMP(update_time) as update_time, UNIX_TIMESTAMP(expire_time) as expire_time FROM user_event_mission
    WHERE user_idx = _userId;
    
    -- 27: // PK 히스토리 정보
	BEGIN
	-- 	SELECT history_idx INTO v_delIdx
	-- 	FROM char_pk_history 
	-- 	WHERE char_idx = char_id
	-- 	ORDER BY history_idx DESC
	-- 	LIMIT p_MaxPKCount, 1;
		
		-- IF 0 < FOUND_ROWS() AND 0 < v_delIdx THEN
			DELETE FROM char_pk_history
			WHERE char_idx = char_id AND NOW() > DATE_ADD(regist_date, INTERVAL p_PKHistoryKeepDay DAY);
		-- END IF;
	END;
	SELECT history_idx, pk_type, pk_char_idx, pk_nick, pk_guildname, UNIX_TIMESTAMP(regist_date) as regist_date
	FROM char_pk_history 
    WHERE char_idx = char_id
    ORDER BY history_idx DESC LIMIT p_MaxPKCount;
    
    
	SELECT score, kill_count, death_count, UNIX_TIMESTAMP(next_init_time) as next_init_time FROM char_free_battle WHERE char_idx = char_id;

	
	SELECT rewardid, getreward, UNIX_TIMESTAMP(next_init_time) as next_init_time FROM char_free_battle_reward WHERE char_idx = char_id;
    
    -- 30: // 칭호 정보
	SELECT a.title_id, IFNULL(UNIX_TIMESTAMP(b.title_expiredate), 0) as title_expiredate
    FROM user_title a
		LEFT JOIN user_title_expire b ON a.title_id = b.title_id       
	WHERE a.user_idx = _userId AND (ISNULL(b.title_expiredate) OR UNIX_TIMESTAMP(now() < b.title_expiredate));

	-- 31: // 칭호 조건 정보
	SELECT title_id, condition_num, condition_value FROM user_title_condition WHERE user_idx = _userId;
    
	-- 32: // 구매 제한 구매 정보
    SELECT shop_id, buy_qty, UNIX_TIMESTAMP(last_buy_date) as last_buy_date, is_package FROM user_shop_purchase_limit WHERE user_idx = _userId AND char_idx IN (0, char_id);
    
    -- 33
    SELECT MAX(stage_id) as stage_id FROM char_stage_info WHERE char_idx = char_id and clear_grade != 0;
    
	
    SELECT MAX(stage_id) as stage_id FROM char_seal_stage WHERE char_idx = char_id and clear_grade != 0;
    
    
    SELECT region_code, total_point, daily_point, daily_reward, UNIX_TIMESTAMP(expire_date) as expire_date FROM user_castle WHERE user_idx = _userId;
    
    -- 36
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = char_id;
    
    -- 37 // 특별 버프
    SELECT buff_id, buff_value, UNIX_TIMESTAMP(buff_affect_time) as buff_affect_time, UNIX_TIMESTAMP(buff_expire_time) as buff_expire_time , sub_type ,group_id, content_type, content_id
    FROM char_buff_special 
    WHERE char_idx = char_id AND buff_expire_time > now();
    
    -- 38
    UPDATE char_dungeon_timelimit SET use_sec_time = 0 WHERE char_idx = char_id AND init_type = 1 AND update_time < v_DLRT;
    
    SELECT dungeon_id, init_type, use_sec_time, charged_sec_time FROM char_dungeon_timelimit
    WHERE char_idx = char_id; -- AND update_time > v_DLRT;
    
    
    SELECT ad_idx, UNIX_TIMESTAMP(update_date) as update_date
    FROM char_advertisement
    WHERE char_idx = char_id;
    
    -- 40: // 펫.
    SELECT pet_id, pet_level, pet_value FROM user_pet WHERE user_idx = _userId;
    
    -- 41: // 펫 합성 누적 실패.
    SELECT pet_grade, fail_count FROM user_pet_composite WHERE user_idx = _userId;
    
    -- 42: // 펫 확정 대기.
    SELECT pet_cp_idx, pet_id, change_count, UNIX_TIMESTAMP(end_date) AS end_date FROM user_pet_confirm_pending WHERE user_idx = _userId;
    
    -- 43: 경험치 복구 무료 사용 횟수
    DELETE FROM char_lost_exp WHERE char_idx = char_id AND ((restored_time is not null AND restored_time < v_DLRT) OR now() > end_time);
    SELECT COUNT(1) as lostexp_restorefree FROM char_lost_exp WHERE char_idx = char_id AND restored_type = 0 AND restored_time IS NOT NULL AND v_DLRT < restored_time;
   
    -- 44: // 친구 신청 보낸 정보
    SELECT A.char_idx, A.friend_db_sharding_idx, B.nickname as friend_nick, B.char_type as friend_char_type, B.char_exp, UNIX_TIMESTAMP(A.reg_date) as reg_date
    FROM `char_apply_friend` AS A 
		JOIN `char_info` AS B 
			ON A.`char_idx` = B.`char_idx` 
	WHERE friend_char_idx = char_id; -- order by reg_date desc;
    
    -- 45: // 경계대상 캐릭터 정보
    SELECT vigilance_char_idx, vigilance_db_sharding_idx, vigilance_nick, vigilance_char_type, B.is_logon as is_logon , UNIX_TIMESTAMP(B.last_logoff_date) as last_logoff_date -- , UNIX_TIMESTAMP(A.reg_date) as reg_date
	FROM `char_vigilance` AS A JOIN `char_info` AS B ON A.`vigilance_char_idx` = B.`char_idx` 
	WHERE A.char_idx = char_id; -- order by reg_date desc;
    
    -- 46: // 아이템 쿨타임 정보
    SELECT item_id, item_type, item_subtype, cooltime_ms FROM char_inven_cooltime WHERE char_idx = char_id;
    
    -- 47: // 배틀패스 정보
	-- BEGIN
			DELETE FROM user_battlepass WHERE user_idx = _userId AND expire_time < NOW();
	-- END;
    SELECT pass_id, total_point, recv_reward, recv_silver_reward, recv_gold_reward -- , UNIX_TIMESTAMP(reg_date, UNIX_TIMESTAMP(expire_time
    FROM user_battlepass WHERE user_idx = _userId; -- AND expire_time > NOW();

	-- 48: // 배틀패스 미션정보
    -- BEGIN
			DELETE FROM user_battlepass_mission WHERE user_idx = _userId AND expire_time < NOW();
	-- END;
	SELECT pass_id, mission_id, mission_value, UNIX_TIMESTAMP(expire_time) as expire_time, UNIX_TIMESTAMP(update_time) as update_time
	FROM user_battlepass_mission WHERE user_idx = _userId; -- AND expire_time > NOW();

	-- 49: 출석
    -- BEGIN
			DELETE FROM user_attendance WHERE user_idx = _userId AND expire_time < NOW();
	-- END;
    SELECT attendance_id, visit_count, UNIX_TIMESTAMP(expire_time) as expire_time, UNIX_TIMESTAMP(update_time) as update_time
	FROM user_attendance WHERE user_idx = _userId;

    -- 50: // 변신아바타.
    SELECT avatar_id, avatar_level, avatar_value FROM user_avatar WHERE user_idx = _userId;
    
    -- 51: // 변신아바타 합성 누적 실패.
    SELECT avatar_grade, fail_count FROM user_avatar_composite WHERE user_idx = _userId;
    
    -- 52: // 변신아바타 확정 대기.
    SELECT avatar_cp_idx, avatar_id, change_count, UNIX_TIMESTAMP(end_date) AS end_date FROM user_avatar_confirm_pending WHERE user_idx = _userId;
    
    -- 53: // 탈것.
    SELECT vehicle_id, vehicle_level, vehicle_value FROM user_vehicle WHERE user_idx = _userId;
    
    -- 54: // 탈것 합성 누적 실패.
    SELECT vehicle_grade, fail_count FROM user_vehicle_composite WHERE user_idx = _userId;
    
    -- 55: // 탈것 확정 대기.
    SELECT vehicle_cp_idx, vehicle_id, change_count, UNIX_TIMESTAMP(end_date) AS end_date FROM user_vehicle_confirm_pending WHERE user_idx = _userId;
    
    -- 56: // Spirit
    SELECT board_id, locked, ability_id_1, ability_value_1, color_no_1,
					ability_id_2, ability_value_2, color_no_2,
					ability_id_3, ability_value_3, color_no_3
	FROM user_spirit
    WHERE user_idx = _userId;
    
    -- 57: // BackUp Spirit
    SELECT board_id, ability_id_1, ability_value_1, color_no_1,
					ability_id_2, ability_value_2, color_no_2,
					ability_id_3, ability_value_3, color_no_3
	FROM user_spirit_backup
    WHERE user_idx = _userId;
    
    -- 58: // Reddot
    DELETE FROM user_reddot WHERE user_idx = _userId AND char_idx = char_id AND type_id = 1 AND element_value NOT IN (SELECT item_idx FROM char_inven_equip WHERE char_idx = char_id);
    DELETE FROM user_reddot WHERE user_idx = _userId AND char_idx = char_id AND type_id = 2 AND element_value NOT IN (SELECT item_id FROM char_inven_item WHERE char_idx = char_id AND item_value > 0);
    
    SELECT type_id, element_value, element_subvalue FROM user_reddot WHERE user_idx = _userId AND char_idx IN (0, char_id);
    
    -- 59: // PK 기록
    -- 찾아보고 없으면 기본데이터로 세팅
    IF NOT EXISTS(SELECT @tmpValue := char_idx FROM char_pk_record WHERE char_idx = char_id) THEN
		INSERT INTO char_pk_record(char_idx, score)
			VALUES (char_id, p_PKDefaultPoint);
	END IF;
    
    SELECT score, kill_count, assist_count, death_count , UNIX_TIMESTAMP(last_update_date) as last_update_date FROM char_pk_record WHERE char_idx = char_id;
	
     -- 60: // 오픈된 연구
	SELECT lab_group_id FROM user_laboratory_category WHERE user_idx = _userId;
    
     -- 61: // 연구소
	SELECT lab_group_id, step, step_rank FROM user_laboratory_category_group_info WHERE user_idx = _userId;
    
    -- 62
    SELECT rewarded_count FROM user_title_reward WHERE user_idx = _userId;
    
    -- SELECT option_data FROM user_client_option_data WHERE user_idx = _userId;
    -- 99
    #SELECT lost_exp_idx, lost_exp, UNIX_TIMESTAMP(end_time) as end_time, need_gold, need_cash
	#FROM char_lost_exp 
    #WHERE char_idx = char_id AND restored_time is NULL -- AND 0 < TIMESTAMPDIFF(minute, now(), end_time)
    #ORDER BY lost_exp_idx DESC;	-- LIMIT 0, 5;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_all_guild_battle` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_all_guild_battle`( 
	IN	_userId 	BIGINT
,	IN	_charId		BIGINT
)
    COMMENT '길드전 개인전투 대상유저 캐릭터 전체 정보'
BEGIN
    DECLARE membergrade INT;
    DECLARE masteruseridx BIGINT;
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;	
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    
	SELECT char_idx, nickname, char_type, char_exp, char_hp, char_semp, char_stat_point, char_skill_point,
			0 as char_stamina, 0 as char_max_stamina, char_equip_num, char_buy_skill_point,
			skill_gauge1, skill_gauge2, skill_gauge3, skill_gauge4, skill_gauge5, transform_gauge, guild_point, job_step, stat_reset_count
	FROM userinfo C INNER JOIN char_info CA
	ON C.user_idx = CA.user_idx
	WHERE CA.char_idx = _charId;
			
    
    
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = _charId;
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = _charId;
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = _charId;
	
	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.item_idx = ie.item_idx
	WHERE ie.char_idx = _charId;    
    
	
    SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = _charId;
  
	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = _charId;
	
	
	SELECT skill_id, char_idx, skill_value
	FROM char_skill
	WHERE char_idx = _charId; -- and skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);
	
	
	SELECT skill_id, char_idx, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = _charId;
	
	
	SELECT item_idx, char_idx, item_id, percent, life_time, ability_value, skill_id, belong
	FROM char_inven_skillbook
	WHERE char_idx = _charId;	
	
	
	select book_type, item_id, level as book_level, value as book_value from char_monster_book where char_idx = _charId;
	
	
	SELECT book_type, group_id FROM char_monster_book_group_reward WHERE char_idx = _charId;
    
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = _charId AND 5 < remain_time; -- buff_time > now();
    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = _charId;    
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_battlepower` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_battlepower`()
    COMMENT '캐릭터중 전투력 높은것'
BEGIN
       
    SELECT user_idx, max(battle_power) as battle_power
    FROM char_info
    GROUP BY user_idx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_castleinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_castleinfo`(
	IN	_useridx 			BIGINT
)
    COMMENT '정보 얻기.'
BEGIN	
    
    SELECT char_idx, char_type, char_exp
    FROM userinfo a inner join char_info b on a.user_idx = b.user_idx
    WHERE user_idx =  _useridx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_charlist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_charlist`( 
	IN	_pUserid 	BIGINT		
)
    COMMENT '전체 캐릭터 정보'
BEGIN
	DECLARE v_base_char_idx BIGINT DEFAULT 0;
    DECLARE v_char_slot_count	TINYINT DEFAULT 0;
    DECLARE v_guild_idx		BIGINT DEFAULT 0;
    DECLARE	v_guildName		VARCHAR(50) DEFAULT '';
    
    DECLARE char_id BIGINT DEFAULT 0;
    -- DECLARE equipset TINYINT DEFAULT 1;
    -- DECLARE costumeequipset TINYINT DEFAULT 2;
    DECLARE _defaultdate 	DATETIME DEFAULT '2000-01-01 00:00:00';
    
    -- 삭제된 캐릭터 이동..
    CALL sp_mmo_charinfo_deleted_move(_pUserid);
    -- 

	SELECT base_char_idx, char_slot_count INTO v_base_char_idx, v_char_slot_count
    FROM userinfo
    WHERE user_idx = _pUserid;
    
    -- 1
    SELECT v_char_slot_count;
    
    -- SELECT guild_idx INTO v_guild_idx
	-- FROM guild_member
	-- WHERE user_idx = _pUserid;
    
    -- SELECT `name` INTO v_guildName FROM guild WHERE guild_idx = v_guild_idx;

	-- 2
	-- SELECT char_idx, char_type, char_exp, job_step, battle_power, IF(v_base_char_idx = char_idx, 1, 0) AS base_char, nickname, pk_point, v_guildName, UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, UNIX_TIMESTAMP(reg_date) AS reg_date
    -- FROM char_info
    -- WHERE user_idx = _pUserid;
    
    SELECT A.char_idx, char_type, char_exp, job_step, battle_power, IF(v_base_char_idx = A.char_idx, 1, 0) AS base_char, nickname
		, pk_point, IF(0 < A.show_avatarid, A.show_avatarid, A.equip_avatarid) AS avatar_id
        , IFNULL(D.GName, '') as v_guildName, UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, UNIX_TIMESTAMP(reg_date) AS reg_date
        , CASE
			WHEN (A.deleted_date IS NULL OR A.deleted_date = _defaultdate) THEN 0
			ELSE UNIX_TIMESTAMP(deleted_date)
		  END AS deleted_date -- 삭제 취소 가능 시간
    FROM char_info A LEFT OUTER JOIN  -- (SELECT char_idx, `name` as GName FROM guild_member GM, guild G WHERE gm.user_idx = _pUserid AND G.guild_idx = GM.guild_idx) AS D ON A.char_idx = D.char_idx
	(
    SELECT G.guild_idx, G.GName, GM.char_idx FROM guild_member GM INNER JOIN (SELECT guild_idx, `name` as GName FROM guild) as G ON GM.guild_idx = G.guild_idx
    ) AS D ON A.char_idx = D.char_idx
    WHERE user_idx = _pUserid;
    
    -- 
    --  equip,  -- 		IECS_BASE = 0, IECS_EQUIP_SET, IECS_COSTUME_SET_NO1, IECS_COSTUME_SET_NO2, IECS_COSTUME_SET_NO3,
	-- equip_slot -- eWEAPON = 0,eSECONDARY_WEAPON,eHEAD,eARMOR,eSECONDARY_ARMOR,ePANTS,eBOOTS,eGLOVES,eNECKLACE,eRING,
    -- SELECT char_idx, item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    SELECT char_idx, item_id, enchant_level, equip_type, equip, equip_slot
    FROM char_inven_equip
    WHERE user_idx = _pUserid AND equip = 1
		AND char_idx IN (SELECT char_idx FROM char_info WHERE user_idx = _pUserid); -- (equipset, costumeequipset);
	
	
--  SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
-- 	FROM char_inven_equip ie
-- 	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
-- 	WHERE ie.`char_idx` = char_id AND ie.`equip` IN (equipset, costumeequipset);
    
	
-- 	SELECT io.item_idx, io.attribute_id, io.attribute_value
-- 	FROM char_inven_equip ie
-- 	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
-- 	WHERE ie.`char_idx` = char_id AND ie.`equip` IN (equipset, costumeequipset);
    
	
--  SELECT io.item_idx, io.slot_id, io.id
-- 	FROM char_inven_equip ie
-- 	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
-- 	WHERE ie.`char_idx` = char_id AND ie.`equip` IN (equipset, costumeequipset);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_charpos` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_charpos`( 
	IN	_userid 	BIGINT		
,	IN 	_charType	INT			
)
    COMMENT '대표 캐릭터 위치 정보 및 경험치, 전투력 정보'
BEGIN

	
	IF 0 < _charType THEN
		IF _charType <> 10101001 AND _charType <> 10102001 AND _charType <> 10103001 AND _charType <> 10104001 THEN
			SET _charType = 0;	
		END IF;
	END IF;

	
	IF _charType <> 0 THEN
		UPDATE userinfo
		SET base_char_idx = (SELECT char_idx FROM char_info WHERE user_idx = _userid AND char_type = _charType)
		WHERE user_idx = _userid;
    END IF;
    
	
	SELECT char_idx, char_type, char_exp, battle_power, pre_region, pre_region_pos_x, pre_region_pos_z, last_base_region, last_region, region_pos_x, region_pos_z 
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = _userid;	    

	
	SELECT tutorial_id
	FROM user_tutorial
	where user_idx = _userid AND complete = 1;     
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_charpos2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_charpos2`( 
	IN	p_UserID 	BIGINT		
,	IN 	p_CharIdx	BIGINT
,	IN	p_daycount	TINYINT -- 길드장 위임 기준 날짜
)
    COMMENT '대표 캐릭터 위치 정보 및 경험치, 전투력 정보'
BEGIN

	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_char_idx		BIGINT DEFAULT 0;
	DECLARE v_guild_idx		BIGINT DEFAULT 0;
    DECLARE _defaultdate 	DATETIME DEFAULT '2000-01-01 00:00:00';
    
    DECLARE	p_newmaster_charidx	BIGINT;
	DECLARE	p_master_nickname VARCHAR(30) DEFAULT '';		-- 길드 마스터 닉네임			
	DECLARE	p_master_chartype	INT DEFAULT 0;				-- 길드 마스터 캐릭터 타입
	DECLARE	p_master_charexp	BIGINT DEFAULT 0;			-- 길드 마스터 캐릭터 레벨
	DECLARE	p_master_battlepower INT DEFAULT 0;				-- 길드 마스터 캐릭터 전투력
        
	IF 0 < p_CharIdx THEN
		SET v_char_idx := p_CharIdx;
	ELSE
		SELECT base_char_idx INTO v_char_idx FROM userinfo WHERE user_idx = p_UserID;
	END IF;

	SELECT guild_idx INTO v_guild_idx
	FROM guild_member
	WHERE char_idx = p_CharIdx;	

	UPDATE userinfo
	SET base_char_idx = (SELECT char_idx FROM char_info WHERE user_idx = p_UserID AND char_idx = v_char_idx)
	WHERE user_idx = p_UserID;
		
	SELECT char_idx, nickname, char_type, char_exp, battle_power, pre_region, pre_region_pos_x, pre_region_pos_z, last_base_region, last_region, region_pos_x, region_pos_z, v_guild_idx 
		, CASE
			WHEN (CA.deleted_date IS NULL OR CA.deleted_date = _defaultdate) THEN 0
			ELSE UNIX_TIMESTAMP(CA.deleted_date)
		  END AS deleted_date -- 삭제 취소 가능 시간
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = p_UserID;	    
	
	SELECT tutorial_id
	FROM user_tutorial
	where user_idx = p_UserID AND complete = 1;
    
    IF 0 < v_guild_idx THEN
		CALL gsp_mmo_guild_master_automatic_delegation(v_guild_idx, p_daycount, v_result, p_newmaster_charidx, p_master_nickname, p_master_chartype, p_master_charexp, p_master_battlepower);
	END IF;
    
    SELECT v_result, p_newmaster_charidx, p_master_nickname, p_master_chartype, p_master_charexp, p_master_battlepower;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_combat_rival` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_combat_rival`( 
	IN	p_userId 		BIGINT	
)
    COMMENT '무투전 라이벌 캐릭터 정보 조회'
BEGIN
	DECLARE v_char_equip_num TINYINT DEFAULT 0;	
    DECLARE v_costumeequipset TINYINT DEFAULT 10;
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;		
    
    DECLARE	v_errno		INT DEFAULT 0;
	  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			
		DROP TABLE IF EXISTS tmp_charequipnum;		
	END;
    
    
    CREATE TEMPORARY TABLE tmp_charequipnum(
	  useridx bigint not null,
      charidx bigint not null,
      equipnum tinyint not null,
	  primary key(useridx, charidx)
	) engine = memory;
    
    
    INSERT tmp_charequipnum(useridx, charidx, equipnum)
    SELECT user_idx, char_idx, char_equip_num FROM char_info WHERE user_idx = p_userId;
    
    
	
    
    SELECT base_char_idx FROM userinfo WHERE user_idx = p_userId;
    
	
	SELECT char_idx, nick, char_type, char_exp, char_stat_point, char_skill_point, char_buy_skill_point, max_inven_size, char_equip_num, job_step, battle_power, stat_reset_count
	FROM userinfo ui
		INNER JOIN char_info ci ON ui.user_idx = ci.user_idx
	WHERE ui.user_idx = p_userId;
    
    
    SELECT cs.char_idx, cs.stat_type, cs.stat_value 
    FROM tmp_charequipnum tce inner join char_stat cs on cs.char_idx = tce.charidx
    WHERE tce.useridx = p_userId;
    
    
        
    SELECT tce.charidx, item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM tmp_charequipnum tce inner join char_inven_equip ie on ie.char_idx = tce.charidx and ie.equip IN (tce.equipnum, v_costumeequipset)
    WHERE tce.useridx = p_userId;
	
	
	    
    SELECT tce.charidx, io.item_idx, io.slot_id, io.option_id, io.option_value	
    FROM tmp_charequipnum tce 
		INNER JOIN char_inven_equip ie on ie.char_idx = tce.charidx and ie.equip IN (tce.equipnum, v_costumeequipset)
		INNER JOIN item_option io ON io.item_idx = ie.item_idx
    WHERE tce.useridx = p_userId;

	
	    
    SELECT tce.charidx, io.item_idx, io.attribute_id, io.attribute_value
    FROM tmp_charequipnum tce 
		INNER JOIN char_inven_equip ie on ie.char_idx = tce.charidx and ie.equip IN (tce.equipnum, v_costumeequipset)
		INNER JOIN item_attribute io ON io.item_idx = ie.item_idx
    WHERE tce.useridx = p_userId;
    
	
	
    SELECT tce.charidx, io.item_idx, io.slot_id, io.id
    FROM tmp_charequipnum tce 
		INNER JOIN char_inven_equip ie ON ie.char_idx = tce.charidx AND ie.equip IN (tce.equipnum, v_costumeequipset)
		INNER JOIN item_jewels io ON io.item_idx = ie.item_idx
    WHERE tce.useridx = p_userId;
	
	
	
    SELECT tce.charidx, skill_id, skill_value
    FROM tmp_charequipnum tce 
		INNER JOIN char_skill cs ON tce.charidx = cs.char_idx 
    WHERE tce.useridx = p_userId;
	
	
    SELECT tce.charidx, sr.skill_id, sr.rune_id, sr.rune_value
    FROM tmp_charequipnum tce 
		INNER JOIN char_skill cs ON tce.charidx = cs.char_idx
		INNER JOIN char_skill_rune sr ON tce.charidx = sr.char_idx and sr.skill_id = cs.skill_id
    WHERE tce.useridx = p_userId;    
	
	
    SELECT tce.charidx, cis.item_idx, cis.char_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
    FROM tmp_charequipnum tce 
		INNER JOIN char_skill cs ON tce.charidx = cs.char_idx AND cs.skill_id in (v_skill_id1, v_skill_id2, v_skill_id3)
		INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
    WHERE tce.useridx = p_userId;    
	
	
	
    SELECT tce.charidx, book_type, item_id, level as book_level, value as book_value 
    FROM tmp_charequipnum tce 
		INNER JOIN char_monster_book cb ON tce.charidx = cb.char_idx
    WHERE tce.useridx = p_userId;   
	
    
    
    SELECT tce.charidx, buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time 
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM tmp_charequipnum tce 
		INNER JOIN char_buff cb ON tce.charidx = cb.char_idx AND 5 < remain_time -- buff_time > now()
    WHERE tce.useridx = p_userId;   
    
    
    
    SELECT tce.charidx, vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM tmp_charequipnum tce 
		INNER JOIN char_vehicle cv ON tce.charidx = cv.char_idx
    WHERE tce.useridx = p_userId;   
    
    
    
    SELECT tce.charidx, item_idx, item_id, item_level, vehicle_idx, belong 
    FROM tmp_charequipnum tce 
		INNER JOIN char_inven_vehicle_equip  civ ON tce.charidx = civ.char_idx
    WHERE tce.useridx = p_userId;   

	
    SELECT tce.charidx, slot_id, costume_show 
    FROM tmp_charequipnum tce 
		INNER JOIN char_costume_setting  ccs ON tce.charidx = ccs.char_idx
	WHERE tce.useridx = p_userId; 

	
	SELECT tce.charidx, set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
    FROM tmp_charequipnum tce 
		INNER JOIN char_skill_set css ON tce.charidx = css.char_idx
    WHERE tce.useridx = p_userId;

	DROP TABLE tmp_charequipnum;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_forrank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_forrank`()
BEGIN
	select C.user_idx, nick, char_idx, char_type, battle_power, char_exp
    FROM userinfo C INNER JOIN char_info CA
    ON C.user_idx = CA.user_idx;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_friend` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_friend`(
	IN _useridx1 BIGINT,	IN _useridx2 BIGINT,	IN _useridx3 BIGINT,	IN _useridx4 BIGINT,	IN _useridx5 BIGINT
,	IN _useridx6 BIGINT,	IN _useridx7 BIGINT,	IN _useridx8 BIGINT,	IN _useridx9 BIGINT,	IN _useridx10 BIGINT
,	IN _useridx11 BIGINT,	IN _useridx12 BIGINT,	IN _useridx13 BIGINT,	IN _useridx14 BIGINT,	IN _useridx15 BIGINT
,	IN _useridx16 BIGINT,	IN _useridx17 BIGINT,	IN _useridx18 BIGINT,	IN _useridx19 BIGINT,	IN _useridx20 BIGINT
,	IN _useridx21 BIGINT,	IN _useridx22 BIGINT,	IN _useridx23 BIGINT,	IN _useridx24 BIGINT,	IN _useridx25 BIGINT
,	IN _useridx26 BIGINT,	IN _useridx27 BIGINT,	IN _useridx28 BIGINT,	IN _useridx29 BIGINT,	IN _useridx30 BIGINT
,	IN _useridx31 BIGINT,	IN _useridx32 BIGINT,	IN _useridx33 BIGINT,	IN _useridx34 BIGINT,	IN _useridx35 BIGINT
,	IN _useridx36 BIGINT,	IN _useridx37 BIGINT,	IN _useridx38 BIGINT,	IN _useridx39 BIGINT,	IN _useridx40 BIGINT
,	IN _useridx41 BIGINT,	IN _useridx42 BIGINT,	IN _useridx43 BIGINT,	IN _useridx44 BIGINT,	IN _useridx45 BIGINT
,	IN _useridx46 BIGINT,	IN _useridx47 BIGINT,	IN _useridx48 BIGINT,	IN _useridx49 BIGINT,	IN _useridx50 BIGINT
,	IN _useridx51 BIGINT,	IN _useridx52 BIGINT,	IN _useridx53 BIGINT,	IN _useridx54 BIGINT,	IN _useridx55 BIGINT
,	IN _useridx56 BIGINT,	IN _useridx57 BIGINT,	IN _useridx58 BIGINT,	IN _useridx59 BIGINT,	IN _useridx60 BIGINT
,	IN _useridx61 BIGINT,	IN _useridx62 BIGINT,	IN _useridx63 BIGINT,	IN _useridx64 BIGINT,	IN _useridx65 BIGINT
,	IN _useridx66 BIGINT,	IN _useridx67 BIGINT,	IN _useridx68 BIGINT,	IN _useridx69 BIGINT,	IN _useridx70 BIGINT
,	IN _useridx71 BIGINT,	IN _useridx72 BIGINT,	IN _useridx73 BIGINT,	IN _useridx74 BIGINT,	IN _useridx75 BIGINT
,	IN _useridx76 BIGINT,	IN _useridx77 BIGINT,	IN _useridx78 BIGINT,	IN _useridx79 BIGINT,	IN _useridx80 BIGINT
,	IN _useridx81 BIGINT,	IN _useridx82 BIGINT,	IN _useridx83 BIGINT,	IN _useridx84 BIGINT,	IN _useridx85 BIGINT
,	IN _useridx86 BIGINT,	IN _useridx87 BIGINT,	IN _useridx88 BIGINT,	IN _useridx89 BIGINT,	IN _useridx90 BIGINT
,	IN _useridx91 BIGINT,	IN _useridx92 BIGINT,	IN _useridx93 BIGINT,	IN _useridx94 BIGINT,	IN _useridx95 BIGINT
,	IN _useridx96 BIGINT,	IN _useridx97 BIGINT,	IN _useridx98 BIGINT,	IN _useridx99 BIGINT,	IN _useridx100 BIGINT
)
    COMMENT '친구 정보 읽기'
BEGIN	
	SELECT `char_idx`, `char_type`, `char_exp`, is_logon, UNIX_TIMESTAMP(last_logoff_date) as last_logoff_date
    FROM `char_info`
	WHERE `char_idx` IN 
	(
	_useridx1, _useridx2, _useridx3, _useridx4, _useridx5, _useridx6, _useridx7, _useridx8, _useridx9, _useridx10,
	_useridx11, _useridx12, _useridx13, _useridx14, _useridx15, _useridx16, _useridx17, _useridx18, _useridx19, _useridx20,
	_useridx21, _useridx22, _useridx23, _useridx24, _useridx25, _useridx26, _useridx27, _useridx28, _useridx29, _useridx30,
    _useridx31, _useridx32, _useridx33, _useridx34, _useridx35, _useridx36, _useridx37, _useridx38, _useridx39, _useridx40,
    _useridx41, _useridx42, _useridx43, _useridx44, _useridx45, _useridx46, _useridx47, _useridx48, _useridx49, _useridx50,
    _useridx51, _useridx52, _useridx53, _useridx54, _useridx55, _useridx56, _useridx57, _useridx58, _useridx59, _useridx60,
    _useridx61, _useridx62, _useridx63, _useridx64, _useridx65, _useridx66, _useridx67, _useridx68, _useridx69, _useridx70,
    _useridx71, _useridx72, _useridx73, _useridx74, _useridx75, _useridx76, _useridx77, _useridx78, _useridx79, _useridx80,
    _useridx81, _useridx82, _useridx83, _useridx84, _useridx85, _useridx86, _useridx87, _useridx88, _useridx89, _useridx90,
    _useridx91, _useridx92, _useridx93, _useridx94, _useridx95, _useridx96, _useridx97, _useridx98, _useridx99, _useridx100
	);
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_friendinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_friendinfo`(
	IN	_charidx 			BIGINT
,	IN 	_findercharidx 		BIGINT
)
    COMMENT '친구 찾기 정보 얻기.'
BEGIN	
	DECLARE requestexist INT DEFAULT 0;
    DECLARE friendexist INT DEFAULT 0;
	
	SELECT COUNT(char_idx) INTO requestexist FROM char_apply_friend WHERE char_idx = _charidx AND friend_char_idx = _findercharidx;
    
    SELECT COUNT(char_idx) INTO friendexist FROM char_friend WHERE char_idx = _charidx AND friend_char_idx = _findercharidx;
    
	SELECT char_type, char_exp, requestexist, friendexist FROM `char_info` WHERE `char_idx` = _charidx;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_otheruserhero` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_otheruserhero`( 
	IN	_userid 	BIGINT
,  	IN	_chartype 	INT
)
    COMMENT '타유저 정보 조회'
BEGIN
	DECLARE char_id BIGINT DEFAULT 0;
    DECLARE equipset TINYINT DEFAULT 1;
    DECLARE costumeequipset TINYINT DEFAULT 2;
        
    IF _chartype =  0 THEN 
		
        
        
	SELECT char_idx, char_equip_num INTO char_id, costumeequipset
	FROM char_info ci
		INNER JOIN userinfo ui ON ci.char_idx = ui.base_char_idx AND ci.user_idx = ui.user_idx
	WHERE ci.user_idx = _userId;        
    ELSE
		SELECT char_idx, char_equip_num INTO char_id, costumeequipset FROM char_info WHERE user_idx = _userId AND char_type = _chartype;
    END IF;
	    
    
    SELECT char_type, char_exp, current_stage, current_trial, battle_power, ui.visit_total, ci.job_step, ui.client_option_switch
	FROM char_info  ci
		
        INNER JOIN userinfo ui ON ci.user_idx = ui.user_idx
	WHERE ci.char_idx = char_id AND ci.user_idx = _userId;
		
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = char_id AND equip IN (equipset, costumeequipset);
	
	
    SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = char_id AND ie.`equip` IN (equipset, costumeequipset);
    
	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = char_id AND ie.`equip` IN (equipset, costumeequipset);
    
	
    SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = char_id AND ie.`equip` IN (equipset, costumeequipset);
    
    
    SELECT stage_id	FROM char_seal_stage WHERE char_idx = char_id AND clear_grade > 0 ORDER BY stage_id DESC LIMIT 1;
    
    
    SELECT combat_grade_id FROM user_combat where user_idx = _userid;
    
    
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = char_id;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_combat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_combat`(
	IN	p_userId 				BIGINT	
,	IN 	p_ticketItemID			INT		
,	IN 	p_dungeonType			INT		
,	IN 	p_freeEnterResetTime	DATETIME 
,	IN 	p_SeasonResetTime 		DATETIME	
)
    COMMENT '성장 던전 메인 캐릭터 정보'
BEGIN
	DECLARE v_result 			INT DEFAULT 0;
    DECLARE v_use_ticket_time 	DATETIME;
    
	DECLARE v_base_char_idx 	BIGINT DEFAULT 0;	
 	DECLARE v_char_equip_num 	TINYINT DEFAULT 0;	
    
    DECLARE v_play_cnt			INT DEFAULT 0;
    DECLARE v_reset_cnt			INT DEFAULT 0;
    DECLARE v_RivalResetCnt		INT	DEFAULT 0;			
	DECLARE v_RivalUpgradeResetCnt	INT	DEFAULT 0;		
	DECLARE v_DailyWinCnt		SMALLINT DEFAULT 0;		
	DECLARE v_SeasonWinCnt		SMALLINT DEFAULT 0;		
    DECLARE v_NewGradeReward	TINYINT DEFAULT 0;		
	DECLARE v_DailyReward		TINYINT	DEFAULT 0;		
	DECLARE v_SeasonReward		TINYINT	DEFAULT 0;		
        
    DECLARE v_inven_qty				INT DEFAULT 0;		
    DECLARE v_inven_equip_qty		INT DEFAULT 0;
    DECLARE v_inven_count_qty		INT DEFAULT 0;
    DECLARE v_inven_skillbook_qty	INT DEFAULT 0;
    
    DECLARE v_costume_equipset 		TINYINT DEFAULT 10;
    
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    
    
    SELECT C.base_char_idx, CA.char_equip_num INTO v_base_char_idx, v_char_equip_num
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = p_userId;     
    
    
    CALL sp_mmo_charsingleplaycnt_update_init_combat_c9(v_base_char_idx, p_dungeonType, p_freeEnterResetTime, p_SeasonResetTime, v_play_cnt, v_reset_cnt, v_RivalResetCnt, v_RivalUpgradeResetCnt, 
                                                    v_DailyWinCnt, v_SeasonWinCnt, v_NewGradeReward, v_DailyReward, v_SeasonReward, v_use_ticket_time, v_result);
    
    
    SELECT play_cnt, reset_cnt INTO v_play_cnt, v_reset_cnt
    FROM char_single_play_cnt
    WHERE char_idx = v_base_char_idx AND dungeon_type = p_dungeonType;
    
    
    
    SELECT count(*) INTO v_inven_equip_qty
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip = 0;
    
    SELECT count(*) INTO v_inven_count_qty
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx;
	
    SELECT count(*) INTO v_inven_skillbook_qty
    FROM char_inven_skillbook
    WHERE char_idx = v_base_char_idx AND skill_id = 0;
	
    SET v_inven_qty = v_inven_equip_qty + v_inven_count_qty + v_inven_skillbook_qty;


    
	SELECT char_idx, char_type
	FROM char_info
	WHERE user_idx = p_userId;
    
    
    
    
    SELECT cashA + cashA_free as cashA, cashB + cashB_free as cashB, nick, user_title_id,
			B.char_idx, char_type, char_gold, char_exp, 
            char_stat_point, char_skill_point, char_buy_skill_point,
            pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z,
            max_inven_size, v_inven_qty, char_equip_num,
            v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(use_ticket_time) AS use_ticket_time, job_step,
            UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, nonstop_play_time, stat_reset_count
	FROM userinfo A 
		INNER JOIN char_info B ON A.base_char_idx = B.char_idx
    WHERE A.user_idx = p_userId;

    
    SELECT combat_grade_id, combat_score, combat_win_cnt, combat_succ, 
			daily_combat_win_cnt, season_combat_win_cnt, 
			newgrade_combat_reward, daily_combat_reward, season_combat_reward, 
			hero_combat_reset_cnt, combat_grade_up_reset_cnt, UNIX_TIMESTAMP(combat_time) AS combat_time
    FROM user_combat
    WHERE user_idx = p_userId;
    
    
    SELECT rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin
    FROM user_combat_rivals
    WHERE user_idx = p_userId;
    
    
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip IN (v_char_equip_num, v_costume_equipset);
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);

	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
    SELECT item_type, item_id, item_value
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx AND item_id = p_ticketItemID;    
	
	
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = v_base_char_idx; 
	
	
	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = v_base_char_idx;	
	
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = v_base_char_idx AND skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);
	
	
	
	SELECT cis.item_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
	FROM char_skill cs
    INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
	WHERE cs.`char_idx` = v_base_char_idx AND 0 < cs.`skill_id`;


	
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
	
	
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date
	FROM char_quest_progress
	WHERE char_idx = v_base_char_idx;
	
	
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
	SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date
	FROM char_quest_done
	WHERE char_idx = v_base_char_idx;
	
	
	
	select book_type, item_id, level as book_level, value as book_value 
    from char_monster_book 
    where char_idx = v_base_char_idx;
	
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = v_base_char_idx AND 5 < remain_time; -- buff_time > now();

   
    
	SELECT event_id, event_attend_id, event_type, day_count, UNIX_TIMESTAMP(last_date) as last_date, get_reward 
    FROM user_event_attend
    WHERE user_idx = p_userId;
    
    
	SELECT event_id, event_attend_mission_id, event_day, get_reward 
    FROM user_event_attend_mission
    WHERE user_idx = p_userId;
    
    
    SELECT event_id, mission_id, mission_value, get_reward, UNIX_TIMESTAMP(expire_time) as expire_time 
    FROM user_event_mission
    WHERE user_idx = p_userId;
    
    
    
	SELECT a.title_id, IFNULL(UNIX_TIMESTAMP(b.title_expiredate), 0) as title_expiredate
    FROM user_title a
		LEFT JOIN user_title_expire b ON a.title_id = b.title_id       
	WHERE a.user_idx = p_userId AND (ISNULL(b.title_expiredate) OR UNIX_TIMESTAMP(now() < b.title_expiredate));

    
    SELECT vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM char_vehicle 
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, item_level, vehicle_idx, belong 
    FROM char_inven_vehicle_equip 
    WHERE char_idx = v_base_char_idx;

    
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = v_base_char_idx;
    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = v_base_char_idx;    
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_endless` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_endless`( 
	IN	p_UserID 				BIGINT	
,	IN 	p_TicketItemID			INT		
,	IN 	p_DungeonType			INT		
,	IN 	p_FreeEnterResetTime	DATETIME 
)
    COMMENT '성장 던전 메인 캐릭터 정보'
BEGIN
	DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_base_char_idx 	BIGINT DEFAULT 0;	
 	DECLARE v_char_equip_num 	TINYINT DEFAULT 0;	
    
    DECLARE v_play_cnt			INT DEFAULT 0;
    DECLARE v_reset_cnt			INT DEFAULT 0;
    DECLARE v_use_ticket_time 	DATETIME;
    DECLARE v_costume_equipset 	TINYINT DEFAULT 10;
        
    DECLARE v_inven_qty				INT DEFAULT 0;		
    DECLARE v_inven_equip_qty		INT DEFAULT 0;
    DECLARE v_inven_count_qty		INT DEFAULT 0;
    DECLARE v_inven_skillbook_qty	INT DEFAULT 0;
	
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    
    SELECT C.base_char_idx, CA.char_equip_num INTO v_base_char_idx, v_char_equip_num
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = p_UserID;     
     
    
    
    SELECT count(*) INTO v_inven_equip_qty
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip = 0;
    
    SELECT count(*) INTO v_inven_count_qty
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx;
	
    SELECT count(*) INTO v_inven_skillbook_qty
    FROM char_inven_skillbook
    WHERE char_idx = v_base_char_idx AND skill_id = 0;
	
    SET v_inven_qty = v_inven_equip_qty + v_inven_count_qty + v_inven_skillbook_qty;


    
    CALL sp_mmo_charsingleplaycnt_update_init(v_base_char_idx, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_result);
    
   
    
    
    
    SELECT cashA + cashA_free as cashA, cashB + cashB_free as cashB, nick, user_title_id,
			B.char_idx, char_type, char_gold, char_exp, 
            char_stat_point, char_skill_point, char_buy_skill_point,
            pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z,
            max_inven_size, v_inven_qty, char_equip_num, 
            current_trial, max_trial, 
            v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(use_ticket_time) AS use_ticket_time, job_step,
            UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, nonstop_play_time, stat_reset_count
	FROM userinfo A 
		INNER JOIN char_info B 
        ON A.base_char_idx = B.char_idx
    WHERE A.user_idx = p_UserID;  
    
    
    
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip IN (v_char_equip_num, v_costume_equipset);
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);

	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
    SELECT item_type, item_id, item_value
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx AND item_id = p_TicketItemID;    
	
	
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = v_base_char_idx; 
	
	
	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = v_base_char_idx;
	
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = v_base_char_idx AND skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);
	
	SELECT cis.item_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
	FROM char_skill cs
    INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
	WHERE cs.`char_idx` = v_base_char_idx AND 0 < cs.`skill_id`;


	
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
	
	
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date
	FROM char_quest_progress
	WHERE char_idx = v_base_char_idx;
	
	
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
	SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date
	FROM char_quest_done
	WHERE char_idx = v_base_char_idx;
	
	
	
	select book_type, item_id, level as book_level, value as book_value 
    from char_monster_book 
    where char_idx = v_base_char_idx;
	
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = v_base_char_idx AND 5 < remain_time; -- buff_time > now();

   
    
	SELECT event_id, event_attend_id, event_type, day_count, UNIX_TIMESTAMP(last_date) as last_date, get_reward 
    FROM user_event_attend
    WHERE user_idx = p_UserID;
    
    
	SELECT event_id, event_attend_mission_id, event_day, get_reward 
    FROM user_event_attend_mission
    WHERE user_idx = p_UserID;
    
    
    SELECT event_id, mission_id, mission_value, get_reward, UNIX_TIMESTAMP(expire_time) as expire_time 
    FROM user_event_mission	
    WHERE user_idx = p_UserID;
    
    
    
	SELECT a.title_id, IFNULL(UNIX_TIMESTAMP(b.title_expiredate), 0) as title_expiredate
    FROM user_title a
		LEFT JOIN user_title_expire b ON a.title_id = b.title_id       
	WHERE a.user_idx = p_UserID AND (ISNULL(b.title_expiredate) OR UNIX_TIMESTAMP(now() < b.title_expiredate));

    
    SELECT vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM char_vehicle 
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, item_level, vehicle_idx, belong 
    FROM char_inven_vehicle_equip 
    WHERE char_idx = v_base_char_idx;

	
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = v_base_char_idx;
    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = v_base_char_idx;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_grow_main` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_grow_main`( 
	IN	p_UserID				BIGINT	
,	IN 	p_TicketItemID			INT		
,	IN 	p_DungeonType			INT		
,	IN 	p_FreeEnterResetTime	DATETIME 
)
    COMMENT '성장 던전 메인 캐릭터 정보'
BEGIN
	DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_base_char_idx 	BIGINT DEFAULT 0;	
 	DECLARE v_char_equip_num 	TINYINT DEFAULT 0;	
    
    DECLARE v_play_cnt			INT DEFAULT 0;
    DECLARE v_reset_cnt			INT DEFAULT 0;
    DECLARE v_use_ticket_time 	DATETIME;
	DECLARE v_costume_equipset 	TINYINT DEFAULT 10;
        
    DECLARE v_inven_qty				INT DEFAULT 0;		
    DECLARE v_inven_equip_qty		INT DEFAULT 0;
    DECLARE v_inven_count_qty		INT DEFAULT 0;
    DECLARE v_inven_skillbook_qty	INT DEFAULT 0;
	
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    
    SELECT C.base_char_idx, CA.char_equip_num INTO v_base_char_idx, v_char_equip_num
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = p_UserID;     
   
    
    SELECT count(*) INTO v_inven_equip_qty
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip = 0;
    
    SELECT count(*) INTO v_inven_count_qty
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx;
	
    SELECT count(*) INTO v_inven_skillbook_qty
    FROM char_inven_skillbook
    WHERE char_idx = v_base_char_idx AND skill_id = 0;
	
    SET v_inven_qty = v_inven_equip_qty + v_inven_count_qty + v_inven_skillbook_qty;


    
    CALL sp_mmo_charsingleplaycnt_update_init(v_base_char_idx, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_result);
    
    
    
	SELECT char_idx, char_type
	FROM char_info
	WHERE user_idx = p_userId;
    
    
    
    
    SELECT cashA + cashA_free as cashA, cashB + cashB_free as cashB, nick, user_title_id,
			B.char_idx, char_type, char_gold, char_exp, 
            char_stat_point, char_skill_point, char_buy_skill_point,
            pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z,
            max_inven_size, v_inven_qty, char_equip_num, 
            current_stage, max_stage, 
            v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(use_ticket_time) AS use_ticket_time, job_step,
            UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, nonstop_play_time, stat_reset_count
	FROM userinfo A 
		INNER JOIN char_info B 
        ON A.base_char_idx = B.char_idx
    WHERE A.user_idx = p_UserID;  
    

    
    SELECT stage_id, clear_grade
    FROM char_stage_info
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT theme_id
    FROM char_theme_reward
    WHERE char_idx = v_base_char_idx AND dungeon_type = p_DungeonType;
    
    
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip IN (v_char_equip_num, v_costume_equipset);
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);

	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
    SELECT item_type, item_id, item_value
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx AND item_id = p_TicketItemID;    
	
	
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = v_base_char_idx; 
	
	
	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = v_base_char_idx;	
	
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = v_base_char_idx AND skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);
	
	
	SELECT cis.item_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
	FROM char_skill cs
    INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
	WHERE cs.`char_idx` = v_base_char_idx AND 0 < cs.`skill_id`;


	
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
	
	
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date
	FROM char_quest_progress
	WHERE char_idx = v_base_char_idx;
	
	
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
	SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date
	FROM char_quest_done
	WHERE char_idx = v_base_char_idx;
	
	
	
	select book_type, item_id, level as book_level, value as book_value 
    from char_monster_book 
    where char_idx = v_base_char_idx;
	
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = v_base_char_idx AND 5 < remain_time; -- buff_time > now();

   
    
	SELECT event_id, event_attend_id, event_type, day_count, UNIX_TIMESTAMP(last_date) as last_date, get_reward 
    FROM user_event_attend
    WHERE user_idx = p_UserID;
    
    
	SELECT event_id, event_attend_mission_id, event_day, get_reward 
    FROM user_event_attend_mission
    WHERE user_idx = p_UserID;
    
    
    SELECT event_id, mission_id, mission_value, get_reward, UNIX_TIMESTAMP(expire_time) as expire_time 
    FROM user_event_mission
    WHERE user_idx = p_UserID;
    
    
    
	SELECT a.title_id, IFNULL(UNIX_TIMESTAMP(b.title_expiredate), 0) as title_expiredate
    FROM user_title a
		LEFT JOIN user_title_expire b ON a.title_id = b.title_id       
	WHERE a.user_idx = p_UserID AND (ISNULL(b.title_expiredate) OR UNIX_TIMESTAMP(now() < b.title_expiredate));

    
    SELECT vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM char_vehicle 
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, item_level, vehicle_idx, belong 
    FROM char_inven_vehicle_equip 
    WHERE char_idx = v_base_char_idx;

    
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = v_base_char_idx;    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = v_base_char_idx;    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_grow_sub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_grow_sub`( 
	IN	p_charId 		BIGINT	
)
    COMMENT '성장 던전 서브 캐릭터 정보'
BEGIN
	DECLARE v_char_equip_num TINYINT DEFAULT 0;	
    DECLARE v_costume_equipset TINYINT DEFAULT 10;
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    SELECT char_equip_num INTO v_char_equip_num
    FROM char_info
    WHERE char_idx = p_charId;
	
    
    
	
	SELECT char_idx, char_type, char_exp, char_stat_point, char_skill_point, char_buy_skill_point, max_inven_size, char_equip_num, job_step, stat_reset_count
	FROM char_info
	WHERE char_idx = p_charId;

   
	
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = p_charId;
    
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = p_charId AND equip IN (v_char_equip_num, v_costume_equipset);
	
	
    
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = p_charId AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);

	
    
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = p_charId AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
    
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = p_charId AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
	
	
    
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = p_charId; 
	
	
	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = p_charId;	
	
    
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = p_charId AND skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);
	
    
	SELECT cis.item_idx, cis.char_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
	FROM char_skill cs
    INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
	WHERE cs.`char_idx` = p_charId AND 0 < cs.`skill_id`;
	
    
    
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = p_charId AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = p_charId AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
    
    
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date  
    FROM char_quest_progress 
    where char_idx = p_charId;
    
    
    
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = p_charId AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = p_charId AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
    
    SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date  
    FROM char_quest_done 
    where char_idx = p_charId;
    
	
    
	select book_type, item_id, level as book_level, value as book_value 
    from char_monster_book 
    where char_idx = p_charId;
	
    
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time 
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = p_charId AND 5 < remain_time; -- buff_time > now();
    
    
    
    SELECT vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM char_vehicle 
    WHERE char_idx = p_charId;
    
    
    
    SELECT item_idx, item_id, item_level, vehicle_idx, belong 
    FROM char_inven_vehicle_equip 
    WHERE char_idx = p_charId;


	
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = p_charId;
    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = p_charId;    
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_memory` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_memory`( 
	IN	p_UserID 				BIGINT	
,	IN 	p_TicketItemID			INT		
,	IN 	p_DungeonType			INT		
,	IN 	p_FreeEnterResetTime	DATETIME 
)
    COMMENT '기억의 파편 던전 메인 캐릭터 정보'
BEGIN
	DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_base_char_idx 	BIGINT DEFAULT 0;	
 	DECLARE v_char_equip_num 	TINYINT DEFAULT 0;	
    DECLARE v_costume_equipset 	TINYINT DEFAULT 10;
    
    DECLARE v_play_cnt			INT DEFAULT 0;
    DECLARE v_reset_cnt			INT DEFAULT 0;
    DECLARE v_use_ticket_time 	DATETIME;
        
    DECLARE v_inven_qty				INT DEFAULT 0;		
    DECLARE v_inven_equip_qty		INT DEFAULT 0;
    DECLARE v_inven_count_qty		INT DEFAULT 0;
    DECLARE v_inven_skillbook_qty	INT DEFAULT 0;
	
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    SELECT C.base_char_idx, CA.char_equip_num INTO v_base_char_idx, v_char_equip_num
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = p_UserID;     
    
    
    SELECT count(*) INTO v_inven_equip_qty
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip = 0;
    
    SELECT count(*) INTO v_inven_count_qty
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx;
	
    SELECT count(*) INTO v_inven_skillbook_qty
    FROM char_inven_skillbook
    WHERE char_idx = v_base_char_idx AND skill_id = 0;
	
    SET v_inven_qty = v_inven_equip_qty + v_inven_count_qty + v_inven_skillbook_qty;


    
    CALL sp_mmo_charsingleplaycnt_update_init(v_base_char_idx, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_result);

    
    
    
    
    SELECT cashA + cashA_free as cashA, cashB + cashB_free as cashB, nick, user_title_id,
			B.char_idx, char_type, char_gold, char_exp, 
            char_stat_point, char_skill_point, char_buy_skill_point,
            pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z,
            max_inven_size, v_inven_qty, char_equip_num, 
            v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(use_ticket_time) AS use_ticket_time, job_step,
            UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, nonstop_play_time, stat_reset_count
	FROM userinfo A 
		INNER JOIN char_info B 
        ON A.base_char_idx = B.char_idx
    WHERE A.user_idx = p_UserID;  
    

    
    SELECT stage_id, clear_grade
    FROM char_seal_stage
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT theme_id
    FROM char_theme_reward
    WHERE char_idx = v_base_char_idx AND dungeon_type = p_DungeonType;
    
    
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip IN (v_char_equip_num, v_costume_equipset);
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);

	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
    SELECT item_type, item_id, item_value
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx AND item_id = p_ticketItemID;    
	
	
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = v_base_char_idx; 
	
	
	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = v_base_char_idx;	
	
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = v_base_char_idx AND skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);	
	
	
	SELECT cis.item_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
	FROM char_skill cs
    INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
	WHERE cs.`char_idx` = v_base_char_idx AND 0 < cs.`skill_id`;


	
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
	
	
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date
	FROM char_quest_progress
	WHERE char_idx = v_base_char_idx;
	
	
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
	SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date
	FROM char_quest_done
	WHERE char_idx = v_base_char_idx;
	
	
	
	select book_type, item_id, level as book_level, value as book_value 
    from char_monster_book 
    where char_idx = v_base_char_idx;
	
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = v_base_char_idx AND 5 < remain_time; -- buff_time > now();

   
    
	SELECT event_id, event_attend_id, event_type, day_count, UNIX_TIMESTAMP(last_date) as last_date, get_reward 
    FROM user_event_attend
    WHERE user_idx = p_UserID;
    
    
	SELECT event_id, event_attend_mission_id, event_day, get_reward 
    FROM user_event_attend_mission
    WHERE user_idx = p_UserID;
    
    
    SELECT event_id, mission_id, mission_value, get_reward, UNIX_TIMESTAMP(expire_time) as expire_time 
    FROM user_event_mission
    WHERE user_idx = p_UserID;
    
    
    
	SELECT a.title_id, IFNULL(UNIX_TIMESTAMP(b.title_expiredate), 0) as title_expiredate
    FROM user_title a
		LEFT JOIN user_title_expire b ON a.title_id = b.title_id       
	WHERE a.user_idx = p_UserID AND (ISNULL(b.title_expiredate) OR UNIX_TIMESTAMP(now() < b.title_expiredate));

    
    SELECT vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM char_vehicle 
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, item_level, vehicle_idx, belong 
    FROM char_inven_vehicle_equip 
    WHERE char_idx = v_base_char_idx;

	
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = v_base_char_idx;
    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = v_base_char_idx;    
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_tutorial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_tutorial`( 
	IN	p_UserID 				BIGINT	
)
    COMMENT '튜토리얼 캐릭터 정보'
BEGIN
    
    
    
    
    SELECT nick, B.char_idx, char_type, char_gold, char_exp,             
            pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z, tutorial,
            UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, nonstop_play_time
	FROM userinfo A 
		INNER JOIN char_info B 
        ON A.base_char_idx = B.char_idx
    WHERE A.user_idx = p_UserID;  
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_select_single_week` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_select_single_week`(
	IN	p_UserID 				BIGINT	
,	IN 	p_TicketItemID			INT		
,	IN 	p_DungeonType			INT		
,	IN 	p_FreeEnterResetTime	DATETIME 
)
    COMMENT '요일 던전 메인 캐릭터 정보'
BEGIN
	DECLARE v_result 				INT DEFAULT 0;
    
	DECLARE v_base_char_idx 		BIGINT DEFAULT 0;	
 	DECLARE v_char_equip_num 		TINYINT DEFAULT 0;	
    DECLARE v_costume_equipset 		TINYINT DEFAULT 10;
    		
    DECLARE v_play_cnt				INT DEFAULT 0;
    DECLARE v_reset_cnt				INT DEFAULT 0;
    DECLARE v_use_ticket_time 		DATETIME;
    
    DECLARE v_inven_qty				INT DEFAULT 0;		
    DECLARE v_inven_equip_qty		INT DEFAULT 0;
    DECLARE v_inven_count_qty		INT DEFAULT 0;
    DECLARE v_inven_skillbook_qty	INT DEFAULT 0;
    
	DECLARE v_skill_id1 INT DEFAULT 0;
	DECLARE v_skill_id2 INT DEFAULT 0;
	DECLARE v_skill_id3 INT DEFAULT 0;
    DECLARE v_skill_id4 INT DEFAULT 0;
    DECLARE v_skill_id5 INT DEFAULT 0;
    
    
    SELECT C.base_char_idx, CA.char_equip_num INTO v_base_char_idx, v_char_equip_num
	FROM userinfo C INNER JOIN char_info CA
	ON C.base_char_idx = CA.char_idx
	WHERE C.user_idx = p_UserID;     

    
    SELECT count(*) INTO v_inven_equip_qty
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip = 0;
    
    SELECT count(*) INTO v_inven_count_qty
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx;
	
    SELECT count(*) INTO v_inven_skillbook_qty
    FROM char_inven_skillbook
    WHERE char_idx = v_base_char_idx AND skill_id = 0;
	
    SET v_inven_qty = v_inven_equip_qty + v_inven_count_qty + v_inven_skillbook_qty;
    
    
    
    CALL sp_mmo_charsingleplaycnt_update_init(v_base_char_idx, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_result);    
    
    
    
    SELECT cashA + cashA_free as cashA, cashB + cashB_free as cashB, nick, user_title_id,
			B.char_idx, char_type, char_gold, char_exp, 
            char_stat_point, char_skill_point, char_buy_skill_point,
            pre_region, pre_region_pos_x, pre_region_pos_z,
            last_base_region, last_region, region_pos_x, region_pos_z,
            max_inven_size, v_inven_qty, char_equip_num, 
            annihil_grade, defence_grade, annihil_stage, defence_stage, 
            v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(use_ticket_time) AS use_ticket_time, job_step,
            UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, nonstop_play_time, stat_reset_count
	FROM userinfo A INNER JOIN char_info B ON A.base_char_idx = B.char_idx
    WHERE A.user_idx = p_UserID;  
    
    
    SELECT stat_type, stat_value 
	FROM char_stat
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock
    FROM char_inven_equip
    WHERE char_idx = v_base_char_idx AND equip IN (v_char_equip_num, v_costume_equipset);
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);

	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = v_base_char_idx AND ie.`equip` IN (v_char_equip_num, v_costume_equipset);
    
	
    SELECT item_type, item_id, item_value
    FROM char_inven_item
    WHERE char_idx = v_base_char_idx AND item_id = p_TicketItemID;    
	
	
	SELECT skill_id, skill_value
	FROM char_skill
	WHERE char_idx = v_base_char_idx; 
	

	
	-- SELECT skill_id1, skill_id2, skill_id3, skill_id4, skill_id5 INTO v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5
	-- FROM char_info ci 
	-- INNER JOIN char_skill_set css ON ci.char_idx = css.char_idx AND ci.skill_set = css.set_num
	-- WHERE ci.char_idx = v_base_char_idx;
	
	
	SELECT skill_id, rune_id, rune_value
	FROM char_skill_rune
	WHERE char_idx = v_base_char_idx AND skill_id in (v_skill_id1, v_skill_id2, v_skill_id3, v_skill_id4, v_skill_id5);	
	
	
	SELECT cis.item_idx, cis.item_id, cis.percent, cis.life_time, cis.ability_value, cis.skill_id, cis.belong
	FROM char_skill cs
    INNER JOIN char_inven_skillbook cis ON cis.`skill_id` = cs.`skill_id`
	WHERE cs.`char_idx` = v_base_char_idx AND 0 < cs.`skill_id`;


	
	IF EXISTS( SELECT * FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_progress WHERE char_idx = v_base_char_idx AND quest_type = 1 AND quest_reg_date < NOW();
		END;
	END IF;
	
	
	SELECT quest_type, quest_id, quest_value, quest_grade, reset_cnt, UNIX_TIMESTAMP(quest_reg_date) as reg_date
	FROM char_quest_progress
	WHERE char_idx = v_base_char_idx;
	
	
	IF EXISTS( SELECT * FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW()) THEN
		BEGIN
			DELETE FROM char_quest_done WHERE char_idx = v_base_char_idx AND quest_type = 1 AND done_date < NOW();
		END;
	END IF;
    
	SELECT quest_type, quest_id, UNIX_TIMESTAMP(done_date) as done_date
	FROM char_quest_done
	WHERE char_idx = v_base_char_idx;
	
	
	
	select book_type, item_id, level as book_level, value as book_value 
    from char_monster_book 
    where char_idx = v_base_char_idx;
	
    
    SELECT buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9 -- , UNIX_TIMESTAMP(buff_time) as buff_time
    , UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL remain_time second)) as buff_time
    FROM char_buff 
    WHERE char_idx = v_base_char_idx AND 5 < remain_time; -- buff_time > now();

   
    
	SELECT event_id, event_attend_id, event_type, day_count, UNIX_TIMESTAMP(last_date) as last_date, get_reward 
    FROM user_event_attend
    WHERE user_idx = p_UserID;
    
    
	SELECT event_id, event_attend_mission_id, event_day, get_reward 
    FROM user_event_attend_mission
    WHERE user_idx = p_UserID;
    
    
    SELECT event_id, mission_id, mission_value, get_reward, UNIX_TIMESTAMP(expire_time) as expire_time 
    FROM user_event_mission
    WHERE user_idx = p_UserID;
    
    
    
	SELECT a.title_id, IFNULL(UNIX_TIMESTAMP(b.title_expiredate), 0) as title_expiredate
    FROM user_title a
		LEFT JOIN user_title_expire b ON a.title_id = b.title_id       
	WHERE a.user_idx = p_UserID AND (ISNULL(b.title_expiredate) OR UNIX_TIMESTAMP(now() < b.title_expiredate));

    
    SELECT vehicle_idx, vehicle_id, vehicle_level, equip 
    FROM char_vehicle 
    WHERE char_idx = v_base_char_idx;
    
    
    SELECT item_idx, item_id, item_level, vehicle_idx, belong 
    FROM char_inven_vehicle_equip 
    WHERE char_idx = v_base_char_idx;

	
    SELECT slot_id, costume_show FROM char_costume_setting WHERE char_idx = v_base_char_idx;
    
    
	
	SELECT set_num, skill_id1, skill_id2, skill_id3, skill_id4, skill_id5
	FROM char_skill_set
	WHERE char_idx = v_base_char_idx;    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_datas` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_datas`(
	IN	pUserID 		BIGINT		
,	IN	pCharID 		BIGINT		
,	IN	pBattlePower	INT			
,	IN	pHP				INT			
,	IN	pStmnElecManaP	INT			
,	IN	pSkillGage1		SMALLINT	
,	IN	pSkillGage2		SMALLINT	
,	IN	pSkillGage3		SMALLINT	
,	IN	pSkillGage4		SMALLINT
,	IN	pSkillGage5		SMALLINT
,	IN	pSkillGageTrans	SMALLINT	
,	IN 	pPlayTime		INT
, 	IN 	pSpeedHackQty	BIGINT
,	IN 	pPlayTimeSecond		INT
)
    COMMENT '서버에서 접속을 끊을때 갱신해야할 정보'
BEGIN
	UPDATE char_info
    SET battle_power = pBattlePower, char_hp = pHP, char_semp = pStmnElecManaP, 
		skill_gauge1 = pSkillGage1, skill_gauge2 = pSkillGage2, 
		skill_gauge3 = pSkillGage3, skill_gauge4 = pSkillGage4,
        skill_gauge5 = pSkillGage5, transform_gauge = pSkillGageTrans
    WHERE char_idx = pCharID;
    
    UPDATE char_buff SET remain_time = 
    CASE
		WHEN remain_time > pPlayTimeSecond THEN remain_time - pPlayTimeSecond
		ELSE 0
    END
    WHERE char_idx = pCharID;
    
    DELETE FROM char_buff WHERE char_idx = pCharID AND remain_time <= 0;
    
    UPDATE char_info SET last_logoff_date =  IF(char_idx = pCharID, now(), last_logoff_date), is_logon = 0
	WHERE user_idx = pUserID;
    
    -- CALL sp_mmo_char_buff_update_logoff(pCharID, pPlayTime);
    
	CALL sp_mmo_userinfo_update_logoff(pUserID, pPlayTime);
        
    IF 0 < pSpeedHackQty THEN
		UPDATE userinfo
        SET speed_hack_count = speed_hack_count + pSpeedHackQty
        WHERE user_idx = pUserID;
    END IF;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_deletedate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_deletedate`(
	IN	_userid 			BIGINT
,	IN	_charid 			BIGINT
,	IN	_limit_exp 			BIGINT
,	IN	_waiting_day		INT
)
    COMMENT '캐릭터 삭제.. 실제 삭제는 후일에..'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
    DECLARE v_deleted_date 	DATETIME DEFAULT '2000-01-01 00:00:00';
    
    DECLARE v_userIdx 	BIGINT DEFAULT 0;
    DECLARE v_exp	 	BIGINT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result, UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL _waiting_day DAY)) AS _expiretime;
	END;	

	START TRANSACTION;
	root:
	BEGIN
    
		SELECT user_idx, char_exp, deleted_date INTO v_userIdx, v_exp, v_deleted_date FROM char_info WHERE char_idx = _charid;
        
		IF 0 = ROW_COUNT() OR _userid <> v_userIdx THEN
			SET _result = 6033;
			LEAVE root;
        END IF;
        
        IF v_deleted_date IS NOT NULL AND v_deleted_date > '2024-11-11 00:00:00' THEN
			SET _result = 6034;
			LEAVE root;
        END IF;
        
        IF _limit_exp > v_exp THEN
			SET _result = 6035;
			LEAVE root;
        END IF;
    
		-- guild_member
        IF EXISTS (SELECT 1 FROM guild_member WHERE char_idx = _charid) THEN
			SET _result = 6036;
			LEAVE root;
        END IF;

        
		-- char_friend
		-- char_vigilance
		-- 경매장
        
        
        UPDATE char_info SET deleted_date = DATE_ADD(NOW(), INTERVAL _waiting_day DAY) WHERE char_idx = _charid;
        
        
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result, UNIX_TIMESTAMP(DATE_ADD(NOW(), INTERVAL _waiting_day DAY)) AS _expiretime;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_dungeon_endless_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_dungeon_endless_finish`( 
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT
,	IN p_DungeonType 	TINYINT		
,	IN p_StageID		INT			
,	IN p_AddExp			BIGINT		
,	IN p_AddGold		BIGINT		
,	IN p_FreeEnterResetTime DATETIME	
)
    COMMENT '성장 던전 종료'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    
    DECLARE v_final_exp 		BIGINT DEFAULT 0; 
	DECLARE v_final_gold		BIGINT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
    
    root:
    BEGIN
    
    
		START TRANSACTION;	
    
		subroot:
        BEGIN
    
			
			UPDATE char_info 
			SET current_trial = p_StageID, max_trial = IF(max_trial < p_StageID, p_StageID, max_trial)
			WHERE char_idx = p_CharID;

			
			IF 0 < p_AddExp OR 0 < p_AddGold THEN
				CALL sp_mmo_notrans_charinfo_insert_expgold(p_UserID, p_CharID, p_AddExp, p_AddGold, v_final_exp, v_final_gold, v_call_result);
			ELSE
				SELECT char_exp, char_gold INTO v_final_exp, v_final_gold
                FROM char_info
                WHERE char_idx = p_CharID;
			END IF;
		END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;        
        
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);   
       
	END;
    


	
	SELECT v_result, v_final_exp, v_final_gold, v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_dungeon_grow_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_dungeon_grow_finish`( 
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT
,	IN p_DungeonType 	TINYINT		
,	IN p_StageID		INT			
, 	IN p_ClearGrade		TINYINT		
,	IN p_AddExp			BIGINT		
,	IN p_AddGold		BIGINT		
,	IN p_SubCharID		BIGINT		
,	IN p_SubCharAddExp	BIGINT		
,	IN 	p_FreeEnterResetTime	DATETIME 
)
    COMMENT '성장 던전 종료'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;

    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    
    DECLARE v_final_exp 		BIGINT DEFAULT 0; 
	DECLARE v_final_gold		BIGINT DEFAULT 0;
    DECLARE v_subchar_final_exp	BIGINT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   
    root:
    BEGIN

		START TRANSACTION;
        
		
        CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 141;	
			LEAVE root;
        END IF;        

        subroot:
        BEGIN
			
			INSERT char_stage_info (char_idx, stage_id, clear_grade, clear_time)
								VALUES (p_CharID, p_StageID, p_ClearGrade, 0)
			ON DUPLICATE KEY UPDATE clear_grade = p_ClearGrade, clear_time = 0;
			
       
		
			
			IF 0 < p_AddExp OR 0 < p_AddGold THEN
				CALL sp_mmo_notrans_charinfo_insert_expgold(p_UserID, p_CharID, p_AddExp, p_AddGold, v_final_exp, v_final_gold, v_call_result);
			ELSE
				SELECT char_exp, char_gold INTO v_final_exp, v_final_gold
                FROM char_info
                WHERE char_idx = p_CharID;
			END IF;

			
			IF 0 < p_SubCharAddExp THEN
				CALL sp_mmo_notrans_charinfo_insert_exp(p_SubCharID, p_SubCharAddExp, v_subchar_final_exp, v_call_result);
			ELSE
				SELECT char_exp INTO v_subchar_final_exp
                FROM char_info
                WHERE char_idx = p_SubCharID;
			END IF;
			
			
			UPDATE char_info
			SET current_stage = p_StageID
			WHERE char_idx = p_CharID;
		END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;

        
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);   
        
	END;
	

	
	SELECT v_result, v_final_exp, v_final_gold, v_subchar_final_exp, v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_dungeon_memory_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_dungeon_memory_finish`( 
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT
,	IN p_DungeonType 	TINYINT		
,	IN p_StageID		INT			
, 	IN p_ClearGrade		TINYINT		
,	IN p_AddExp			BIGINT		
,	IN p_AddGold		BIGINT		
,	IN p_AddStat		INT			
,	IN p_AddSkillPoint	INT			
,	IN p_FreeEnterResetTime DATETIME	
)
    COMMENT '기억의 파편 던전 종료'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;

    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
	DECLARE v_use_ticket_time	DATETIME;

    DECLARE v_final_exp 		BIGINT DEFAULT 0; 
	DECLARE v_final_gold		BIGINT DEFAULT 0;
    
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
	
	
    root:
    BEGIN
    
        IF p_AddExp < 0 OR p_AddGold < 0 OR p_AddStat < 0 OR p_AddSkillPoint < 0 THEN
			SET v_result = 100;		
            LEAVE root;
		END IF;

    
		START TRANSACTION;	
        
        subroot:
        BEGIN
    
			
			INSERT char_seal_stage (char_idx, stage_id, clear_grade)
								VALUES (p_CharID, p_StageID, p_ClearGrade)
			ON DUPLICATE KEY UPDATE clear_grade = p_ClearGrade;
		
			
			IF 0 < p_AddExp OR 0 < p_AddGold THEN
				CALL sp_mmo_notrans_charinfo_insert_expgold(p_UserID, p_CharID, p_AddExp, p_AddGold, v_final_exp, v_final_gold, v_call_result);
			ELSE
				SELECT char_exp, char_gold INTO v_final_exp, v_final_gold
                FROM char_info
                WHERE char_idx = p_CharID;
			END IF;

			
			IF 0 < p_AddStat OR 0 < p_AddSkillPoint THEN
				UPDATE char_info
				SET char_stat_point = char_stat_point + p_AddStat, char_skill_point = char_skill_point + p_AddSkillPoint
				WHERE char_idx = p_CharID;
				
				IF 0 = ROW_COUNT() THEN
					SET v_result = 103;		
					LEAVE subroot;
				END IF;             
			END IF;

        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;  
        
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);   
        
	END;
    

	
	SELECT v_result, v_final_exp, v_final_gold, v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_dungeon_week_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_dungeon_week_finish`( 
	IN p_CharID 			BIGINT
	
,	IN p_DungeonType		INT			
    
, 	IN p_isClear			TINYINT		
	
, 	IN p_StageType			INT			
, 	IN p_StageGrade			INT			
,	IN p_StageID			INT			
	
,	IN p_AddExp				BIGINT		
,	IN p_AddGold			BIGINT		

,	IN p_freeEnterResetTime	DATETIME 	
)
    COMMENT '요일 던전 종료'
BEGIN   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;

	DECLARE v_useridx 			BIGINT DEFAULT 0;

    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
	DECLARE v_use_ticket_time	DATETIME;

    DECLARE v_final_exp 		BIGINT DEFAULT 0; 
	DECLARE v_final_gold		BIGINT DEFAULT 0;
            
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   
   
    
    root:
    BEGIN
          
        START TRANSACTION;	
		subroot:
        BEGIN
			
			IF p_isClear != 0 THEN 
				LEAVE subroot;
			END IF; 
		
			
			UPDATE char_info SET annihil_grade = IF(p_StageType = 2, p_StageGrade, annihil_grade), 
								annihil_stage =  IF(p_StageType = 2, p_StageID, annihil_stage),  
								defence_grade = IF(p_StageType = 1, p_StageGrade, defence_grade), 
								defence_stage =  IF(p_StageType = 1, p_StageID, defence_stage) 
			WHERE char_idx = p_CharID;
            
			
			IF 0 < p_AddExp OR 0 < p_AddGold THEN
				SELECT user_idx INTO v_useridx FROM char_info WHERE char_idx = p_CharID;
            
				CALL sp_mmo_notrans_charinfo_insert_expgold(v_useridx, p_CharID, p_AddExp, p_AddGold, v_final_exp, v_final_gold, v_call_result);
			END IF;
		END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;
        
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_freeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);   
        
	END;
	

	
    SELECT v_result, v_final_exp, v_final_gold, v_play_cnt, v_reset_cnt, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_equipset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_equipset`(
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_equipSet		INT
)
    COMMENT '착용 장비 셋 변경'
BEGIN
    DECLARE result INT DEFAULT 0;
   
    root:
    BEGIN
    
		UPDATE char_info
        SET char_equip_num = _equipSet
        WHERE user_idx = _userid AND char_idx = _charid;
	
        IF row_count() = 0 THEN
			SET result = 101;	
            LEAVE root;
        END IF;
		
	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result;   
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_expgoldpkbadge` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_expgoldpkbadge`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT
,	IN _addpkbadge 		INT
)
    COMMENT '캐릭터 경험치/금전/pk배찌 추가'
BEGIN
	DECLARE finalpkbadge INT DEFAULT 0;
	DECLARE result INT;	    
	SET result = 0;   
    
	START TRANSACTION;
	
	root:
	BEGIN    
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp + _addexp), 
			char_gold = (@final_gold := char_gold + _addgold),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = _charid AND user_idx = _userid;
		IF ROW_COUNT() = 0 THEN
				SET result = 101;	
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_insert_pkbadge(_userid, _addpkbadge, finalpkbadge, result);
        IF result != 0 THEN 
		    LEAVE root;
        END IF;
			
	END;
    
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
	SELECT result, @final_exp AS char_exp, @final_gold AS char_gold, finalpkbadge AS pk_badge;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_gachaopen` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_gachaopen`(
	IN	p_UserID 			BIGINT		
,	IN	p_CharID 			BIGINT		
,	IN	p_CostCashA			INT			
,	IN	p_CostCashB			INT			
,	IN	p_OpenCount			INT			
, 	IN	p_IsPay				TINYINT		
)
    COMMENT '가챠상사 오픈 비용 차감'
BEGIN	
	DECLARE v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;   
 	
	DECLARE v_finalCashA			BIGINT DEFAULT 0;
	DECLARE v_finalCashB			BIGINT DEFAULT 0; 

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result; 
	END;        
        
	SET @bag_open_time = 0;
	
	START TRANSACTION;	
	
	root:
	BEGIN
		
		IF 0 < p_CostCashA THEN 
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_finalCashA, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;
        
        
        ELSEIF 0 < p_CostCashB THEN
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_finalCashB, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;
        
		
		ELSEIF p_IsPay = 0 THEN
			UPDATE char_info SET bag_open_count = p_OpenCount, bag_open_time = (@bag_open_time := NOW()) WHERE char_idx = p_CharID;
			IF ROW_COUNT() = 0 THEN 
				SET v_result = 1001;
				LEAVE root;
			END IF;
	
		
		ELSE
			SET v_result = 1001;	
		END IF;
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	    
           
	SELECT v_result, v_finalCashA, v_finalCashB, UNIX_TIMESTAMP(@bag_open_time) AS bag_open_time; 
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_jobstep` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_jobstep`(
	IN	_charid 		BIGINT
,	IN	_jobstep 		TINYINT
)
    COMMENT '직업 단계 정보 업데이트(전직)'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	START TRANSACTION;
	root:
	BEGIN		
    
		
		UPDATE char_info SET job_step = _jobstep WHERE char_idx = _charid;
		
        IF ROW_COUNT() <= 0 THEN 
			SET _result = 101;
			LEAVE root;
		END IF;	

	END;

    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_lostexp_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_lostexp_get`(
	IN 	p_CharID 				BIGINT
,	OUT p_LostExp				BIGINT
,	OUT p_LostExpRestoreFree 	TINYINT
,	OUT p_Result				INT
)
    COMMENT '경험치 복구 필드 체크'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    
    DECLARE v_lostexp_time		TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET p_Result := (v_errno * -1);
		ROLLBACK;
	END;
    	 
    SET p_Result = 0;
	SET p_LostExp = 0;
	SET p_LostExpRestoreFree = 0;
	     
    root:
    BEGIN
        
        
		SELECT lost_exp, lost_exp_restore_free, lost_exp_time INTO
			p_LostExp, p_LostExpRestoreFree, v_lostexp_time
		FROM char_info
		WHERE char_idx = p_CharID;
               
		IF 0 = FOUND_ROWS() THEN
			SET p_Result = 101;		
			LEAVE root;
		END IF;        

		
        
		IF DATEDIFF(now(), v_lostexp_time) != 0 THEN
			
			START TRANSACTION;
            
			subroot:
            BEGIN
				
				UPDATE char_info
				SET lost_exp = 0, lost_exp_restore_free = 0, lost_exp_time = CURRENT_TIMESTAMP
				WHERE char_idx = p_CharID;
				
				IF 0 = ROW_COUNT() THEN
					SET p_Result = 103;		
                    leave subroot;
				END IF;
                
                SET p_LostExp = 0;
                SET p_LostExpRestoreFree = 0;
			END;
			
			if 0 = p_Result THEN
				COMMIT;
			ELSE
				ROLLBACK;
			END IF;
            
        END IF;

	END;        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_maxinvensize` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_maxinvensize`(
	IN	_userid			BIGINT
,	IN	_charid 		BIGINT
,	IN	_buyqty			INT			
,	IN	_deleteCashA	INT			
)
    COMMENT '인벤토리 슬롯 확장 구매'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_final_inven_size 		INT DEFAULT 0;
    DECLARE v_final_cashA 			BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;		
	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_inven_size, v_final_cashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new; 
	END;       


	START TRANSACTION;	
	
	root:
	BEGIN
           
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
		
        
        CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_final_cashA, v_result);    
        IF 0 <> v_result THEN
            LEAVE root;
        END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 		
		
                
        
        UPDATE char_info 
        SET max_inven_size = (@imax_mmobag_size := max_inven_size + _buyqty)
        WHERE char_idx = _charid;

        IF row_count() = 0 THEN
			SET v_result = 101;	
            LEAVE root;
        END IF;

		SET v_final_inven_size = @imax_mmobag_size;

  	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	  
    
    
    SELECT v_result, v_final_inven_size, v_final_cashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new; 
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_maxinvensize_useitem` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_maxinvensize_useitem`(
	IN p_UserID			BIGINT
,	IN p_CharID 		BIGINT	
,	IN p_AddQty			INT			
,	IN p_ItemID			INT			
, 	IN p_ItemUseCount	INT 		
)
    COMMENT '인벤토리 슬롯 확장(아이템 사용하여)'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_final_inven_size 		INT DEFAULT 0;	
    DECLARE v_final_item_count		INT DEFAULT 0;	

		
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_inven_size, v_final_item_count;
	END;       


	START TRANSACTION;	
	
	root:
	BEGIN
           
		
        IF 0 < p_ItemID AND 0 < p_ItemUseCount THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_ItemUseCount, v_final_item_count, v_result);
			IF v_result <> 0 THEN
				SET v_result = 100;
				LEAVE root;
			END IF;
		END IF;
                
        
        UPDATE char_info 
        SET max_inven_size = (@imax_mmobag_size := max_inven_size + p_AddQty)
        WHERE char_idx = p_CharID;

        IF row_count() = 0 THEN
			SET v_result = 101;	
            LEAVE root;
        END IF;

		SET v_final_inven_size = @imax_mmobag_size;
  	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	  
    
    
    SELECT v_result, v_final_inven_size, v_final_item_count;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_mmobagsize` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_mmobagsize`(
	IN	_userid			BIGINT
,	IN	_charid 		BIGINT
,	IN	_mmobagsize		INT			
,	IN	_cost			INT			
)
    COMMENT 'MMO 인벤토리 슬롯 구매'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE mmobagsize 			INT	DEFAULT 0;    
    DECLARE v_final_cashA 		BIGINT DEFAULT 0;
    DECLARE v_max_mmobag_size	INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;		

    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_max_mmobag_size, v_final_cashA
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	END;      


	START TRANSACTION;	
	
	root:
	BEGIN
    
		SELECT max_mmobag_size INTO mmobagsize
        FROM char_info
        WHERE char_idx = _charid;
        
		IF found_rows() = 0 THEN
			SET v_result = 101;	
            LEAVE root;
        END IF;

		IF mmobagsize + 1 <> _mmobagsize THEN
  			SET v_result = 102;	
            LEAVE root;      
        END IF;
        

		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
		
        
        CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _cost, v_final_cashA, v_result);    
        IF 0 <> v_result THEN
            LEAVE root;
        END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 		
        
        
        
        UPDATE char_info 
        SET max_mmobag_size = (@imax_mmobag_size := max_mmobag_size + 1)
        WHERE char_idx = _charid;

        IF row_count() = 0 THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;
        
        SET v_max_mmobag_size = @imax_mmobag_size;

  	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	   
    
    
	SELECT v_result, v_max_mmobag_size, v_final_cashA
			, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_pkinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_pkinfo`( 
	IN	_charid 			BIGINT,
	IN	_pkpoint_increase	INT,
    IN	_pkpoint_decrease	INT,
	IN	_pkstate	 		TINYINT,
    IN	_max_pkpoint		INT,
    IN	_min_pkpoint		INT
)
    COMMENT 'pk 포인트 정보 업데이트'
BEGIN
    DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_final_pkpoint			INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_final_pkpoint;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN
		SELECT pk_point INTO v_final_pkpoint FROM char_info WHERE char_idx = _charid;
        IF FOUND_ROWS() = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
        
        IF 0 < _pkpoint_increase THEN
        BEGIN
			IF _max_pkpoint < v_final_pkpoint + _pkpoint_increase THEN
            BEGIN
				UPDATE char_info
				SET pk_point = _max_pkpoint, pk_state = _pkstate
				WHERE char_idx = _charid;
                
                SET v_final_pkpoint = _max_pkpoint;
			END;
            ELSE
            BEGIN
				UPDATE char_info
				SET pk_point = (@_pkpoint := pk_point + _pkpoint_increase), pk_state = _pkstate
				WHERE char_idx = _charid;
                
                SET v_final_pkpoint = @_pkpoint;
			END;
			END IF;
		END;
        END IF;
        
        IF 0 < _pkpoint_decrease THEN
        BEGIN
			IF _min_pkpoint > v_final_pkpoint - _pkpoint_decrease THEN
            BEGIN
				UPDATE char_info
				SET pk_point = _min_pkpoint, pk_state = _pkstate
				WHERE char_idx = _charid;
                
                SET v_final_pkpoint = _min_pkpoint;
			END;
            ELSE
            BEGIN
				UPDATE char_info
				SET pk_point = (@_pkpoint := pk_point - _pkpoint_decrease), pk_state = _pkstate
				WHERE char_idx = _charid;
                
                SET v_final_pkpoint = @_pkpoint;
			END;
			END IF;
		END;
        END IF;
    
	END;
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT v_result, v_final_pkpoint;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_pkmode` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_pkmode`( 
	IN	_charid 		BIGINT,
	IN	_pkmode 		TINYINT
)
    COMMENT '현재 PK 모드 변경'
BEGIN

	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
		UPDATE char_info
		SET pk_mode = _pkmode
		WHERE char_idx = _charid;
	END;
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_region_all_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_region_all_info`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_preregion 		INT
,	IN	_preposx 		FLOAT
,	IN	_preposz 		FLOAT
,	IN	_lastbaseregion INT
,	IN	_lastregion 	INT
,	IN	_posx 			FLOAT
,	IN	_posz 			FLOAT
,	IN	_power			INT
,	IN	_hp				INT
,	IN	_semp			INT
)
    COMMENT '캐릭터 이전 위치 및 현재 위치 정보/전투력 갱신'
BEGIN
	DECLARE v_last_base_region		INT DEFAULT 0;
    
    SET v_last_base_region = _lastbaseregion;
    
    -- IF _lastbaseregion <> _lastregion THEN
	-- 	IF _lastregion = 2100 OR _lastregion = 2101 OR _lastregion = 2102 THEN
	-- 		SET v_last_base_region = _lastregion;
	-- 	END IF;
	-- END IF;

	UPDATE char_info
	SET pre_region = _preregion, pre_region_pos_x = _preposx, pre_region_pos_z = _preposz,		
		last_base_region = IF(v_last_base_region = 0, last_base_region, v_last_base_region),
		last_region = _lastregion, region_pos_x = _posx, region_pos_z = _posz, 
		battle_power = _power, char_hp = _hp, char_semp = _semp
	WHERE user_idx = _userid AND char_idx = _charid;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_restoreexp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_restoreexp`(
	IN p_UserID					BIGINT
,	IN p_CharID					BIGINT
,	IN p_RestoreExpDBIdx		BIGINT
,	IN p_RestoreExp				BIGINT
,	IN p_CostFree 				TINYINT
,	IN p_CostFreeMax			TINYINT
,	IN p_CostGold 				BIGINT
,	IN p_CostCashA				BIGINT
,	IN p_CostItemID				INT
, 	IN p_CostItemCount			INT
)
    COMMENT '경험치 복구'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_lostexp				BIGINT DEFAULT 0;
    DECLARE v_lostexp_time			TIMESTAMP DEFAULT NOW();	
    DECLARE v_NeedGold 				INT DEFAULT 0;
	DECLARE v_NeedCashA				INT DEFAULT 0;
    
    DECLARE v_restoretype			TINYINT DEFAULT -1;
    
    -- DECLARE v_restore_exp				BIGINT DEFAULT 0;	
    DECLARE v_final_char_exp 			BIGINT DEFAULT 0;	
    -- DECLARE v_fianl_char_lostexp		BIGINT DEFAULT 0;	
    DECLARE v_final_freecount			TINYINT DEFAULT 0;	
    DECLARE v_final_gold				BIGINT DEFAULT 0;	
    DECLARE v_final_casha				BIGINT DEFAULT 0;	
    DECLARE v_final_item_count			INT DEFAULT 0;
    
	DECLARE v_DLRT						DATETIME;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_char_exp, v_final_freecount, v_final_gold, v_final_casha, v_final_item_count;
	END;       


	root:
	BEGIN
		SET v_DLRT = fn_Get_DateLineReferenceTime();
    
		SELECT lost_exp, end_time, need_gold, need_cash INTO v_lostexp, v_lostexp_time, v_NeedGold, v_NeedCashA FROM char_lost_exp WHERE char_idx = p_CharID AND lost_exp_idx = p_RestoreExpDBIdx AND restored_time IS NULL;
		IF 0 = FOUND_ROWS() THEN
			SET v_result = 6025;		
			LEAVE root;
		END IF;
        
        IF v_lostexp = 0 OR v_lostexp <> p_RestoreExp THEN
			SET v_result = 6026;		
            LEAVE root;
        END IF;
        
        IF NOW() > v_lostexp_time THEN
			SET v_result = 6027;
            LEAVE root;
        END IF;
        
        -- wealth Check?!
        
        -- 
		SELECT COUNT(1) as _lostexp_restorefree INTO v_final_freecount FROM char_lost_exp WHERE char_idx = p_CharID AND restored_type = 0 AND restored_time IS NOT NULL AND v_DLRT < restored_time;
        
	
		START TRANSACTION;
        
		subroot:
        BEGIN
			
			IF 0 < p_CostFree AND p_CostFreeMax <= v_final_freecount THEN
				SET v_result = 6028;		
				LEAVE root;
                
			
			ELSEIF 0 < p_CostGold THEN	
				CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_CostGold, v_final_gold, v_result);
				IF v_result != 0 THEN
					SET v_result = 6029;	
					LEAVE subroot;
				END IF;  

			
			ELSEIF 0 < p_CostCashA THEN
				CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_casha, v_result);    
				IF 0 <> v_result THEN
					SET v_result = 6030;	
					LEAVE subroot;
				END IF;
				
			
			ELSEIF 0 < p_CostItemID AND 0 < p_CostItemCount THEN
				CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_CostItemID, p_CostItemCount, v_final_item_count, v_result);
				IF v_result <> 0 THEN
					SET v_result = 6031;	
					LEAVE subroot;
				END IF;
			END IF; 
			
            
            CALL sp_mmo_notrans_charinfo_insert_exp(p_CharID, v_lostexp, v_final_char_exp, v_result);
			IF v_result != 0 THEN
				SET v_result = 6032;	
				LEAVE subroot;
			END IF;           

			IF 0 < p_CostFree THEN SET v_restoretype = 0;
            ELSEIF 0 < p_CostGold THEN SET v_restoretype = 1;
            ELSEIF 0 < p_CostCashA THEN SET v_restoretype = 2;
            ELSEIF 0 < p_CostItemID AND 0 < p_CostItemCount THEN SET v_restoretype = 3;
            END IF;

			-- `restored_type` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '복구 유형(0:무료, 1:골드, 2:캐쉬, 3:아이템)',
			UPDATE char_lost_exp SET restored_type = v_restoretype, restored_time = NOW()
				WHERE char_idx = p_CharID AND lost_exp_idx = p_RestoreExpDBIdx AND restored_time IS NULL;
            IF 0 = ROW_COUNT() THEN
				SET v_result = 6033;
				LEAVE subroot;
            END IF;
            
			-- UPDATE char_info 
			-- SET lost_exp_restore_free = @lost_exp_restore_free := lost_exp_restore_free + p_CostFree
			-- WHERE char_idx = p_CharID;

			-- IF row_count() = 0 THEN
			-- 	SET v_result = 116;
			-- 	LEAVE subroot;
			-- END IF;

			-- SET v_lostexp_restorefree = @lost_exp_restore_free;
            SET v_final_freecount = v_final_freecount + p_CostFree;

		END;
        
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;	        
        
	END;
	
    
    SELECT v_result, v_final_char_exp, v_final_freecount, v_final_gold, v_final_casha, v_final_item_count;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_restoreexp_resurrection` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_restoreexp_resurrection`(
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT
,	IN p_RestoreExp		BIGINT		
,	IN p_CostCashA		BIGINT		
)
    COMMENT '부활/경험치 복구'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_lostexp				BIGINT DEFAULT 0;			
    DECLARE v_lostexp_time			TIMESTAMP DEFAULT NOW();	
    DECLARE v_lostexp_restorefree	TINYINT DEFAULT 0;			
    
    DECLARE v_restore_exp				BIGINT DEFAULT 0;	
    DECLARE v_final_char_exp 			BIGINT DEFAULT 0;	
    DECLARE v_fianl_char_lostexp		BIGINT DEFAULT 0;	
    DECLARE v_final_casha				BIGINT DEFAULT 0;	

    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_restore_exp, v_final_char_exp, v_fianl_char_lostexp, v_final_casha;
	END;       


	root:
	BEGIN
		
		IF 0 = p_CostCashA THEN
			SET v_result = 100;
            LEAVE root;
        END IF;
        
		IF 0 < p_RestoreExp THEN
			CALL sp_mmo_charinfo_update_lostexp_get(p_CharID, v_lostexp, v_lostexp_restorefree, v_result);
			IF v_result != 0 THEN
				SET v_result = 100;		
				LEAVE root;
			END IF;
        
			IF v_lostexp = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
        
			
			IF v_lostexp <= p_RestoreExp THEN
				SET v_restore_exp = v_lostexp;	
				SET v_fianl_char_lostexp = 0;
			ELSE
				SET v_restore_exp = p_RestoreExp;
				SET v_fianl_char_lostexp = v_lostexp - p_RestoreExp;
			END IF;
		END IF;
	
		START TRANSACTION;
        
		subroot:
        BEGIN

			
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_casha, v_result);    
			IF 0 <> v_result THEN
				SET v_result = 113;	
				LEAVE subroot;
			END IF;
		            
			IF 0 < p_RestoreExp THEN
				
				CALL sp_mmo_notrans_charinfo_insert_exp(p_CharID, v_restore_exp, v_final_char_exp, v_result);
				IF v_result != 0 THEN
					SET v_result = 115;	
					LEAVE subroot;
				END IF;
            
				
				UPDATE char_info 
				SET lost_exp = v_fianl_char_lostexp, lost_exp_restore_free = @lost_exp_restore_free := lost_exp_restore_free
				WHERE char_idx = p_CharID;

				IF row_count() = 0 THEN
					SET v_result = 116;
					LEAVE subroot;
				END IF;

				SET v_lostexp_restorefree = @lost_exp_restore_free;
			END IF;
            
		END;

		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;	        
  
	END;
	
    
    SELECT v_result, v_restore_exp, v_final_char_exp, v_fianl_char_lostexp, v_final_casha;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_seasonreward_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_seasonreward_init`(
	IN	_useridx	BIGINT
)
    COMMENT '시즌 보상 수령 정보 초기화'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
    	
        UPDATE userinfo SET freebattle_season_reward = 0, combat_season_reward = 0 WHERE user_idx = _useridx;
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_settingoptions` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_settingoptions`( 
	IN	p_CharID 				BIGINT
,	IN	p_DisassembleOption		INT
)
    COMMENT '자동분해 Option 갱신'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
    
    
	UPDATE char_info
	SET disassemble_option = p_DisassembleOption
	WHERE char_idx = p_CharID;

	IF 0 = ROW_COUNT() THEN
		SET v_result = 6053;
	END IF;
    
    SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_skillpoint_buy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_skillpoint_buy`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		

,	IN	_use_gold	 		BIGINT		
,	IN	_use_cashgreen 		BIGINT		
,	IN	_use_cashred 		BIGINT		

,	IN	_add_skillpoint 	INT			
,	IN	_max_skillpoint 	INT			
)
    COMMENT '스킬 포인트 구매 '
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE _new_skill_idx 			BIGINT DEFAULT 0;
    DECLARE v_char_buy_skill_point 	INT DEFAULT 0;
    
    DECLARE v_finalgold				BIGINT DEFAULT 0;
    
    DECLARE v_finalcashA 			BIGINT DEFAULT 0;
    DECLARE v_finalcashB 			BIGINT DEFAULT 0;    

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;      
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_char_buy_skill_point, v_finalgold, v_finalcashA, v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;	        
	END; 
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
    
		
		IF _use_gold > 0 THEN  
			call sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _use_gold, v_finalgold, v_result);
        	if v_result != 0 then 
				Leave root;
			end if;
		end if;
        
        
		IF _use_cashgreen > 0 THEN  
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
            
			call sp_mmo_notrans_userinfo_delete_cashA(_useridx, _use_cashgreen, v_finalcashA, v_result);
			if v_result != 0 then 
				Leave root;
			end if;
            
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;            
        end if;

		
		IF _use_cashred > 0 THEN  
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_old, v_cashB_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
            
			call sp_mmo_notrans_userinfo_delete_cashB(_useridx, _use_cashred, v_finalcashB, v_result);
			if v_result != 0 then 
				Leave root;
			end if;
            
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_new, v_cashB_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;	            
        end if;        
    
		
        UPDATE char_info 
        SET char_buy_skill_point = (@_char_buy_skill_point := char_buy_skill_point + _add_skillpoint)
        WHERE char_idx = _charidx;
		IF 0 = ROW_COUNT() THEN
			SET v_result = 1000;
			LEAVE root;
		END IF;		
        
        SET v_char_buy_skill_point = @_char_buy_skill_point;
        
        
        IF v_char_buy_skill_point > _max_skillpoint THEN
			SET v_result = 1001;
			LEAVE root;
        END IF;
                         
	END; 


	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	  

	
	SELECT v_result, v_char_buy_skill_point, v_finalgold, v_finalcashA, v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;	
	 	 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinfo_update_skillset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinfo_update_skillset`(
	IN	p_UserID 		BIGINT		
,	IN	p_CharID 		BIGINT		
,	IN	p_SkillSet 		TINYINT		
)
    COMMENT '선택된 스킬셋 번호 변경하기'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;	

	START TRANSACTION;
	root:
	BEGIN    
		
		UPDATE char_info SET skill_set = p_SkillSet WHERE char_idx = p_CharID;
		
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 101;
			LEAVE root;
		END IF;	

	END;

    IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenbag_delete_gachaopen` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenbag_delete_gachaopen`(
	IN _useridx 	BIGINT		
,	IN _charidx 	BIGINT		
,	IN _itemidx 	BIGINT		
,	IN _addexp 		BIGINT		
,	IN _addgold 	BIGINT		


,	IN _Itemid1 	INT,		IN _Quality1 	INT,	IN _EquipType1 		INT
,	IN _AttrID1 	INT,		IN _AttrValue1	INT,	IN _belong1			TINYINT,	IN _Identified1			TINYINT
,	IN _SlotID1_1 	TINYINT,	IN _OptID1_1 	INT,	IN _OptValue1_1 	SMALLINT
,	IN _SlotID1_2 	TINYINT,	IN _OptID1_2 	INT,	IN _OptValue1_2 	SMALLINT
,	IN _SlotID1_3 	TINYINT,	IN _OptID1_3 	INT,	IN _OptValue1_3 	SMALLINT
,	IN _SlotID1_4 	TINYINT,	IN _OptID1_4 	INT,	IN _OptValue1_4 	SMALLINT
,	IN _SlotID1_5 	TINYINT,	IN _OptID1_5 	INT,	IN _OptValue1_5 	SMALLINT
,	IN _SlotID1_6 	TINYINT,	IN _OptID1_6 	INT,	IN _OptValue1_6 	SMALLINT
,	IN _SlotID1_7 	TINYINT,	IN _OptID1_7 	INT,	IN _OptValue1_7 	SMALLINT 


,	IN _type1 	TINYINT,	IN _consumeItemid1 	INT,	IN _amount1 		INT


,	IN _bookid1 		INT,	IN _Percent1	INT,	IN _LiftTime1	INT,	IN _Value1	INT,	IN _bookbelong1		TINYINT
)
    COMMENT '가챠상자 오픈 보상 지급'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE v_itemDBIndex1	BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex1 	BIGINT DEFAULT 0;
    DECLARE v_item_qty		INT DEFAULT 0;
	
    DECLARE v_final_exp		BIGINT DEFAULT 0;
    DECLARE v_final_gold	BIGINT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_exp, v_final_gold, v_itemDBIndex1, v_bookDBIndex1;				        
	END;    



	START TRANSACTION;	
	
	root:
	BEGIN
		
        CALL sp_mmo_notrans_charinvenbag_delete(_useridx, _charidx, _itemidx, v_result);
        IF v_result != 0 THEN
            LEAVE root;
		END IF;

		
		CALL sp_mmo_notrans_charinfo_insert_expgold(_useridx, _charidx, _addexp, _addgold, v_final_exp, v_final_gold, v_result);
		IF v_result != 0 THEN
			LEAVE root;
		END IF;
        
        
		IF _Itemid1 != 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid1, _Quality1, _EquipType1, _AttrID1, _AttrValue1,
				_SlotID1_1, _OptID1_1, _OptValue1_1, _SlotID1_2, _OptID1_2, _OptValue1_2, _SlotID1_3, _OptID1_3, _OptValue1_3,
				_SlotID1_4, _OptID1_4, _OptValue1_4, _SlotID1_5, _OptID1_5, _OptValue1_5, _SlotID1_6, _OptID1_6, _OptValue1_6,
				_SlotID1_7, _OptID1_7, _OptValue1_7, _belong1, _Identified1, v_result, v_itemDBIndex1);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
        
        IF _consumeItemid1 != 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type1, _consumeItemid1, _amount1, v_result, v_item_qty);
		
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END IF; 
        
        IF _bookid1 != 0 THEN
	        CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid1, _Percent1, _LiftTime1, _Value1, _bookbelong1, v_result, v_bookDBIndex1);
			
            IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END IF;
	END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
    
	SELECT v_result, v_final_exp, v_final_gold, v_itemDBIndex1, v_bookDBIndex1;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenbeads_delete_gachaitem` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenbeads_delete_gachaitem`( 
	IN	_userid 		BIGINT, 
	IN	_charid 		BIGINT, 
	IN	_itemid 		INT
)
    COMMENT '구슬 아이템 삭제 후 가차 아이템 추가'
BEGIN
	
	DECLARE v_item_idx BIGINT(20);
    DECLARE result INT;
    
    SET result = 0;
    
    START TRANSACTION;
    
    root:
    BEGIN
	
		INSERT INTO char_inven (char_idx) 
								VALUES (_charid);
		if 0 = row_count() THEN
			SET result = 101;	
			LEAVE root;			
		END IF;		
		
		SELECT LAST_INSERT_ID() INTO v_item_idx;
        
		INSERT INTO char_inven_bag (item_idx, char_idx, slot_id, item_id)
								  VALUES(v_item_idx, _charid, 0, _itemid);
		if 0 = row_count() THEN
			SET result = 102;
			LEAVE root;	
		END IF;

		
        UPDATE char_inven_beads
        SET slot_0 = 0, slot_1 = 0, slot_2 = 0, slot_3 = 0, slot_4 = 0
        WHERE char_idx = _charid;
        
	END;
		
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT result, v_item_idx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenbeads_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenbeads_insert`(
	IN	_userid 	BIGINT 
,	IN	_charid 	BIGINT
,	IN	_slotnum 	INT
,	IN	_beadtype 	INT
)
    COMMENT '구슬 추가'
BEGIN
	DECLARE result INT DEFAULT 0;

	IF 0 = _slotnum THEN
		INSERT INTO char_inven_beads (char_idx, slot_0) VALUES(_charid, _beadtype)
			ON DUPLICATE KEY UPDATE slot_0 = _beadtype;
	ELSEIF 1 = _slotnum THEN
		INSERT INTO char_inven_beads (char_idx, slot_1) VALUES(_charid, _beadtype)
			ON DUPLICATE KEY UPDATE slot_1 = _beadtype;
	ELSEIF 2 = _slotnum THEN
		INSERT INTO char_inven_beads (char_idx, slot_2) VALUES(_charid, _beadtype)
			ON DUPLICATE KEY UPDATE slot_2 = _beadtype;
    ELSEIF 3 = _slotnum THEN
		INSERT INTO char_inven_beads (char_idx, slot_3) VALUES(_charid, _beadtype)
			ON DUPLICATE KEY UPDATE slot_3 = _beadtype;
    ELSEIF 4 = _slotnum THEN
		INSERT INTO char_inven_beads (char_idx, slot_4) VALUES(_charid, _beadtype)
			ON DUPLICATE KEY UPDATE slot_4 = _beadtype;
	ELSE
		SET result = 101;
	END IF;
    
	if 0 = row_count() THEN
		SET result = 101;	
	END IF;
	
    SELECT result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequipnftunlock_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequipnftunlock_select`(
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT
)
    COMMENT 'NFT Unlock 아이템 읽어오기'
BEGIN
    
	
    SELECT C.item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock, IFNULL(CA.nft_token_id, '') AS nft_token_id
    FROM char_inven_equip_nft_unlock C
		LEFT JOIN char_inven_equip_nft CA	ON C.item_idx = CA.item_idx
    WHERE C.user_idx = p_UserID AND C.char_idx = p_CharID;

	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip_nft_unlock ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`user_idx` = p_UserID AND ie.`char_idx` = p_CharID;

    
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip_nft_unlock ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
    WHERE ie.`user_idx` = p_UserID AND ie.`char_idx` = p_CharID;

	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip_nft_unlock ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
    WHERE ie.`user_idx` = p_UserID AND ie.`char_idx` = p_CharID;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequipnftunlock_update_ownership` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequipnftunlock_update_ownership`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT    
, 	IN p_Token			VARCHAR(256)	
)
    COMMENT 'NFT 아이템 소유주 변경'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_item_db_idx		BIGINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
        SELECT item_idx INTO v_item_db_idx
        FROM char_inven_equip_nft
        WHERE nft_token_id = p_Token;
        
        IF FOUND_ROWS() = 0 THEN
 			SET v_result = 100;		
			LEAVE root;
        END IF;
        
        
        UPDATE char_inven_equip_nft_unlock
        SET char_idx = p_CharID, user_idx = p_UserID
        WHERE item_idx = v_item_db_idx;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 101;		
			LEAVE root;
		END IF;
 
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
    
	SELECT v_result;
    
    
    IF 0 = v_result THEN    
		
		SELECT C.item_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, remove_lock, IFNULL(CA.nft_token_id, '') AS nft_token_id
		FROM char_inven_equip_nft_unlock C
			LEFT JOIN char_inven_equip_nft CA	ON C.item_idx = CA.item_idx
		WHERE C.item_idx = v_item_db_idx;

		
		SELECT item_idx, slot_id, option_id, option_value
		FROM item_option
		WHERE item_idx = v_item_db_idx;

		
		SELECT item_idx, attribute_id, attribute_value
		FROM item_attribute
		WHERE item_idx = v_item_db_idx;

		
		SELECT item_idx, slot_id, id
		FROM item_jewels
		WHERE item_idx = v_item_db_idx;        
    END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequiprestorebox_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequiprestorebox_select`( 
	IN 	p_UserID			BIGINT		
,	IN 	p_CharID 			BIGINT		
)
    COMMENT '복구함 장비 아이템 목록'
BEGIN

	SELECT item_idx, item_id, quality_grade, item_level, equip_type, enchant_level, belong, identify, UNIX_TIMESTAMP(expire_date) AS expire_date
    FROM char_inven_equip_restorebox
    WHERE char_idx = p_CharID AND NOW() < expire_date order by expire_date desc;
    
	CALL sp_mmo_notrans_charinvenequiprestorebox_delete_expire(p_CharID);
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequiprestore_delete_disassemble` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequiprestore_delete_disassemble`(
	IN p_UserID			BIGINT	
,	IN p_CharID 		BIGINT	
,	IN p_ItemDBIdx		BIGINT	
,	IN p_CostItemType1	TINYINT,	IN p_CostItemID1	INT,	IN p_CostItemValue1	INT
,	IN p_CostItemType2	TINYINT,	IN p_CostItemID2	INT,	IN p_CostItemValue2	INT
,	IN p_CostItemType3	TINYINT,	IN p_CostItemID3	INT,	IN p_CostItemValue3	INT
,	IN p_CostItemType4	TINYINT,	IN p_CostItemID4	INT,	IN p_CostItemValue4	INT
,	IN p_CostItemType5	TINYINT,	IN p_CostItemID5	INT,	IN p_CostItemValue5	INT
,	IN p_CostItemType6	TINYINT,	IN p_CostItemID6	INT,	IN p_CostItemValue6	INT
,	IN p_CostItemType7	TINYINT,	IN p_CostItemID7	INT,	IN p_CostItemValue7	INT
,	IN p_CostItemType8	TINYINT,	IN p_CostItemID8	INT,	IN p_CostItemValue8	INT
,	IN p_CostItemType9	TINYINT,	IN p_CostItemID9	INT,	IN p_CostItemValue9	INT
,	IN p_CostItemType10	TINYINT,	IN p_CostItemID10	INT,	IN p_CostItemValue10	INT
)
    COMMENT '장비 아이템 분해'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
    DECLARE v_item_final_qty7	INT DEFAULT 0;
    DECLARE v_item_final_qty8	INT DEFAULT 0;
    DECLARE v_item_final_qty9	INT DEFAULT 0;
    DECLARE v_item_final_qty10	INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_item_final_qty1, v_item_final_qty2, v_item_final_qty3, v_item_final_qty4, v_item_final_qty5
						, v_item_final_qty6, v_item_final_qty7, v_item_final_qty8, v_item_final_qty9, v_item_final_qty10;
	END;
   
   
   	START TRANSACTION;	
    
    root:
    BEGIN

		
		CALL sp_mmo_notrans_charinvenequiprestorebox_delete(p_CharID, p_ItemDBIdx, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF; 
        
        
		IF 0 < p_CostItemID1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType1, p_CostItemID1, p_CostItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType2, p_CostItemID2, p_CostItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType3, p_CostItemID3, p_CostItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType4, p_CostItemID4, p_CostItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType5, p_CostItemID5, p_CostItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        
		IF 0 < p_CostItemID6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType6, p_CostItemID6, p_CostItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        
		IF 0 < p_CostItemID7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType7, p_CostItemID7, p_CostItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
                
		IF 0 < p_CostItemID8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType8, p_CostItemID8, p_CostItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
                
		IF 0 < p_CostItemID9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType9, p_CostItemID9, p_CostItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
                
		IF 0 < p_CostItemID10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType10, p_CostItemID10, p_CostItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
	END;

    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result, v_item_final_qty1, v_item_final_qty2, v_item_final_qty3, v_item_final_qty4, v_item_final_qty5
					, v_item_final_qty6, v_item_final_qty7, v_item_final_qty8, v_item_final_qty9, v_item_final_qty10;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequiprestore_select_disassemble` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequiprestore_select_disassemble`( 
	IN 	p_UserID			BIGINT		
,	IN 	p_CharID 			BIGINT		
,	IN 	p_ItemDBIdx			BIGINT		
)
    COMMENT '복구함 장비 아이템 얻기'
BEGIN
	SELECT item_idx, item_id
    FROM char_inven_equip_restorebox
    WHERE char_idx = p_CharID AND p_ItemDBIdx = item_idx AND NOW() < expire_date ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_composite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_composite`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT
	
,	IN	p_EquipItemDBIdx1	BIGINT,	IN	p_EquipItemDBIdx2	BIGINT,	IN	p_EquipItemDBIdx3	BIGINT,	IN	p_EquipItemDBIdx4	BIGINT,	IN	p_EquipItemDBIdx5	BIGINT
,	IN	p_EquipItemDBIdx6	BIGINT,	IN	p_EquipItemDBIdx7	BIGINT,	IN	p_EquipItemDBIdx8	BIGINT,	IN	p_EquipItemDBIdx9	BIGINT,	IN	p_EquipItemDBIdx10	BIGINT

,	IN _Itemid 			INT,		IN _Quality 		INT,	IN _EquipType 		INT
,	IN _AttrID 			INT,		IN _AttrValue 		INT,	IN _Belong			TINYINT
,	IN _SlotID1 		TINYINT,	IN _OptID1 			INT,	IN _OptValue1 		SMALLINT
,	IN _SlotID2 		TINYINT,	IN _OptID2 			INT,	IN _OptValue2 		SMALLINT
,	IN _SlotID3 		TINYINT,	IN _OptID3 			INT,	IN _OptValue3 		SMALLINT
,	IN _SlotID4 		TINYINT,	IN _OptID4 			INT,	IN _OptValue4 		SMALLINT
,	IN _SlotID5 		TINYINT,	IN _OptID5 			INT,	IN _OptValue5 		SMALLINT
,	IN _SlotID6 		TINYINT,	IN _OptID6 			INT,	IN _OptValue6 		SMALLINT
,	IN _SlotID7 		TINYINT,	IN _OptID7 			INT,	IN _OptValue7 		SMALLINT
)
    COMMENT '아이템 제작'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;	
    
    DECLARE itemDBIndex 	BIGINT DEFAULT 0;    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, itemDBIndex;
	END;


	START TRANSACTION;	

	root:
	BEGIN
		
		IF 0 < p_EquipItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		
        IF _Itemid > 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(p_UserID, p_CharID, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, _Belong, v_result, itemDBIndex);
			    
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, itemDBIndex;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete`( 
	IN	_charid 		BIGINT
,   IN	_itemidx 		BIGINT
)
    COMMENT '장비 삭제'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  v_result;
	END;    
    

	START TRANSACTION;
   
    root:
    BEGIN

		CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;        
        
	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete_addgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete_addgold`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,   IN	_itemidx 		BIGINT
,	IN	_addgold		BIGINT
)
    COMMENT '장비 아이템 판매, char_inven_equip'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    DECLARE final_gold			BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  result, final_gold;
	END;    
    

	START TRANSACTION;
   
    root:
    BEGIN

		CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;        
                
        CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;
        
	END;
		
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result, final_gold;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete_addgold_100` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete_addgold_100`( 
	IN	p_UserID 			BIGINT
,   IN	p_CharID 			BIGINT
,	IN	p_AddTotalGold		BIGINT	
,	IN	p_ResItemQty		INT		
,	IN	p_ItemIdx01	BIGINT,	IN	p_ItemIdx02	BIGINT,	IN	p_ItemIdx03	BIGINT,	IN	p_ItemIdx04	BIGINT,	IN	p_ItemIdx05	BIGINT
,	IN	p_ItemIdx06	BIGINT,	IN	p_ItemIdx07	BIGINT,	IN	p_ItemIdx08	BIGINT,	IN	p_ItemIdx09	BIGINT,	IN	p_ItemIdx10	BIGINT
,	IN	p_ItemIdx11	BIGINT,	IN	p_ItemIdx12	BIGINT,	IN	p_ItemIdx13	BIGINT,	IN	p_ItemIdx14	BIGINT,	IN	p_ItemIdx15	BIGINT
,	IN	p_ItemIdx16	BIGINT,	IN	p_ItemIdx17	BIGINT,	IN	p_ItemIdx18	BIGINT,	IN	p_ItemIdx19	BIGINT,	IN	p_ItemIdx20	BIGINT
,	IN	p_ItemIdx21	BIGINT,	IN	p_ItemIdx22	BIGINT,	IN	p_ItemIdx23	BIGINT,	IN	p_ItemIdx24	BIGINT,	IN	p_ItemIdx25	BIGINT
,	IN	p_ItemIdx26	BIGINT,	IN	p_ItemIdx27	BIGINT,	IN	p_ItemIdx28	BIGINT,	IN	p_ItemIdx29	BIGINT,	IN	p_ItemIdx30	BIGINT
,	IN	p_ItemIdx31	BIGINT,	IN	p_ItemIdx32	BIGINT,	IN	p_ItemIdx33	BIGINT,	IN	p_ItemIdx34	BIGINT,	IN	p_ItemIdx35	BIGINT
,	IN	p_ItemIdx36	BIGINT,	IN	p_ItemIdx37	BIGINT,	IN	p_ItemIdx38	BIGINT,	IN	p_ItemIdx39	BIGINT,	IN	p_ItemIdx40	BIGINT
,	IN	p_ItemIdx41	BIGINT,	IN	p_ItemIdx42	BIGINT,	IN	p_ItemIdx43	BIGINT,	IN	p_ItemIdx44	BIGINT,	IN	p_ItemIdx45	BIGINT
,	IN	p_ItemIdx46	BIGINT,	IN	p_ItemIdx47	BIGINT,	IN	p_ItemIdx48	BIGINT,	IN	p_ItemIdx49	BIGINT,	IN	p_ItemIdx50	BIGINT
,	IN	p_ItemIdx51	BIGINT,	IN	p_ItemIdx52	BIGINT,	IN	p_ItemIdx53	BIGINT,	IN	p_ItemIdx54	BIGINT,	IN	p_ItemIdx55	BIGINT
,	IN	p_ItemIdx56	BIGINT,	IN	p_ItemIdx57	BIGINT,	IN	p_ItemIdx58	BIGINT,	IN	p_ItemIdx59	BIGINT,	IN	p_ItemIdx60	BIGINT
,	IN	p_ItemIdx61	BIGINT,	IN	p_ItemIdx62	BIGINT,	IN	p_ItemIdx63	BIGINT,	IN	p_ItemIdx64	BIGINT,	IN	p_ItemIdx65	BIGINT
,	IN	p_ItemIdx66	BIGINT,	IN	p_ItemIdx67	BIGINT,	IN	p_ItemIdx68	BIGINT,	IN	p_ItemIdx69	BIGINT,	IN	p_ItemIdx70	BIGINT
,	IN	p_ItemIdx71	BIGINT,	IN	p_ItemIdx72	BIGINT,	IN	p_ItemIdx73	BIGINT,	IN	p_ItemIdx74	BIGINT,	IN	p_ItemIdx75	BIGINT
,	IN	p_ItemIdx76	BIGINT,	IN	p_ItemIdx77	BIGINT,	IN	p_ItemIdx78	BIGINT,	IN	p_ItemIdx79	BIGINT,	IN	p_ItemIdx80	BIGINT
,	IN	p_ItemIdx81	BIGINT,	IN	p_ItemIdx82	BIGINT,	IN	p_ItemIdx83	BIGINT,	IN	p_ItemIdx84	BIGINT,	IN	p_ItemIdx85	BIGINT
,	IN	p_ItemIdx86	BIGINT,	IN	p_ItemIdx87	BIGINT,	IN	p_ItemIdx88	BIGINT,	IN	p_ItemIdx89	BIGINT,	IN	p_ItemIdx90	BIGINT
,	IN	p_ItemIdx91	BIGINT,	IN	p_ItemIdx92	BIGINT,	IN	p_ItemIdx93	BIGINT,	IN	p_ItemIdx94	BIGINT,	IN	p_ItemIdx95	BIGINT
,	IN	p_ItemIdx96	BIGINT,	IN	p_ItemIdx97	BIGINT,	IN	p_ItemIdx98	BIGINT,	IN	p_ItemIdx99	BIGINT,	IN	p_ItemIdx100	BIGINT
)
    COMMENT '장비 아이템 판매, char_inven_equip'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    DECLARE final_gold			BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  result, final_gold;
	END;    
    

	START TRANSACTION;
   
    root:
    BEGIN

		
		DELETE FROM char_inven_equip
        WHERE char_idx = p_CharID AND item_idx IN (p_ItemIdx01, p_ItemIdx02, p_ItemIdx03, p_ItemIdx04, p_ItemIdx05, p_ItemIdx06, p_ItemIdx07, p_ItemIdx08, p_ItemIdx09, p_ItemIdx10,
													p_ItemIdx11, p_ItemIdx12, p_ItemIdx13, p_ItemIdx14, p_ItemIdx15, p_ItemIdx16, p_ItemIdx17, p_ItemIdx18, p_ItemIdx19, p_ItemIdx20,
													p_ItemIdx21, p_ItemIdx22, p_ItemIdx23, p_ItemIdx24, p_ItemIdx25, p_ItemIdx26, p_ItemIdx27, p_ItemIdx28, p_ItemIdx29, p_ItemIdx30,
													p_ItemIdx31, p_ItemIdx32, p_ItemIdx33, p_ItemIdx34, p_ItemIdx35, p_ItemIdx36, p_ItemIdx37, p_ItemIdx38, p_ItemIdx39, p_ItemIdx40,
													p_ItemIdx41, p_ItemIdx42, p_ItemIdx43, p_ItemIdx44, p_ItemIdx45, p_ItemIdx46, p_ItemIdx47, p_ItemIdx48, p_ItemIdx49, p_ItemIdx50,
													p_ItemIdx51, p_ItemIdx52, p_ItemIdx53, p_ItemIdx54, p_ItemIdx55, p_ItemIdx56, p_ItemIdx57, p_ItemIdx58, p_ItemIdx59, p_ItemIdx60,
													p_ItemIdx61, p_ItemIdx62, p_ItemIdx63, p_ItemIdx64, p_ItemIdx65, p_ItemIdx66, p_ItemIdx67, p_ItemIdx68, p_ItemIdx69, p_ItemIdx70,
													p_ItemIdx71, p_ItemIdx72, p_ItemIdx73, p_ItemIdx74, p_ItemIdx75, p_ItemIdx76, p_ItemIdx77, p_ItemIdx78, p_ItemIdx79, p_ItemIdx80,
													p_ItemIdx81, p_ItemIdx82, p_ItemIdx83, p_ItemIdx84, p_ItemIdx85, p_ItemIdx86, p_ItemIdx87, p_ItemIdx88, p_ItemIdx89, p_ItemIdx90,
													p_ItemIdx91, p_ItemIdx92, p_ItemIdx93, p_ItemIdx94, p_ItemIdx95, p_ItemIdx96, p_ItemIdx97, p_ItemIdx98, p_ItemIdx99, p_ItemIdx100);
		
		IF ROW_COUNT() <> p_ResItemQty THEN
				SET result = 101;	
			LEAVE root;
		END IF;   
        
        DELETE FROM item_attribute
        WHERE item_idx IN (p_ItemIdx01, p_ItemIdx02, p_ItemIdx03, p_ItemIdx04, p_ItemIdx05, p_ItemIdx06, p_ItemIdx07, p_ItemIdx08, p_ItemIdx09, p_ItemIdx10,
							p_ItemIdx11, p_ItemIdx12, p_ItemIdx13, p_ItemIdx14, p_ItemIdx15, p_ItemIdx16, p_ItemIdx17, p_ItemIdx18, p_ItemIdx19, p_ItemIdx20,
							p_ItemIdx21, p_ItemIdx22, p_ItemIdx23, p_ItemIdx24, p_ItemIdx25, p_ItemIdx26, p_ItemIdx27, p_ItemIdx28, p_ItemIdx29, p_ItemIdx30,
							p_ItemIdx31, p_ItemIdx32, p_ItemIdx33, p_ItemIdx34, p_ItemIdx35, p_ItemIdx36, p_ItemIdx37, p_ItemIdx38, p_ItemIdx39, p_ItemIdx40,
							p_ItemIdx41, p_ItemIdx42, p_ItemIdx43, p_ItemIdx44, p_ItemIdx45, p_ItemIdx46, p_ItemIdx47, p_ItemIdx48, p_ItemIdx49, p_ItemIdx50,
							p_ItemIdx51, p_ItemIdx52, p_ItemIdx53, p_ItemIdx54, p_ItemIdx55, p_ItemIdx56, p_ItemIdx57, p_ItemIdx58, p_ItemIdx59, p_ItemIdx60,
							p_ItemIdx61, p_ItemIdx62, p_ItemIdx63, p_ItemIdx64, p_ItemIdx65, p_ItemIdx66, p_ItemIdx67, p_ItemIdx68, p_ItemIdx69, p_ItemIdx70,
							p_ItemIdx71, p_ItemIdx72, p_ItemIdx73, p_ItemIdx74, p_ItemIdx75, p_ItemIdx76, p_ItemIdx77, p_ItemIdx78, p_ItemIdx79, p_ItemIdx80,
							p_ItemIdx81, p_ItemIdx82, p_ItemIdx83, p_ItemIdx84, p_ItemIdx85, p_ItemIdx86, p_ItemIdx87, p_ItemIdx88, p_ItemIdx89, p_ItemIdx90,
							p_ItemIdx91, p_ItemIdx92, p_ItemIdx93, p_ItemIdx94, p_ItemIdx95, p_ItemIdx96, p_ItemIdx97, p_ItemIdx98, p_ItemIdx99, p_ItemIdx100);
        
        DELETE FROM item_jewels
        WHERE item_idx IN (p_ItemIdx01, p_ItemIdx02, p_ItemIdx03, p_ItemIdx04, p_ItemIdx05, p_ItemIdx06, p_ItemIdx07, p_ItemIdx08, p_ItemIdx09, p_ItemIdx10,
							p_ItemIdx11, p_ItemIdx12, p_ItemIdx13, p_ItemIdx14, p_ItemIdx15, p_ItemIdx16, p_ItemIdx17, p_ItemIdx18, p_ItemIdx19, p_ItemIdx20,
							p_ItemIdx21, p_ItemIdx22, p_ItemIdx23, p_ItemIdx24, p_ItemIdx25, p_ItemIdx26, p_ItemIdx27, p_ItemIdx28, p_ItemIdx29, p_ItemIdx30,
							p_ItemIdx31, p_ItemIdx32, p_ItemIdx33, p_ItemIdx34, p_ItemIdx35, p_ItemIdx36, p_ItemIdx37, p_ItemIdx38, p_ItemIdx39, p_ItemIdx40,
							p_ItemIdx41, p_ItemIdx42, p_ItemIdx43, p_ItemIdx44, p_ItemIdx45, p_ItemIdx46, p_ItemIdx47, p_ItemIdx48, p_ItemIdx49, p_ItemIdx50,
							p_ItemIdx51, p_ItemIdx52, p_ItemIdx53, p_ItemIdx54, p_ItemIdx55, p_ItemIdx56, p_ItemIdx57, p_ItemIdx58, p_ItemIdx59, p_ItemIdx60,
							p_ItemIdx61, p_ItemIdx62, p_ItemIdx63, p_ItemIdx64, p_ItemIdx65, p_ItemIdx66, p_ItemIdx67, p_ItemIdx68, p_ItemIdx69, p_ItemIdx70,
							p_ItemIdx71, p_ItemIdx72, p_ItemIdx73, p_ItemIdx74, p_ItemIdx75, p_ItemIdx76, p_ItemIdx77, p_ItemIdx78, p_ItemIdx79, p_ItemIdx80,
							p_ItemIdx81, p_ItemIdx82, p_ItemIdx83, p_ItemIdx84, p_ItemIdx85, p_ItemIdx86, p_ItemIdx87, p_ItemIdx88, p_ItemIdx89, p_ItemIdx90,
							p_ItemIdx91, p_ItemIdx92, p_ItemIdx93, p_ItemIdx94, p_ItemIdx95, p_ItemIdx96, p_ItemIdx97, p_ItemIdx98, p_ItemIdx99, p_ItemIdx100);
        
        DELETE FROM item_option
        WHERE item_idx IN (p_ItemIdx01, p_ItemIdx02, p_ItemIdx03, p_ItemIdx04, p_ItemIdx05, p_ItemIdx06, p_ItemIdx07, p_ItemIdx08, p_ItemIdx09, p_ItemIdx10,
							p_ItemIdx11, p_ItemIdx12, p_ItemIdx13, p_ItemIdx14, p_ItemIdx15, p_ItemIdx16, p_ItemIdx17, p_ItemIdx18, p_ItemIdx19, p_ItemIdx20,
							p_ItemIdx21, p_ItemIdx22, p_ItemIdx23, p_ItemIdx24, p_ItemIdx25, p_ItemIdx26, p_ItemIdx27, p_ItemIdx28, p_ItemIdx29, p_ItemIdx30,
							p_ItemIdx31, p_ItemIdx32, p_ItemIdx33, p_ItemIdx34, p_ItemIdx35, p_ItemIdx36, p_ItemIdx37, p_ItemIdx38, p_ItemIdx39, p_ItemIdx40,
							p_ItemIdx41, p_ItemIdx42, p_ItemIdx43, p_ItemIdx44, p_ItemIdx45, p_ItemIdx46, p_ItemIdx47, p_ItemIdx48, p_ItemIdx49, p_ItemIdx50,
							p_ItemIdx51, p_ItemIdx52, p_ItemIdx53, p_ItemIdx54, p_ItemIdx55, p_ItemIdx56, p_ItemIdx57, p_ItemIdx58, p_ItemIdx59, p_ItemIdx60,
							p_ItemIdx61, p_ItemIdx62, p_ItemIdx63, p_ItemIdx64, p_ItemIdx65, p_ItemIdx66, p_ItemIdx67, p_ItemIdx68, p_ItemIdx69, p_ItemIdx70,
							p_ItemIdx71, p_ItemIdx72, p_ItemIdx73, p_ItemIdx74, p_ItemIdx75, p_ItemIdx76, p_ItemIdx77, p_ItemIdx78, p_ItemIdx79, p_ItemIdx80,
							p_ItemIdx81, p_ItemIdx82, p_ItemIdx83, p_ItemIdx84, p_ItemIdx85, p_ItemIdx86, p_ItemIdx87, p_ItemIdx88, p_ItemIdx89, p_ItemIdx90,
							p_ItemIdx91, p_ItemIdx92, p_ItemIdx93, p_ItemIdx94, p_ItemIdx95, p_ItemIdx96, p_ItemIdx97, p_ItemIdx98, p_ItemIdx99, p_ItemIdx100);    


		
        CALL sp_mmo_notrans_charinfo_insert_gold(p_UserID, p_CharID, p_AddTotalGold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;
        
	END;
		
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result, final_gold;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete_auction_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete_auction_one`( 
	IN	p_UserID 		BIGINT
,   IN	p_CharID 		BIGINT
,   IN	p_ItemDBIdx 	BIGINT	
,	IN	p_DecGoldCost	BIGINT	
,	IN	p_MaxRegCount		INT
,	IN	p_RegistDuration	INT

,	IN	p_NickName			VARCHAR(26)
,	IN	p_PassWord			INT
,	IN	p_SellPrice			INT
,	IN	p_CharClass			INT
,	IN	p_ItemNameID		INT
,	IN	p_ItemGroup			INT
,	IN	p_ItemSubGroup		INT

,   IN p_Equip_itemdbindex		BIGINT,		IN p_Equip_itemid 		INT,	IN p_Equip_quality		INT
,	IN p_Equip_itemlevel		INT,		IN p_Equip_equiptype	INT,	IN p_Equip_itemexp		INT
, 	IN p_Equip_enchant_level	TINYINT,	IN p_Equip_item_grade	TINYINT
,	IN p_Equip_attrid		INT,		IN p_Equip_attrvalue		INT
,	IN p_Equip_jewel1		INT,		IN p_Equip_jewel2			INT,		IN p_Equip_jewel3		INT	
,	IN p_Equip_jewel4		INT,		IN p_Equip_jewel5			INT,		IN p_Equip_jewel6		INT
, 	IN p_Equip_identify	TINYINT
,	IN p_Equip_optid1		INT,		IN p_Equip_optvalue1		SMALLINT
,	IN p_Equip_optid2		INT,		IN p_Equip_optvalue2		SMALLINT
,	IN p_Equip_optid3		INT,		IN p_Equip_optvalue3		SMALLINT
,	IN p_Equip_optid4		INT,		IN p_Equip_optvalue4		SMALLINT
,	IN p_Equip_optid5		INT,		IN p_Equip_optvalue5		SMALLINT
,	IN p_Equip_optid6		INT,		IN p_Equip_optvalue6		SMALLINT
,	IN p_Equip_optid7		INT,		IN p_Equip_optvalue7		SMALLINT
)
    COMMENT '장비 아이템 아이템 거래소 올리기'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_auctionidx 		BIGINT DEFAULT 0;
	-- DECLARE v_regist_max_qty 	INT DEFAULT 30;
    DECLARE v_regist_qty 		INT DEFAULT 0;
   
    DECLARE v_final_gold		BIGINT DEFAULT 0;

    DECLARE v_equip				INT DEFAULT 0;
    DECLARE v_belong			INT DEFAULT 0;
   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold, v_auctionidx;
	END;


	START TRANSACTION;
   
    root:
    BEGIN

		
		SELECT equip, belong INTO v_equip, v_belong
		FROM char_inven_equip
		WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;
			LEAVE root;
        END IF;
        
        
        IF 0 < v_equip THEN
			SET v_result = 102;
			LEAVE root;
        END IF;
        
        
        IF 0 < v_belong THEN
			SET v_result = 103;
			LEAVE root;
        END IF;

		
		SELECT count(*) INTO v_regist_qty
        FROM tbl_auction_items
        WHERE fld_char_idx = p_CharID;
		IF p_MaxRegCount <=  v_regist_qty THEN
			SET v_result = 104;
			LEAVE root;
        END IF;



		

    	
        CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DecGoldCost, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
		
		CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_ItemDBIdx, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
		
        
        
        
        
        
        CALL asp_mmo_auctionitemsai_insert_getindex(v_result, v_auctionidx);
		IF 0 <> v_result THEN
			SET v_result = 105;
			LEAVE root;
        END IF;
        
		
		INSERT INTO tbl_auction_items (fld_index, fld_db_idx, fld_user_idx, fld_char_idx, fld_nick, fld_char_class
										, fld_item_name_id, fld_item_group, fld_item_group_sub
                                        , fld_item_idx, fld_equip_item_id, fld_equip_item_grade, fld_equip_type, fld_equip_quality_grade, fld_equip_level, fld_equip_exp, fld_equip_enchant_level
                                        , fld_equip_attr_id, fld_equip_attr_value
                                        , fld_equip_jewel_1, fld_equip_jewel_2, fld_equip_jewel_3, fld_equip_jewel_4, fld_equip_jewel_5, fld_equip_jewel_6
                                        , fld_equip_identify
                                        , fld_equip_option_id_1, fld_equip_option_value_1, fld_equip_option_id_2, fld_equip_option_value_2
                                        , fld_equip_option_id_3, fld_equip_option_value_3, fld_equip_option_id_4, fld_equip_option_value_4
                                        , fld_equip_option_id_5, fld_equip_option_value_5, fld_equip_option_id_6, fld_equip_option_value_6
                                        , fld_equip_option_id_7, fld_equip_option_value_7
                                        , fld_sell_password, fld_register_date, fld_expire_date, fld_sell_price)
                                        
							VALUES(v_auctionidx, 1, p_UserID, p_CharID, p_NickName, p_CharClass
									, p_ItemNameID, p_ItemGroup, p_ItemSubGroup
                                    , p_Equip_itemdbindex, p_Equip_itemid, p_Equip_item_grade, p_Equip_equiptype, p_Equip_quality, p_Equip_itemlevel, p_Equip_itemexp, p_Equip_enchant_level
                                    , p_Equip_attrid, p_Equip_attrvalue
                                    , p_Equip_jewel1, p_Equip_jewel2, p_Equip_jewel3, p_Equip_jewel4, p_Equip_jewel5, p_Equip_jewel6
                                    , p_Equip_identify
                                    , p_Equip_optid1, p_Equip_optvalue1, p_Equip_optid2, p_Equip_optvalue2
                                    , p_Equip_optid3, p_Equip_optvalue3, p_Equip_optid4, p_Equip_optvalue4
                                    , p_Equip_optid5, p_Equip_optvalue5, p_Equip_optid6, p_Equip_optvalue6
                                    , p_Equip_optid7, p_Equip_optvalue7
                                    , p_PassWord, now(), date_add(now(), interval + p_RegistDuration day), p_SellPrice);
                                    
		IF 0 = ROW_COUNT() THEN
			SET v_result = 106;
			LEAVE root;
		END IF;

	END;

    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	SELECT v_result, v_final_gold, v_auctionidx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete_disassemble` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete_disassemble`( 
	IN p_UserID			BIGINT	
,	IN p_CharID 		BIGINT	
,	IN p_ItemDBIdx		BIGINT	
,	IN p_CostItemType1	TINYINT,	IN p_CostItemID1	INT,	IN p_CostItemValue1	INT
,	IN p_CostItemType2	TINYINT,	IN p_CostItemID2	INT,	IN p_CostItemValue2	INT
,	IN p_CostItemType3	TINYINT,	IN p_CostItemID3	INT,	IN p_CostItemValue3	INT
,	IN p_CostItemType4	TINYINT,	IN p_CostItemID4	INT,	IN p_CostItemValue4	INT
,	IN p_CostItemType5	TINYINT,	IN p_CostItemID5	INT,	IN p_CostItemValue5	INT
,	IN p_CostItemType6	TINYINT,	IN p_CostItemID6	INT,	IN p_CostItemValue6	INT
,	IN p_CostItemType7	TINYINT,	IN p_CostItemID7	INT,	IN p_CostItemValue7	INT
,	IN p_CostItemType8	TINYINT,	IN p_CostItemID8	INT,	IN p_CostItemValue8	INT
,	IN p_CostItemType9	TINYINT,	IN p_CostItemID9	INT,	IN p_CostItemValue9	INT
,	IN p_CostItemType10	TINYINT,	IN p_CostItemID10	INT,	IN p_CostItemValue10	INT
)
    COMMENT '장비 아이템 분해'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
    DECLARE v_item_final_qty7	INT DEFAULT 0;
    DECLARE v_item_final_qty8	INT DEFAULT 0;
    DECLARE v_item_final_qty9	INT DEFAULT 0;
    DECLARE v_item_final_qty10	INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_item_final_qty1, v_item_final_qty2, v_item_final_qty3, v_item_final_qty4, v_item_final_qty5
						, v_item_final_qty6, v_item_final_qty7, v_item_final_qty8, v_item_final_qty9, v_item_final_qty10;
	END;
   
   
   	START TRANSACTION;	
    
    root:
    BEGIN

		
		CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_ItemDBIdx, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF; 
        
        
		IF 0 < p_CostItemID1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType1, p_CostItemID1, p_CostItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType2, p_CostItemID2, p_CostItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType3, p_CostItemID3, p_CostItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType4, p_CostItemID4, p_CostItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
		IF 0 < p_CostItemID5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType5, p_CostItemID5, p_CostItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        
		IF 0 < p_CostItemID6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType6, p_CostItemID6, p_CostItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        
		IF 0 < p_CostItemID7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType7, p_CostItemID7, p_CostItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
                
		IF 0 < p_CostItemID8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType8, p_CostItemID8, p_CostItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
                
		IF 0 < p_CostItemID9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType9, p_CostItemID9, p_CostItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
                
		IF 0 < p_CostItemID10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_CostItemType10, p_CostItemID10, p_CostItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
	END;

    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result, v_item_final_qty1, v_item_final_qty2, v_item_final_qty3, v_item_final_qty4, v_item_final_qty5
					, v_item_final_qty6, v_item_final_qty7, v_item_final_qty8, v_item_final_qty9, v_item_final_qty10;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete_enchant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete_enchant`(
	IN	p_UserID 			BIGINT		
,	IN	p_CharID 			BIGINT		
,	IN	p_ItemIdx			BIGINT		
,	IN	p_DeleteGold		BIGINT		
,	IN	_deleteCashA	BIGINT		
,	IN	_resitemid		INT			
,	IN	_resitemvalue	INT	
,	IN	p_ResItemID1		INT			
,	IN	p_ResItemID2		INT			
,	IN	p_ResItemID3		INT			
,	IN	p_ResItemID4		INT			
,	IN 	p_ExpireTime		INT			
,	IN 	p_RestoreAble		INT 		
)
    COMMENT '장비 아이템 Enchant 실패'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_final_gold 				BIGINT DEFAULT 0;
	DECLARE v_finalCashA				BIGINT DEFAULT 0;
    DECLARE v_resitem0_final_qty		INT DEFAULT 0;
    DECLARE v_resitem1_final_qty		INT DEFAULT 0;
    DECLARE v_resitem2_final_qty		INT DEFAULT 0;
    DECLARE v_resitem3_final_qty		INT DEFAULT 0;
    DECLARE v_resitem4_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_final_gold
			, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
            , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	END; 
    

	START TRANSACTION;
    
    root:
    BEGIN
    
		
        if 0 < p_RestoreAble then
			CALL sp_mmo_notrans_charinvenequiprestorebox_insert(p_CharID, p_ItemIdx, p_ExpireTime, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;      
		ELSE
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_ItemIdx, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
        
        CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DeleteGold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		
		CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _decCashA, v_finalCashA, v_result);		
        IF v_result != 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 

        IF 0 < _resitemid THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid, _resitemvalue, v_resitem0_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;   
        
        IF 0 < p_ResItemID1 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID1, 1, v_resitem1_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
        
        IF 0 < p_ResItemID2 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID2, 1, v_resitem2_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;

        IF 0 < p_ResItemID3 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID3, 1, v_resitem3_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
        
        IF 0 < p_ResItemID4 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID4, 1, v_resitem4_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;        
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	SELECT v_result, v_finalCashA, v_final_gold
		, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
        , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_delete_enchant_guard` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_delete_enchant_guard`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_deletegold		BIGINT		
,	IN	_deleteCashA	BIGINT		
,	IN	_resitemid		INT			
,	IN	_resitemvalue	INT	
,	IN	_resitemid1		INT			
,	IN	_resitemid2		INT	
,	IN	_resitemid3		INT
,	IN	_resitemid4		INT
)
    COMMENT '장비 아이템 Enchant 실패'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_final_gold 				BIGINT DEFAULT 0;
    DECLARE v_finalCashA				BIGINT DEFAULT 0;
    DECLARE v_resitem0_final_qty		INT DEFAULT 0;
    DECLARE v_resitem1_final_qty		INT DEFAULT 0;
    DECLARE v_resitem2_final_qty		INT DEFAULT 0;
    DECLARE v_resitem3_final_qty		INT DEFAULT 0;
    DECLARE v_resitem4_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_final_gold
			, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
            , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	END; 
    

	START TRANSACTION;
    
    root:
    BEGIN
    
        
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		
		CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _decCashA, v_finalCashA, v_result);		
        IF v_result != 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 

        IF 0 < _resitemid THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid, _resitemvalue, v_resitem0_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;   
        
        IF 0 < _resitemid1 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid1, 1, v_resitem1_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
        
        IF 0 < _resitemid2 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid2, 1, v_resitem2_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;

        IF 0 < _resitemid3 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid3, 1, v_resitem3_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
        
        IF 0 < _resitemid4 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid4, 1, v_resitem4_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;        
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	SELECT v_result, v_finalCashA, v_final_gold
		, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
		, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_enchant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_enchant`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_deletegold		BIGINT		
,	IN	_deleteCashA	BIGINT		
,	IN 	_ExpireRestoreTime		INT			

-- 강화 아이템 0번부터 11까지.. 12개
,	IN	_itemidx0		BIGINT		
,	IN 	_EnchantResult0	TINYINT 
,	IN	_enchantlevel0	TINYINT
,	IN 	_RestoreAble0	TINYINT 		

-- 1
,	IN	_itemidx1		BIGINT		
,	IN 	_EnchantResult1	TINYINT 
,	IN	_enchantlevel1	TINYINT
,	IN 	_RestoreAble1	TINYINT 		
-- 2
,	IN	_itemidx2		BIGINT		
,	IN 	_EnchantResult2	TINYINT 
,	IN	_enchantlevel2	TINYINT
,	IN 	_RestoreAble2	TINYINT 			
-- 3
,	IN	_itemidx3		BIGINT		
,	IN 	_EnchantResult3	TINYINT 
,	IN	_enchantlevel3	TINYINT
,	IN 	_RestoreAble3	TINYINT 			
-- 4
,	IN	_itemidx4		BIGINT		
,	IN 	_EnchantResult4	TINYINT 
,	IN	_enchantlevel4	TINYINT
,	IN 	_RestoreAble4	TINYINT 			
-- 5
,	IN	_itemidx5		BIGINT		
,	IN 	_EnchantResult5	TINYINT 
,	IN	_enchantlevel5	TINYINT
,	IN 	_RestoreAble5	TINYINT 			
-- 6
,	IN	_itemidx6		BIGINT		
,	IN 	_EnchantResult6	TINYINT 
,	IN	_enchantlevel6	TINYINT
,	IN 	_RestoreAble6	TINYINT 			
-- 7
,	IN	_itemidx7		BIGINT		
,	IN 	_EnchantResult7	TINYINT 
,	IN	_enchantlevel7	TINYINT
,	IN 	_RestoreAble7	TINYINT 		
-- 8
,	IN	_itemidx8		BIGINT		
,	IN 	_EnchantResult8	TINYINT 
,	IN	_enchantlevel8	TINYINT
,	IN 	_RestoreAble8	TINYINT 			
-- 9
,	IN	_itemidx9		BIGINT		
,	IN 	_EnchantResult9	TINYINT 
,	IN	_enchantlevel9	TINYINT
,	IN 	_RestoreAble9	TINYINT 			
-- 10
,	IN	_itemidx10		BIGINT		
,	IN 	_EnchantResult10	TINYINT 
,	IN	_enchantlevel10	TINYINT
,	IN 	_RestoreAble10	TINYINT 				
-- 11
,	IN	_itemidx11		BIGINT		
,	IN 	_EnchantResult11	TINYINT 
,	IN	_enchantlevel11	TINYINT
,	IN 	_RestoreAble11	TINYINT 				

--
,	IN	_arrayResItem VARCHAR(4096)
)
    COMMENT '장비 아이템 Enchant: ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30,ERT_FAIL_GRATE = 40,'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_final_gold 				BIGINT DEFAULT 0;
	DECLARE v_finalCashA	BIGINT DEFAULT 0;
        
    DECLARE v_enchant_level_max			INT DEFAULT 15;	
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    # Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_final_gold
		-- 	, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
            , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	END; 
    

	START TRANSACTION;
    
    root:
    BEGIN
  
		-- _itemidx0
        IF 40 = _EnchantResult0 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble0 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx0, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx0, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel0 AND _enchantlevel0 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx0, _enchantlevel0, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1100;	
				LEAVE root;	
			END IF;
        END IF;
        -- _itemidx1
        IF 0 < _itemidx1 THEN IF 40 = _EnchantResult1 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble1 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx1, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx1, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel1 AND _enchantlevel1 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx1, _enchantlevel1, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1101;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx2
        IF 0 < _itemidx2 THEN IF 40 = _EnchantResult2 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble2 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx2, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx2, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel2 AND _enchantlevel2 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx2, _enchantlevel2, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1102;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx3
        IF 0 < _itemidx3 THEN IF 40 = _EnchantResult3 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble3 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx3, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx3, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel3 AND _enchantlevel3 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx3, _enchantlevel3, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1103;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx4
        IF 0 < _itemidx4 THEN IF 40 = _EnchantResult4 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble4 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx4, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx4, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel4 AND _enchantlevel4 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx4, _enchantlevel4, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1104;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx5
        IF 0 < _itemidx5 THEN IF 40 = _EnchantResult5 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble5 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx5, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx5, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel5 AND _enchantlevel5 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx5, _enchantlevel5, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1105;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx6
        IF 0 < _itemidx6 THEN IF 40 = _EnchantResult6 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble6 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx6, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel6 AND _enchantlevel6 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx6, _enchantlevel6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1106;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx7
        IF 0 < _itemidx7 THEN IF 40 = _EnchantResult7 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble7 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx7, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx7, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel7 AND _enchantlevel7 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx7, _enchantlevel7, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1107;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx8
        IF 0 < _itemidx8 THEN IF 40 = _EnchantResult8 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble8 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx8, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx8, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel8 AND _enchantlevel8 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx8, _enchantlevel8, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1108;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx9
        IF 0 < _itemidx9 THEN IF 40 = _EnchantResult9 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble9 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx9, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx9, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel9 AND _enchantlevel9 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx9, _enchantlevel9, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1109;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx10
        IF 0 < _itemidx10 THEN IF 40 = _EnchantResult10 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble10 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx10, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx10, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel10 AND _enchantlevel10 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx10, _enchantlevel10, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1110;	
				LEAVE root;	
			END IF;
        END IF; END IF;
        -- _itemidx11
        IF 0 < _itemidx11 THEN IF 40 = _EnchantResult11 THEN	-- ERT_FAIL_GRATE = 40
			if 0 < _RestoreAble11 then
				CALL sp_mmo_notrans_charinvenequiprestorebox_insert(_charid, _itemidx11, _ExpireRestoreTime, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				CALL sp_mmo_notrans_charinvenequip_delete(_charid, _itemidx11, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;
		ELSE -- ERT_SUCCESS_NORMAL = 10,ERT_SUCCESS_GRATE = 20,ERT_FAIL_NORMAL = 30
			IF 0 <= _enchantlevel11 AND _enchantlevel11 <= v_enchant_level_max THEN
				CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx11, _enchantlevel11, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;      
			ELSE
				SET v_result = 1111;	
				LEAVE root;	
			END IF;
        END IF; END IF;
		-- 
		
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
        
        IF 0 = _deleteCashA THEN
			SET v_finalCashA = v_cashA_new + v_cashA_Free_new;
        END IF;

		-- 
        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
					CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
			-- CountItem End

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;


	SELECT v_result, v_finalCashA, v_final_gold
		-- , v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
        , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_identify` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_identify`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_deletegold		INT		
-- ,	IN	_deleteCashA	BIGINT
,	IN 	_materialitemid		INT
,	IN 	_materialitemcount	INT

-- 아이템 0번부터 11까지.. 12개
,	IN	_itemidx0		BIGINT		
,	IN	_itemidx0_optionid1		INT,	IN	_itemidx0_optionvalue1	INT,	IN	_itemidx0_optionslot1	INT
,	IN	_itemidx0_optionid2		INT,	IN	_itemidx0_optionvalue2	INT,	IN	_itemidx0_optionslot2	INT
,	IN	_itemidx0_optionid3		INT,	IN	_itemidx0_optionvalue3	INT,	IN	_itemidx0_optionslot3	INT
,	IN	_itemidx0_optionid4		INT,	IN	_itemidx0_optionvalue4	INT,	IN	_itemidx0_optionslot4	INT
,	IN	_itemidx0_optionid5		INT,	IN	_itemidx0_optionvalue5	INT,	IN	_itemidx0_optionslot5	INT
,	IN	_itemidx0_optionid6		INT,	IN	_itemidx0_optionvalue6	INT,	IN	_itemidx0_optionslot6	INT

-- 1
,	IN	_itemidx1		BIGINT		
,	IN	_itemidx1_optionid1		INT,	IN	_itemidx1_optionvalue1	INT,	IN	_itemidx1_optionslot1	INT
,	IN	_itemidx1_optionid2		INT,	IN	_itemidx1_optionvalue2	INT,	IN	_itemidx1_optionslot2	INT
,	IN	_itemidx1_optionid3		INT,	IN	_itemidx1_optionvalue3	INT,	IN	_itemidx1_optionslot3	INT
,	IN	_itemidx1_optionid4		INT,	IN	_itemidx1_optionvalue4	INT,	IN	_itemidx1_optionslot4	INT
,	IN	_itemidx1_optionid5		INT,	IN	_itemidx1_optionvalue5	INT,	IN	_itemidx1_optionslot5	INT
,	IN	_itemidx1_optionid6		INT,	IN	_itemidx1_optionvalue6	INT,	IN	_itemidx1_optionslot6	INT

-- 2
,	IN	_itemidx2		BIGINT		
,	IN	_itemidx2_optionid1		INT,	IN	_itemidx2_optionvalue1	INT,	IN	_itemidx2_optionslot1	INT
,	IN	_itemidx2_optionid2		INT,	IN	_itemidx2_optionvalue2	INT,	IN	_itemidx2_optionslot2	INT
,	IN	_itemidx2_optionid3		INT,	IN	_itemidx2_optionvalue3	INT,	IN	_itemidx2_optionslot3	INT
,	IN	_itemidx2_optionid4		INT,	IN	_itemidx2_optionvalue4	INT,	IN	_itemidx2_optionslot4	INT
,	IN	_itemidx2_optionid5		INT,	IN	_itemidx2_optionvalue5	INT,	IN	_itemidx2_optionslot5	INT
,	IN	_itemidx2_optionid6		INT,	IN	_itemidx2_optionvalue6	INT,	IN	_itemidx2_optionslot6	INT

-- 3
,	IN	_itemidx3		BIGINT		
,	IN	_itemidx3_optionid1		INT,	IN	_itemidx3_optionvalue1	INT,	IN	_itemidx3_optionslot1	INT
,	IN	_itemidx3_optionid2		INT,	IN	_itemidx3_optionvalue2	INT,	IN	_itemidx3_optionslot2	INT
,	IN	_itemidx3_optionid3		INT,	IN	_itemidx3_optionvalue3	INT,	IN	_itemidx3_optionslot3	INT
,	IN	_itemidx3_optionid4		INT,	IN	_itemidx3_optionvalue4	INT,	IN	_itemidx3_optionslot4	INT
,	IN	_itemidx3_optionid5		INT,	IN	_itemidx3_optionvalue5	INT,	IN	_itemidx3_optionslot5	INT
,	IN	_itemidx3_optionid6		INT,	IN	_itemidx3_optionvalue6	INT,	IN	_itemidx3_optionslot6	INT

-- 4
,	IN	_itemidx4		BIGINT		
,	IN	_itemidx4_optionid1		INT,	IN	_itemidx4_optionvalue1	INT,	IN	_itemidx4_optionslot1	INT
,	IN	_itemidx4_optionid2		INT,	IN	_itemidx4_optionvalue2	INT,	IN	_itemidx4_optionslot2	INT
,	IN	_itemidx4_optionid3		INT,	IN	_itemidx4_optionvalue3	INT,	IN	_itemidx4_optionslot3	INT
,	IN	_itemidx4_optionid4		INT,	IN	_itemidx4_optionvalue4	INT,	IN	_itemidx4_optionslot4	INT
,	IN	_itemidx4_optionid5		INT,	IN	_itemidx4_optionvalue5	INT,	IN	_itemidx4_optionslot5	INT
,	IN	_itemidx4_optionid6		INT,	IN	_itemidx4_optionvalue6	INT,	IN	_itemidx4_optionslot6	INT

-- 5
,	IN	_itemidx5		BIGINT		
,	IN	_itemidx5_optionid1		INT,	IN	_itemidx5_optionvalue1	INT,	IN	_itemidx5_optionslot1	INT
,	IN	_itemidx5_optionid2		INT,	IN	_itemidx5_optionvalue2	INT,	IN	_itemidx5_optionslot2	INT
,	IN	_itemidx5_optionid3		INT,	IN	_itemidx5_optionvalue3	INT,	IN	_itemidx5_optionslot3	INT
,	IN	_itemidx5_optionid4		INT,	IN	_itemidx5_optionvalue4	INT,	IN	_itemidx5_optionslot4	INT
,	IN	_itemidx5_optionid5		INT,	IN	_itemidx5_optionvalue5	INT,	IN	_itemidx5_optionslot5	INT
,	IN	_itemidx5_optionid6		INT,	IN	_itemidx5_optionvalue6	INT,	IN	_itemidx5_optionslot6	INT

-- 6
,	IN	_itemidx6		BIGINT		
,	IN	_itemidx6_optionid1		INT,	IN	_itemidx6_optionvalue1	INT,	IN	_itemidx6_optionslot1	INT
,	IN	_itemidx6_optionid2		INT,	IN	_itemidx6_optionvalue2	INT,	IN	_itemidx6_optionslot2	INT
,	IN	_itemidx6_optionid3		INT,	IN	_itemidx6_optionvalue3	INT,	IN	_itemidx6_optionslot3	INT
,	IN	_itemidx6_optionid4		INT,	IN	_itemidx6_optionvalue4	INT,	IN	_itemidx6_optionslot4	INT
,	IN	_itemidx6_optionid5		INT,	IN	_itemidx6_optionvalue5	INT,	IN	_itemidx6_optionslot5	INT
,	IN	_itemidx6_optionid6		INT,	IN	_itemidx6_optionvalue6	INT,	IN	_itemidx6_optionslot6	INT

-- 7
,	IN	_itemidx7		BIGINT		
,	IN	_itemidx7_optionid1		INT,	IN	_itemidx7_optionvalue1	INT,	IN	_itemidx7_optionslot1	INT
,	IN	_itemidx7_optionid2		INT,	IN	_itemidx7_optionvalue2	INT,	IN	_itemidx7_optionslot2	INT
,	IN	_itemidx7_optionid3		INT,	IN	_itemidx7_optionvalue3	INT,	IN	_itemidx7_optionslot3	INT
,	IN	_itemidx7_optionid4		INT,	IN	_itemidx7_optionvalue4	INT,	IN	_itemidx7_optionslot4	INT
,	IN	_itemidx7_optionid5		INT,	IN	_itemidx7_optionvalue5	INT,	IN	_itemidx7_optionslot5	INT
,	IN	_itemidx7_optionid6		INT,	IN	_itemidx7_optionvalue6	INT,	IN	_itemidx7_optionslot6	INT

-- 8
,	IN	_itemidx8		BIGINT		
,	IN	_itemidx8_optionid1		INT,	IN	_itemidx8_optionvalue1	INT,	IN	_itemidx8_optionslot1	INT
,	IN	_itemidx8_optionid2		INT,	IN	_itemidx8_optionvalue2	INT,	IN	_itemidx8_optionslot2	INT
,	IN	_itemidx8_optionid3		INT,	IN	_itemidx8_optionvalue3	INT,	IN	_itemidx8_optionslot3	INT
,	IN	_itemidx8_optionid4		INT,	IN	_itemidx8_optionvalue4	INT,	IN	_itemidx8_optionslot4	INT
,	IN	_itemidx8_optionid5		INT,	IN	_itemidx8_optionvalue5	INT,	IN	_itemidx8_optionslot5	INT
,	IN	_itemidx8_optionid6		INT,	IN	_itemidx8_optionvalue6	INT,	IN	_itemidx8_optionslot6	INT

-- 9
,	IN	_itemidx9		BIGINT		
,	IN	_itemidx9_optionid1		INT,	IN	_itemidx9_optionvalue1	INT,	IN	_itemidx9_optionslot1	INT
,	IN	_itemidx9_optionid2		INT,	IN	_itemidx9_optionvalue2	INT,	IN	_itemidx9_optionslot2	INT
,	IN	_itemidx9_optionid3		INT,	IN	_itemidx9_optionvalue3	INT,	IN	_itemidx9_optionslot3	INT
,	IN	_itemidx9_optionid4		INT,	IN	_itemidx9_optionvalue4	INT,	IN	_itemidx9_optionslot4	INT
,	IN	_itemidx9_optionid5		INT,	IN	_itemidx9_optionvalue5	INT,	IN	_itemidx9_optionslot5	INT
,	IN	_itemidx9_optionid6		INT,	IN	_itemidx9_optionvalue6	INT,	IN	_itemidx9_optionslot6	INT

-- 10
,	IN	_itemidx10		BIGINT		
,	IN	_itemidx10_optionid1		INT,	IN	_itemidx10_optionvalue1	INT,	IN	_itemidx10_optionslot1	INT
,	IN	_itemidx10_optionid2		INT,	IN	_itemidx10_optionvalue2	INT,	IN	_itemidx10_optionslot2	INT
,	IN	_itemidx10_optionid3		INT,	IN	_itemidx10_optionvalue3	INT,	IN	_itemidx10_optionslot3	INT
,	IN	_itemidx10_optionid4		INT,	IN	_itemidx10_optionvalue4	INT,	IN	_itemidx10_optionslot4	INT
,	IN	_itemidx10_optionid5		INT,	IN	_itemidx10_optionvalue5	INT,	IN	_itemidx10_optionslot5	INT
,	IN	_itemidx10_optionid6		INT,	IN	_itemidx10_optionvalue6	INT,	IN	_itemidx10_optionslot6	INT

-- 11
,	IN	_itemidx11		BIGINT		
,	IN	_itemidx11_optionid1		INT,	IN	_itemidx11_optionvalue1	INT,	IN	_itemidx11_optionslot1	INT
,	IN	_itemidx11_optionid2		INT,	IN	_itemidx11_optionvalue2	INT,	IN	_itemidx11_optionslot2	INT
,	IN	_itemidx11_optionid3		INT,	IN	_itemidx11_optionvalue3	INT,	IN	_itemidx11_optionslot3	INT
,	IN	_itemidx11_optionid4		INT,	IN	_itemidx11_optionvalue4	INT,	IN	_itemidx11_optionslot4	INT
,	IN	_itemidx11_optionid5		INT,	IN	_itemidx11_optionvalue5	INT,	IN	_itemidx11_optionslot5	INT
,	IN	_itemidx11_optionid6		INT,	IN	_itemidx11_optionvalue6	INT,	IN	_itemidx11_optionslot6	INT
)
    COMMENT '장비 아이템 감정'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_final_gold 				BIGINT DEFAULT 0;
	-- DECLARE v_finalCashA	BIGINT DEFAULT 0;
    
	-- DECLARE v_cashA_old				BIGINT DEFAULT 0;
    -- DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	-- DECLARE v_cashA_new				BIGINT DEFAULT 0;
    -- DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
   

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_resitem_final_qty, v_final_gold;
	END; 
    

	START TRANSACTION;
    
    root:
    BEGIN
  
		-- _itemidx0
		IF 0 < _itemidx0_optionid1 THEN
            CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx0, _itemidx0_optionid1, _itemidx0_optionvalue1, _itemidx0_optionslot1, _itemidx0_optionid2, _itemidx0_optionvalue2, _itemidx0_optionslot2, _itemidx0_optionid3, _itemidx0_optionvalue3, _itemidx0_optionslot3, _itemidx0_optionid4, _itemidx0_optionvalue4, _itemidx0_optionslot4, _itemidx0_optionid5, _itemidx0_optionvalue5, _itemidx0_optionslot5, _itemidx0_optionid6, _itemidx0_optionvalue6, _itemidx0_optionslot6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;

		UPDATE char_inven_equip
        SET identify = 1
        WHERE char_idx = _charid AND item_idx = _itemidx0;
	
        IF row_count() = 0 THEN
			SET v_result = 6070;	
            LEAVE root;
        END IF;

        -- _itemidx1
		IF 0 < _itemidx1 THEN
			IF 0 < _itemidx1_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx1, _itemidx1_optionid1, _itemidx1_optionvalue1, _itemidx1_optionslot1, _itemidx1_optionid2, _itemidx1_optionvalue2, _itemidx1_optionslot2, _itemidx1_optionid3, _itemidx1_optionvalue3, _itemidx1_optionslot3, _itemidx1_optionid4, _itemidx1_optionvalue4, _itemidx1_optionslot4, _itemidx1_optionid5, _itemidx1_optionvalue5, _itemidx1_optionslot5, _itemidx1_optionid6, _itemidx1_optionvalue6, _itemidx1_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx1;
	
			IF row_count() = 0 THEN
				SET v_result = 6071;	
				LEAVE root;
			END IF;
        END IF;        
        
        -- _itemidx2
		IF 0 < _itemidx2 THEN
			IF 0 < _itemidx2_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx2, _itemidx2_optionid1, _itemidx2_optionvalue1, _itemidx2_optionslot1, _itemidx2_optionid2, _itemidx2_optionvalue2, _itemidx2_optionslot2, _itemidx2_optionid3, _itemidx2_optionvalue3, _itemidx2_optionslot3, _itemidx2_optionid4, _itemidx2_optionvalue4, _itemidx2_optionslot4, _itemidx2_optionid5, _itemidx2_optionvalue5, _itemidx2_optionslot5, _itemidx2_optionid6, _itemidx2_optionvalue6, _itemidx2_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx2;
	
			IF row_count() = 0 THEN
				SET v_result = 6072;
				LEAVE root;
			END IF;
        END IF;

        -- _itemidx3
		IF 0 < _itemidx3 THEN
			IF 0 < _itemidx3_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx3, _itemidx3_optionid1, _itemidx3_optionvalue1, _itemidx3_optionslot1, _itemidx3_optionid2, _itemidx3_optionvalue2, _itemidx3_optionslot2, _itemidx3_optionid3, _itemidx3_optionvalue3, _itemidx3_optionslot3, _itemidx3_optionid4, _itemidx3_optionvalue4, _itemidx3_optionslot4, _itemidx3_optionid5, _itemidx3_optionvalue5, _itemidx3_optionslot5, _itemidx3_optionid6, _itemidx3_optionvalue6, _itemidx3_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx3;
	
			IF row_count() = 0 THEN
				SET v_result = 6073;
				LEAVE root;
			END IF;
        END IF;
		
        -- _itemidx4
		IF 0 < _itemidx4 THEN
			IF 0 < _itemidx4_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx4, _itemidx4_optionid1, _itemidx4_optionvalue1, _itemidx4_optionslot1, _itemidx4_optionid2, _itemidx4_optionvalue2, _itemidx4_optionslot2, _itemidx4_optionid3, _itemidx4_optionvalue3, _itemidx4_optionslot3, _itemidx4_optionid4, _itemidx4_optionvalue4, _itemidx4_optionslot4, _itemidx4_optionid5, _itemidx4_optionvalue5, _itemidx4_optionslot5, _itemidx4_optionid6, _itemidx4_optionvalue6, _itemidx4_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx4;
	
			IF row_count() = 0 THEN
				SET v_result = 6074;
				LEAVE root;
			END IF;
        END IF;
		
        -- _itemidx5
		IF 0 < _itemidx5 THEN
			IF 0 < _itemidx5_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx5, _itemidx5_optionid1, _itemidx5_optionvalue1, _itemidx5_optionslot1, _itemidx5_optionid2, _itemidx5_optionvalue2, _itemidx5_optionslot2, _itemidx5_optionid3, _itemidx5_optionvalue3, _itemidx5_optionslot3, _itemidx5_optionid4, _itemidx5_optionvalue4, _itemidx5_optionslot4, _itemidx5_optionid5, _itemidx5_optionvalue5, _itemidx5_optionslot5, _itemidx5_optionid6, _itemidx5_optionvalue6, _itemidx5_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx5;
	
			IF row_count() = 0 THEN
				SET v_result = 6075;
				LEAVE root;
			END IF;
        END IF;
		
        -- _itemidx6
		IF 0 < _itemidx6 THEN
			IF 0 < _itemidx6_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx6, _itemidx6_optionid1, _itemidx6_optionvalue1, _itemidx6_optionslot1, _itemidx6_optionid2, _itemidx6_optionvalue2, _itemidx6_optionslot2, _itemidx6_optionid3, _itemidx6_optionvalue3, _itemidx6_optionslot3, _itemidx6_optionid4, _itemidx6_optionvalue4, _itemidx6_optionslot4, _itemidx6_optionid5, _itemidx6_optionvalue5, _itemidx6_optionslot5, _itemidx6_optionid6, _itemidx6_optionvalue6, _itemidx6_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx6;
	
			IF row_count() = 0 THEN
				SET v_result = 6076;
				LEAVE root;
			END IF;
        END IF;
		
        -- _itemidx7
		IF 0 < _itemidx7 THEN
			IF 0 < _itemidx7_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx7, _itemidx7_optionid1, _itemidx7_optionvalue1, _itemidx7_optionslot1, _itemidx7_optionid2, _itemidx7_optionvalue2, _itemidx7_optionslot2, _itemidx7_optionid3, _itemidx7_optionvalue3, _itemidx7_optionslot3, _itemidx7_optionid4, _itemidx7_optionvalue4, _itemidx7_optionslot4, _itemidx7_optionid5, _itemidx7_optionvalue5, _itemidx7_optionslot5, _itemidx7_optionid6, _itemidx7_optionvalue6, _itemidx7_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx7;
	
			IF row_count() = 0 THEN
				SET v_result = 6077;
				LEAVE root;
			END IF;
		END IF;
		
        -- _itemidx8
		IF 0 < _itemidx8 THEN
			IF 0 < _itemidx8_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx8, _itemidx8_optionid1, _itemidx8_optionvalue1, _itemidx8_optionslot1, _itemidx8_optionid2, _itemidx8_optionvalue2, _itemidx8_optionslot2, _itemidx8_optionid3, _itemidx8_optionvalue3, _itemidx8_optionslot3, _itemidx8_optionid4, _itemidx8_optionvalue4, _itemidx8_optionslot4, _itemidx8_optionid5, _itemidx8_optionvalue5, _itemidx8_optionslot5, _itemidx8_optionid6, _itemidx8_optionvalue6, _itemidx8_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx8;
	
			IF row_count() = 0 THEN
				SET v_result = 6078;
				LEAVE root;
			END IF;
		END IF;
		
        -- _itemidx9
		IF 0 < _itemidx9 THEN
			IF 0 < _itemidx9_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx9, _itemidx9_optionid1, _itemidx9_optionvalue1, _itemidx9_optionslot1, _itemidx9_optionid2, _itemidx9_optionvalue2, _itemidx9_optionslot2, _itemidx9_optionid3, _itemidx9_optionvalue3, _itemidx9_optionslot3, _itemidx9_optionid4, _itemidx9_optionvalue4, _itemidx9_optionslot4, _itemidx9_optionid5, _itemidx9_optionvalue5, _itemidx9_optionslot5, _itemidx9_optionid6, _itemidx9_optionvalue6, _itemidx9_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx9;
	
			IF row_count() = 0 THEN
				SET v_result = 6079;
				LEAVE root;
			END IF;
		END IF;
		
        -- _itemidx10
		IF 0 < _itemidx10 THEN
			IF 0 < _itemidx10_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx10, _itemidx10_optionid1, _itemidx10_optionvalue1, _itemidx10_optionslot1, _itemidx10_optionid2, _itemidx10_optionvalue2, _itemidx10_optionslot2, _itemidx10_optionid3, _itemidx10_optionvalue3, _itemidx10_optionslot3, _itemidx10_optionid4, _itemidx10_optionvalue4, _itemidx10_optionslot4, _itemidx10_optionid5, _itemidx10_optionvalue5, _itemidx10_optionslot5, _itemidx10_optionid6, _itemidx10_optionvalue6, _itemidx10_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx10;
	
			IF row_count() = 0 THEN
				SET v_result = 6080;
				LEAVE root;
			END IF;
		END IF;
		
        -- _itemidx11
		IF 0 < _itemidx11 THEN
			IF 0 < _itemidx11_optionid1 THEN
				CALL sp_mmo_notrans_equipitem_alloptions_insert(_itemidx11, _itemidx11_optionid1, _itemidx11_optionvalue1, _itemidx11_optionslot1, _itemidx11_optionid2, _itemidx11_optionvalue2, _itemidx11_optionslot2, _itemidx11_optionid3, _itemidx11_optionvalue3, _itemidx11_optionslot3, _itemidx11_optionid4, _itemidx11_optionvalue4, _itemidx11_optionslot4, _itemidx11_optionid5, _itemidx11_optionvalue5, _itemidx11_optionslot5, _itemidx11_optionid6, _itemidx11_optionvalue6, _itemidx11_optionslot6, v_result);
				IF v_result <> 0 THEN
					LEAVE root;
				END IF;
			END IF;

			UPDATE char_inven_equip
			SET identify = 1
			WHERE char_idx = _charid AND item_idx = _itemidx11;
	
			IF row_count() = 0 THEN
				SET v_result = 6081;
				LEAVE root;
			END IF;
		END IF;
		-- 
		
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        -- CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		-- IF v_result != 0 THEN 
		-- 	LEAVE root;
		-- END IF; 	
	
		-- IF 0 < _deleteCashA THEN
		-- 	CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_finalCashA, v_result);		
		-- 	IF v_result != 0 THEN
		-- 		LEAVE root;
		-- 	END IF;
		-- END IF;
		
		-- CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		-- IF v_result != 0 THEN 
		-- 	LEAVE root;
		-- END IF;

		IF 0 < _materialitemid AND 0 < _materialitemcount THEN
                
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _materialitemid, _materialitemcount, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
                    
		END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;


	SELECT v_result, v_resitem_final_qty, v_final_gold;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert`(
	IN _useridx 	BIGINT
,	IN _charidx 	BIGINT

,	IN _Itemid 		INT
,	IN _Quality 	INT
,	IN _EquipType 	INT
,	IN _AttrID 		INT
,	IN _AttrValue 	INT
,	IN _SlotID1 	TINYINT
,	IN _OptID1 		INT
,	IN _OptValue1 	SMALLINT
,	IN _SlotID2 	TINYINT
,	IN _OptID2 		INT
,	IN _OptValue2 	SMALLINT
,	IN _SlotID3 	TINYINT
,	IN _OptID3 		INT
,	IN _OptValue3 	SMALLINT
,	IN _SlotID4 	TINYINT
,	IN _OptID4 		INT
,	IN _OptValue4 	SMALLINT
,	IN _SlotID5 	TINYINT
,	IN _OptID5 		INT
,	IN _OptValue5 	SMALLINT
,	IN _SlotID6 	TINYINT
,	IN _OptID6 		INT
,	IN _OptValue6 	SMALLINT
,	IN _SlotID7 	TINYINT
,	IN _OptID7 		INT
,	IN _OptValue7 	SMALLINT
)
    COMMENT '아이템 보상 지급처리.'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	
	
	
	DECLARE _itemDBIndex 	BIGINT DEFAULT 0;
	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result, _itemDBIndex;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
		
        
		
		IF _Itemid != 0 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, 0, _result, _itemDBIndex);
				
			IF 0 <> _result THEN				
				LEAVE root;
			END IF;	
		END;
		END IF;
			
	END;
	
	
	
	if 0 = _result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT _result, _itemDBIndex;	

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_freebattle_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_freebattle_reward`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT

,	IN _rewardId 		INT
,	IN _nextinittime	BIGINT


,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
,	IN _addCashB 		BIGINT


,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT


,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT

)
    COMMENT '난투전 보상 지급 처리. '
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    
    DECLARE v_final_gold		BIGINT DEFAULT 0;
    DECLARE v_final_cashA		BIGINT DEFAULT 0;
    DECLARE v_final_cashB		BIGINT DEFAULT 0;
    
	DECLARE v_cashA_old			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old	BIGINT DEFAULT 0;
	DECLARE v_cashA_new			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new	BIGINT DEFAULT 0;	
    DECLARE v_cashB_old			BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old	BIGINT DEFAULT 0;
    DECLARE v_cashB_new			BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new	BIGINT DEFAULT 0;    

    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold, v_final_cashA, v_final_cashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new
				, v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5;
	END;
   
   	START TRANSACTION;	
    
    root:
    BEGIN
  

		
        INSERT INTO char_free_battle_reward(char_idx, rewardid, getreward, next_init_time) 
        VALUES (_charid, _rewardId, 1, FROM_UNIXTIME(_nextinittime)) 
        ON DUPLICATE KEY UPDATE getreward = 1;
    
		
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_final_gold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_final_cashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;        
        END IF;
       
        
		IF _addCashB > 0 THEN 		
			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
  
			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_final_cashB, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
                  
            CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;  
   
        END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
	END;

    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result, v_final_gold, v_final_cashA, v_final_cashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new
				, v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_make` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_make`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT
,	IN	p_UserGold		BIGINT		
, 	IN 	p_UseCashA		BIGINT		
, 	IN 	p_makeitemTableId	INT		
, 	IN 	p_makeitemLimit		INT		
,	IN  p_makeitemLimitType	INT 	

,	IN	p_Protect_ID		INT		
,	IN	p_Success_ID		INT		
,	IN	p_Success_ID2		INT		

,	IN	p_Material_ID1	INT,	IN	p_Material_Val1	INT,	IN	p_Material_ID2	INT,	IN	p_Material_Val2	INT,	IN	p_Material_ID3	INT,	IN	p_Material_Val3	INT
,	IN	p_Material_ID4	INT,	IN	p_Material_Val4	INT,	IN	p_Material_ID5	INT,	IN	p_Material_Val5	INT

,	IN	p_EquipItemDBIdx1	BIGINT,	IN	p_EquipItemDBIdx2	BIGINT,	IN	p_EquipItemDBIdx3	BIGINT,	IN	p_EquipItemDBIdx4	BIGINT,	IN	p_EquipItemDBIdx5	BIGINT
,	IN	p_EquipItemDBIdx6	BIGINT,	IN	p_EquipItemDBIdx7	BIGINT,	IN	p_EquipItemDBIdx8	BIGINT,	IN	p_EquipItemDBIdx9	BIGINT,	IN	p_EquipItemDBIdx10	BIGINT

,	IN	p_SkillBookItemDBIdx1	BIGINT,	IN	p_SkillBookItemDBIdx2	BIGINT,	IN	p_SkillBookItemDBIdx3	BIGINT
,	IN	p_SkillBookItemDBIdx4	BIGINT,	IN	p_SkillBookItemDBIdx5	BIGINT,	IN	p_SkillBookItemDBIdx6	BIGINT
,	IN	p_SkillBookItemDBIdx7	BIGINT,	IN	p_SkillBookItemDBIdx8	BIGINT,	IN	p_SkillBookItemDBIdx9	BIGINT,	IN	p_SkillBookItemDBIdx10	BIGINT

,	IN _Itemid 			INT,		IN _Quality 		INT,	IN _EquipType 		INT
,	IN _AttrID 			INT,		IN _AttrValue 		INT,	IN _Belong			TINYINT,	IN _Identified			TINYINT
, 	IN _EnchantLevel	INT
,	IN _SlotID1 		TINYINT,	IN _OptID1 			INT,	IN _OptValue1 		SMALLINT
,	IN _SlotID2 		TINYINT,	IN _OptID2 			INT,	IN _OptValue2 		SMALLINT
,	IN _SlotID3 		TINYINT,	IN _OptID3 			INT,	IN _OptValue3 		SMALLINT
,	IN _SlotID4 		TINYINT,	IN _OptID4 			INT,	IN _OptValue4 		SMALLINT
,	IN _SlotID5 		TINYINT,	IN _OptID5 			INT,	IN _OptValue5 		SMALLINT
,	IN _SlotID6 		TINYINT,	IN _OptID6 			INT,	IN _OptValue6 		SMALLINT
,	IN _SlotID7 		TINYINT,	IN _OptID7 			INT,	IN _OptValue7 		SMALLINT

,	IN _type TINYINT,	IN _consumeItemid 	INT,		IN _ammount INT

,	IN	_bookitemid 	INT,	IN _percent INT,	IN _liftTime INT,	IN _value INT,	IN _bookbelong TINYINT
)
    COMMENT '아이템 제작'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;	
    
	DECLARE finalgold 		BIGINT DEFAULT 0;
    DECLARE v_finalcashA	BIGINT DEFAULT 0;
    DECLARE itemDBIndex 	BIGINT DEFAULT 0;
    DECLARE v_finalItemMakeQty			INT DEFAULT 0;
    DECLARE v_finalServerItemMakeQty	INT DEFAULT 0;
    
    DECLARE qty_protect 	INT DEFAULT 0;
    DECLARE qty_success 	INT DEFAULT 0;
	DECLARE qty_success2 	INT DEFAULT 0;
    
    DECLARE qty_material1 	INT DEFAULT 0;
    DECLARE qty_material2	INT DEFAULT 0;
    DECLARE qty_material3	INT DEFAULT 0;
    DECLARE qty_material4	INT DEFAULT 0;
    DECLARE qty_material5	INT DEFAULT 0;
    
    DECLARE qty_result 		INT DEFAULT 0;
    
    DECLARE bookDBIndex 	BIGINT DEFAULT 0;    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, finalgold, v_finalcashA, itemDBIndex, bookDBIndex, qty_protect, qty_success, qty_success2, qty_material1, qty_material2, qty_material3, qty_material4, qty_material5, qty_result, v_finalItemMakeQty, v_finalServerItemMakeQty;
	END;


	START TRANSACTION;	

	root:
	BEGIN
		
        
		IF 0 < p_makeitemTableId THEN
        BEGIN
			
            IF 1 = p_makeitemLimitType THEN
            BEGIN
				
				INSERT INTO char_makeitem_limit VALUES(p_CharID, p_makeitemTableId, 1, NOW()) 
					ON DUPLICATE KEY UPDATE make_qty = (@v_finalItemMakeQty := make_qty + 1);
	  
				IF 1 = ROW_COUNT() THEN
					
					SET v_finalItemMakeQty = 1;
				ELSEIF 2 = ROW_COUNT() THEN
					
					SET v_finalItemMakeQty = @v_finalItemMakeQty;
				ELSE
					
					SET v_result = 101;	
					LEAVE root;
				END IF;
				
				
				IF p_makeitemLimit < v_finalItemMakeQty THEN
					SET v_result = 102;	
					LEAVE root;
				END IF;
			END;
            ELSEIF 2 = p_makeitemLimitType THEN
            BEGIN
				
				INSERT INTO server_makeitem_limit VALUES(p_makeitemTableId, p_makeitemLimit, 1, NOW(), NOW()) 
					ON DUPLICATE KEY UPDATE make_qty = (@v_finalServerItemMakeQty := make_qty + 1), make_limit = p_makeitemLimit, update_date = NOW();
                    
				IF 1 = ROW_COUNT() THEN
					
					SET v_finalServerItemMakeQty = 1;
				ELSEIF 2 = ROW_COUNT() THEN
					
					SET v_finalServerItemMakeQty = @v_finalItemMakeQty;
				ELSE
					
					SET v_result = 101;	
					LEAVE root;
				END IF;
				
				
				IF p_makeitemLimit < v_finalServerItemMakeQty THEN
					SET v_result = 102;	
					LEAVE root;
				END IF;
            END;
            END IF;
		END;
		END IF;
        
		
		IF 0 < p_UserGold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_UserGold, finalgold, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
		IF 0 < p_UseCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_UseCashA, v_finalcashA, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
  
		
        IF p_Protect_ID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Protect_ID, 1, qty_protect, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
        IF p_Success_ID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Success_ID, 1, qty_success, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		
        IF p_Success_ID2 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Success_ID2, 1, qty_success2, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
        IF p_Material_ID1 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID1, p_Material_Val1, qty_material1, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF p_Material_ID2 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID2, p_Material_Val2, qty_material2, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF p_Material_ID3 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID3, p_Material_Val3, qty_material3, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF p_Material_ID4 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID4, p_Material_Val4, qty_material4, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
        IF p_Material_ID5 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID5, p_Material_Val5, qty_material5, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		
		IF 0 < p_EquipItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		
		IF 0 < p_SkillBookItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
		
        IF _Itemid > 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(p_UserID, p_CharID, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, _Belong, _Identified, v_result, itemDBIndex);
			    
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF _consumeItemid > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, _type, _consumeItemid, _ammount, v_result, qty_result);
            IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF _bookitemid > 0 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(p_UserID, p_CharID, _bookitemid, _percent, _liftTime, _value, _bookbelong, v_result, bookDBIndex);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, finalgold, v_finalcashA, itemDBIndex, bookDBIndex, qty_protect, qty_success, qty_success2, qty_material1, qty_material2, qty_material3, qty_material4, qty_material5, qty_result, v_finalItemMakeQty, v_finalServerItemMakeQty;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_make2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_make2`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT
,	IN	p_UserGold		BIGINT		
, 	IN 	p_UseCashB		BIGINT		
, 	IN 	p_makeitemTableId	INT		
, 	IN 	p_makeitemLimit		INT		
,	IN  p_makeitemLimitType	INT 	

,	IN	p_Protect_ID		INT		
,	IN	p_Success_ID		INT		
,	IN	p_Success_ID2		INT		

,	IN	p_Material_ID1	INT,	IN	p_Material_Val1	INT,	IN	p_Material_ID2	INT,	IN	p_Material_Val2	INT
,	IN	p_Material_ID3	INT,	IN	p_Material_Val3	INT,	IN	p_Material_ID4	INT,	IN	p_Material_Val4	INT

,	IN	p_EquipItemDBIdx1	BIGINT,	IN	p_EquipItemDBIdx2	BIGINT,	IN	p_EquipItemDBIdx3	BIGINT,	IN	p_EquipItemDBIdx4	BIGINT,	IN	p_EquipItemDBIdx5	BIGINT
,	IN	p_EquipItemDBIdx6	BIGINT,	IN	p_EquipItemDBIdx7	BIGINT,	IN	p_EquipItemDBIdx8	BIGINT,	IN	p_EquipItemDBIdx9	BIGINT,	IN	p_EquipItemDBIdx10	BIGINT

,	IN	p_SkillBookItemDBIdx1	BIGINT,	IN	p_SkillBookItemDBIdx2	BIGINT,	IN	p_SkillBookItemDBIdx3	BIGINT
,	IN	p_SkillBookItemDBIdx4	BIGINT,	IN	p_SkillBookItemDBIdx5	BIGINT,	IN	p_SkillBookItemDBIdx6	BIGINT
,	IN	p_SkillBookItemDBIdx7	BIGINT,	IN	p_SkillBookItemDBIdx8	BIGINT,	IN	p_SkillBookItemDBIdx9	BIGINT,	IN	p_SkillBookItemDBIdx10	BIGINT

,	IN _Itemid 			INT,		IN _Quality 		INT,	IN _EquipType 		INT
,	IN _AttrID 			INT,		IN _AttrValue 		INT,	IN _Belong			TINYINT
, 	IN _EnchantLevel	INT
,	IN _SlotID1 		TINYINT,	IN _OptID1 			INT,	IN _OptValue1 		SMALLINT
,	IN _SlotID2 		TINYINT,	IN _OptID2 			INT,	IN _OptValue2 		SMALLINT
,	IN _SlotID3 		TINYINT,	IN _OptID3 			INT,	IN _OptValue3 		SMALLINT
,	IN _SlotID4 		TINYINT,	IN _OptID4 			INT,	IN _OptValue4 		SMALLINT
,	IN _SlotID5 		TINYINT,	IN _OptID5 			INT,	IN _OptValue5 		SMALLINT
,	IN _SlotID6 		TINYINT,	IN _OptID6 			INT,	IN _OptValue6 		SMALLINT
,	IN _SlotID7 		TINYINT,	IN _OptID7 			INT,	IN _OptValue7 		SMALLINT

,	IN _type TINYINT,	IN _consumeItemid 	INT,		IN _ammount INT

,	IN	_bookitemid 	INT,	IN _percent INT,	IN _liftTime INT,	IN _value INT,	IN _bookbelong TINYINT
)
    COMMENT '아이템 제작'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;	
    
	DECLARE finalgold 		BIGINT DEFAULT 0;
    DECLARE v_finalcashB	BIGINT DEFAULT 0;
    DECLARE itemDBIndex 	BIGINT DEFAULT 0;
    DECLARE v_finalItemMakeQty			INT DEFAULT 0;
    DECLARE v_finalServerItemMakeQty	INT DEFAULT 0;
    
    DECLARE qty_protect 	INT DEFAULT 0;
    DECLARE qty_success 	INT DEFAULT 0;
	DECLARE qty_success2 	INT DEFAULT 0;
    
    DECLARE qty_material1 	INT DEFAULT 0;
    DECLARE qty_material2	INT DEFAULT 0;
    DECLARE qty_material3	INT DEFAULT 0;
    DECLARE qty_material4	INT DEFAULT 0;
    
    DECLARE qty_result 		INT DEFAULT 0;
    
    DECLARE bookDBIndex 	BIGINT DEFAULT 0;    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, finalgold, v_finalcashB, itemDBIndex, bookDBIndex, qty_protect, qty_success, qty_success2, qty_material1, qty_material2, qty_material3, qty_material4, qty_result, v_finalItemMakeQty, v_finalServerItemMakeQty;
	END;


	START TRANSACTION;	

	root:
	BEGIN
		
        
		IF 0 < p_makeitemTableId THEN
        BEGIN
			
            IF 1 = p_makeitemLimitType THEN
            BEGIN
				
				INSERT INTO char_makeitem_limit VALUES(p_CharID, p_makeitemTableId, 1, NOW()) 
					ON DUPLICATE KEY UPDATE make_qty = (@v_finalItemMakeQty := make_qty + 1);
	  
				IF 1 = ROW_COUNT() THEN
					
					SET v_finalItemMakeQty = 1;
				ELSEIF 2 = ROW_COUNT() THEN
					
					SET v_finalItemMakeQty = @v_finalItemMakeQty;
				ELSE
					
					SET v_result = 101;	
					LEAVE root;
				END IF;
				
				
				IF p_makeitemLimit < v_finalItemMakeQty THEN
					SET v_result = 102;	
					LEAVE root;
				END IF;
			END;
            ELSEIF 2 = p_makeitemLimitType THEN
            BEGIN
				
				INSERT INTO server_makeitem_limit VALUES(p_makeitemTableId, p_makeitemLimit, 1, NOW(), NOW()) 
					ON DUPLICATE KEY UPDATE make_qty = (@v_finalServerItemMakeQty := make_qty + 1), make_limit = p_makeitemLimit, update_date = NOW();
                    
				IF 1 = ROW_COUNT() THEN
					
					SET v_finalServerItemMakeQty = 1;
				ELSEIF 2 = ROW_COUNT() THEN
					
					SET v_finalServerItemMakeQty = @v_finalItemMakeQty;
				ELSE
					
					SET v_result = 101;	
					LEAVE root;
				END IF;
				
				
				IF p_makeitemLimit < v_finalServerItemMakeQty THEN
					SET v_result = 102;	
					LEAVE root;
				END IF;
            END;
            END IF;
		END;
		END IF;
        
		
		IF 0 < p_UserGold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_UserGold, finalgold, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
		IF 0 < p_UseCashB THEN
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_UseCashB, v_finalcashB, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
  
		
        IF p_Protect_ID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Protect_ID, 1, qty_protect, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
        IF p_Success_ID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Success_ID, 1, qty_success, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		
        IF p_Success_ID2 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Success_ID2, 1, qty_success2, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
        IF p_Material_ID1 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID1, p_Material_Val1, qty_material1, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF p_Material_ID2 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID2, p_Material_Val2, qty_material2, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF p_Material_ID3 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID3, p_Material_Val3, qty_material3, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF p_Material_ID4 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_Material_ID4, p_Material_Val4, qty_material4, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		
		IF 0 < p_EquipItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		
		IF 0 < p_SkillBookItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_SkillBookItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
		
        IF _Itemid > 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(p_UserID, p_CharID, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, _Belong, v_result, itemDBIndex);
			    
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF _consumeItemid > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, _type, _consumeItemid, _ammount, v_result, qty_result);
            IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF _bookitemid > 0 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(p_UserID, p_CharID, _bookitemid, _percent, _liftTime, _value, _bookbelong, v_result, bookDBIndex);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, finalgold, v_finalcashB, itemDBIndex, bookDBIndex, qty_protect, qty_success, qty_success2, qty_material1, qty_material2, qty_material3, qty_material4, qty_result, v_finalItemMakeQty, v_finalServerItemMakeQty;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_make_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_make_c9`(
	IN	_useridx 		BIGINT
,	IN	_charidx 		BIGINT
,	IN	_usegold		BIGINT		
, 	IN 	_useCashB		BIGINT		
, 	IN 	p_makeitemTableId	INT		
, 	IN 	p_makeitemLimit		INT		
,	IN  p_makeitemLimitType	INT 	

,	IN	_protect_id		INT		
,	IN	_success_id		INT		

,	IN	_material_id1	INT,	IN	_material_val1	INT,	IN	_material_id2	INT,	IN	_material_val2	INT
,	IN	_material_id3	INT,	IN	_material_val3	INT,	IN	_material_id4	INT,	IN	_material_val4	INT

,	IN	p_EquipItemDBIdx1	BIGINT,	IN	p_EquipItemDBIdx2	BIGINT,	IN	p_EquipItemDBIdx3	BIGINT,	IN	p_EquipItemDBIdx4	BIGINT,	IN	p_EquipItemDBIdx5	BIGINT
,	IN	p_EquipItemDBIdx6	BIGINT,	IN	p_EquipItemDBIdx7	BIGINT,	IN	p_EquipItemDBIdx8	BIGINT,	IN	p_EquipItemDBIdx9	BIGINT,	IN	p_EquipItemDBIdx10	BIGINT

,	IN	p_SkillBookItemDBIdx1	BIGINT,	IN	p_SkillBookItemDBIdx2	BIGINT,	IN	p_SkillBookItemDBIdx3	BIGINT
,	IN	p_SkillBookItemDBIdx4	BIGINT,	IN	p_SkillBookItemDBIdx5	BIGINT,	IN	p_SkillBookItemDBIdx6	BIGINT
,	IN	p_SkillBookItemDBIdx7	BIGINT,	IN	p_SkillBookItemDBIdx8	BIGINT,	IN	p_SkillBookItemDBIdx9	BIGINT,	IN	p_SkillBookItemDBIdx10	BIGINT

,	IN _Itemid 			INT,		IN _Quality 		INT,	IN _EquipType 		INT
,	IN _AttrID 			INT,		IN _AttrValue 		INT,	IN _Belong			TINYINT
, 	IN _EnchantLevel	INT
,	IN _SlotID1 		TINYINT,	IN _OptID1 			INT,	IN _OptValue1 		SMALLINT
,	IN _SlotID2 		TINYINT,	IN _OptID2 			INT,	IN _OptValue2 		SMALLINT
,	IN _SlotID3 		TINYINT,	IN _OptID3 			INT,	IN _OptValue3 		SMALLINT
,	IN _SlotID4 		TINYINT,	IN _OptID4 			INT,	IN _OptValue4 		SMALLINT
,	IN _SlotID5 		TINYINT,	IN _OptID5 			INT,	IN _OptValue5 		SMALLINT
,	IN _SlotID6 		TINYINT,	IN _OptID6 			INT,	IN _OptValue6 		SMALLINT
,	IN _SlotID7 		TINYINT,	IN _OptID7 			INT,	IN _OptValue7 		SMALLINT

,	IN _type TINYINT,	IN _consumeItemid 	INT,		IN _ammount INT

,	IN	_bookitemid 	INT,	IN _percent INT,	IN _liftTime INT,	IN _value INT,	IN _bookbelong TINYINT
)
    COMMENT '아이템 제작'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;	
    
	DECLARE finalgold 		BIGINT DEFAULT 0;
    DECLARE v_finalcashB	BIGINT DEFAULT 0;
    DECLARE itemDBIndex 	BIGINT DEFAULT 0;
    DECLARE v_finalItemMakeQty			INT DEFAULT 0;
    DECLARE v_finalServerItemMakeQty	INT DEFAULT 0;
    
    DECLARE qty_protect 	INT DEFAULT 0;
    DECLARE qty_success 	INT DEFAULT 0;
    
    DECLARE qty_material1 	INT DEFAULT 0;
    DECLARE qty_material2	INT DEFAULT 0;
    DECLARE qty_material3	INT DEFAULT 0;
    DECLARE qty_material4	INT DEFAULT 0;
    
    DECLARE qty_result 		INT DEFAULT 0;
    
    DECLARE bookDBIndex 	BIGINT DEFAULT 0;    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, finalgold, v_finalcashB, itemDBIndex, bookDBIndex, qty_protect, qty_success, qty_material1, qty_material2, qty_material3, qty_material4, qty_result, v_finalItemMakeQty, v_finalServerItemMakeQty;
	END;


	START TRANSACTION;	

	root:
	BEGIN
		
        
		IF 0 < p_makeitemTableId THEN
        BEGIN
			
            IF 1 = p_makeitemLimitType THEN
            BEGIN
				
				INSERT INTO char_makeitem_limit VALUES(_charidx, p_makeitemTableId, 1, NOW()) 
					ON DUPLICATE KEY UPDATE make_qty = (@v_finalItemMakeQty := make_qty + 1);
	  
				IF 1 = ROW_COUNT() THEN
					
					SET v_finalItemMakeQty = 1;
				ELSEIF 2 = ROW_COUNT() THEN
					
					SET v_finalItemMakeQty = @v_finalItemMakeQty;
				ELSE
					
					SET v_result = 101;	
					LEAVE root;
				END IF;
				
				
				IF p_makeitemLimit < v_finalItemMakeQty THEN
					SET v_result = 102;	
					LEAVE root;
				END IF;
			END;
            ELSEIF 2 = p_makeitemLimitType THEN
            BEGIN
				
				INSERT INTO server_makeitem_limit VALUES(p_makeitemTableId, p_makeitemLimit, 1, NOW(), NOW()) 
					ON DUPLICATE KEY UPDATE make_qty = (@v_finalServerItemMakeQty := make_qty + 1), make_limit = p_makeitemLimit, update_date = NOW();
                    
				IF 1 = ROW_COUNT() THEN
					
					SET v_finalServerItemMakeQty = 1;
				ELSEIF 2 = ROW_COUNT() THEN
					
					SET v_finalServerItemMakeQty = @v_finalItemMakeQty;
				ELSE
					
					SET v_result = 101;	
					LEAVE root;
				END IF;
				
				
				IF p_makeitemLimit < v_finalServerItemMakeQty THEN
					SET v_result = 102;	
					LEAVE root;
				END IF;
            END;
            END IF;
		END;
		END IF;
        
		
        CALL sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _usegold, finalgold, v_result);
        IF v_result != 0 THEN
			LEAVE root;
        END IF;
        
        
        CALL sp_mmo_notrans_userinfo_delete_cashB(_useridx, _useCashB, v_finalcashB, v_result);
        IF v_result != 0 THEN
			LEAVE root;
        END IF;
  
		
        IF _protect_id > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _protect_id, 1, qty_protect, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
        IF _success_id > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _success_id, 1, qty_success, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
        IF _material_id1 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _material_id1, _material_val1, qty_material1, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF _material_id2 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _material_id2, _material_val2, qty_material2, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF _material_id3 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _material_id3, _material_val3, qty_material3, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;		
        IF _material_id4 > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _material_id4, _material_val4, qty_material4, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		
		IF 0 < p_EquipItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		
		IF 0 < p_SkillBookItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx6 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx7 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx7, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx8 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx8, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx9 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx9, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_SkillBookItemDBIdx10 THEN
			CALL sp_mmo_notrans_charinvenskillbook_delete(_useridx, _charidx, p_SkillBookItemDBIdx10, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
		
        IF _Itemid > 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, _Belong, v_result, itemDBIndex);
			    
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF _consumeItemid > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_useridx, _charidx, _type, _consumeItemid, _ammount, v_result, qty_result);
            IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF _bookitemid > 0 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookitemid, _percent, _liftTime, _value, _bookbelong, v_result, bookDBIndex);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, finalgold, v_finalcashB, itemDBIndex, bookDBIndex, qty_protect, qty_success, qty_material1, qty_material2, qty_material3, qty_material4, qty_result, v_finalItemMakeQty, v_finalServerItemMakeQty;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_monsterdrop_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_monsterdrop_one`( 
	IN _userid 					BIGINT
,	IN _charid 					BIGINT
,	IN _addExp 					BIGINT
,	IN _addGold 				BIGINT
,	IN _addpkgold 				INT
,	IN _addcashb				INT
, 	IN _pAddGuildPoint			INT		
,	IN _addregion 				INT
,	IN _addcastlepoint			INT
,	IN _maxdailypoint			INT
,	IN _expiredate				BIGINT 
,	IN p_GuildID 			BIGINT
,	IN p_AddPoint 			BIGINT

,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,		IN _Identify1			TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,		IN _Identify2			TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,		IN _Identify3			TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,		IN _Identify4			TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,		IN _Identify5			TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT

)
    COMMENT '몬스터 드랍 아이템 추가'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_db_index1 		BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 		BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 		BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 		BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 		BIGINT DEFAULT 0;

    DECLARE v_call_result 		INT DEFAULT 0;
	DECLARE v_call_result1 		INT DEFAULT 0;
	DECLARE v_call_result2 		INT DEFAULT 0;
	DECLARE v_call_result3 		INT DEFAULT 0;
	DECLARE v_call_result4 		INT DEFAULT 0;
	DECLARE v_call_result5 		INT DEFAULT 0;
    
	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
        
    DECLARE v_final_exp					BIGINT 	DEFAULT 0;
    DECLARE v_final_gold				BIGINT 	DEFAULT 0;
    DECLARE v_final_pkgold				INT 	DEFAULT 0;
    DECLARE v_final_cashB				BIGINT 	DEFAULT 0;
    DECLARE v_final_guildpoint			BIGINT 	DEFAULT 0;	
    DECLARE v_final_guildcontribution	BIGINT 	DEFAULT 0;	
    
	DECLARE v_final_castletotalpoint 	INT DEFAULT 0;
    DECLARE v_final_castledailypoint 	INT DEFAULT 0;
	
    DECLARE v_total_point				BIGINT 	DEFAULT 0;	
	DECLARE v_guild_result				INT 	DEFAULT 0;
	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;                
	END;
   
   
   	START TRANSACTION;	
    
    root:
    BEGIN
	
		
        IF 0 < _addexp OR 0 < _addgold THEN        
			CALL sp_mmo_notrans_charinfo_insert_expgold(_userid, _charid, _addexp, _addgold, v_final_exp, v_final_gold, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
        IF _addpkgold > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_pkgold(_userid, _addpkgold, v_final_pkgold, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
        IF _addcashb > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addcashb, v_final_cashB, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;		
        END IF;
        
         
        IF 0 < _pAddGuildPoint THEN
			UPDATE char_info
            SET guild_point = (@guild_point := guild_point + _pAddGuildPoint)
			WHERE char_idx = _charid;
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 101;	
				LEAVE root;
			END IF;
            
            SET v_final_guildpoint 			= @guild_point;
        END IF;       
        
        
        IF _addregion > 0 AND _addcastlepoint > 0 THEN
			INSERT INTO user_castle(user_idx, region_code, total_point, daily_point, daily_reward, expire_date) 
            VALUES (_userid, _addregion, _addcastlepoint, _addcastlepoint, 0, FROM_UNIXTIME(_expiredate)) 
            
            ON DUPLICATE KEY UPDATE total_point = (@v_final_castletotalpoint := total_point + _addcastlepoint), daily_point = (@v_final_castledailypoint := daily_point + _addcastlepoint);
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 103;
				LEAVE root;
			END IF;		
            
			SET v_final_castletotalpoint = @v_final_castletotalpoint;
            SET v_final_castledailypoint = @v_final_castledailypoint;				
        END IF;    
        
        
        
		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _Identify1, v_call_result, v_item_db_index1);
            IF v_call_result != 0 THEN
				SET v_item_db_index1 = 0;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _Identify2, v_call_result, v_item_db_index2);
            IF v_call_result != 0 THEN
				SET v_item_db_index2 = 0;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _Identify3, v_call_result, v_item_db_index3);
            IF v_call_result != 0 THEN
				SET v_item_db_index3 = 0;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _Identify4, v_call_result, v_item_db_index4);
            IF v_call_result != 0 THEN
				SET v_item_db_index4 = 0;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _Identify5, v_call_result, v_item_db_index5);
            IF v_call_result != 0 THEN
				SET v_item_db_index5 = 0;
            END IF;
		END IF;
		
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_call_result1, v_item_final_qty1);
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_call_result2, v_item_final_qty2);
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_call_result3, v_item_final_qty3);
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_call_result4, v_item_final_qty4);
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_call_result5, v_item_final_qty5);
		END IF;			
		
		
		IF _addregion > 0 AND _addgold > 0 THEN
			CALL gsp_mmo_guild_castle_update_monsterdrop_one(_addregion, p_GuildID, _addgold, p_AddPoint, v_total_point, v_guild_result);
		END IF;		
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		

	
	SELECT v_result, v_final_exp, v_final_gold, v_final_pkgold, v_final_cashB, 
			v_final_guildpoint, v_final_castletotalpoint, v_final_castledailypoint,
			v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5,
			v_call_result1, v_call_result2, v_call_result3, v_call_result4, v_call_result5, v_total_point;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_post` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_post`(
	IN p_UserID 	BIGINT
,	IN p_CharID 	BIGINT
,	IN p_ItemID 	INT
,	IN p_Quality 	INT
,	IN p_EquipType 	INT
,	IN p_AttrID 		INT
,	IN p_AttrValue 		INT
,	IN p_Belong			TINYINT	
,	IN p_SlotID1 	TINYINT
,	IN p_OptID1 	INT
,	IN p_OptValue1 	SMALLINT
,	IN p_SlotID2 	TINYINT
,	IN p_OptID2 	INT
,	IN p_OptValue2 	SMALLINT
,	IN p_SlotID3 	TINYINT
,	IN p_OptID3 	INT
,	IN p_OptValue3 	SMALLINT
,	IN p_SlotID4 	TINYINT
,	IN p_OptID4 	INT
,	IN p_OptValue4 	SMALLINT
,	IN p_SlotID5 	TINYINT
,	IN p_OptID5 	INT
,	IN p_OptValue5 	SMALLINT
,	IN p_SlotID6 	TINYINT
,	IN p_OptID6 	INT
,	IN p_OptValue6 	SMALLINT
,	IN p_SlotID7 	TINYINT
,	IN p_OptID7 	INT
,	IN p_OptValue7 	SMALLINT
,	IN p_ItemLevel		INT 	
,	IN p_EnchantLevel 	INT		
)
    COMMENT '아이템 보상 지급처리.'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;	
    
	DECLARE v_itemDBIndex 	BIGINT DEFAULT 0;
		
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_itemDBIndex;
	END;
	
	START TRANSACTION;	

	root:
	BEGIN	
		IF p_ItemID != 0 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenequip_insert_post(p_UserID, p_CharID, p_ItemID, p_Quality, p_EquipType, p_ItemLevel, p_EnchantLevel, p_AttrID, p_AttrValue,
				p_SlotID1, p_OptID1, p_OptValue1, p_SlotID2, p_OptID2, p_OptValue2, p_SlotID3, p_OptID3, p_OptValue3,
				p_SlotID4, p_OptID4, p_OptValue4, p_SlotID5, p_OptID5, p_OptValue5, p_SlotID6, p_OptID6, p_OptValue6,
				p_SlotID7, p_OptID7, p_OptValue7, p_Belong, v_result, v_itemDBIndex);
				
			IF 0 <> v_result THEN				
				LEAVE root;
			END IF;	
		END;
		END IF;			
	END;
		
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
	
	SELECT v_result, v_itemDBIndex;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_raidreward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_raidreward`(
	IN	_useridx 	BIGINT
,	IN	_charidx 	BIGINT
,	IN	_Itemid1 	INT,		IN	_Quality1 	INT,	IN	_EquipType1		INT
,	IN	_AttrID1 	INT,		IN	_AttrValue1 INT,	IN	_belong1		TINYINT
,	IN	_SlotID1_1 	TINYINT,	IN	_OptID1_1 	INT,	IN	_OptValue1_1	SMALLINT
,	IN	_SlotID1_2 	TINYINT,	IN	_OptID1_2 	INT,	IN	_OptValue1_2	SMALLINT
,	IN	_SlotID1_3 	TINYINT,	IN	_OptID1_3 	INT,	IN	_OptValue1_3	SMALLINT
,	IN	_SlotID1_4 	TINYINT,	IN	_OptID1_4 	INT,	IN	_OptValue1_4	SMALLINT
,	IN	_SlotID1_5 	TINYINT,	IN	_OptID1_5 	INT,	IN	_OptValue1_5	SMALLINT
,	IN	_SlotID1_6 	TINYINT,	IN	_OptID1_6 	INT,	IN	_OptValue1_6	SMALLINT
,	IN	_SlotID1_7 	TINYINT,	IN	_OptID1_7 	INT,	IN	_OptValue1_7	SMALLINT
,	IN	_Itemid2 	INT,		IN	_Quality2 	INT,	IN	_EquipType2		INT
,	IN	_AttrID2 	INT,		IN	_AttrValue2 INT,	IN	_belong2		TINYINT
,	IN	_SlotID2_1	TINYINT,	IN	_OptID2_1	INT,	IN	_OptValue2_1	SMALLINT
,	IN	_SlotID2_2	TINYINT,	IN	_OptID2_2	INT,	IN	_OptValue2_2	SMALLINT
,	IN	_SlotID2_3	TINYINT,	IN	_OptID2_3	INT,	IN	_OptValue2_3	SMALLINT
,	IN	_SlotID2_4	TINYINT,	IN	_OptID2_4	INT,	IN	_OptValue2_4	SMALLINT
,	IN	_SlotID2_5	TINYINT,	IN	_OptID2_5	INT,	IN	_OptValue2_5	SMALLINT
,	IN	_SlotID2_6	TINYINT,	IN	_OptID2_6	INT,	IN	_OptValue2_6	SMALLINT
,	IN	_SlotID2_7	TINYINT,	IN	_OptID2_7	INT,	IN	_OptValue2_7	SMALLINT
,	IN	_Itemid3	INT,		IN	_Quality3	INT,	IN	_EquipType3		INT
,	IN	_AttrID3	INT,		IN	_AttrValue3 INT,	IN	_belong3		TINYINT
,	IN	_SlotID3_1	TINYINT,	IN	_OptID3_1	INT,	IN	_OptValue3_1	SMALLINT
,	IN	_SlotID3_2	TINYINT,	IN	_OptID3_2	INT,	IN	_OptValue3_2	SMALLINT
,	IN	_SlotID3_3	TINYINT,	IN	_OptID3_3	INT,	IN	_OptValue3_3	SMALLINT
,	IN	_SlotID3_4	TINYINT,	IN	_OptID3_4	INT,	IN	_OptValue3_4	SMALLINT
,	IN	_SlotID3_5	TINYINT,	IN	_OptID3_5	INT,	IN	_OptValue3_5	SMALLINT
,	IN	_SlotID3_6	TINYINT,	IN	_OptID3_6	INT,	IN	_OptValue3_6	SMALLINT
,	IN	_SlotID3_7	TINYINT,	IN	_OptID3_7	INT,	IN	_OptValue3_7	SMALLINT
,	IN	_Itemid4	INT,		IN	_Quality4	INT,	IN	_EquipType4		INT
,	IN	_AttrID4	INT,		IN	_AttrValue4 INT,	IN	_belong4		TINYINT
,	IN	_SlotID4_1	TINYINT,	IN	_OptID4_1	INT,	IN	_OptValue4_1	SMALLINT
,	IN	_SlotID4_2	TINYINT,	IN	_OptID4_2	INT,	IN	_OptValue4_2	SMALLINT
,	IN	_SlotID4_3	TINYINT,	IN	_OptID4_3	INT,	IN	_OptValue4_3	SMALLINT
,	IN	_SlotID4_4	TINYINT,	IN	_OptID4_4	INT,	IN	_OptValue4_4	SMALLINT
,	IN	_SlotID4_5	TINYINT,	IN	_OptID4_5	INT,	IN	_OptValue4_5	SMALLINT
,	IN	_SlotID4_6	TINYINT,	IN	_OptID4_6	INT,	IN	_OptValue4_6	SMALLINT
,	IN	_SlotID4_7	TINYINT,	IN	_OptID4_7	INT,	IN	_OptValue4_7	SMALLINT
,	IN	_Itemid5	INT,		IN	_Quality5	INT,	IN	_EquipType5		INT
,	IN	_AttrID5	INT,		IN	_AttrValue5 INT,	IN	_belong5		TINYINT
,	IN	_SlotID5_1	TINYINT,	IN	_OptID5_1	INT,	IN	_OptValue5_1	SMALLINT
,	IN	_SlotID5_2	TINYINT,	IN	_OptID5_2	INT,	IN	_OptValue5_2	SMALLINT
,	IN	_SlotID5_3	TINYINT,	IN	_OptID5_3	INT,	IN	_OptValue5_3	SMALLINT
,	IN	_SlotID5_4	TINYINT,	IN	_OptID5_4	INT,	IN	_OptValue5_4	SMALLINT
,	IN	_SlotID5_5	TINYINT,	IN	_OptID5_5	INT,	IN	_OptValue5_5	SMALLINT
,	IN	_SlotID5_6	TINYINT,	IN	_OptID5_6	INT,	IN	_OptValue5_6	SMALLINT
,	IN	_SlotID5_7	TINYINT,	IN	_OptID5_7	INT,	IN	_OptValue5_7	SMALLINT
)
    COMMENT '레이드 장비 아이템 보상 지급처리.'
BEGIN	

	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;

	DECLARE v_itemDBIndex1 BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex2 BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex3 BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex4 BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex5 BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3, v_itemDBIndex4, v_itemDBIndex5;
	END;	
	

	START TRANSACTION;	
	
	root:
	BEGIN		
			
		
		IF 0 < _Itemid1 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid1, _Quality1, _EquipType1, _AttrID1, _AttrValue1,
				_SlotID1_1, _OptID1_1, _OptValue1_1, _SlotID1_2, _OptID1_2, _OptValue1_2, _SlotID1_3, _OptID1_3, _OptValue1_3,
				_SlotID1_4, _OptID1_4, _OptValue1_4, _SlotID1_5, _OptID1_5, _OptValue1_5, _SlotID1_6, _OptID1_6, _OptValue1_6,
				_SlotID1_7, _OptID1_7, _OptValue1_7, _belong1, v_result, v_itemDBIndex1);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		
		IF 0 < _Itemid2 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid2, _Quality2, _EquipType2, _AttrID2, _AttrValue2,
				_SlotID2_1, _OptID2_1, _OptValue2_1, _SlotID2_2, _OptID2_2, _OptValue2_2, _SlotID2_3, _OptID2_3, _OptValue2_3,
				_SlotID2_4, _OptID2_4, _OptValue2_4, _SlotID2_5, _OptID2_5, _OptValue2_5, _SlotID2_6, _OptID2_6, _OptValue2_6,
				_SlotID2_7, _OptID2_7, _OptValue2_7, _belong2, v_result, v_itemDBIndex2);
			
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
        
		IF 0 < _Itemid3 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid3, _Quality3, _EquipType3, _AttrID3, _AttrValue3,
				_SlotID3_1, _OptID3_1, _OptValue3_1, _SlotID3_2, _OptID3_2, _OptValue3_2, _SlotID3_3, _OptID3_3, _OptValue3_3,
				_SlotID3_4, _OptID3_4, _OptValue3_4, _SlotID3_5, _OptID3_5, _OptValue3_5, _SlotID3_6, _OptID3_6, _OptValue3_6,
				_SlotID3_7, _OptID3_7, _OptValue3_7, _belong3, v_result, v_itemDBIndex3);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
        
		IF 0 < _Itemid4 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid4, _Quality4, _EquipType4, _AttrID4, _AttrValue4,
				_SlotID4_1, _OptID4_1, _OptValue4_1, _SlotID4_2, _OptID4_2, _OptValue4_2, _SlotID4_3, _OptID4_3, _OptValue4_3,
				_SlotID4_4, _OptID4_4, _OptValue4_4, _SlotID4_5, _OptID4_5, _OptValue4_5, _SlotID4_6, _OptID4_6, _OptValue4_6,
				_SlotID4_7, _OptID4_7, _OptValue4_7, _belong4, v_result, v_itemDBIndex4);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
        
		IF 0 < _Itemid5 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid5, _Quality5, _EquipType5, _AttrID5, _AttrValue5,
				_SlotID5_1, _OptID5_1, _OptValue5_1, _SlotID5_2, _OptID5_2, _OptValue5_2, _SlotID5_3, _OptID5_3, _OptValue5_3,
				_SlotID5_4, _OptID5_4, _OptValue5_4, _SlotID5_5, _OptID5_5, _OptValue5_5, _SlotID5_6, _OptID5_6, _OptValue5_6,
				_SlotID5_7, _OptID5_7, _OptValue5_7, _belong5, v_result, v_itemDBIndex5);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
	
	END;
	
	
	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
    
	
	
	SELECT v_result, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3, v_itemDBIndex4, v_itemDBIndex5;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_restore` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_restore`( 
	IN 	p_UserID			BIGINT		
,	IN 	p_CharID 			BIGINT		
,	IN 	p_ItemDBIdx 		BIGINT		
,	IN 	p_CostGold			INT
,	IN 	p_CostCashA			INT
,	IN 	p_ResItemID			INT
, 	IN 	p_ResItemQty		INT			
)
    COMMENT '복구 박스 장비 아이템 복구'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_final_gold			BIGINT DEFAULT 0;
    DECLARE v_final_casha			BIGINT DEFAULT 0;
    DECLARE v_needitem_fianl_qty		INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold, v_final_casha, v_needitem_fianl_qty;
	END; 
        
        
	START TRANSACTION;
    
	root:
	BEGIN    
		
		IF p_ItemDBIdx <= 0 THEN
			SET v_result = 1031;	
		    LEAVE root;        
        END IF;

		IF 0 < p_CostGold THEN	
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_CostGold, v_final_gold, v_result);
			IF v_result != 0 THEN
				SET v_result = 6029;	
				LEAVE root;
			END IF;  

			
		ELSEIF 0 < p_CostCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_casha, v_result);    
			IF 0 <> v_result THEN
				SET v_result = 6030;	
				LEAVE root;
			END IF;
        
        ELSEIF 0 < p_ResItemID THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID, p_ResItemQty, v_needitem_fianl_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
            
		ELSE
			SET v_result = 6031;
			LEAVE root;
			
        END IF;       
        
        INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level, identify) 
        SELECT item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, 0, belong, remove_lock, enchant_level, identify
        FROM char_inven_equip_restorebox
        WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
        
		IF ROW_COUNT() = 0 THEN
			SET v_result = 1032;	
			LEAVE root;
        END IF;
		
        
		DELETE FROM char_inven_equip_restorebox
		WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
        
        IF ROW_COUNT() = 0 THEN
			SET v_result = 1033;	
            LEAVE root;
        END IF;
        
 	END;
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT v_result, v_final_gold, v_final_casha, v_needitem_fianl_qty;
    
    IF 0 = v_result THEN
		
		SELECT item_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level, identify
        FROM char_inven_equip
        WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
    
		
		SELECT slot_id, option_id, option_value
		FROM item_option
		WHERE item_idx = p_ItemDBIdx;
			
		
		SELECT attribute_id, attribute_value
		FROM item_attribute
		WHERE item_idx = p_ItemDBIdx;
		
		
		SELECT slot_id, id
		FROM item_jewels
		WHERE item_idx = p_ItemDBIdx;
    END IF;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_shop` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_shop`(
	IN _useridx 	BIGINT
,	IN _charidx 	BIGINT
, 	IN _addCostumePoint INT

,	IN _Itemid 		INT
,	IN _Quality 	INT
,	IN _EquipType 	INT
,	IN _AttrID 		INT
,	IN _AttrValue 	INT
,	IN _Belong		TINYINT	
,	IN _SlotID1 	TINYINT
,	IN _OptID1 		INT
,	IN _OptValue1 	SMALLINT
,	IN _SlotID2 	TINYINT
,	IN _OptID2 		INT
,	IN _OptValue2 	SMALLINT
,	IN _SlotID3 	TINYINT
,	IN _OptID3 		INT
,	IN _OptValue3 	SMALLINT
,	IN _SlotID4 	TINYINT
,	IN _OptID4 		INT
,	IN _OptValue4 	SMALLINT
,	IN _SlotID5 	TINYINT
,	IN _OptID5 		INT
,	IN _OptValue5 	SMALLINT
,	IN _SlotID6 	TINYINT
,	IN _OptID6 		INT
,	IN _OptValue6 	SMALLINT
,	IN _SlotID7 	TINYINT
,	IN _OptID7 		INT
,	IN _OptValue7 	SMALLINT
)
    COMMENT '아이템 보상 지급처리.'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	
	
	
	DECLARE _itemDBIndex 			BIGINT DEFAULT 0;
    DECLARE v_final_costume_point	INT DEFAULT 0;
	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result, _itemDBIndex;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
		
        
		
		IF _Itemid != 0 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, _Belong, _result, _itemDBIndex);
				
			IF 0 <> _result THEN				
				LEAVE root;
			END IF;	
		END;
		END IF;
        
        IF _addCostumePoint > 0 THEN
			UPDATE char_info SET costume_point = (@final_point := costume_point + _addCostumePoint) WHERE char_idx = _charidx;
            
            IF ROW_COUNT() <= 0 THEN
				SET _result = 1000;
				LEAVE root;
            END IF;
            
            SET v_final_costume_point = @final_point;
            
		ELSE
            SELECT costume_point INTO v_final_costume_point
			FROM char_info
			WHERE char_idx = _charidx;
        END IF;
			
	END;
	
	
	
	if 0 = _result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT _result, _itemDBIndex, v_final_costume_point as final_costume_point;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_insert_single_themereward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_insert_single_themereward`( 
	IN _userid 		BIGINT
,	IN _charid 		BIGINT
,	IN _dungeonType TINYINT		
,	IN _themeId		INT			

,   IN _itemId 	INT,		IN _quality		INT,	IN _equipType	INT
,	IN _attrId	INT,		IN _attrValue	INT,	IN _belong		TINYINT
,	IN _slotId1	TINYINT,	IN _optId1		INT,	IN _optValue1	SMALLINT
,	IN _slotId2	TINYINT,	IN _optId2		INT,	IN _optValue2	SMALLINT
,	IN _slotId3	TINYINT,	IN _optId3		INT,	IN _optValue3	SMALLINT
,	IN _slotId4	TINYINT,	IN _optId4		INT,	IN _optValue4	SMALLINT
,	IN _slotId5	TINYINT,	IN _optId5		INT,	IN _optValue5	SMALLINT
,	IN _slotId6	TINYINT,	IN _optId6		INT,	IN _optValue6	SMALLINT
,	IN _slotId7	TINYINT,	IN _optId7		INT,	IN _optValue7	SMALLINT

,	IN _costItemType	TINYINT,	IN _costItemId	INT,	IN _costItemValue	INT
)
    COMMENT '던전 테마 보상'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_db_index 	BIGINT DEFAULT 0;
    DECLARE v_call_result 		INT DEFAULT 0;    
	DECLARE v_item_final_qty	INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_item_db_index, v_call_result, v_item_final_qty;
	END;
   
   
   	START TRANSACTION;	
    
    root:
    BEGIN
	
		INSERT INTO char_theme_reward(char_idx, dungeon_type, theme_id)
					VALUES(_charid, _dungeonType, _themeId);
                    
		IF 1 <> ROW_COUNT() THEN
			set v_result = 101;		
        END IF;

        IF _itemId > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId, _quality, _equipType, _attrId, _attrValue,
														_slotId1, _optId1, _optValue1, _slotId2, _optId2, _optValue2, 
														_slotId3, _optId3, _optValue3, _slotId4, _optId4, _optValue4, 
														_slotId5, _optId5, _optValue5, _slotId6, _optId6, _optValue6, 
														_slotId7, _optId7, _optValue7, _belong, v_call_result, v_item_db_index);
                                
            IF v_call_result != 0 THEN
				SET v_result = 102;		
            END IF;
		END IF;
		
		IF 0 < _costItemId THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType, _costItemId, _costItemValue, v_call_result, v_item_final_qty);
            
            IF v_call_result != 0 THEN
				SET v_result = 103;		
            END IF;            
		END IF;
		
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		

	
	SELECT v_result, v_item_db_index, v_call_result, v_item_final_qty;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_autoequip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_autoequip`(
	IN	_charid 		BIGINT
,	IN	_equipset 		INT
,	IN	_itemDBIndex1 	BIGINT
,	IN	_itemDBIndex2 	BIGINT
,	IN	_itemDBIndex3 	BIGINT
,	IN	_itemDBIndex4 	BIGINT
,	IN	_itemDBIndex5 	BIGINT
,	IN	_itemDBIndex6 	BIGINT
,	IN	_itemDBIndex7 	BIGINT
,	IN	_itemDBIndex8 	BIGINT
)
    COMMENT '아이템 자동 착용.'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  result;
	END;
    
    
	START TRANSACTION;
    
	root:
	BEGIN	
		
		UPDATE char_inven_equip SET equip = 0, equip_slot = -1
		WHERE char_idx = _charid AND equip = _equipset 
		AND equip_type IN 
		(SELECT * FROM (SELECT `equip_type` FROM `char_inven_equip` WHERE item_idx IN (_itemDBIndex1, _itemDBIndex2, _itemDBIndex3, _itemDBIndex4, _itemDBIndex5, _itemDBIndex6, _itemDBIndex7, _itemDBIndex8)) AS A);
		
		
		IF 0 < _itemDBIndex1 OR 0 < _itemDBIndex2 OR 0 < _itemDBIndex3 OR 0 < _itemDBIndex4 OR 0 < _itemDBIndex5 OR 0 < _itemDBIndex6 OR 0 < _itemDBIndex7 OR 0 < _itemDBIndex8  THEN
			UPDATE char_inven_equip
			SET equip = _equipset,
				equip_slot = 
				CASE
					WHEN 100 <= equip_type THEN equip_type - 100
                    ELSE equip_type
				END
			WHERE item_idx IN (_itemDBIndex1, _itemDBIndex2, _itemDBIndex3, _itemDBIndex4, _itemDBIndex5, _itemDBIndex6, _itemDBIndex7, _itemDBIndex8);
			IF 0 = ROW_COUNT() THEN
				SET result = 101;	
				LEAVE root;
			END IF;
		END IF;

	END;
		
	
	
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;    
    
    
	SELECT result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_awarehouse_keep` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_awarehouse_keep`(
	IN _useridx 		BIGINT		
,	IN _itemDBIndex 	BIGINT		

)
    COMMENT '창고에 보관하기(장비 아이템)'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_warehouse_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
        
        
        
        
        UPDATE char_inven_equip
        SET char_idx = 0
        WHERE item_idx = _itemDBIndex AND user_idx = _useridx AND equip = 0;
        
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;
			
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_awarehouse_take` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_awarehouse_take`(
	IN _useridx 		BIGINT		
,	IN _charidx			BIGINT		
,	IN _itemDBIndex 	BIGINT		
)
    COMMENT '창고에서 찾기(장비 아이템)'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_inventory_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
        
        
        
        
        UPDATE char_inven_equip
        SET char_idx = _charidx
        WHERE item_idx = _itemDBIndex AND user_idx = _useridx AND char_idx = 0;
           
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;
			
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_enchant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_enchant`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_itemidx		BIGINT		
,	IN	_enchantlevel	TINYINT		
,	IN	_deletegold		BIGINT		
,	IN	_deleteCashA	BIGINT		
,	IN	_resitemid		INT			
,	IN	_resitemvalue	INT	
,	IN	_resitemid1		INT			
,	IN	_resitemid2		INT	
,	IN	_resitemid3		INT
,	IN	_resitemid4		INT
)
    COMMENT '장비 아이템 Enchant'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_final_gold 				BIGINT DEFAULT 0;
	DECLARE v_finalCashA	BIGINT DEFAULT 0;
    DECLARE v_resitem0_final_qty		INT DEFAULT 0;
    DECLARE v_resitem1_final_qty		INT DEFAULT 0;
    DECLARE v_resitem2_final_qty		INT DEFAULT 0;
    DECLARE v_resitem3_final_qty		INT DEFAULT 0;
    DECLARE v_resitem4_final_qty		INT DEFAULT 0;
        
    DECLARE v_enchant_level_max			INT DEFAULT 15;	
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_final_gold
			, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
            , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	END; 
    

	START TRANSACTION;
    
    root:
    BEGIN
  
        
        IF 0 <= _enchantlevel AND _enchantlevel <= v_enchant_level_max THEN
			CALL sp_mmo_notrans_charinvenequip_update_enchant(_charid, _itemidx, _enchantlevel, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;      
        ELSE
			SET v_result = 101;	
            LEAVE root;	
        END IF;
 
		
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		
		CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _decCashA, v_finalCashA, v_result);		
        IF v_result != 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 

        IF 0 < _resitemid THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid, _resitemvalue, v_resitem0_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;     
        
        IF 0 < _resitemid1 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid1, 1, v_resitem1_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
    
        IF 0 < _resitemid2 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid2, 1, v_resitem2_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;

        IF 0 < _resitemid3 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid3, 1, v_resitem3_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
        
        IF 0 < _resitemid4 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _resitemid4, 1, v_resitem4_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF; 

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;


	SELECT v_result, v_finalCashA, v_final_gold
		, v_resitem0_final_qty, v_resitem1_final_qty, v_resitem2_final_qty, v_resitem3_final_qty, v_resitem4_final_qty
        , v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_equip`(
	_userid 		BIGINT
,	_charid 		BIGINT
,	_equipSet		INT
,	_equipSlot 		INT 
,	_itemDBIndex 	BIGINT
)
    COMMENT '아이템 착용/착용해제'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  result;
	END; 
    

	START TRANSACTION;
    
	root:
	BEGIN
	
		
		UPDATE char_inven_equip
		SET equip = 0
		WHERE char_idx = _charid AND equip = _equipSet AND equip_slot = _equipSlot;
		
		
		if 0 < _itemDBIndex THEN
			UPDATE char_inven_equip
			SET equip = _equipSet, equip_slot = _equipSlot
			WHERE item_idx = _itemDBIndex and char_idx = _charid;

			if 0 = row_count() THEN
				SET result = 101;	
				LEAVE root;
			END IF;
		END IF;
					
	END;
		
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_levelup` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_levelup`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT
,	IN	p_ItemIdx		BIGINT	
,	IN	p_ItemLevel		INT		
,	IN	p_ItemExp		INT		
,	IN	p_DeleteGold	BIGINT	
,	IN	p_ResItemQty	INT		
,	IN	p_ResItemIdx01	BIGINT,	IN	p_ResItemIdx02	BIGINT,	IN	p_ResItemIdx03	BIGINT,	IN	p_ResItemIdx04	BIGINT,	IN	p_ResItemIdx05	BIGINT
,	IN	p_ResItemIdx06	BIGINT,	IN	p_ResItemIdx07	BIGINT,	IN	p_ResItemIdx08	BIGINT,	IN	p_ResItemIdx09	BIGINT,	IN	p_ResItemIdx10	BIGINT
,	IN	p_ResItemIdx11	BIGINT,	IN	p_ResItemIdx12	BIGINT,	IN	p_ResItemIdx13	BIGINT,	IN	p_ResItemIdx14	BIGINT,	IN	p_ResItemIdx15	BIGINT
,	IN	p_ResItemIdx16	BIGINT,	IN	p_ResItemIdx17	BIGINT,	IN	p_ResItemIdx18	BIGINT,	IN	p_ResItemIdx19	BIGINT,	IN	p_ResItemIdx20	BIGINT
,	IN	p_ResItemIdx21	BIGINT,	IN	p_ResItemIdx22	BIGINT,	IN	p_ResItemIdx23	BIGINT,	IN	p_ResItemIdx24	BIGINT,	IN	p_ResItemIdx25	BIGINT
,	IN	p_ResItemIdx26	BIGINT,	IN	p_ResItemIdx27	BIGINT,	IN	p_ResItemIdx28	BIGINT,	IN	p_ResItemIdx29	BIGINT,	IN	p_ResItemIdx30	BIGINT
,	IN	p_ResItemIdx31	BIGINT,	IN	p_ResItemIdx32	BIGINT,	IN	p_ResItemIdx33	BIGINT,	IN	p_ResItemIdx34	BIGINT,	IN	p_ResItemIdx35	BIGINT
,	IN	p_ResItemIdx36	BIGINT,	IN	p_ResItemIdx37	BIGINT,	IN	p_ResItemIdx38	BIGINT,	IN	p_ResItemIdx39	BIGINT,	IN	p_ResItemIdx40	BIGINT
,	IN	p_ResItemIdx41	BIGINT,	IN	p_ResItemIdx42	BIGINT,	IN	p_ResItemIdx43	BIGINT,	IN	p_ResItemIdx44	BIGINT,	IN	p_ResItemIdx45	BIGINT
,	IN	p_ResItemIdx46	BIGINT,	IN	p_ResItemIdx47	BIGINT,	IN	p_ResItemIdx48	BIGINT,	IN	p_ResItemIdx49	BIGINT,	IN	p_ResItemIdx50	BIGINT
,	IN	p_ResItemIdx51	BIGINT,	IN	p_ResItemIdx52	BIGINT,	IN	p_ResItemIdx53	BIGINT,	IN	p_ResItemIdx54	BIGINT,	IN	p_ResItemIdx55	BIGINT
,	IN	p_ResItemIdx56	BIGINT,	IN	p_ResItemIdx57	BIGINT,	IN	p_ResItemIdx58	BIGINT,	IN	p_ResItemIdx59	BIGINT,	IN	p_ResItemIdx60	BIGINT
,	IN	p_ResItemIdx61	BIGINT,	IN	p_ResItemIdx62	BIGINT,	IN	p_ResItemIdx63	BIGINT,	IN	p_ResItemIdx64	BIGINT,	IN	p_ResItemIdx65	BIGINT
,	IN	p_ResItemIdx66	BIGINT,	IN	p_ResItemIdx67	BIGINT,	IN	p_ResItemIdx68	BIGINT,	IN	p_ResItemIdx69	BIGINT,	IN	p_ResItemIdx70	BIGINT
,	IN	p_ResItemIdx71	BIGINT,	IN	p_ResItemIdx72	BIGINT,	IN	p_ResItemIdx73	BIGINT,	IN	p_ResItemIdx74	BIGINT,	IN	p_ResItemIdx75	BIGINT
,	IN	p_ResItemIdx76	BIGINT,	IN	p_ResItemIdx77	BIGINT,	IN	p_ResItemIdx78	BIGINT,	IN	p_ResItemIdx79	BIGINT,	IN	p_ResItemIdx80	BIGINT
,	IN	p_ResItemIdx81	BIGINT,	IN	p_ResItemIdx82	BIGINT,	IN	p_ResItemIdx83	BIGINT,	IN	p_ResItemIdx84	BIGINT,	IN	p_ResItemIdx85	BIGINT
,	IN	p_ResItemIdx86	BIGINT,	IN	p_ResItemIdx87	BIGINT,	IN	p_ResItemIdx88	BIGINT,	IN	p_ResItemIdx89	BIGINT,	IN	p_ResItemIdx90	BIGINT
,	IN	p_ResItemIdx91	BIGINT,	IN	p_ResItemIdx92	BIGINT,	IN	p_ResItemIdx93	BIGINT,	IN	p_ResItemIdx94	BIGINT,	IN	p_ResItemIdx95	BIGINT
,	IN	p_ResItemIdx96	BIGINT,	IN	p_ResItemIdx97	BIGINT,	IN	p_ResItemIdx98	BIGINT,	IN	p_ResItemIdx99	BIGINT,	IN	p_ResItemIdx100	BIGINT
)
    COMMENT '장비 아이템 강화(레벨업)'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
    DECLARE final_gold 			BIGINT DEFAULT 0;
	declare v_row_count			INT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_gold;
	END; 
    

	START TRANSACTION;
    
    root:
    BEGIN
    
        
        IF 0 < p_ItemLevel THEN
			
			CALL sp_mmo_notrans_charinvenequip_update_level(p_CharID, p_ItemIdx, p_ItemLevel, p_ItemExp, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;      
        ELSE
			
			CALL sp_mmo_notrans_charinvenequip_update_exp(p_CharID, p_ItemIdx, p_ItemExp, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;      
        END IF;
        
        
        CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DeleteGold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;
        
        
		
		DELETE FROM char_inven_equip
        WHERE char_idx = p_CharID AND item_idx IN (p_ResItemIdx01, p_ResItemIdx02, p_ResItemIdx03, p_ResItemIdx04, p_ResItemIdx05, p_ResItemIdx06, p_ResItemIdx07, p_ResItemIdx08, p_ResItemIdx09, p_ResItemIdx10,
													p_ResItemIdx11, p_ResItemIdx12, p_ResItemIdx13, p_ResItemIdx14, p_ResItemIdx15, p_ResItemIdx16, p_ResItemIdx17, p_ResItemIdx18, p_ResItemIdx19, p_ResItemIdx20,
													p_ResItemIdx21, p_ResItemIdx22, p_ResItemIdx23, p_ResItemIdx24, p_ResItemIdx25, p_ResItemIdx26, p_ResItemIdx27, p_ResItemIdx28, p_ResItemIdx29, p_ResItemIdx30,
													p_ResItemIdx31, p_ResItemIdx32, p_ResItemIdx33, p_ResItemIdx34, p_ResItemIdx35, p_ResItemIdx36, p_ResItemIdx37, p_ResItemIdx38, p_ResItemIdx39, p_ResItemIdx40,
													p_ResItemIdx41, p_ResItemIdx42, p_ResItemIdx43, p_ResItemIdx44, p_ResItemIdx45, p_ResItemIdx46, p_ResItemIdx47, p_ResItemIdx48, p_ResItemIdx49, p_ResItemIdx50,
													p_ResItemIdx51, p_ResItemIdx52, p_ResItemIdx53, p_ResItemIdx54, p_ResItemIdx55, p_ResItemIdx56, p_ResItemIdx57, p_ResItemIdx58, p_ResItemIdx59, p_ResItemIdx60,
													p_ResItemIdx61, p_ResItemIdx62, p_ResItemIdx63, p_ResItemIdx64, p_ResItemIdx65, p_ResItemIdx66, p_ResItemIdx67, p_ResItemIdx68, p_ResItemIdx69, p_ResItemIdx70,
													p_ResItemIdx71, p_ResItemIdx72, p_ResItemIdx73, p_ResItemIdx74, p_ResItemIdx75, p_ResItemIdx76, p_ResItemIdx77, p_ResItemIdx78, p_ResItemIdx79, p_ResItemIdx80,
													p_ResItemIdx81, p_ResItemIdx82, p_ResItemIdx83, p_ResItemIdx84, p_ResItemIdx85, p_ResItemIdx86, p_ResItemIdx87, p_ResItemIdx88, p_ResItemIdx89, p_ResItemIdx90,
													p_ResItemIdx91, p_ResItemIdx92, p_ResItemIdx93, p_ResItemIdx94, p_ResItemIdx95, p_ResItemIdx96, p_ResItemIdx97, p_ResItemIdx98, p_ResItemIdx99, p_ResItemIdx100);
		
		SET v_row_count = ROW_COUNT();
		IF v_row_count <> p_ResItemQty THEN
				SET result = 101;	
			LEAVE root;
		END IF;   
        
        DELETE FROM item_attribute
        WHERE item_idx IN (p_ResItemIdx01, p_ResItemIdx02, p_ResItemIdx03, p_ResItemIdx04, p_ResItemIdx05, p_ResItemIdx06, p_ResItemIdx07, p_ResItemIdx08, p_ResItemIdx09, p_ResItemIdx10,
							p_ResItemIdx11, p_ResItemIdx12, p_ResItemIdx13, p_ResItemIdx14, p_ResItemIdx15, p_ResItemIdx16, p_ResItemIdx17, p_ResItemIdx18, p_ResItemIdx19, p_ResItemIdx20,
							p_ResItemIdx21, p_ResItemIdx22, p_ResItemIdx23, p_ResItemIdx24, p_ResItemIdx25, p_ResItemIdx26, p_ResItemIdx27, p_ResItemIdx28, p_ResItemIdx29, p_ResItemIdx30,
							p_ResItemIdx31, p_ResItemIdx32, p_ResItemIdx33, p_ResItemIdx34, p_ResItemIdx35, p_ResItemIdx36, p_ResItemIdx37, p_ResItemIdx38, p_ResItemIdx39, p_ResItemIdx40,
							p_ResItemIdx41, p_ResItemIdx42, p_ResItemIdx43, p_ResItemIdx44, p_ResItemIdx45, p_ResItemIdx46, p_ResItemIdx47, p_ResItemIdx48, p_ResItemIdx49, p_ResItemIdx50,
							p_ResItemIdx51, p_ResItemIdx52, p_ResItemIdx53, p_ResItemIdx54, p_ResItemIdx55, p_ResItemIdx56, p_ResItemIdx57, p_ResItemIdx58, p_ResItemIdx59, p_ResItemIdx60,
							p_ResItemIdx61, p_ResItemIdx62, p_ResItemIdx63, p_ResItemIdx64, p_ResItemIdx65, p_ResItemIdx66, p_ResItemIdx67, p_ResItemIdx68, p_ResItemIdx69, p_ResItemIdx70,
							p_ResItemIdx71, p_ResItemIdx72, p_ResItemIdx73, p_ResItemIdx74, p_ResItemIdx75, p_ResItemIdx76, p_ResItemIdx77, p_ResItemIdx78, p_ResItemIdx79, p_ResItemIdx80,
							p_ResItemIdx81, p_ResItemIdx82, p_ResItemIdx83, p_ResItemIdx84, p_ResItemIdx85, p_ResItemIdx86, p_ResItemIdx87, p_ResItemIdx88, p_ResItemIdx89, p_ResItemIdx90,
							p_ResItemIdx91, p_ResItemIdx92, p_ResItemIdx93, p_ResItemIdx94, p_ResItemIdx95, p_ResItemIdx96, p_ResItemIdx97, p_ResItemIdx98, p_ResItemIdx99, p_ResItemIdx100);
        
        DELETE FROM item_jewels
        WHERE item_idx IN (p_ResItemIdx01, p_ResItemIdx02, p_ResItemIdx03, p_ResItemIdx04, p_ResItemIdx05, p_ResItemIdx06, p_ResItemIdx07, p_ResItemIdx08, p_ResItemIdx09, p_ResItemIdx10,
							p_ResItemIdx11, p_ResItemIdx12, p_ResItemIdx13, p_ResItemIdx14, p_ResItemIdx15, p_ResItemIdx16, p_ResItemIdx17, p_ResItemIdx18, p_ResItemIdx19, p_ResItemIdx20,
							p_ResItemIdx21, p_ResItemIdx22, p_ResItemIdx23, p_ResItemIdx24, p_ResItemIdx25, p_ResItemIdx26, p_ResItemIdx27, p_ResItemIdx28, p_ResItemIdx29, p_ResItemIdx30,
							p_ResItemIdx31, p_ResItemIdx32, p_ResItemIdx33, p_ResItemIdx34, p_ResItemIdx35, p_ResItemIdx36, p_ResItemIdx37, p_ResItemIdx38, p_ResItemIdx39, p_ResItemIdx40,
							p_ResItemIdx41, p_ResItemIdx42, p_ResItemIdx43, p_ResItemIdx44, p_ResItemIdx45, p_ResItemIdx46, p_ResItemIdx47, p_ResItemIdx48, p_ResItemIdx49, p_ResItemIdx50,
							p_ResItemIdx51, p_ResItemIdx52, p_ResItemIdx53, p_ResItemIdx54, p_ResItemIdx55, p_ResItemIdx56, p_ResItemIdx57, p_ResItemIdx58, p_ResItemIdx59, p_ResItemIdx60,
							p_ResItemIdx61, p_ResItemIdx62, p_ResItemIdx63, p_ResItemIdx64, p_ResItemIdx65, p_ResItemIdx66, p_ResItemIdx67, p_ResItemIdx68, p_ResItemIdx69, p_ResItemIdx70,
							p_ResItemIdx71, p_ResItemIdx72, p_ResItemIdx73, p_ResItemIdx74, p_ResItemIdx75, p_ResItemIdx76, p_ResItemIdx77, p_ResItemIdx78, p_ResItemIdx79, p_ResItemIdx80,
							p_ResItemIdx81, p_ResItemIdx82, p_ResItemIdx83, p_ResItemIdx84, p_ResItemIdx85, p_ResItemIdx86, p_ResItemIdx87, p_ResItemIdx88, p_ResItemIdx89, p_ResItemIdx90,
							p_ResItemIdx91, p_ResItemIdx92, p_ResItemIdx93, p_ResItemIdx94, p_ResItemIdx95, p_ResItemIdx96, p_ResItemIdx97, p_ResItemIdx98, p_ResItemIdx99, p_ResItemIdx100);
        
        DELETE FROM item_option
        WHERE item_idx IN (p_ResItemIdx01, p_ResItemIdx02, p_ResItemIdx03, p_ResItemIdx04, p_ResItemIdx05, p_ResItemIdx06, p_ResItemIdx07, p_ResItemIdx08, p_ResItemIdx09, p_ResItemIdx10,
							p_ResItemIdx11, p_ResItemIdx12, p_ResItemIdx13, p_ResItemIdx14, p_ResItemIdx15, p_ResItemIdx16, p_ResItemIdx17, p_ResItemIdx18, p_ResItemIdx19, p_ResItemIdx20,
							p_ResItemIdx21, p_ResItemIdx22, p_ResItemIdx23, p_ResItemIdx24, p_ResItemIdx25, p_ResItemIdx26, p_ResItemIdx27, p_ResItemIdx28, p_ResItemIdx29, p_ResItemIdx30,
							p_ResItemIdx31, p_ResItemIdx32, p_ResItemIdx33, p_ResItemIdx34, p_ResItemIdx35, p_ResItemIdx36, p_ResItemIdx37, p_ResItemIdx38, p_ResItemIdx39, p_ResItemIdx40,
							p_ResItemIdx41, p_ResItemIdx42, p_ResItemIdx43, p_ResItemIdx44, p_ResItemIdx45, p_ResItemIdx46, p_ResItemIdx47, p_ResItemIdx48, p_ResItemIdx49, p_ResItemIdx50,
							p_ResItemIdx51, p_ResItemIdx52, p_ResItemIdx53, p_ResItemIdx54, p_ResItemIdx55, p_ResItemIdx56, p_ResItemIdx57, p_ResItemIdx58, p_ResItemIdx59, p_ResItemIdx60,
							p_ResItemIdx61, p_ResItemIdx62, p_ResItemIdx63, p_ResItemIdx64, p_ResItemIdx65, p_ResItemIdx66, p_ResItemIdx67, p_ResItemIdx68, p_ResItemIdx69, p_ResItemIdx70,
							p_ResItemIdx71, p_ResItemIdx72, p_ResItemIdx73, p_ResItemIdx74, p_ResItemIdx75, p_ResItemIdx76, p_ResItemIdx77, p_ResItemIdx78, p_ResItemIdx79, p_ResItemIdx80,
							p_ResItemIdx81, p_ResItemIdx82, p_ResItemIdx83, p_ResItemIdx84, p_ResItemIdx85, p_ResItemIdx86, p_ResItemIdx87, p_ResItemIdx88, p_ResItemIdx89, p_ResItemIdx90,
							p_ResItemIdx91, p_ResItemIdx92, p_ResItemIdx93, p_ResItemIdx94, p_ResItemIdx95, p_ResItemIdx96, p_ResItemIdx97, p_ResItemIdx98, p_ResItemIdx99, p_ResItemIdx100);    
        
	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result, final_gold, v_row_count;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_lock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_lock`( 
	IN	p_UserID 			BIGINT
, 	IN	p_CharID	 		BIGINT
,	IN 	p_ItemDBIdx			BIGINT		
,	IN 	p_Lock		 		TINYINT		
)
    COMMENT '아이템 잠금 설정'
BEGIN
    DECLARE v_result 		INT DEFAULT 0;

    UPDATE char_inven_equip
    SET remove_lock = p_Lock
    WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
	
    IF ROW_COUNT() = 0 THEN
		SET v_result = 100;	
    END IF;
    
    SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_qualitygrade_inc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_qualitygrade_inc`(
	IN	p_UserID 		BIGINT		
,	IN	p_CharID 		BIGINT		
,	IN	p_ItemIdx		BIGINT		
,	IN	p_DeleteGold	BIGINT
,	IN	p_CostCashA		BIGINT
-- ,	IN	p_CostCashB		BIGINT
,	IN	p_ResItemID		INT
,	IN	p_ResItemCnt	INT
,	IN	p_QualityGradeMAX	TINYINT		
,	IN	p_QualityGradeNEW	TINYINT		
)
    COMMENT '장비 아이템 옵션 추가'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
    DECLARE v_result 				INT DEFAULT 0;

	DECLARE v_final_gold 			BIGINT DEFAULT 0;
    DECLARE v_final_cashA 			BIGINT DEFAULT 0;
-- 	DECLARE v_final_cashB 			BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;
	
-- 	DECLARE v_cashB_old				BIGINT DEFAULT 0;
-- 	DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
-- 		SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashB, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
	END;


	START TRANSACTION;
    
    root:
    BEGIN
		IF p_QualityGradeMAX < p_QualityGradeNEW THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;

		CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DeleteGold, v_final_gold, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;

		IF 0 < p_ResItemID THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID, p_ResItemCnt, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
	
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
	
        
		CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_cashA, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	

-- 		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_old, v_cashB_Free_old, v_result);
-- 		IF v_result != 0 THEN 
-- 			LEAVE root;
-- 		END IF; 
	
        
-- 		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
-- 		IF v_result <> 0 THEN
-- 			LEAVE root;
-- 		END IF;
		
-- 		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_new, v_cashB_Free_new, v_result);
-- 		IF v_result != 0 THEN 
-- 			LEAVE root;
-- 		END IF; 
        
        
		CALL sp_mmo_notrans_charinvenequip_update_qualitygrade_inc(p_CharID, p_ItemIdx, p_QualityGradeNEW, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;

	END;

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
-- 	SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashB, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_transcend` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_transcend`(
	IN	p_UserID		BIGINT		
,	IN	p_CharID		BIGINT		
,	IN	p_ItemIdx		BIGINT		
,	IN	p_MaterialIdx	BIGINT		
,	IN 	p_TranscendType	TINYINT		
,	IN 	p_TranscendResult TINYINT	
,	IN	p_OptionSlot_1	TINYINT,	IN	p_OptionID_1	INT,	IN	p_OptionVal_1	INT
,	IN	p_OptionSlot_2	TINYINT,	IN	p_OptionID_2	INT,	IN	p_OptionVal_2	INT
,	IN	p_OptionSlot_3	TINYINT,	IN	p_OptionID_3	INT,	IN	p_OptionVal_3	INT
,	IN	p_OptionSlot_4	TINYINT,	IN	p_OptionID_4	INT,	IN	p_OptionVal_4	INT
,	IN	p_OptionSlot_5	TINYINT,	IN	p_OptionID_5 	INT,	IN	p_OptionVal_5	INT
,	IN	p_OptionSlot_6	TINYINT,	IN	p_OptionID_6	INT,	IN	p_OptionVal_6	INT
,	IN	p_OptionSlot_7	TINYINT,	IN	p_OptionID_7	INT,	IN	p_OptionVal_7	INT
,	IN	p_QualityGrade	TINYINT		
,	IN	p_Jewel_1		INT,		IN	p_Jewel_2		INT,	IN	p_Jewel_3		INT,	IN	p_Jewel_4		INT
,	IN	p_RateItemID	INT			
,	IN	p_ProtectItemID	INT			
,	IN	p_UseGold		BIGINT		
)
    COMMENT '아이템 계승'
BEGIN
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;	    
	DECLARE v_final_gold	BIGINT DEFAULT 0;
    DECLARE v_qty_rate 		INT DEFAULT 0;
    DECLARE v_qty_protect 	INT DEFAULT 0;
	
	DECLARE v_option_qty	INT DEFAULT 0;	
	DECLARE v_jewel_qty		INT DEFAULT 0;	
    
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN 
		
		
        IF p_UseGold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_UseGold, v_final_gold, v_result);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
        END IF;
      
        
		IF p_MaterialIdx > 0 THEN 
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_MaterialIdx, v_result);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
        END IF;        
        
        
        IF p_RateItemID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_RateItemID, 1, v_qty_rate, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
        IF p_ProtectItemID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ProtectItemID, 1, v_qty_protect, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        
        IF 0 <> p_TranscendResult THEN
			
			IF 1 = p_TranscendType THEN
				
				SELECT count(*) INTO v_option_qty
				FROM item_option WHERE item_idx = p_ItemIdx;
				IF FOUND_ROWS() = 0 THEN
					SET v_result = 101;			
					LEAVE root;
				END IF;
				
				IF 0 < v_option_qty THEN
					DELETE FROM item_option
					WHERE item_idx = p_ItemIdx;
					IF ROW_COUNT() = 0 THEN
						SET v_result = 102;		
						LEAVE root;
					END IF;				
				END IF;			
				
				
				IF 0 < p_OptionID_1 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_1, p_OptionSlot_1, p_OptionVal_1, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;
				
				IF 0 < p_OptionID_2 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_2, p_OptionSlot_2, p_OptionVal_2, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;

				IF 0 < p_OptionID_3 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_3, p_OptionSlot_3, p_OptionVal_3, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;	

				IF 0 < p_OptionID_4 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_4, p_OptionSlot_4, p_OptionVal_4, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;	

				IF 0 < p_OptionID_5 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_5, p_OptionSlot_5, p_OptionVal_5, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;	

				IF 0 < p_OptionID_6 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_6, p_OptionSlot_6, p_OptionVal_6, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;	

				IF 0 < p_OptionID_7 THEN
					CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID_7, p_OptionSlot_7, p_OptionVal_7, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;			
				END IF;
				
			END IF;
			
			
			IF 2 = p_TranscendType THEN
			
				
				SELECT count(*) INTO v_jewel_qty
				FROM item_jewels WHERE item_idx = p_ItemIdx;
				IF FOUND_ROWS() = 0 THEN
					SET v_result = 110;		
					LEAVE root;
				END IF;			
				
				IF 0 < v_jewel_qty THEN
					CALL sp_mmo_notrans_itemjewels_delete_all(p_ItemIdx, v_result);
					IF ROW_COUNT() <= 0 THEN
					SET v_result = 111;		
						LEAVE root;
					END IF;
				END IF;
				
				
				UPDATE char_inven_equip SET quality_grade = p_QualityGrade WHERE item_idx = p_ItemIdx;			
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 112;		
					LEAVE root;
				END IF;			
				
				
				IF 0 < p_Jewel_1 THEN
					CALL sp_mmo_notrans_itemjewels_insert_equip(p_UserID, p_CharID, p_ItemIdx, p_Jewel_1, 1, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;					
				END IF;

				IF 0 < p_Jewel_2 THEN
					CALL sp_mmo_notrans_itemjewels_insert_equip(p_UserID, p_CharID, p_ItemIdx, p_Jewel_2, 2, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;					
				END IF;

				IF 0 < p_Jewel_3 THEN
					CALL sp_mmo_notrans_itemjewels_insert_equip(p_UserID, p_CharID, p_ItemIdx, p_Jewel_3, 3, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;					
				END IF;

				IF 0 < p_Jewel_4 THEN
					CALL sp_mmo_notrans_itemjewels_insert_equip(p_UserID, p_CharID, p_ItemIdx, p_Jewel_4, 4, v_result);
					IF v_result != 0 THEN
						LEAVE root;
					END IF;					
				END IF;				
			END IF;
		END IF;
    END;

    IF v_result != 0 THEN 
		ROLLBACK;
    ELSE
		COMMIT;
    END IF;
    
	SELECT v_result, v_final_gold, v_qty_rate, v_qty_protect;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_transcend_enchant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_transcend_enchant`(
	IN	p_UserID			BIGINT	
,	IN	p_CharID			BIGINT	
,	IN	p_ItemDBIdx			BIGINT	
,	IN 	p_NewEnchantLevel	INT		
,	IN	p_MateralItem		BIGINT	
,	IN 	p_NeedItemID		INT		
,	IN	p_UseGold			BIGINT	
,	IN 	p_Success			TINYINT	
)
    COMMENT '아이템 Enchant 계승'
BEGIN
	DECLARE v_errno 				INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
	
	DECLARE v_final_gold			BIGINT DEFAULT 0;		
	DECLARE v_final_needitem_qty	SMALLINT DEFAULT 0;		
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result;
	END;
    
	
	
    START TRANSACTION;
    
    root:
	BEGIN 
		
		
        IF p_UseGold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_UseGold, v_final_gold, v_result);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
        END IF;

        
        IF p_NeedItemID > 0 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_NeedItemID, 1, v_final_needitem_qty, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
        
		IF 0 < p_Success THEN
			
			IF p_MateralItem > 0 THEN 
				CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_MateralItem, v_result);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
		
			
			UPDATE char_inven_equip
			SET enchant_level = p_NewEnchantLevel
			WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
			
			IF ROW_COUNT() = 0 THEN
				SET v_result = 100;		
				LEAVE root;
			END IF;
		END IF;
    END;
    
    IF v_result != 0 THEN 
		ROLLBACK;
    ELSE
		COMMIT;
    END IF;
    
    
	SELECT v_result, v_final_gold, v_final_needitem_qty;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenequip_update_upgrade` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenequip_update_upgrade`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_itemidx		BIGINT		
,	IN	_itemid			INT			
,	IN	_optionid		INT			
,	IN	_optionvalue	INT			
,	IN	_optionslot		INT			
,	IN	_stoneid		INT			
,	IN	_stonedelvalue	INT			
,	IN 	_supplementid	INT 		
,	IN	_deletegold		BIGINT		
,	IN	_resitemidx01	BIGINT		
,	IN	_resitemidx02	BIGINT	
)
    COMMENT '장비 아이템 승급'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;

    DECLARE final_stone 		INT DEFAULT 0;
    DECLARE final_gold 			BIGINT DEFAULT 0;
    DECLARE final_supplement	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_stone, final_gold, final_supplement;
	END;     
    
	   
	START TRANSACTION;
    
    root:
    BEGIN
    
        
		CALL sp_mmo_notrans_charinvenequip_update_upgrade(_charid, _itemidx, _itemid, result);
		IF result <> 0 THEN
			LEAVE root;
		END IF;
        
        
        IF 0 < _optionid THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid, _optionslot, _optionvalue, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;        
        
        
        CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _stoneid, _stonedelvalue, final_stone, result);
		IF result <> 0 THEN
			LEAVE root;
		END IF;
        
		
        IF 0 < _supplementid THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _supplementid, 1, final_supplement, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;        
        
        
        IF 0 < _resitemidx01 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charid, _resitemidx01, result);
            IF 0 <> result THEN
				LEAVE root;
            END IF;
        END IF;
        
        IF 0 < _resitemidx02 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charid, _resitemidx02, result);
            IF 0 <> result THEN
				LEAVE root;
            END IF;
        END IF;
                
	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result, final_stone, final_gold, final_supplement;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitems_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitems_delete`(
	IN _useridx 			BIGINT		
,	IN _charidx				BIGINT		
,	IN  id_array VARCHAR(4096)		-- equipItemDBIdx...
,	IN	_arrayResItem VARCHAR(4096) -- countItem
)
    COMMENT '아이템 복수 종류 삭제'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    # countItem
    DECLARE v_item_warehouse_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    DECLARE v_db_item_qty			INT DEFAULT 0;	
    DECLARE v_affected_row			INT DEFAULT 0; 
    
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
    
    # EquipItem
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id BIGINT;
    DECLARE v_status_value INT;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN
    
        -- countItem begin
        IF 0 < LENGTH(_arrayResItem) THEN
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN

					SELECT item_value INTO v_db_item_qty FROM char_inven_item
					WHERE char_idx = _charidx AND item_id = v_cntitem_id;
					IF FOUND_ROWS() <> 1 THEN
						SET v_result = 101;	
						LEAVE root;			
					END IF;
					
					IF v_db_item_qty < v_cntitem_value THEN
						SET v_result = 102;	
						LEAVE root;			
					END IF;
					
					IF v_db_item_qty = v_cntitem_value THEN
						
						DELETE FROM char_inven_item
						WHERE char_idx = _charidx AND item_id = v_cntitem_id;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 104;	
							LEAVE root;
						END IF;
					ELSE 
						
						UPDATE char_inven_item
						SET item_value = item_value - v_cntitem_value
						WHERE char_idx = _charidx AND item_id = v_cntitem_id;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 105;	
							LEAVE root;
						END IF;			
					END IF;        
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
        END IF;
        -- countItem end
        
        subroot:
		-- equipItem begin
        BEGIN    
            IF 0 < LENGTH(id_array) THEN
            
				SET id_array_local = id_array;
				SET start_pos = 1;
				SET comma_pos = locate(',', id_array_local);
				SET colon_pos = locate(':', id_array_local);

				REPEAT
					SET current_id = '';
					SET current_value = '';
					
					IF colon_pos > 0 THEN -- id:value 형태
						SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
						IF comma_pos > 0 THEN
							SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
							SET end_loop = 0;
						ELSE
							SET current_value = substring(id_array_local, colon_pos + 1);
							SET end_loop = 1;
						END IF;
					ELSE -- id 만 있는 형태
						IF comma_pos > 0 THEN
							SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
							SET end_loop = 0;
						ELSE
							SET current_id = substring(id_array_local, start_pos);
							SET end_loop = 1;
						END IF;
					END IF;
				 
					SET v_status_id := CAST(current_id as unsigned);
					-- SET v_status_value := CAST(current_value as unsigned);
					# Place here your code that uses current_id
					-- IF 0 < v_status_id AND 0 < v_status_value THEN
					IF 0 < v_status_id THEN
						
                        DELETE FROM char_inven_equip WHERE item_idx = v_status_id AND char_idx = _charidx AND equip = 0;
													
						IF 0 = row_count() THEN
							SET v_result = 119;	
							LEAVE subroot;
						END IF;	
                        
                        DELETE FROM item_attribute WHERE item_idx = v_status_id;
                        DELETE FROM item_jewels WHERE item_idx = v_status_id;
                        DELETE FROM item_option WHERE item_idx = v_status_id;
                        
					END IF;

					IF end_loop = 0 THEN
						SET id_array_local = substring(id_array_local, comma_pos + 1);
						SET comma_pos = locate(',', id_array_local);
						SET colon_pos = locate(':', id_array_local);
					END IF;
				UNTIL end_loop = 1

				END REPEAT;
			END IF;
		END;
        
        IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        -- equipItem end
        
	END;

	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	SELECT v_result;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitems_sell` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitems_sell`(
	IN _useridx 			BIGINT		
,	IN _charidx				BIGINT		
,	IN _addgold				BIGINT		
,	IN  id_array VARCHAR(8192)		-- equipItemDBIdx...
,	IN	_arrayResItem VARCHAR(8192) -- countItem
)
    COMMENT '아이템 판매'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    DECLARE v_final_gold			BIGINT DEFAULT 0;
    
    # countItem
    DECLARE v_item_warehouse_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    DECLARE v_db_item_qty			INT DEFAULT 0;	
    DECLARE v_affected_row			INT DEFAULT 0; 
    
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
    
    # EquipItem
    DECLARE id_array_local VARCHAR(8192);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id BIGINT;
    DECLARE v_status_value INT;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN
    
        -- countItem begin
        IF 0 < LENGTH(_arrayResItem) THEN
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN

					SELECT item_value INTO v_db_item_qty FROM char_inven_item
					WHERE char_idx = _charidx AND item_id = v_cntitem_id;
					IF FOUND_ROWS() <> 1 THEN
						SET v_result = 101;	
						LEAVE root;			
					END IF;
					
					IF v_db_item_qty < v_cntitem_value THEN
						SET v_result = 102;	
						LEAVE root;			
					END IF;
					
					IF v_db_item_qty = v_cntitem_value THEN
						
						DELETE FROM char_inven_item
						WHERE char_idx = _charidx AND item_id = v_cntitem_id;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 104;	
							LEAVE root;
						END IF;
					ELSE 
						
						UPDATE char_inven_item
						SET item_value = item_value - v_cntitem_value
						WHERE char_idx = _charidx AND item_id = v_cntitem_id;
						
						IF ROW_COUNT() <> 1 THEN
							SET v_result = 105;	
							LEAVE root;
						END IF;			
					END IF;        
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
        END IF;
        -- countItem end
        
        subroot:
		-- equipItem begin
        BEGIN    
            IF 0 < LENGTH(id_array) THEN
            
				SET id_array_local = id_array;
				SET start_pos = 1;
				SET comma_pos = locate(',', id_array_local);
				SET colon_pos = locate(':', id_array_local);

				REPEAT
					SET current_id = '';
					SET current_value = '';
					
					IF colon_pos > 0 THEN -- id:value 형태
						SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
						IF comma_pos > 0 THEN
							SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
							SET end_loop = 0;
						ELSE
							SET current_value = substring(id_array_local, colon_pos + 1);
							SET end_loop = 1;
						END IF;
					ELSE -- id 만 있는 형태
						IF comma_pos > 0 THEN
							SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
							SET end_loop = 0;
						ELSE
							SET current_id = substring(id_array_local, start_pos);
							SET end_loop = 1;
						END IF;
					END IF;
				 
					SET v_status_id := CAST(current_id as unsigned);
					-- SET v_status_value := CAST(current_value as unsigned);
					# Place here your code that uses current_id
					-- IF 0 < v_status_id AND 0 < v_status_value THEN
					IF 0 < v_status_id THEN
						
                        DELETE FROM char_inven_equip WHERE item_idx = v_status_id AND char_idx = _charidx AND equip = 0;
													
						IF 0 = row_count() THEN
							SET v_result = 119;	
							LEAVE subroot;
						END IF;	
                        
                        DELETE FROM item_attribute WHERE item_idx = v_status_id;
                        DELETE FROM item_jewels WHERE item_idx = v_status_id;
                        DELETE FROM item_option WHERE item_idx = v_status_id;
                        
					END IF;

					IF end_loop = 0 THEN
						SET id_array_local = substring(id_array_local, comma_pos + 1);
						SET comma_pos = locate(',', id_array_local);
						SET colon_pos = locate(':', id_array_local);
					END IF;
				UNTIL end_loop = 1

				END REPEAT;
			END IF;
		END;
        
        IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        -- equipItem end
        
        CALL sp_mmo_notrans_charinfo_insert_gold(_useridx, _charidx, _addgold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF; 
        
	END;

	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	SELECT v_result, v_final_gold;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemid 		INT			
,	IN	_deleteqty	 	INT			
)
    COMMENT '인벤토리(char_inven_item) 아이템 삭제'
BEGIN
	
    DECLARE	v_errno		INT DEFAULT 0;
    DECLARE result 		INT DEFAULT 0;
    DECLARE item_count 	INT DEFAULT 0;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, item_count;	             
	END; 
    

	START TRANSACTION;
		
    root:
    BEGIN
    
		
		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteqty, item_count, result);
		IF result <> 0 THEN
			LEAVE root;
        END IF;
    
		-- IF item_count <= 0 THEN
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;
        -- END IF;
		
	END;
	
	
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	SELECT result, item_count;		

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_addgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_addgold`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,   IN	_itemid 		INT
,	IN	_itemcount		INT
,	IN	_addgold		BIGINT
)
    COMMENT '개수 아이템 판매, char_inven_item'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    DECLARE final_itemcount 	INT DEFAULT 0;
    DECLARE final_gold			BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_itemcount, final_gold;              
	END;    

	START TRANSACTION;
   
    root:
    BEGIN

		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _itemcount, final_itemcount, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;        
                
        CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;         
        
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT result, final_itemcount, final_gold;		

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_auction_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_auction_one`( 
	IN	p_UserID 		BIGINT
,   IN	p_CharID 		BIGINT
,   IN	p_ItemID 		INT
,	IN	p_ItemQty		INT
,	IN	p_DecGoldCost	BIGINT
,	IN	p_MaxRegCount		INT
,	IN	p_RegistDuration	INT	
,	IN	p_NickName			VARCHAR(26)
,	IN	p_PassWord			INT
,	IN	p_SellPrice			INT
,	IN	p_CharClass			INT
,	IN	p_ItemNameID		INT
,	IN	p_ItemGroup			INT
,	IN	p_ItemSubGroup		INT
,	IN	p_Consume_ItemID 	INT
,	IN	p_Consume_Type 		TINYINT
,	IN	p_Consume_Amount 	INT
,	IN	p_Consume_Grade 	SMALLINT
)
    COMMENT '개수 아이템 아이템 거래소 올리기 위해 삭제, char_inven_item'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_auctionidx 		BIGINT DEFAULT 0;
	-- DECLARE v_regist_max_qty 	INT DEFAULT 30;
    DECLARE v_regist_qty 		INT DEFAULT 0;
   
    DECLARE v_final_gold		BIGINT DEFAULT 0;
    DECLARE v_final_item_qty	INT DEFAULT 0;
    
    DECLARE v_item_type			INT DEFAULT 0;


   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold, v_final_item_qty, v_item_type, v_auctionidx;
	END;


	START TRANSACTION;
   
    root:
    BEGIN
    
		
    	
		SELECT item_type INTO v_item_type
		FROM char_inven_item
		WHERE char_idx = p_CharID AND item_id = p_ItemID;
        
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;
			LEAVE root;
        END IF;

		
		SELECT count(*) INTO v_regist_qty
        FROM tbl_auction_items
        WHERE fld_char_idx = p_CharID;
    
		IF p_MaxRegCount <=  v_regist_qty THEN
			SET v_result = 104;
			LEAVE root;
        END IF;

		
        
		        

		
        CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DecGoldCost, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
		
        
		CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_ItemQty, v_final_item_qty, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        
        
        CALL asp_mmo_auctionitemsai_insert_getindex(v_result, v_auctionidx);
		IF 0 <> v_result THEN
			SET v_result = 105;
			LEAVE root;
        END IF;
                
        
		INSERT INTO tbl_auction_items (fld_index, fld_db_idx, fld_user_idx, fld_char_idx, fld_nick, fld_char_class
										, fld_item_name_id, fld_item_group, fld_item_group_sub
                                        , fld_item_idx, fld_count_item_id, fld_count_item_type, fld_count_item_qty
                                        , fld_equip_item_grade
                                        , fld_sell_password, fld_register_date, fld_expire_date, fld_sell_price)
                                        
							VALUES(v_auctionidx, 1, p_UserID, p_CharID, p_NickName, 0
									, p_ItemNameID, p_ItemGroup, p_ItemSubGroup
									, 0, p_Consume_ItemID, p_Consume_Type, p_Consume_Amount
                                    , p_Consume_Grade
                                    , p_PassWord, now(), date_add(now(), interval + p_RegistDuration day), p_SellPrice);

		IF 0 = ROW_COUNT() THEN
			SET v_result = 106;
			LEAVE root;
		END IF;
     
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;


	SELECT v_result, v_final_gold, v_final_item_qty, v_item_type, v_auctionidx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_awarehouse_take` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_awarehouse_take`(
	IN _useridx 		BIGINT		
,	IN _charidx			BIGINT		
,	IN _itemID 			INT			
,	IN _itemQty			INT	
)
    COMMENT '창고에서 찾기(장비 아이템)'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_inventory_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    DECLARE v_db_item_qty			INT DEFAULT 0;	
    DECLARE v_db_item_type			SMALLINT DEFAULT 0;	
    DECLARE v_affected_row			INT DEFAULT 0; 
    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
        
        
        
        
        SELECT item_value, item_type INTO v_db_item_qty, v_db_item_type FROM char_inven_item
        WHERE user_idx = _useridx AND item_id = _itemID AND char_idx = 0;
        IF FOUND_ROWS() <> 1 THEN
			SET v_result = 101;	
            LEAVE root;			
        END IF;
        
        IF v_db_item_qty < _itemQty THEN
			SET v_result = 102;	
            LEAVE root;			
        END IF;
        
        
        
        
        INSERT INTO char_inven_item (char_idx, user_idx, item_type, item_id, item_value)
		VALUES(_charidx, _useridx, v_db_item_type, _itemID, _itemQty)
        ON DUPLICATE KEY UPDATE item_value = item_value + _itemQty; 
        
        SET v_affected_row = ROW_COUNT();
		IF NOT (v_affected_row = 2 OR v_affected_row = 1) THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;


		
        IF v_db_item_qty = _itemQty THEN
			
			DELETE FROM char_inven_item
			WHERE user_idx = _useridx AND item_id = _itemID AND char_idx = 0;
			
			IF ROW_COUNT() <> 1 THEN
				SET v_result = 104;	
				LEAVE root;
			END IF;
        
        ELSE
			
			UPDATE char_inven_item
			SET item_value = item_value - _itemQty
            WHERE user_idx = _useridx AND item_id = _itemID AND char_idx = 0;
            
			IF ROW_COUNT() <> 1 THEN
				SET v_result = 105;	
				LEAVE root;
			END IF;            
        END IF;
			
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result;	
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_charbuff` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_charbuff`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemid 		INT			
,	IN	_deleteqty	 	INT
,	IN	_itemtype		INT
,	IN	_itemsubtype	INT
, 	IN 	_cooltime		BIGINT
,	IN 	_buffid0 		INT, IN _buffvalue0 INT, IN _bufftime0 INT,	IN _groupid0 INT, IN _flag_view0 TINYINT, IN flag_death0 TINYINT
,	IN 	_buffid1 		INT, IN _buffvalue1 INT, IN _bufftime1 INT,	IN _groupid1 INT, IN _flag_view1 TINYINT, IN flag_death1 TINYINT
,	IN 	_buffid2 		INT, IN _buffvalue2 INT, IN _bufftime2 INT,	IN _groupid2 INT, IN _flag_view2 TINYINT, IN flag_death2 TINYINT
,	IN 	_buffid3 		INT, IN _buffvalue3 INT, IN _bufftime3 INT,	IN _groupid3 INT, IN _flag_view3 TINYINT, IN flag_death3 TINYINT
,	IN 	_buffid4 		INT, IN _buffvalue4 INT, IN _bufftime4 INT,	IN _groupid4 INT, IN _flag_view4 TINYINT, IN flag_death4 TINYINT
,	IN 	_buffid5 		INT, IN _buffvalue5 INT, IN _bufftime5 INT,	IN _groupid5 INT, IN _flag_view5 TINYINT, IN flag_death5 TINYINT
,	IN 	_buffid6 		INT, IN _buffvalue6 INT, IN _bufftime6 INT,	IN _groupid6 INT, IN _flag_view6 TINYINT, IN flag_death6 TINYINT
,	IN 	_buffid7 		INT, IN _buffvalue7 INT, IN _bufftime7 INT,	IN _groupid7 INT, IN _flag_view7 TINYINT, IN flag_death7 TINYINT
,	IN 	_buffid8 		INT, IN _buffvalue8 INT, IN _bufftime8 INT,	IN _groupid8 INT, IN _flag_view8 TINYINT, IN flag_death8 TINYINT
,	IN 	_buffid9 		INT, IN _buffvalue9 INT, IN _bufftime9 INT,	IN _groupid9 INT, IN _flag_view9 TINYINT, IN flag_death9 TINYINT
)
    COMMENT '인벤토리(char_inven_item) 아이템 사용하여 버프 넣기'
BEGIN
	
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;

    DECLARE final_item_count 	INT DEFAULT 0;
    DECLARE content_type 		INT DEFAULT 20; -- CT_ITEM_USE = 20,

    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_item_count;
	END;      

	START TRANSACTION;
		
    root:
    BEGIN
    
		
		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteqty, final_item_count, result);
		IF result <> 0 THEN
			LEAVE root;
        END IF;
        
        IF 0 < _cooltime THEN
			INSERT INTO char_inven_cooltime (char_idx, item_id, item_type, item_subtype, cooltime_ms)
				VALUE (_charid, _itemid, _itemtype, _itemsubtype, _cooltime)
				ON DUPLICATE KEY UPDATE cooltime_ms = _cooltime;
		-- END IF;

		-- IF final_item_count <= 0 THEN
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0, slot_cooltime = _cooltime
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;
		-- ELSE
			UPDATE char_quick_use
            SET slot_cooltime = _cooltime
            WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;
        -- END IF;
        END IF;
		
        
        IF(_groupid0 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid0;
		END IF;
        
        IF(_buffid0 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid0, _buffvalue0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime0, _groupid0, _itemid, _flag_view0, flag_death0, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        IF(_groupid1 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid1;
		END IF;
        
        IF(_buffid1 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid1, _buffvalue1, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime1, _groupid1, _itemid, _flag_view1, flag_death1, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid2 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid2;
		END IF;
        
        IF(_buffid2 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid2, _buffvalue2, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime2, _groupid2, _itemid, _flag_view2, flag_death2, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid3 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid3;
		END IF;
        
        IF(_buffid3 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid3, _buffvalue3, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime3, _groupid3, _itemid, _flag_view3, flag_death3, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid4 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid4;
		END IF;
        
        IF(_buffid4 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid4, _buffvalue4, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime4, _groupid4, _itemid, _flag_view4, flag_death4, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid5 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid5;
		END IF;
        
        IF(_buffid5 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid5, _buffvalue5, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime5, _groupid5, _itemid, _flag_view5, flag_death5, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid6 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid6;
		END IF;
        
        IF(_buffid6 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid6, _buffvalue6, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime6, _groupid6, _itemid, _flag_view6, flag_death6, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid7 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid7;
		END IF;
        
        IF(_buffid7 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid7, _buffvalue7, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime7, _groupid7, _itemid, _flag_view7, flag_death7, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid8 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid8;
		END IF;
        
        IF(_buffid8 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid8, _buffvalue8, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime8, _groupid8, _itemid, _flag_view8, flag_death8, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        IF(_groupid9 > 0) THEN
			DELETE FROM char_buff WHERE char_idx = _charid AND group_id = _groupid9;
		END IF;
        
        IF(_buffid9 > 0) THEN
			CALL sp_mmo_notrans_charbuff_insert(_charid, _buffid9, _buffvalue9, 0, 0, 0, 0, 0, 0, 0, 0, 0, _bufftime9, _groupid9, _itemid, _flag_view9, flag_death9, content_type, 0, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
        END IF;
	END;
	
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
        
	SELECT result, final_item_count;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_charslot` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_charslot`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemid 		INT			
,	IN	_deleteqty	 	INT			
,	IN 	_max_charslot_cnt 	TINYINT 	-- system 최대값
)
    COMMENT '인벤토리(char_inven_item) 아이템 사용하여 캐릭터 슬롯 확장'
BEGIN
	
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    DECLARE v_char_slot_count	TINYINT DEFAULT 0;

    DECLARE final_item_count 	INT DEFAULT 0;
    DECLARE final_charslot_cnt 	TINYINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_item_count, final_charslot_cnt;
	END;
    
	START TRANSACTION;
		
    root:
    BEGIN
		SELECT char_slot_count INTO v_char_slot_count FROM userinfo WHERE user_idx = _userid;
        IF _max_charslot_cnt <= v_char_slot_count THEN
			SET result = 1917; -- ERR_ACCOUNT_CHARACTER_SLOT_COUNT_OVER
			LEAVE root;		
		END IF;
        
		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteqty, final_item_count, result);
		IF result <> 0 THEN
			LEAVE root;
        END IF;
        
        UPDATE userinfo SET char_slot_count = char_slot_count + 1 WHERE user_idx = _userid;
        
	END;
	
	
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
        
	SELECT result, final_item_count, final_charslot_cnt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_dungeon_charging` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_dungeon_charging`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemid 		INT			
,	IN	_deleteqty	 	INT
,	IN	_dungeonid	 	INT
,	IN 	_charge_time 	INT 	-- 
-- ,	IN	_init_type	 	TINYINT
)
    COMMENT '인벤토리(char_inven_item) 아이템 사용하여 던전 이용시간 충전'
BEGIN
	
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    DECLARE v_charged_time		INT DEFAULT 0;

    DECLARE final_item_count 	INT DEFAULT 0;
    DECLARE final_charge_time 	INT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_item_count, final_charge_time;
	END;
    
	START TRANSACTION;
		
    root:
    BEGIN
		
		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteqty, final_item_count, result);
		IF result <> 0 THEN
			LEAVE root;
        END IF;
        
        SELECT charged_sec_time INTO v_charged_time FROM char_dungeon_timelimit WHERE char_idx = _charid AND dungeon_id = _dungeonid;
        
        SET final_charge_time = v_charged_time + _charge_time;
        
        INSERT INTO char_dungeon_timelimit VALUES (_charid, _dungeonid, 1, 0, _charge_time, now())
			ON DUPLICATE KEY UPDATE 
				charged_sec_time = final_charge_time;
        
	END;
	
	
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
        
	SELECT result, final_item_count, final_charge_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_guildbuff_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_guildbuff_one`( 
	IN	p_UserID 		BIGINT
, 	IN	p_CharID 		BIGINT
, 	IN	p_ItemID 		INT			
,	IN	p_DeleteQty	 	INT	
,	IN 	p_GuildID		BIGINT
,	IN 	p_BuffID 		INT			
,	IN 	p_BuffValue1	INT			
,	IN 	p_BuffValue2	INT			
,	IN 	p_BuffValue3	INT			
,	IN 	p_BuffValue4	INT			
,	IN 	p_BuffValue5	INT			
,	IN 	p_BuffValue6	INT			
,	IN 	p_BuffValue7	INT			
,	IN 	p_BuffValue8	INT			
,	IN 	p_BuffValue9	INT			
,	IN 	p_BuffValue10	INT			
,	IN 	p_BuffTime 		INT			
,	IN 	p_GroupID 		INT			
)
    COMMENT '인벤토리(char_inven_item) 아이템 사용하여 문파 버프 넣기'
BEGIN
	
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;

    DECLARE v_final_item_count 	INT DEFAULT 0;

    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_item_count;
	END;      

	START TRANSACTION;
		
    root:
    BEGIN    
		
		CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_DeleteQty, v_final_item_count, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
        END IF;
    
		IF v_final_item_count <= 0 THEN			
			UPDATE char_quick_use
            SET item_id = 0, is_auto_flag = 0
            WHERE char_idx = p_CharID AND is_skill_flag = 0 AND item_id = p_ItemID;
        END IF;
		
		IF p_GroupID > 0 THEN 
			DELETE FROM guild_buff WHERE guild_idx = p_GuildID AND group_id = p_GroupID;
		END IF;
			
		INSERT INTO guild_buff (guild_idx,  buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, buff_time, group_id)
							VALUES (p_GuildID, p_BuffID, p_BuffValue1, p_BuffValue2, p_BuffValue3, p_BuffValue4, p_BuffValue5, p_BuffValue6, p_BuffValue7, p_BuffValue8, p_BuffValue9, p_BuffValue10, DATE_ADD(NOW(), INTERVAL p_BuffTime second), p_GroupID)
		ON DUPLICATE KEY UPDATE buff_value_1 = p_BuffValue1, buff_value_2 = p_BuffValue2, buff_value_3 = p_BuffValue3, buff_value_4 = p_BuffValue4, buff_value_5 = p_BuffValue5, 
								buff_value_6 = p_BuffValue6, buff_value_7 = p_BuffValue7, buff_value_8 = p_BuffValue8, buff_value_9 = p_BuffValue9, buff_value_10 = p_BuffValue10,
								buff_time = DATE_ADD(NOW(), INTERVAL p_BuffTime second);
		
		IF 0 = ROW_COUNT() THEN
			SET v_result = 102;	
		END IF;
		
	END;
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
        
	SELECT v_result, v_final_item_count;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_guildname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_guildname`(
	IN	p_UserID		BIGINT
,	IN	p_CharID		BIGINT
,   IN	p_CostItemID	INT
,	IN 	p_CostValue		INT
,	IN 	p_NickName		VARCHAR(30)
)
    COMMENT '닉네임 변경'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_itemcount;
	END;    
    
	START TRANSACTION;
   
    root:
    BEGIN

		
		CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_CostItemID, p_CostValue, v_final_itemcount, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;

		

        
	END;
		
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT v_result, v_final_itemcount;	  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_guildname_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_guildname_one`(
	IN	p_charIdx				BIGINT
,	IN	p_guildIdx				BIGINT
,	IN 	p_guildChangeName		VARCHAR(30)
,	IN	p_guildNameChangeCost	INT UNSIGNED 	-- 길드 이름 교체 비용
)
    COMMENT '길드 이름 변경 (중복 확인, 등급 확인, 비용 차감)'
BEGIN
	DECLARE v_errno			INT;
	DECLARE v_result			INT DEFAULT 0;
	DECLARE v_final_guild_gold	BIGINT DEFAULT 0;
    
	-- 조건 체크용 로컬 변수
    DECLARE v_memberGrade	INT;
    DECLARE v_tmp_gold		BIGINT DEFAULT 0;		-- 골드 재화 조건 체크

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
			SET v_final_guild_gold := 0;	
		ROLLBACK;
			SELECT v_result,v_final_guild_gold;
	END;
   
    root:
    BEGIN
	
	-- 길드 인덱스 유효성 체크
	IF (p_guildIdx IS NULL) || (p_guildIdx < 1) THEN
		BEGIN
			SET v_result := 1001;
			LEAVE root;
		END;
	END IF;
    
	-- 캐릭터 유효성 체크
    IF (p_charIdx IS NULL) || (p_charIdx < 1) THEN
		BEGIN
			SET v_result := 1002;
			LEAVE root;
		END;
	END IF;
    
    -- 길드 멤버 유효성 체크
    CALL gusp_guild_Check_Sel(p_guildIdx, v_result);
	IF v_result = -92 THEN	
		BEGIN
			SET v_result := 1003;
			LEAVE root;
		END;
    END IF;
    
    -- 길드 멤버 체크
	CALL gusp_guild_member_DetailCheck_Sel(p_guildIdx, p_charIdx, v_result);
	IF v_result = -94 THEN	
		BEGIN
			SET v_result := 1004;
            LEAVE root;
		END;
    END IF;
    
    -- 길드 멤버 등급 체크
    CALL gusp_guild_member_GradeCheck_Sel(p_guildIdx, p_charIdx, v_memberGrade);
	IF 3 > v_memberGrade THEN
		BEGIN
			SET v_result := 1005;
			LEAVE root;
		END;
    END IF;
    
	-- 길드 이름 중복 체크
	IF EXISTS (SELECT 1 FROM guild WHERE `name` = p_guildChangeName collate utf8mb4_general_ci) THEN
		SET v_result = 1006;
		LEAVE root;
	END IF;
	
    
	START TRANSACTION;
	subroot:
	BEGIN
		SELECT guild_gold INTO v_tmp_gold FROM guild WHERE guild_idx = p_guildIdx;
		IF p_guildNameChangeCost > v_tmp_gold THEN
			BEGIN
				SET v_result := 1007;	
				LEAVE root;
			END;
		END IF;
			
		UPDATE guild
		SET name = p_guildChangeName, 
        guild_gold = guild_gold - p_guildNameChangeCost,
        name_last_update_date = NOW()
		WHERE master_char_idx = p_charIdx AND guild_idx = p_guildIdx;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 1008;
			LEAVE subroot;
		END IF;
        
		SET v_result = 1;
		-- UPDATE guild_war_regist
		-- SET name = p_GuildName
		-- WHERE guild_idx = p_guildIdx;
	END;

	if 1 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;       
END;

	SET v_final_guild_gold = (SELECT guild_gold FROM guild WHERE guild_idx = p_guildIdx);
    
	SELECT v_result, v_final_guild_gold;  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_guildname_rollback` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_guildname_rollback`(
	IN	p_UserID		BIGINT
,	IN	p_CharID		BIGINT
,	IN 	p_CostItemType	INT
,   IN	p_CostItemID	INT
,	IN 	p_CostValue		INT
,	IN 	p_NickName		VARCHAR(30)
)
    COMMENT '닉네임 변경'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
                
		SELECT v_result;
	END;    

    
	
	CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType, p_CostItemID, p_CostValue, v_result, v_final_itemcount);

	

	SELECT v_result;	  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_medal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_medal`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemid 		INT			
,	IN	_deleteqty	 	INT			
,	IN 	_addGuildPoint 	INT			
)
    COMMENT '인벤토리(char_inven_item) 아이템 사용하여 문파 포인트 얻기'
BEGIN
	
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;

    DECLARE final_item_count 	INT DEFAULT 0;
    DECLARE final_guildpoint 	INT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_item_count, final_guildpoint;
	END;      

	START TRANSACTION;
		
    root:
    BEGIN
    
		
		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteqty, final_item_count, result);
		IF result <> 0 THEN
			LEAVE root;
        END IF;
        
        
        CALL sp_mmo_notrans_charinfo_insert_guildpoint(_charid, _addGuildPoint, final_guildpoint, result);
        IF result <> 0 THEN
			LEAVE root;
        END IF;
    
	END;
	
	
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
        
	SELECT result, final_item_count, final_guildpoint;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_quickslot` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_quickslot`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemid 		INT			
,	IN	_deleteqty	 	INT			
-- ,	IN 	_slot			INT		
,	IN	_itemtype		INT
,	IN	_itemsubtype	INT
, 	IN 	_cooltime		BIGINT		
)
    COMMENT '인벤토리(char_inven_item) 아이템 삭제'
BEGIN
	
    DECLARE	v_errno		INT DEFAULT 0;
    DECLARE result 		INT DEFAULT 0;
    DECLARE item_count 	INT DEFAULT 0;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, item_count;	             
	END; 
    

	START TRANSACTION;
		
    root:
    BEGIN
    
		
		CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteqty, item_count, result);
		IF result <> 0 THEN
			LEAVE root;
        END IF;
        
        IF 0 < _cooltime THEN
			INSERT INTO char_inven_cooltime (char_idx, item_id, item_type, item_subtype, cooltime_ms)
				VALUE (_charid, _itemid, _itemtype, _itemsubtype, _cooltime)
				ON DUPLICATE KEY UPDATE cooltime_ms = _cooltime;
		END IF;
        
        -- IF 0 < item_count THEN
        -- BEGIN
			UPDATE char_quick_use
			SET slot_cooltime = _cooltime
			WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;
        -- END;
        -- ELSE
        -- BEGIN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0, slot_cooltime = _cooltime
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;
        -- END;
        -- END IF;
		
	END;
	
	
	
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	SELECT result, item_count;		

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_randombox` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_randombox`(
	IN	_userid 			BIGINT		
,	IN	_charid 			BIGINT		

,	IN	_materialid			INT			
, 	IN	_materialcount		INT			

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT

-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
, 	IN _enchantLevel1	INT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
, 	IN _enchantLevel2	INT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
, 	IN _enchantLevel3	INT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
, 	IN _enchantLevel4	INT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
, 	IN _enchantLevel5	INT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
, 	IN _enchantLevel6	INT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
, 	IN _enchantLevel7	INT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
, 	IN _enchantLevel8	INT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
, 	IN _enchantLevel9	INT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
, 	IN _enchantLevel10	INT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT

,   IN _itemId11 	INT,		IN _quality11	INT,	IN _equipType11	INT
,	IN _attrId11	INT,		IN _attrValue11	INT,	IN _belong11	TINYINT,	IN _identified11		TINYINT
, 	IN _enchantLevel11	INT
,	IN _slotId1_11	TINYINT,	IN _optId1_11	INT,	IN _optValue1_11	SMALLINT
,	IN _slotId2_11	TINYINT,	IN _optId2_11	INT,	IN _optValue2_11	SMALLINT
,	IN _slotId3_11	TINYINT,	IN _optId3_11	INT,	IN _optValue3_11	SMALLINT
,	IN _slotId4_11	TINYINT,	IN _optId4_11	INT,	IN _optValue4_11	SMALLINT
,	IN _slotId5_11	TINYINT,	IN _optId5_11	INT,	IN _optValue5_11	SMALLINT
,	IN _slotId6_11	TINYINT,	IN _optId6_11	INT,	IN _optValue6_11	SMALLINT
,	IN _slotId7_11	TINYINT,	IN _optId7_11	INT,	IN _optValue7_11	SMALLINT

,   IN _itemId12 	INT,		IN _quality12	INT,	IN _equipType12	INT
,	IN _attrId12	INT,		IN _attrValue12	INT,	IN _belong12	TINYINT,	IN _identified12		TINYINT
, 	IN _enchantLevel12	INT
,	IN _slotId1_12	TINYINT,	IN _optId1_12	INT,	IN _optValue1_12	SMALLINT
,	IN _slotId2_12	TINYINT,	IN _optId2_12	INT,	IN _optValue2_12	SMALLINT
,	IN _slotId3_12	TINYINT,	IN _optId3_12	INT,	IN _optValue3_12	SMALLINT
,	IN _slotId4_12	TINYINT,	IN _optId4_12	INT,	IN _optValue4_12	SMALLINT
,	IN _slotId5_12	TINYINT,	IN _optId5_12	INT,	IN _optValue5_12	SMALLINT
,	IN _slotId6_12	TINYINT,	IN _optId6_12	INT,	IN _optValue6_12	SMALLINT
,	IN _slotId7_12	TINYINT,	IN _optId7_12	INT,	IN _optValue7_12	SMALLINT

,   IN _itemId13 	INT,		IN _quality13	INT,	IN _equipType13	INT
,	IN _attrId13	INT,		IN _attrValue13	INT,	IN _belong13	TINYINT,	IN _identified13		TINYINT
, 	IN _enchantLevel13	INT
,	IN _slotId1_13	TINYINT,	IN _optId1_13	INT,	IN _optValue1_13	SMALLINT
,	IN _slotId2_13	TINYINT,	IN _optId2_13	INT,	IN _optValue2_13	SMALLINT
,	IN _slotId3_13	TINYINT,	IN _optId3_13	INT,	IN _optValue3_13	SMALLINT
,	IN _slotId4_13	TINYINT,	IN _optId4_13	INT,	IN _optValue4_13	SMALLINT
,	IN _slotId5_13	TINYINT,	IN _optId5_13	INT,	IN _optValue5_13	SMALLINT
,	IN _slotId6_13	TINYINT,	IN _optId6_13	INT,	IN _optValue6_13	SMALLINT
,	IN _slotId7_13	TINYINT,	IN _optId7_13	INT,	IN _optValue7_13	SMALLINT

,   IN _itemId14 	INT,		IN _quality14	INT,	IN _equipType14	INT
,	IN _attrId14		INT,	IN _attrValue14	INT,	IN _belong14	TINYINT,	IN _identified14		TINYINT
, 	IN _enchantLevel14	INT
,	IN _slotId1_14	TINYINT,	IN _optId1_14	INT,	IN _optValue1_14	SMALLINT
,	IN _slotId2_14	TINYINT,	IN _optId2_14	INT,	IN _optValue2_14	SMALLINT
,	IN _slotId3_14	TINYINT,	IN _optId3_14	INT,	IN _optValue3_14	SMALLINT
,	IN _slotId4_14	TINYINT,	IN _optId4_14	INT,	IN _optValue4_14	SMALLINT
,	IN _slotId5_14	TINYINT,	IN _optId5_14	INT,	IN _optValue5_14	SMALLINT
,	IN _slotId6_14	TINYINT,	IN _optId6_14	INT,	IN _optValue6_14	SMALLINT
,	IN _slotId7_14	TINYINT,	IN _optId7_14	INT,	IN _optValue7_14	SMALLINT

,   IN _itemId15 	INT,		IN _quality15	INT,	IN _equipType15	INT
,	IN _attrId15	INT,		IN _attrValue15	INT,	IN _belong15	TINYINT,	IN _identified15		TINYINT
, 	IN _enchantLevel15	INT
,	IN _slotId1_15	TINYINT,	IN _optId1_15	INT,	IN _optValue1_15	SMALLINT
,	IN _slotId2_15	TINYINT,	IN _optId2_15	INT,	IN _optValue2_15	SMALLINT
,	IN _slotId3_15	TINYINT,	IN _optId3_15	INT,	IN _optValue3_15	SMALLINT
,	IN _slotId4_15	TINYINT,	IN _optId4_15	INT,	IN _optValue4_15	SMALLINT
,	IN _slotId5_15	TINYINT,	IN _optId5_15	INT,	IN _optValue5_15	SMALLINT
,	IN _slotId6_15	TINYINT,	IN _optId6_15	INT,	IN _optValue6_15	SMALLINT
,	IN _slotId7_15	TINYINT,	IN _optId7_15	INT,	IN _optValue7_15	SMALLINT

,   IN _itemId16 	INT,		IN _quality16	INT,	IN _equipType16	INT
,	IN _attrId16	INT,		IN _attrValue16	INT,	IN _belong16	TINYINT,	IN _identified16		TINYINT
, 	IN _enchantLevel16	INT
,	IN _slotId1_16	TINYINT,	IN _optId1_16	INT,	IN _optValue1_16	SMALLINT
,	IN _slotId2_16	TINYINT,	IN _optId2_16	INT,	IN _optValue2_16	SMALLINT
,	IN _slotId3_16	TINYINT,	IN _optId3_16	INT,	IN _optValue3_16	SMALLINT
,	IN _slotId4_16	TINYINT,	IN _optId4_16	INT,	IN _optValue4_16	SMALLINT
,	IN _slotId5_16	TINYINT,	IN _optId5_16	INT,	IN _optValue5_16	SMALLINT
,	IN _slotId6_16	TINYINT,	IN _optId6_16	INT,	IN _optValue6_16	SMALLINT
,	IN _slotId7_16	TINYINT,	IN _optId7_16	INT,	IN _optValue7_16	SMALLINT

,   IN _itemId17 	INT,		IN _quality17	INT,	IN _equipType17	INT
,	IN _attrId17	INT,		IN _attrValue17	INT,	IN _belong17	TINYINT,	IN _identified17		TINYINT
, 	IN _enchantLevel17	INT
,	IN _slotId1_17	TINYINT,	IN _optId1_17	INT,	IN _optValue1_17	SMALLINT
,	IN _slotId2_17	TINYINT,	IN _optId2_17	INT,	IN _optValue2_17	SMALLINT
,	IN _slotId3_17	TINYINT,	IN _optId3_17	INT,	IN _optValue3_17	SMALLINT
,	IN _slotId4_17	TINYINT,	IN _optId4_17	INT,	IN _optValue4_17	SMALLINT
,	IN _slotId5_17	TINYINT,	IN _optId5_17	INT,	IN _optValue5_17	SMALLINT
,	IN _slotId6_17	TINYINT,	IN _optId6_17	INT,	IN _optValue6_17	SMALLINT
,	IN _slotId7_17	TINYINT,	IN _optId7_17	INT,	IN _optValue7_17	SMALLINT

,   IN _itemId18 	INT,		IN _quality18	INT,	IN _equipType18	INT
,	IN _attrId18	INT,		IN _attrValue18	INT,	IN _belong18	TINYINT,	IN _identified18		TINYINT
, 	IN _enchantLevel18	INT
,	IN _slotId1_18	TINYINT,	IN _optId1_18	INT,	IN _optValue1_18	SMALLINT
,	IN _slotId2_18	TINYINT,	IN _optId2_18	INT,	IN _optValue2_18	SMALLINT
,	IN _slotId3_18	TINYINT,	IN _optId3_18	INT,	IN _optValue3_18	SMALLINT
,	IN _slotId4_18	TINYINT,	IN _optId4_18	INT,	IN _optValue4_18	SMALLINT
,	IN _slotId5_18	TINYINT,	IN _optId5_18	INT,	IN _optValue5_18	SMALLINT
,	IN _slotId6_18	TINYINT,	IN _optId6_18	INT,	IN _optValue6_18	SMALLINT
,	IN _slotId7_18	TINYINT,	IN _optId7_18	INT,	IN _optValue7_18	SMALLINT

,   IN _itemId19 	INT,		IN _quality19	INT,	IN _equipType19	INT
,	IN _attrId19		INT,	IN _attrValue19	INT,	IN _belong19	TINYINT,	IN _identified19		TINYINT
, 	IN _enchantLevel19	INT
,	IN _slotId1_19	TINYINT,	IN _optId1_19	INT,	IN _optValue1_19	SMALLINT
,	IN _slotId2_19	TINYINT,	IN _optId2_19	INT,	IN _optValue2_19	SMALLINT
,	IN _slotId3_19	TINYINT,	IN _optId3_19	INT,	IN _optValue3_19	SMALLINT
,	IN _slotId4_19	TINYINT,	IN _optId4_19	INT,	IN _optValue4_19	SMALLINT
,	IN _slotId5_19	TINYINT,	IN _optId5_19	INT,	IN _optValue5_19	SMALLINT
,	IN _slotId6_19	TINYINT,	IN _optId6_19	INT,	IN _optValue6_19	SMALLINT
,	IN _slotId7_19	TINYINT,	IN _optId7_19	INT,	IN _optValue7_19	SMALLINT

,   IN _itemId20 	INT,		IN _quality20	INT,	IN _equipType20	INT
,	IN _attrId20	INT,		IN _attrValue20	INT,	IN _belong20	TINYINT,	IN _identified20		TINYINT
, 	IN _enchantLevel20	INT
,	IN _slotId1_20	TINYINT,	IN _optId1_20	INT,	IN _optValue1_20	SMALLINT
,	IN _slotId2_20	TINYINT,	IN _optId2_20	INT,	IN _optValue2_20	SMALLINT
,	IN _slotId3_20	TINYINT,	IN _optId3_20	INT,	IN _optValue3_20	SMALLINT
,	IN _slotId4_20	TINYINT,	IN _optId4_20	INT,	IN _optValue4_20	SMALLINT
,	IN _slotId5_20	TINYINT,	IN _optId5_20	INT,	IN _optValue5_20	SMALLINT
,	IN _slotId6_20	TINYINT,	IN _optId6_20	INT,	IN _optValue6_20	SMALLINT
,	IN _slotId7_20	TINYINT,	IN _optId7_20	INT,	IN _optValue7_20	SMALLINT

,   IN _itemId21 	INT,		IN _quality21	INT,	IN _equipType21	INT
,	IN _attrId21	INT,		IN _attrValue21	INT,	IN _belong21	TINYINT,	IN _identified21		TINYINT
, 	IN _enchantLevel21	INT
,	IN _slotId1_21	TINYINT,	IN _optId1_21	INT,	IN _optValue1_21	SMALLINT
,	IN _slotId2_21	TINYINT,	IN _optId2_21	INT,	IN _optValue2_21	SMALLINT
,	IN _slotId3_21	TINYINT,	IN _optId3_21	INT,	IN _optValue3_21	SMALLINT
,	IN _slotId4_21	TINYINT,	IN _optId4_21	INT,	IN _optValue4_21	SMALLINT
,	IN _slotId5_21	TINYINT,	IN _optId5_21	INT,	IN _optValue5_21	SMALLINT
,	IN _slotId6_21	TINYINT,	IN _optId6_21	INT,	IN _optValue6_21	SMALLINT
,	IN _slotId7_21	TINYINT,	IN _optId7_21	INT,	IN _optValue7_21	SMALLINT

,   IN _itemId22 	INT,		IN _quality22	INT,	IN _equipType22	INT
,	IN _attrId22	INT,		IN _attrValue22	INT,	IN _belong22	TINYINT,	IN _identified22		TINYINT
, 	IN _enchantLevel22	INT
,	IN _slotId1_22	TINYINT,	IN _optId1_22	INT,	IN _optValue1_22	SMALLINT
,	IN _slotId2_22	TINYINT,	IN _optId2_22	INT,	IN _optValue2_22	SMALLINT
,	IN _slotId3_22	TINYINT,	IN _optId3_22	INT,	IN _optValue3_22	SMALLINT
,	IN _slotId4_22	TINYINT,	IN _optId4_22	INT,	IN _optValue4_22	SMALLINT
,	IN _slotId5_22	TINYINT,	IN _optId5_22	INT,	IN _optValue5_22	SMALLINT
,	IN _slotId6_22	TINYINT,	IN _optId6_22	INT,	IN _optValue6_22	SMALLINT
,	IN _slotId7_22	TINYINT,	IN _optId7_22	INT,	IN _optValue7_22	SMALLINT

,   IN _itemId23 	INT,		IN _quality23	INT,	IN _equipType23	INT
,	IN _attrId23	INT,		IN _attrValue23	INT,	IN _belong23	TINYINT,	IN _identified23		TINYINT
, 	IN _enchantLevel23	INT
,	IN _slotId1_23	TINYINT,	IN _optId1_23	INT,	IN _optValue1_23	SMALLINT
,	IN _slotId2_23	TINYINT,	IN _optId2_23	INT,	IN _optValue2_23	SMALLINT
,	IN _slotId3_23	TINYINT,	IN _optId3_23	INT,	IN _optValue3_23	SMALLINT
,	IN _slotId4_23	TINYINT,	IN _optId4_23	INT,	IN _optValue4_23	SMALLINT
,	IN _slotId5_23	TINYINT,	IN _optId5_23	INT,	IN _optValue5_23	SMALLINT
,	IN _slotId6_23	TINYINT,	IN _optId6_23	INT,	IN _optValue6_23	SMALLINT
,	IN _slotId7_23	TINYINT,	IN _optId7_23	INT,	IN _optValue7_23	SMALLINT

,   IN _itemId24 	INT,		IN _quality24	INT,	IN _equipType24	INT
,	IN _attrId24		INT,	IN _attrValue24	INT,	IN _belong24	TINYINT,	IN _identified24		TINYINT
, 	IN _enchantLevel24	INT
,	IN _slotId1_24	TINYINT,	IN _optId1_24	INT,	IN _optValue1_24	SMALLINT
,	IN _slotId2_24	TINYINT,	IN _optId2_24	INT,	IN _optValue2_24	SMALLINT
,	IN _slotId3_24	TINYINT,	IN _optId3_24	INT,	IN _optValue3_24	SMALLINT
,	IN _slotId4_24	TINYINT,	IN _optId4_24	INT,	IN _optValue4_24	SMALLINT
,	IN _slotId5_24	TINYINT,	IN _optId5_24	INT,	IN _optValue5_24	SMALLINT
,	IN _slotId6_24	TINYINT,	IN _optId6_24	INT,	IN _optValue6_24	SMALLINT
,	IN _slotId7_24	TINYINT,	IN _optId7_24	INT,	IN _optValue7_24	SMALLINT

,   IN _itemId25 	INT,		IN _quality25	INT,	IN _equipType25	INT
,	IN _attrId25	INT,		IN _attrValue25	INT,	IN _belong25	TINYINT,	IN _identified25		TINYINT
, 	IN _enchantLevel25	INT
,	IN _slotId1_25	TINYINT,	IN _optId1_25	INT,	IN _optValue1_25	SMALLINT
,	IN _slotId2_25	TINYINT,	IN _optId2_25	INT,	IN _optValue2_25	SMALLINT
,	IN _slotId3_25	TINYINT,	IN _optId3_25	INT,	IN _optValue3_25	SMALLINT
,	IN _slotId4_25	TINYINT,	IN _optId4_25	INT,	IN _optValue4_25	SMALLINT
,	IN _slotId5_25	TINYINT,	IN _optId5_25	INT,	IN _optValue5_25	SMALLINT
,	IN _slotId6_25	TINYINT,	IN _optId6_25	INT,	IN _optValue6_25	SMALLINT
,	IN _slotId7_25	TINYINT,	IN _optId7_25	INT,	IN _optValue7_25	SMALLINT

,   IN _itemId26 	INT,		IN _quality26	INT,	IN _equipType26	INT
,	IN _attrId26	INT,		IN _attrValue26	INT,	IN _belong26	TINYINT,	IN _identified26		TINYINT
, 	IN _enchantLevel26	INT
,	IN _slotId1_26	TINYINT,	IN _optId1_26	INT,	IN _optValue1_26	SMALLINT
,	IN _slotId2_26	TINYINT,	IN _optId2_26	INT,	IN _optValue2_26	SMALLINT
,	IN _slotId3_26	TINYINT,	IN _optId3_26	INT,	IN _optValue3_26	SMALLINT
,	IN _slotId4_26	TINYINT,	IN _optId4_26	INT,	IN _optValue4_26	SMALLINT
,	IN _slotId5_26	TINYINT,	IN _optId5_26	INT,	IN _optValue5_26	SMALLINT
,	IN _slotId6_26	TINYINT,	IN _optId6_26	INT,	IN _optValue6_26	SMALLINT
,	IN _slotId7_26	TINYINT,	IN _optId7_26	INT,	IN _optValue7_26	SMALLINT

,   IN _itemId27 	INT,		IN _quality27	INT,	IN _equipType27	INT
,	IN _attrId27	INT,		IN _attrValue27	INT,	IN _belong27	TINYINT,	IN _identified27		TINYINT
, 	IN _enchantLevel27	INT
,	IN _slotId1_27	TINYINT,	IN _optId1_27	INT,	IN _optValue1_27	SMALLINT
,	IN _slotId2_27	TINYINT,	IN _optId2_27	INT,	IN _optValue2_27	SMALLINT
,	IN _slotId3_27	TINYINT,	IN _optId3_27	INT,	IN _optValue3_27	SMALLINT
,	IN _slotId4_27	TINYINT,	IN _optId4_27	INT,	IN _optValue4_27	SMALLINT
,	IN _slotId5_27	TINYINT,	IN _optId5_27	INT,	IN _optValue5_27	SMALLINT
,	IN _slotId6_27	TINYINT,	IN _optId6_27	INT,	IN _optValue6_27	SMALLINT
,	IN _slotId7_27	TINYINT,	IN _optId7_27	INT,	IN _optValue7_27	SMALLINT

,   IN _itemId28 	INT,		IN _quality28	INT,	IN _equipType28	INT
,	IN _attrId28	INT,		IN _attrValue28	INT,	IN _belong28	TINYINT,	IN _identified28		TINYINT
, 	IN _enchantLevel28	INT
,	IN _slotId1_28	TINYINT,	IN _optId1_28	INT,	IN _optValue1_28	SMALLINT
,	IN _slotId2_28	TINYINT,	IN _optId2_28	INT,	IN _optValue2_28	SMALLINT
,	IN _slotId3_28	TINYINT,	IN _optId3_28	INT,	IN _optValue3_28	SMALLINT
,	IN _slotId4_28	TINYINT,	IN _optId4_28	INT,	IN _optValue4_28	SMALLINT
,	IN _slotId5_28	TINYINT,	IN _optId5_28	INT,	IN _optValue5_28	SMALLINT
,	IN _slotId6_28	TINYINT,	IN _optId6_28	INT,	IN _optValue6_28	SMALLINT
,	IN _slotId7_28	TINYINT,	IN _optId7_28	INT,	IN _optValue7_28	SMALLINT

,   IN _itemId29 	INT,		IN _quality29	INT,	IN _equipType29	INT
,	IN _attrId29		INT,	IN _attrValue29	INT,	IN _belong29	TINYINT,	IN _identified29		TINYINT
, 	IN _enchantLevel29	INT
,	IN _slotId1_29	TINYINT,	IN _optId1_29	INT,	IN _optValue1_29	SMALLINT
,	IN _slotId2_29	TINYINT,	IN _optId2_29	INT,	IN _optValue2_29	SMALLINT
,	IN _slotId3_29	TINYINT,	IN _optId3_29	INT,	IN _optValue3_29	SMALLINT
,	IN _slotId4_29	TINYINT,	IN _optId4_29	INT,	IN _optValue4_29	SMALLINT
,	IN _slotId5_29	TINYINT,	IN _optId5_29	INT,	IN _optValue5_29	SMALLINT
,	IN _slotId6_29	TINYINT,	IN _optId6_29	INT,	IN _optValue6_29	SMALLINT
,	IN _slotId7_29	TINYINT,	IN _optId7_29	INT,	IN _optValue7_29	SMALLINT

,   IN _itemId30 	INT,		IN _quality30	INT,	IN _equipType30	INT
,	IN _attrId30	INT,		IN _attrValue30	INT,	IN _belong30	TINYINT,	IN _identified30		TINYINT
, 	IN _enchantLevel30	INT
,	IN _slotId1_30	TINYINT,	IN _optId1_30	INT,	IN _optValue1_30	SMALLINT
,	IN _slotId2_30	TINYINT,	IN _optId2_30	INT,	IN _optValue2_30	SMALLINT
,	IN _slotId3_30	TINYINT,	IN _optId3_30	INT,	IN _optValue3_30	SMALLINT
,	IN _slotId4_30	TINYINT,	IN _optId4_30	INT,	IN _optValue4_30	SMALLINT
,	IN _slotId5_30	TINYINT,	IN _optId5_30	INT,	IN _optValue5_30	SMALLINT
,	IN _slotId6_30	TINYINT,	IN _optId6_30	INT,	IN _optValue6_30	SMALLINT
,	IN _slotId7_30	TINYINT,	IN _optId7_30	INT,	IN _optValue7_30	SMALLINT


,   IN _itemId31 	INT,		IN _quality31	INT,	IN _equipType31	INT
,	IN _attrId31	INT,		IN _attrValue31	INT,	IN _belong31	TINYINT,	IN _identified31		TINYINT
, 	IN _enchantLevel31	INT
,	IN _slotId1_31	TINYINT,	IN _optId1_31	INT,	IN _optValue1_31	SMALLINT
,	IN _slotId2_31	TINYINT,	IN _optId2_31	INT,	IN _optValue2_31	SMALLINT
,	IN _slotId3_31	TINYINT,	IN _optId3_31	INT,	IN _optValue3_31	SMALLINT
,	IN _slotId4_31	TINYINT,	IN _optId4_31	INT,	IN _optValue4_31	SMALLINT
,	IN _slotId5_31	TINYINT,	IN _optId5_31	INT,	IN _optValue5_31	SMALLINT
,	IN _slotId6_31	TINYINT,	IN _optId6_31	INT,	IN _optValue6_31	SMALLINT
,	IN _slotId7_31	TINYINT,	IN _optId7_31	INT,	IN _optValue7_31	SMALLINT

,   IN _itemId32 	INT,		IN _quality32	INT,	IN _equipType32	INT
,	IN _attrId32	INT,		IN _attrValue32	INT,	IN _belong32	TINYINT,	IN _identified32		TINYINT
, 	IN _enchantLevel32	INT
,	IN _slotId1_32	TINYINT,	IN _optId1_32	INT,	IN _optValue1_32	SMALLINT
,	IN _slotId2_32	TINYINT,	IN _optId2_32	INT,	IN _optValue2_32	SMALLINT
,	IN _slotId3_32	TINYINT,	IN _optId3_32	INT,	IN _optValue3_32	SMALLINT
,	IN _slotId4_32	TINYINT,	IN _optId4_32	INT,	IN _optValue4_32	SMALLINT
,	IN _slotId5_32	TINYINT,	IN _optId5_32	INT,	IN _optValue5_32	SMALLINT
,	IN _slotId6_32	TINYINT,	IN _optId6_32	INT,	IN _optValue6_32	SMALLINT
,	IN _slotId7_32	TINYINT,	IN _optId7_32	INT,	IN _optValue7_32	SMALLINT

,   IN _itemId33 	INT,		IN _quality33	INT,	IN _equipType33	INT
,	IN _attrId33	INT,		IN _attrValue33	INT,	IN _belong33	TINYINT,	IN _identified33		TINYINT
, 	IN _enchantLevel33	INT
,	IN _slotId1_33	TINYINT,	IN _optId1_33	INT,	IN _optValue1_33	SMALLINT
,	IN _slotId2_33	TINYINT,	IN _optId2_33	INT,	IN _optValue2_33	SMALLINT
,	IN _slotId3_33	TINYINT,	IN _optId3_33	INT,	IN _optValue3_33	SMALLINT
,	IN _slotId4_33	TINYINT,	IN _optId4_33	INT,	IN _optValue4_33	SMALLINT
,	IN _slotId5_33	TINYINT,	IN _optId5_33	INT,	IN _optValue5_33	SMALLINT
,	IN _slotId6_33	TINYINT,	IN _optId6_33	INT,	IN _optValue6_33	SMALLINT
,	IN _slotId7_33	TINYINT,	IN _optId7_33	INT,	IN _optValue7_33	SMALLINT

,   IN _itemId34 	INT,		IN _quality34	INT,	IN _equipType34	INT
,	IN _attrId34		INT,	IN _attrValue34	INT,	IN _belong34	TINYINT,	IN _identified34		TINYINT
, 	IN _enchantLevel34	INT
,	IN _slotId1_34	TINYINT,	IN _optId1_34	INT,	IN _optValue1_34	SMALLINT
,	IN _slotId2_34	TINYINT,	IN _optId2_34	INT,	IN _optValue2_34	SMALLINT
,	IN _slotId3_34	TINYINT,	IN _optId3_34	INT,	IN _optValue3_34	SMALLINT
,	IN _slotId4_34	TINYINT,	IN _optId4_34	INT,	IN _optValue4_34	SMALLINT
,	IN _slotId5_34	TINYINT,	IN _optId5_34	INT,	IN _optValue5_34	SMALLINT
,	IN _slotId6_34	TINYINT,	IN _optId6_34	INT,	IN _optValue6_34	SMALLINT
,	IN _slotId7_34	TINYINT,	IN _optId7_34	INT,	IN _optValue7_34	SMALLINT

,   IN _itemId35 	INT,		IN _quality35	INT,	IN _equipType35	INT
,	IN _attrId35	INT,		IN _attrValue35	INT,	IN _belong35	TINYINT,	IN _identified35		TINYINT
, 	IN _enchantLevel35	INT
,	IN _slotId1_35	TINYINT,	IN _optId1_35	INT,	IN _optValue1_35	SMALLINT
,	IN _slotId2_35	TINYINT,	IN _optId2_35	INT,	IN _optValue2_35	SMALLINT
,	IN _slotId3_35	TINYINT,	IN _optId3_35	INT,	IN _optValue3_35	SMALLINT
,	IN _slotId4_35	TINYINT,	IN _optId4_35	INT,	IN _optValue4_35	SMALLINT
,	IN _slotId5_35	TINYINT,	IN _optId5_35	INT,	IN _optValue5_35	SMALLINT
,	IN _slotId6_35	TINYINT,	IN _optId6_35	INT,	IN _optValue6_35	SMALLINT
,	IN _slotId7_35	TINYINT,	IN _optId7_35	INT,	IN _optValue7_35	SMALLINT

,   IN _itemId36 	INT,		IN _quality36	INT,	IN _equipType36	INT
,	IN _attrId36	INT,		IN _attrValue36	INT,	IN _belong36	TINYINT,	IN _identified36		TINYINT
, 	IN _enchantLevel36	INT
,	IN _slotId1_36	TINYINT,	IN _optId1_36	INT,	IN _optValue1_36	SMALLINT
,	IN _slotId2_36	TINYINT,	IN _optId2_36	INT,	IN _optValue2_36	SMALLINT
,	IN _slotId3_36	TINYINT,	IN _optId3_36	INT,	IN _optValue3_36	SMALLINT
,	IN _slotId4_36	TINYINT,	IN _optId4_36	INT,	IN _optValue4_36	SMALLINT
,	IN _slotId5_36	TINYINT,	IN _optId5_36	INT,	IN _optValue5_36	SMALLINT
,	IN _slotId6_36	TINYINT,	IN _optId6_36	INT,	IN _optValue6_36	SMALLINT
,	IN _slotId7_36	TINYINT,	IN _optId7_36	INT,	IN _optValue7_36	SMALLINT

,   IN _itemId37 	INT,		IN _quality37	INT,	IN _equipType37	INT
,	IN _attrId37	INT,		IN _attrValue37	INT,	IN _belong37	TINYINT,	IN _identified37		TINYINT
, 	IN _enchantLevel37	INT
,	IN _slotId1_37	TINYINT,	IN _optId1_37	INT,	IN _optValue1_37	SMALLINT
,	IN _slotId2_37	TINYINT,	IN _optId2_37	INT,	IN _optValue2_37	SMALLINT
,	IN _slotId3_37	TINYINT,	IN _optId3_37	INT,	IN _optValue3_37	SMALLINT
,	IN _slotId4_37	TINYINT,	IN _optId4_37	INT,	IN _optValue4_37	SMALLINT
,	IN _slotId5_37	TINYINT,	IN _optId5_37	INT,	IN _optValue5_37	SMALLINT
,	IN _slotId6_37	TINYINT,	IN _optId6_37	INT,	IN _optValue6_37	SMALLINT
,	IN _slotId7_37	TINYINT,	IN _optId7_37	INT,	IN _optValue7_37	SMALLINT

,   IN _itemId38 	INT,		IN _quality38	INT,	IN _equipType38	INT
,	IN _attrId38	INT,		IN _attrValue38	INT,	IN _belong38	TINYINT,	IN _identified38		TINYINT
, 	IN _enchantLevel38	INT
,	IN _slotId1_38	TINYINT,	IN _optId1_38	INT,	IN _optValue1_38	SMALLINT
,	IN _slotId2_38	TINYINT,	IN _optId2_38	INT,	IN _optValue2_38	SMALLINT
,	IN _slotId3_38	TINYINT,	IN _optId3_38	INT,	IN _optValue3_38	SMALLINT
,	IN _slotId4_38	TINYINT,	IN _optId4_38	INT,	IN _optValue4_38	SMALLINT
,	IN _slotId5_38	TINYINT,	IN _optId5_38	INT,	IN _optValue5_38	SMALLINT
,	IN _slotId6_38	TINYINT,	IN _optId6_38	INT,	IN _optValue6_38	SMALLINT
,	IN _slotId7_38	TINYINT,	IN _optId7_38	INT,	IN _optValue7_38	SMALLINT

,   IN _itemId39 	INT,		IN _quality39	INT,	IN _equipType39	INT
,	IN _attrId39		INT,	IN _attrValue39	INT,	IN _belong39	TINYINT,	IN _identified39		TINYINT
, 	IN _enchantLevel39	INT
,	IN _slotId1_39	TINYINT,	IN _optId1_39	INT,	IN _optValue1_39	SMALLINT
,	IN _slotId2_39	TINYINT,	IN _optId2_39	INT,	IN _optValue2_39	SMALLINT
,	IN _slotId3_39	TINYINT,	IN _optId3_39	INT,	IN _optValue3_39	SMALLINT
,	IN _slotId4_39	TINYINT,	IN _optId4_39	INT,	IN _optValue4_39	SMALLINT
,	IN _slotId5_39	TINYINT,	IN _optId5_39	INT,	IN _optValue5_39	SMALLINT
,	IN _slotId6_39	TINYINT,	IN _optId6_39	INT,	IN _optValue6_39	SMALLINT
,	IN _slotId7_39	TINYINT,	IN _optId7_39	INT,	IN _optValue7_39	SMALLINT

,   IN _itemId40 	INT,		IN _quality40	INT,	IN _equipType40	INT
,	IN _attrId40	INT,		IN _attrValue40	INT,	IN _belong40	TINYINT,	IN _identified40		TINYINT
, 	IN _enchantLevel40	INT
,	IN _slotId1_40	TINYINT,	IN _optId1_40	INT,	IN _optValue1_40	SMALLINT
,	IN _slotId2_40	TINYINT,	IN _optId2_40	INT,	IN _optValue2_40	SMALLINT
,	IN _slotId3_40	TINYINT,	IN _optId3_40	INT,	IN _optValue3_40	SMALLINT
,	IN _slotId4_40	TINYINT,	IN _optId4_40	INT,	IN _optValue4_40	SMALLINT
,	IN _slotId5_40	TINYINT,	IN _optId5_40	INT,	IN _optValue5_40	SMALLINT
,	IN _slotId6_40	TINYINT,	IN _optId6_40	INT,	IN _optValue6_40	SMALLINT
,	IN _slotId7_40	TINYINT,	IN _optId7_40	INT,	IN _optValue7_40	SMALLINT


,   IN _itemId41 	INT,		IN _quality41	INT,	IN _equipType41	INT
,	IN _attrId41	INT,		IN _attrValue41	INT,	IN _belong41	TINYINT,	IN _identified41		TINYINT
, 	IN _enchantLevel41	INT
,	IN _slotId1_41	TINYINT,	IN _optId1_41	INT,	IN _optValue1_41	SMALLINT
,	IN _slotId2_41	TINYINT,	IN _optId2_41	INT,	IN _optValue2_41	SMALLINT
,	IN _slotId3_41	TINYINT,	IN _optId3_41	INT,	IN _optValue3_41	SMALLINT
,	IN _slotId4_41	TINYINT,	IN _optId4_41	INT,	IN _optValue4_41	SMALLINT
,	IN _slotId5_41	TINYINT,	IN _optId5_41	INT,	IN _optValue5_41	SMALLINT
,	IN _slotId6_41	TINYINT,	IN _optId6_41	INT,	IN _optValue6_41	SMALLINT
,	IN _slotId7_41	TINYINT,	IN _optId7_41	INT,	IN _optValue7_41	SMALLINT

,   IN _itemId42 	INT,		IN _quality42	INT,	IN _equipType42	INT
,	IN _attrId42	INT,		IN _attrValue42	INT,	IN _belong42	TINYINT,	IN _identified42		TINYINT
, 	IN _enchantLevel42	INT
,	IN _slotId1_42	TINYINT,	IN _optId1_42	INT,	IN _optValue1_42	SMALLINT
,	IN _slotId2_42	TINYINT,	IN _optId2_42	INT,	IN _optValue2_42	SMALLINT
,	IN _slotId3_42	TINYINT,	IN _optId3_42	INT,	IN _optValue3_42	SMALLINT
,	IN _slotId4_42	TINYINT,	IN _optId4_42	INT,	IN _optValue4_42	SMALLINT
,	IN _slotId5_42	TINYINT,	IN _optId5_42	INT,	IN _optValue5_42	SMALLINT
,	IN _slotId6_42	TINYINT,	IN _optId6_42	INT,	IN _optValue6_42	SMALLINT
,	IN _slotId7_42	TINYINT,	IN _optId7_42	INT,	IN _optValue7_42	SMALLINT

,   IN _itemId43 	INT,		IN _quality43	INT,	IN _equipType43	INT
,	IN _attrId43	INT,		IN _attrValue43	INT,	IN _belong43	TINYINT,	IN _identified43		TINYINT
, 	IN _enchantLevel43	INT
,	IN _slotId1_43	TINYINT,	IN _optId1_43	INT,	IN _optValue1_43	SMALLINT
,	IN _slotId2_43	TINYINT,	IN _optId2_43	INT,	IN _optValue2_43	SMALLINT
,	IN _slotId3_43	TINYINT,	IN _optId3_43	INT,	IN _optValue3_43	SMALLINT
,	IN _slotId4_43	TINYINT,	IN _optId4_43	INT,	IN _optValue4_43	SMALLINT
,	IN _slotId5_43	TINYINT,	IN _optId5_43	INT,	IN _optValue5_43	SMALLINT
,	IN _slotId6_43	TINYINT,	IN _optId6_43	INT,	IN _optValue6_43	SMALLINT
,	IN _slotId7_43	TINYINT,	IN _optId7_43	INT,	IN _optValue7_43	SMALLINT

,   IN _itemId44 	INT,		IN _quality44	INT,	IN _equipType44	INT
,	IN _attrId44		INT,	IN _attrValue44	INT,	IN _belong44	TINYINT,	IN _identified44		TINYINT
, 	IN _enchantLevel44	INT
,	IN _slotId1_44	TINYINT,	IN _optId1_44	INT,	IN _optValue1_44	SMALLINT
,	IN _slotId2_44	TINYINT,	IN _optId2_44	INT,	IN _optValue2_44	SMALLINT
,	IN _slotId3_44	TINYINT,	IN _optId3_44	INT,	IN _optValue3_44	SMALLINT
,	IN _slotId4_44	TINYINT,	IN _optId4_44	INT,	IN _optValue4_44	SMALLINT
,	IN _slotId5_44	TINYINT,	IN _optId5_44	INT,	IN _optValue5_44	SMALLINT
,	IN _slotId6_44	TINYINT,	IN _optId6_44	INT,	IN _optValue6_44	SMALLINT
,	IN _slotId7_44	TINYINT,	IN _optId7_44	INT,	IN _optValue7_44	SMALLINT

,   IN _itemId45 	INT,		IN _quality45	INT,	IN _equipType45	INT
,	IN _attrId45	INT,		IN _attrValue45	INT,	IN _belong45	TINYINT,	IN _identified45		TINYINT
, 	IN _enchantLevel45	INT
,	IN _slotId1_45	TINYINT,	IN _optId1_45	INT,	IN _optValue1_45	SMALLINT
,	IN _slotId2_45	TINYINT,	IN _optId2_45	INT,	IN _optValue2_45	SMALLINT
,	IN _slotId3_45	TINYINT,	IN _optId3_45	INT,	IN _optValue3_45	SMALLINT
,	IN _slotId4_45	TINYINT,	IN _optId4_45	INT,	IN _optValue4_45	SMALLINT
,	IN _slotId5_45	TINYINT,	IN _optId5_45	INT,	IN _optValue5_45	SMALLINT
,	IN _slotId6_45	TINYINT,	IN _optId6_45	INT,	IN _optValue6_45	SMALLINT
,	IN _slotId7_45	TINYINT,	IN _optId7_45	INT,	IN _optValue7_45	SMALLINT

,   IN _itemId46 	INT,		IN _quality46	INT,	IN _equipType46	INT
,	IN _attrId46	INT,		IN _attrValue46	INT,	IN _belong46	TINYINT,	IN _identified46		TINYINT
, 	IN _enchantLevel46	INT
,	IN _slotId1_46	TINYINT,	IN _optId1_46	INT,	IN _optValue1_46	SMALLINT
,	IN _slotId2_46	TINYINT,	IN _optId2_46	INT,	IN _optValue2_46	SMALLINT
,	IN _slotId3_46	TINYINT,	IN _optId3_46	INT,	IN _optValue3_46	SMALLINT
,	IN _slotId4_46	TINYINT,	IN _optId4_46	INT,	IN _optValue4_46	SMALLINT
,	IN _slotId5_46	TINYINT,	IN _optId5_46	INT,	IN _optValue5_46	SMALLINT
,	IN _slotId6_46	TINYINT,	IN _optId6_46	INT,	IN _optValue6_46	SMALLINT
,	IN _slotId7_46	TINYINT,	IN _optId7_46	INT,	IN _optValue7_46	SMALLINT

,   IN _itemId47 	INT,		IN _quality47	INT,	IN _equipType47	INT
,	IN _attrId47	INT,		IN _attrValue47	INT,	IN _belong47	TINYINT,	IN _identified47		TINYINT
, 	IN _enchantLevel47	INT
,	IN _slotId1_47	TINYINT,	IN _optId1_47	INT,	IN _optValue1_47	SMALLINT
,	IN _slotId2_47	TINYINT,	IN _optId2_47	INT,	IN _optValue2_47	SMALLINT
,	IN _slotId3_47	TINYINT,	IN _optId3_47	INT,	IN _optValue3_47	SMALLINT
,	IN _slotId4_47	TINYINT,	IN _optId4_47	INT,	IN _optValue4_47	SMALLINT
,	IN _slotId5_47	TINYINT,	IN _optId5_47	INT,	IN _optValue5_47	SMALLINT
,	IN _slotId6_47	TINYINT,	IN _optId6_47	INT,	IN _optValue6_47	SMALLINT
,	IN _slotId7_47	TINYINT,	IN _optId7_47	INT,	IN _optValue7_47	SMALLINT

,   IN _itemId48 	INT,		IN _quality48	INT,	IN _equipType48	INT
,	IN _attrId48	INT,		IN _attrValue48	INT,	IN _belong48	TINYINT,	IN _identified48		TINYINT
, 	IN _enchantLevel48	INT
,	IN _slotId1_48	TINYINT,	IN _optId1_48	INT,	IN _optValue1_48	SMALLINT
,	IN _slotId2_48	TINYINT,	IN _optId2_48	INT,	IN _optValue2_48	SMALLINT
,	IN _slotId3_48	TINYINT,	IN _optId3_48	INT,	IN _optValue3_48	SMALLINT
,	IN _slotId4_48	TINYINT,	IN _optId4_48	INT,	IN _optValue4_48	SMALLINT
,	IN _slotId5_48	TINYINT,	IN _optId5_48	INT,	IN _optValue5_48	SMALLINT
,	IN _slotId6_48	TINYINT,	IN _optId6_48	INT,	IN _optValue6_48	SMALLINT
,	IN _slotId7_48	TINYINT,	IN _optId7_48	INT,	IN _optValue7_48	SMALLINT

,   IN _itemId49 	INT,		IN _quality49	INT,	IN _equipType49	INT
,	IN _attrId49		INT,	IN _attrValue49	INT,	IN _belong49	TINYINT,	IN _identified49		TINYINT
, 	IN _enchantLevel49	INT
,	IN _slotId1_49	TINYINT,	IN _optId1_49	INT,	IN _optValue1_49	SMALLINT
,	IN _slotId2_49	TINYINT,	IN _optId2_49	INT,	IN _optValue2_49	SMALLINT
,	IN _slotId3_49	TINYINT,	IN _optId3_49	INT,	IN _optValue3_49	SMALLINT
,	IN _slotId4_49	TINYINT,	IN _optId4_49	INT,	IN _optValue4_49	SMALLINT
,	IN _slotId5_49	TINYINT,	IN _optId5_49	INT,	IN _optValue5_49	SMALLINT
,	IN _slotId6_49	TINYINT,	IN _optId6_49	INT,	IN _optValue6_49	SMALLINT
,	IN _slotId7_49	TINYINT,	IN _optId7_49	INT,	IN _optValue7_49	SMALLINT

,   IN _itemId50 	INT,		IN _quality50	INT,	IN _equipType50	INT
,	IN _attrId50	INT,		IN _attrValue50	INT,	IN _belong50	TINYINT,	IN _identified50		TINYINT
, 	IN _enchantLevel50	INT
,	IN _slotId1_50	TINYINT,	IN _optId1_50	INT,	IN _optValue1_50	SMALLINT
,	IN _slotId2_50	TINYINT,	IN _optId2_50	INT,	IN _optValue2_50	SMALLINT
,	IN _slotId3_50	TINYINT,	IN _optId3_50	INT,	IN _optValue3_50	SMALLINT
,	IN _slotId4_50	TINYINT,	IN _optId4_50	INT,	IN _optValue4_50	SMALLINT
,	IN _slotId5_50	TINYINT,	IN _optId5_50	INT,	IN _optValue5_50	SMALLINT
,	IN _slotId6_50	TINYINT,	IN _optId6_50	INT,	IN _optValue6_50	SMALLINT
,	IN _slotId7_50	TINYINT,	IN _optId7_50	INT,	IN _optValue7_50	SMALLINT



,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT
,	IN _costItemType11	TINYINT,	IN _costItemId11	INT,	IN _costItemValue11	INT
,	IN _costItemType12	TINYINT,	IN _costItemId12	INT,	IN _costItemValue12	INT
,	IN _costItemType13	TINYINT,	IN _costItemId13	INT,	IN _costItemValue13	INT
,	IN _costItemType14	TINYINT,	IN _costItemId14	INT,	IN _costItemValue14	INT
,	IN _costItemType15	TINYINT,	IN _costItemId15	INT,	IN _costItemValue15	INT
,	IN _costItemType16	TINYINT,	IN _costItemId16	INT,	IN _costItemValue16	INT
,	IN _costItemType17	TINYINT,	IN _costItemId17	INT,	IN _costItemValue17	INT
,	IN _costItemType18	TINYINT,	IN _costItemId18	INT,	IN _costItemValue18	INT
,	IN _costItemType19	TINYINT,	IN _costItemId19	INT,	IN _costItemValue19	INT
,	IN _costItemType20	TINYINT,	IN _costItemId20	INT,	IN _costItemValue20	INT
,	IN _costItemType21	TINYINT,	IN _costItemId21	INT,	IN _costItemValue21	INT
,	IN _costItemType22	TINYINT,	IN _costItemId22	INT,	IN _costItemValue22	INT
,	IN _costItemType23	TINYINT,	IN _costItemId23	INT,	IN _costItemValue23	INT
,	IN _costItemType24	TINYINT,	IN _costItemId24	INT,	IN _costItemValue24	INT
,	IN _costItemType25	TINYINT,	IN _costItemId25	INT,	IN _costItemValue25	INT
,	IN _costItemType26	TINYINT,	IN _costItemId26	INT,	IN _costItemValue26	INT
,	IN _costItemType27	TINYINT,	IN _costItemId27	INT,	IN _costItemValue27	INT
,	IN _costItemType28	TINYINT,	IN _costItemId28	INT,	IN _costItemValue28	INT
,	IN _costItemType29	TINYINT,	IN _costItemId29	INT,	IN _costItemValue29	INT
,	IN _costItemType30	TINYINT,	IN _costItemId30	INT,	IN _costItemValue30	INT
,	IN _costItemType31	TINYINT,	IN _costItemId31	INT,	IN _costItemValue31	INT
,	IN _costItemType32	TINYINT,	IN _costItemId32	INT,	IN _costItemValue32	INT
,	IN _costItemType33	TINYINT,	IN _costItemId33	INT,	IN _costItemValue33	INT
,	IN _costItemType34	TINYINT,	IN _costItemId34	INT,	IN _costItemValue34	INT
,	IN _costItemType35	TINYINT,	IN _costItemId35	INT,	IN _costItemValue35	INT
,	IN _costItemType36	TINYINT,	IN _costItemId36	INT,	IN _costItemValue36	INT
,	IN _costItemType37	TINYINT,	IN _costItemId37	INT,	IN _costItemValue37	INT
,	IN _costItemType38	TINYINT,	IN _costItemId38	INT,	IN _costItemValue38	INT
,	IN _costItemType39	TINYINT,	IN _costItemId39	INT,	IN _costItemValue39	INT
,	IN _costItemType40	TINYINT,	IN _costItemId40	INT,	IN _costItemValue40	INT
,	IN _costItemType41	TINYINT,	IN _costItemId41	INT,	IN _costItemValue41	INT
,	IN _costItemType42	TINYINT,	IN _costItemId42	INT,	IN _costItemValue42	INT
,	IN _costItemType43	TINYINT,	IN _costItemId43	INT,	IN _costItemValue43	INT
,	IN _costItemType44	TINYINT,	IN _costItemId44	INT,	IN _costItemValue44	INT
,	IN _costItemType45	TINYINT,	IN _costItemId45	INT,	IN _costItemValue45	INT
,	IN _costItemType46	TINYINT,	IN _costItemId46	INT,	IN _costItemValue46	INT
,	IN _costItemType47	TINYINT,	IN _costItemId47	INT,	IN _costItemValue47	INT
,	IN _costItemType48	TINYINT,	IN _costItemId48	INT,	IN _costItemValue48	INT
,	IN _costItemType49	TINYINT,	IN _costItemId49	INT,	IN _costItemValue49	INT
,	IN _costItemType50	TINYINT,	IN _costItemId50	INT,	IN _costItemValue50	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT
, 	IN _bookId11 INT,	IN _percent11 INT,	IN _liftTime11 INT,	IN _value11	INT,	IN _bookbelong11 TINYINT
, 	IN _bookId12 INT,	IN _percent12 INT,	IN _liftTime12 INT,	IN _value12	INT,	IN _bookbelong12 TINYINT
, 	IN _bookId13 INT,	IN _percent13 INT,	IN _liftTime13 INT,	IN _value13	INT,	IN _bookbelong13 TINYINT
, 	IN _bookId14 INT,	IN _percent14 INT,	IN _liftTime14 INT,	IN _value14	INT,	IN _bookbelong14 TINYINT
, 	IN _bookId15 INT,	IN _percent15 INT,	IN _liftTime15 INT,	IN _value15	INT,	IN _bookbelong15 TINYINT
, 	IN _bookId16 INT,	IN _percent16 INT,	IN _liftTime16 INT,	IN _value16	INT,	IN _bookbelong16 TINYINT
, 	IN _bookId17 INT,	IN _percent17 INT,	IN _liftTime17 INT,	IN _value17	INT,	IN _bookbelong17 TINYINT
, 	IN _bookId18 INT,	IN _percent18 INT,	IN _liftTime18 INT,	IN _value18	INT,	IN _bookbelong18 TINYINT
, 	IN _bookId19 INT,	IN _percent19 INT,	IN _liftTime19 INT,	IN _value19	INT,	IN _bookbelong19 TINYINT
, 	IN _bookId20 INT,	IN _percent20 INT,	IN _liftTime20 INT,	IN _value20	INT,	IN _bookbelong20 TINYINT
, 	IN _bookId21 INT,	IN _percent21 INT,	IN _liftTime21 INT,	IN _value21	INT,	IN _bookbelong21 TINYINT
, 	IN _bookId22 INT,	IN _percent22 INT,	IN _liftTime22 INT,	IN _value22	INT,	IN _bookbelong22 TINYINT
, 	IN _bookId23 INT,	IN _percent23 INT,	IN _liftTime23 INT,	IN _value23	INT,	IN _bookbelong23 TINYINT
, 	IN _bookId24 INT,	IN _percent24 INT,	IN _liftTime24 INT,	IN _value24	INT,	IN _bookbelong24 TINYINT
, 	IN _bookId25 INT,	IN _percent25 INT,	IN _liftTime25 INT,	IN _value25	INT,	IN _bookbelong25 TINYINT
, 	IN _bookId26 INT,	IN _percent26 INT,	IN _liftTime26 INT,	IN _value26	INT,	IN _bookbelong26 TINYINT
, 	IN _bookId27 INT,	IN _percent27 INT,	IN _liftTime27 INT,	IN _value27	INT,	IN _bookbelong27 TINYINT
, 	IN _bookId28 INT,	IN _percent28 INT,	IN _liftTime28 INT,	IN _value28	INT,	IN _bookbelong28 TINYINT
, 	IN _bookId29 INT,	IN _percent29 INT,	IN _liftTime29 INT,	IN _value29	INT,	IN _bookbelong29 TINYINT
, 	IN _bookId30 INT,	IN _percent30 INT,	IN _liftTime30 INT,	IN _value30	INT,	IN _bookbelong30 TINYINT
, 	IN _bookId31 INT,	IN _percent31 INT,	IN _liftTime31 INT,	IN _value31	INT,	IN _bookbelong31 TINYINT
, 	IN _bookId32 INT,	IN _percent32 INT,	IN _liftTime32 INT,	IN _value32	INT,	IN _bookbelong32 TINYINT
, 	IN _bookId33 INT,	IN _percent33 INT,	IN _liftTime33 INT,	IN _value33	INT,	IN _bookbelong33 TINYINT
, 	IN _bookId34 INT,	IN _percent34 INT,	IN _liftTime34 INT,	IN _value34	INT,	IN _bookbelong34 TINYINT
, 	IN _bookId35 INT,	IN _percent35 INT,	IN _liftTime35 INT,	IN _value35	INT,	IN _bookbelong35 TINYINT
, 	IN _bookId36 INT,	IN _percent36 INT,	IN _liftTime36 INT,	IN _value36	INT,	IN _bookbelong36 TINYINT
, 	IN _bookId37 INT,	IN _percent37 INT,	IN _liftTime37 INT,	IN _value37	INT,	IN _bookbelong37 TINYINT
, 	IN _bookId38 INT,	IN _percent38 INT,	IN _liftTime38 INT,	IN _value38	INT,	IN _bookbelong38 TINYINT
, 	IN _bookId39 INT,	IN _percent39 INT,	IN _liftTime39 INT,	IN _value39	INT,	IN _bookbelong39 TINYINT
, 	IN _bookId40 INT,	IN _percent40 INT,	IN _liftTime40 INT,	IN _value40	INT,	IN _bookbelong40 TINYINT
, 	IN _bookId41 INT,	IN _percent41 INT,	IN _liftTime41 INT,	IN _value41	INT,	IN _bookbelong41 TINYINT
, 	IN _bookId42 INT,	IN _percent42 INT,	IN _liftTime42 INT,	IN _value42	INT,	IN _bookbelong42 TINYINT
, 	IN _bookId43 INT,	IN _percent43 INT,	IN _liftTime43 INT,	IN _value43	INT,	IN _bookbelong43 TINYINT
, 	IN _bookId44 INT,	IN _percent44 INT,	IN _liftTime44 INT,	IN _value44	INT,	IN _bookbelong44 TINYINT
, 	IN _bookId45 INT,	IN _percent45 INT,	IN _liftTime45 INT,	IN _value45	INT,	IN _bookbelong45 TINYINT
, 	IN _bookId46 INT,	IN _percent46 INT,	IN _liftTime46 INT,	IN _value46	INT,	IN _bookbelong46 TINYINT
, 	IN _bookId47 INT,	IN _percent47 INT,	IN _liftTime47 INT,	IN _value47	INT,	IN _bookbelong47 TINYINT
, 	IN _bookId48 INT,	IN _percent48 INT,	IN _liftTime48 INT,	IN _value48	INT,	IN _bookbelong48 TINYINT
, 	IN _bookId49 INT,	IN _percent49 INT,	IN _liftTime49 INT,	IN _value49	INT,	IN _bookbelong49 TINYINT
, 	IN _bookId50 INT,	IN _percent50 INT,	IN _liftTime50 INT,	IN _value50	INT,	IN _bookbelong50 TINYINT
	
)
    COMMENT 'NPC상점 상품 구매 비용 차감, 보상 지급'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
    
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
--     DECLARE v_finalGuildPoint		INT DEFAULT 0; 
    DECLARE v_finalqty				INT DEFAULT 0;
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
--    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index11 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index12 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index13 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index14 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index15 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index16 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index17 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index18 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index19 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index20 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index21 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index22 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index23 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index24 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index25 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index26 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index27 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index28 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index29 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index30 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index31 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index32 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index33 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index34 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index35 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index36 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index37 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index38 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index39 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index40 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index41 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index42 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index43 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index44 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index45 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index46 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index47 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index48 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index49 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index50 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    DECLARE v_item_final_qty11	INT DEFAULT 0;
	DECLARE v_item_final_qty12	INT DEFAULT 0;
	DECLARE v_item_final_qty13	INT DEFAULT 0;
	DECLARE v_item_final_qty14	INT DEFAULT 0;
	DECLARE v_item_final_qty15	INT DEFAULT 0;
    DECLARE v_item_final_qty16	INT DEFAULT 0;
	DECLARE v_item_final_qty17	INT DEFAULT 0;
	DECLARE v_item_final_qty18	INT DEFAULT 0;
	DECLARE v_item_final_qty19	INT DEFAULT 0;
	DECLARE v_item_final_qty20	INT DEFAULT 0;
    DECLARE v_item_final_qty21	INT DEFAULT 0;
	DECLARE v_item_final_qty22	INT DEFAULT 0;
	DECLARE v_item_final_qty23	INT DEFAULT 0;
	DECLARE v_item_final_qty24	INT DEFAULT 0;
	DECLARE v_item_final_qty25	INT DEFAULT 0;
    DECLARE v_item_final_qty26	INT DEFAULT 0;
	DECLARE v_item_final_qty27	INT DEFAULT 0;
	DECLARE v_item_final_qty28	INT DEFAULT 0;
	DECLARE v_item_final_qty29	INT DEFAULT 0;
	DECLARE v_item_final_qty30	INT DEFAULT 0;
    DECLARE v_item_final_qty31	INT DEFAULT 0;
	DECLARE v_item_final_qty32	INT DEFAULT 0;
	DECLARE v_item_final_qty33	INT DEFAULT 0;
	DECLARE v_item_final_qty34	INT DEFAULT 0;
	DECLARE v_item_final_qty35	INT DEFAULT 0;
    DECLARE v_item_final_qty36	INT DEFAULT 0;
	DECLARE v_item_final_qty37	INT DEFAULT 0;
	DECLARE v_item_final_qty38	INT DEFAULT 0;
	DECLARE v_item_final_qty39	INT DEFAULT 0;
	DECLARE v_item_final_qty40	INT DEFAULT 0;
    DECLARE v_item_final_qty41	INT DEFAULT 0;
	DECLARE v_item_final_qty42	INT DEFAULT 0;
	DECLARE v_item_final_qty43	INT DEFAULT 0;
	DECLARE v_item_final_qty44	INT DEFAULT 0;
	DECLARE v_item_final_qty45	INT DEFAULT 0;
    DECLARE v_item_final_qty46	INT DEFAULT 0;
	DECLARE v_item_final_qty47	INT DEFAULT 0;
	DECLARE v_item_final_qty48	INT DEFAULT 0;
	DECLARE v_item_final_qty49	INT DEFAULT 0;
	DECLARE v_item_final_qty50	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index11 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index12 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index13 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index14 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index15 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index16 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index17 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index18 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index19 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index20 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index21 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index22 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index23 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index24 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index25 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index26 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index27 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index28 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index29 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index30 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index31 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index32 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index33 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index34 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index35 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index36 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index37 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index38 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index39 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index40 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index41 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index42 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index43 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index44 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index45 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index46 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index47 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index48 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index49 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index50 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
					, v_finalqty, v_finalgold, v_finalcashA-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
                    , v_item_db_index11, v_item_db_index12, v_item_db_index13, v_item_db_index14, v_item_db_index15, v_item_db_index16, v_item_db_index17, v_item_db_index18, v_item_db_index19, v_item_db_index20
                    , v_item_db_index21, v_item_db_index22, v_item_db_index23, v_item_db_index24, v_item_db_index25, v_item_db_index26, v_item_db_index27, v_item_db_index28, v_item_db_index29, v_item_db_index30
                    , v_item_db_index31, v_item_db_index32, v_item_db_index33, v_item_db_index34, v_item_db_index35, v_item_db_index36, v_item_db_index37, v_item_db_index38, v_item_db_index39, v_item_db_index40
                    , v_item_db_index41, v_item_db_index42, v_item_db_index43, v_item_db_index44, v_item_db_index45, v_item_db_index46, v_item_db_index47, v_item_db_index48, v_item_db_index49, v_item_db_index50
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10
                    , v_book_db_index11, v_book_db_index12, v_book_db_index13, v_book_db_index14, v_book_db_index15, v_book_db_index16, v_book_db_index17, v_book_db_index18, v_book_db_index19, v_book_db_index20
                    , v_book_db_index21, v_book_db_index22, v_book_db_index23, v_book_db_index24, v_book_db_index25, v_book_db_index26, v_book_db_index27, v_book_db_index28, v_book_db_index29, v_book_db_index30
                    , v_book_db_index31, v_book_db_index32, v_book_db_index33, v_book_db_index34, v_book_db_index35, v_book_db_index36, v_book_db_index37, v_book_db_index38, v_book_db_index39, v_book_db_index40
                    , v_book_db_index41, v_book_db_index42, v_book_db_index43, v_book_db_index44, v_book_db_index45, v_book_db_index46, v_book_db_index47, v_book_db_index48, v_book_db_index49, v_book_db_index50
                    ;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _materialid, _materialcount, v_finalqty, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
--         IF _add_mileage > 0 THEN 			
--             CALL sp_mmo_notrans_charinfo_insert_mileage(_userid, _charid, _add_mileage, v_finalMileage, v_result);
-- 			
-- 			IF v_result != 0 THEN 
--                 LEAVE root;
-- 			END IF;	
--         END IF;
        
        
--         IF _ticketid > 0 THEN 			
-- 			INSERT INTO char_refilled_ticket (char_idx, ticket_id, ticket_value, ticket_use_time)
-- 										VALUES (_charid, _ticketid, _ticketcount, v_useTime)
-- 			ON DUPLICATE KEY UPDATE ticket_value = _ticketcount, ticket_use_time = v_useTime;
--         
-- 			IF ROW_COUNT() = 0 THEN 
-- 				SET v_result = 100;
--                 LEAVE root;
--             END IF;
--             
--         END IF;
        
        
--         IF 0 < _sprcialbuffid THEN
-- 			UPDATE char_buff_special
--             SET buff_affect_time = now()
--             WHERE char_idx = _charid and buff_id = _sprcialbuffid;
--             
-- 			IF ROW_COUNT() = 0 THEN 
-- 				SET v_result = 101;		
--                 LEAVE root;
--             END IF;            
--         END IF;
        
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_finalgold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_finalcashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;        
        END IF;
       
        
-- 		IF _addCashB > 0 THEN 		
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
--   
-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_final_cashB, v_result);
-- 			IF v_result != 0 THEN
-- 				LEAVE root;
-- 			END IF;
--                   
--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;  
--    
--         END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, _enchantLevel1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, _enchantLevel2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, _enchantLevel3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, _enchantLevel4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, _enchantLevel5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
								_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
								_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
								_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
								_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, _enchantLevel6, v_result, v_item_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
								_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
								_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
								_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
								_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, _enchantLevel7, v_result, v_item_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
								_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
								_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
								_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
								_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, _enchantLevel8, v_result, v_item_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
								_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
								_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
								_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
								_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, _enchantLevel9, v_result, v_item_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
								_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
								_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
								_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
								_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, _enchantLevel10, v_result, v_item_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId11 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId11, _quality11, _equipType11, _attrId11, _attrValue11,
								_slotId1_11, _optId1_11, _optValue1_11, _slotId2_11, _optId2_11, _optValue2_11, 
								_slotId3_11, _optId3_11, _optValue3_11, _slotId4_11, _optId4_11, _optValue4_11, 
								_slotId5_11, _optId5_11, _optValue5_11, _slotId6_11, _optId6_11, _optValue6_11, 
								_slotId7_11, _optId7_11, _optValue7_11, _belong11, _identified11, _enchantLevel11, v_result, v_item_db_index11);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId12 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId12, _quality12, _equipType12, _attrId12, _attrValue12,
								_slotId1_12, _optId1_12, _optValue1_12, _slotId2_12, _optId2_12, _optValue2_12, 
								_slotId3_12, _optId3_12, _optValue3_12, _slotId4_12, _optId4_12, _optValue4_12, 
								_slotId5_12, _optId5_12, _optValue5_12, _slotId6_12, _optId6_12, _optValue6_12, 
								_slotId7_12, _optId7_12, _optValue7_12, _belong12, _identified12, _enchantLevel12, v_result, v_item_db_index12);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId13 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId13, _quality13, _equipType13, _attrId13, _attrValue13,
								_slotId1_13, _optId1_13, _optValue1_13, _slotId2_13, _optId2_13, _optValue2_13, 
								_slotId3_13, _optId3_13, _optValue3_13, _slotId4_13, _optId4_13, _optValue4_13, 
								_slotId5_13, _optId5_13, _optValue5_13, _slotId6_13, _optId6_13, _optValue6_13, 
								_slotId7_13, _optId7_13, _optValue7_13, _belong13, _identified13, _enchantLevel13, v_result, v_item_db_index13);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId14 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId14, _quality14, _equipType14, _attrId14, _attrValue14,
								_slotId1_14, _optId1_14, _optValue1_14, _slotId2_14, _optId2_14, _optValue2_14, 
								_slotId3_14, _optId3_14, _optValue3_14, _slotId4_14, _optId4_14, _optValue4_14, 
								_slotId5_14, _optId5_14, _optValue5_14, _slotId6_14, _optId6_14, _optValue6_14, 
								_slotId7_14, _optId7_14, _optValue7_14, _belong14, _identified14, _enchantLevel14, v_result, v_item_db_index14);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId15 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId15, _quality15, _equipType15, _attrId15, _attrValue15,
								_slotId1_15, _optId1_15, _optValue1_15, _slotId2_15, _optId2_15, _optValue2_15, 
								_slotId3_15, _optId3_15, _optValue3_15, _slotId4_15, _optId4_15, _optValue4_15, 
								_slotId5_15, _optId5_15, _optValue5_15, _slotId6_15, _optId6_15, _optValue6_15, 
								_slotId7_15, _optId7_15, _optValue7_15, _belong15, _identified15, _enchantLevel15, v_result, v_item_db_index15);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId16 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId16, _quality16, _equipType16, _attrId16, _attrValue16,
								_slotId1_16, _optId1_16, _optValue1_16, _slotId2_16, _optId2_16, _optValue2_16, 
								_slotId3_16, _optId3_16, _optValue3_16, _slotId4_16, _optId4_16, _optValue4_16, 
								_slotId5_16, _optId5_16, _optValue5_16, _slotId6_16, _optId6_16, _optValue6_16, 
								_slotId7_16, _optId7_16, _optValue7_16, _belong16, _identified16, _enchantLevel16, v_result, v_item_db_index16);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId17 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId17, _quality17, _equipType17, _attrId17, _attrValue17,
								_slotId1_17, _optId1_17, _optValue1_17, _slotId2_17, _optId2_17, _optValue2_17, 
								_slotId3_17, _optId3_17, _optValue3_17, _slotId4_17, _optId4_17, _optValue4_17, 
								_slotId5_17, _optId5_17, _optValue5_17, _slotId6_17, _optId6_17, _optValue6_17, 
								_slotId7_17, _optId7_17, _optValue7_17, _belong17, _identified17, _enchantLevel17, v_result, v_item_db_index17);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId18 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId18, _quality18, _equipType18, _attrId18, _attrValue18,
								_slotId1_18, _optId1_18, _optValue1_18, _slotId2_18, _optId2_18, _optValue2_18, 
								_slotId3_18, _optId3_18, _optValue3_18, _slotId4_18, _optId4_18, _optValue4_18, 
								_slotId5_18, _optId5_18, _optValue5_18, _slotId6_18, _optId6_18, _optValue6_18, 
								_slotId7_18, _optId7_18, _optValue7_18, _belong18, _identified18, _enchantLevel18, v_result, v_item_db_index18);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId19 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId19, _quality19, _equipType19, _attrId19, _attrValue19,
								_slotId1_19, _optId1_19, _optValue1_19, _slotId2_19, _optId2_19, _optValue2_19, 
								_slotId3_19, _optId3_19, _optValue3_19, _slotId4_19, _optId4_19, _optValue4_19, 
								_slotId5_19, _optId5_19, _optValue5_19, _slotId6_19, _optId6_19, _optValue6_19, 
								_slotId7_19, _optId7_19, _optValue7_19, _belong19, _identified19, _enchantLevel19, v_result, v_item_db_index19);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId20 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId20, _quality20, _equipType20, _attrId20, _attrValue20,
								_slotId1_20, _optId1_20, _optValue1_20, _slotId2_20, _optId2_20, _optValue2_20, 
								_slotId3_20, _optId3_20, _optValue3_20, _slotId4_20, _optId4_20, _optValue4_20, 
								_slotId5_20, _optId5_20, _optValue5_20, _slotId6_20, _optId6_20, _optValue6_20, 
								_slotId7_20, _optId7_20, _optValue7_20, _belong20, _identified20, _enchantLevel20, v_result, v_item_db_index20);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId21 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId21, _quality21, _equipType21, _attrId21, _attrValue21,
								_slotId1_21, _optId1_21, _optValue1_21, _slotId2_21, _optId2_21, _optValue2_21, 
								_slotId3_21, _optId3_21, _optValue3_21, _slotId4_21, _optId4_21, _optValue4_21, 
								_slotId5_21, _optId5_21, _optValue5_21, _slotId6_21, _optId6_21, _optValue6_21, 
								_slotId7_21, _optId7_21, _optValue7_21, _belong21, _identified21, _enchantLevel21, v_result, v_item_db_index21);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId22 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId22, _quality22, _equipType22, _attrId22, _attrValue22,
								_slotId1_22, _optId1_22, _optValue1_22, _slotId2_22, _optId2_22, _optValue2_22, 
								_slotId3_22, _optId3_22, _optValue3_22, _slotId4_22, _optId4_22, _optValue4_22, 
								_slotId5_22, _optId5_22, _optValue5_22, _slotId6_22, _optId6_22, _optValue6_22, 
								_slotId7_22, _optId7_22, _optValue7_22, _belong22, _identified22, _enchantLevel22, v_result, v_item_db_index22);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId23 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId23, _quality23, _equipType23, _attrId23, _attrValue23,
								_slotId1_23, _optId1_23, _optValue1_23, _slotId2_23, _optId2_23, _optValue2_23, 
								_slotId3_23, _optId3_23, _optValue3_23, _slotId4_23, _optId4_23, _optValue4_23, 
								_slotId5_23, _optId5_23, _optValue5_23, _slotId6_23, _optId6_23, _optValue6_23, 
								_slotId7_23, _optId7_23, _optValue7_23, _belong23, _identified23, _enchantLevel23, v_result, v_item_db_index23);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId24 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId24, _quality24, _equipType24, _attrId24, _attrValue24,
								_slotId1_24, _optId1_24, _optValue1_24, _slotId2_24, _optId2_24, _optValue2_24, 
								_slotId3_24, _optId3_24, _optValue3_24, _slotId4_24, _optId4_24, _optValue4_24, 
								_slotId5_24, _optId5_24, _optValue5_24, _slotId6_24, _optId6_24, _optValue6_24, 
								_slotId7_24, _optId7_24, _optValue7_24, _belong24, _identified24, _enchantLevel24, v_result, v_item_db_index24);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId25 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId25, _quality25, _equipType25, _attrId25, _attrValue25,
								_slotId1_25, _optId1_25, _optValue1_25, _slotId2_25, _optId2_25, _optValue2_25, 
								_slotId3_25, _optId3_25, _optValue3_25, _slotId4_25, _optId4_25, _optValue4_25, 
								_slotId5_25, _optId5_25, _optValue5_25, _slotId6_25, _optId6_25, _optValue6_25, 
								_slotId7_25, _optId7_25, _optValue7_25, _belong25, _identified25, _enchantLevel25, v_result, v_item_db_index25);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId26 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId26, _quality26, _equipType26, _attrId26, _attrValue26,
								_slotId1_26, _optId1_26, _optValue1_26, _slotId2_26, _optId2_26, _optValue2_26, 
								_slotId3_26, _optId3_26, _optValue3_26, _slotId4_26, _optId4_26, _optValue4_26, 
								_slotId5_26, _optId5_26, _optValue5_26, _slotId6_26, _optId6_26, _optValue6_26, 
								_slotId7_26, _optId7_26, _optValue7_26, _belong26, _identified26, _enchantLevel26, v_result, v_item_db_index26);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId27 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId27, _quality27, _equipType27, _attrId27, _attrValue27,
								_slotId1_27, _optId1_27, _optValue1_27, _slotId2_27, _optId2_27, _optValue2_27, 
								_slotId3_27, _optId3_27, _optValue3_27, _slotId4_27, _optId4_27, _optValue4_27, 
								_slotId5_27, _optId5_27, _optValue5_27, _slotId6_27, _optId6_27, _optValue6_27, 
								_slotId7_27, _optId7_27, _optValue7_27, _belong27, _identified27, _enchantLevel27, v_result, v_item_db_index27);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId28 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId28, _quality28, _equipType28, _attrId28, _attrValue28,
								_slotId1_28, _optId1_28, _optValue1_28, _slotId2_28, _optId2_28, _optValue2_28, 
								_slotId3_28, _optId3_28, _optValue3_28, _slotId4_28, _optId4_28, _optValue4_28, 
								_slotId5_28, _optId5_28, _optValue5_28, _slotId6_28, _optId6_28, _optValue6_28, 
								_slotId7_28, _optId7_28, _optValue7_28, _belong28, _identified28, _enchantLevel28, v_result, v_item_db_index28);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId29 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId29, _quality29, _equipType29, _attrId29, _attrValue29,
								_slotId1_29, _optId1_29, _optValue1_29, _slotId2_29, _optId2_29, _optValue2_29, 
								_slotId3_29, _optId3_29, _optValue3_29, _slotId4_29, _optId4_29, _optValue4_29, 
								_slotId5_29, _optId5_29, _optValue5_29, _slotId6_29, _optId6_29, _optValue6_29, 
								_slotId7_29, _optId7_29, _optValue7_29, _belong29, _identified29, _enchantLevel29, v_result, v_item_db_index29);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId30 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId30, _quality30, _equipType30, _attrId30, _attrValue30,
								_slotId1_30, _optId1_30, _optValue1_30, _slotId2_30, _optId2_30, _optValue2_30, 
								_slotId3_30, _optId3_30, _optValue3_30, _slotId4_30, _optId4_30, _optValue4_30, 
								_slotId5_30, _optId5_30, _optValue5_30, _slotId6_30, _optId6_30, _optValue6_30, 
								_slotId7_30, _optId7_30, _optValue7_30, _belong30, _identified30, _enchantLevel30, v_result, v_item_db_index30);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId31 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId31, _quality31, _equipType31, _attrId31, _attrValue31,
								_slotId1_31, _optId1_31, _optValue1_31, _slotId2_31, _optId2_31, _optValue2_31, 
								_slotId3_31, _optId3_31, _optValue3_31, _slotId4_31, _optId4_31, _optValue4_31, 
								_slotId5_31, _optId5_31, _optValue5_31, _slotId6_31, _optId6_31, _optValue6_31, 
								_slotId7_31, _optId7_31, _optValue7_31, _belong31, _identified31, _enchantLevel31, v_result, v_item_db_index31);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId32 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId32, _quality32, _equipType32, _attrId32, _attrValue32,
								_slotId1_32, _optId1_32, _optValue1_32, _slotId2_32, _optId2_32, _optValue2_32, 
								_slotId3_32, _optId3_32, _optValue3_32, _slotId4_32, _optId4_32, _optValue4_32, 
								_slotId5_32, _optId5_32, _optValue5_32, _slotId6_32, _optId6_32, _optValue6_32, 
								_slotId7_32, _optId7_32, _optValue7_32, _belong32, _identified32, _enchantLevel32, v_result, v_item_db_index32);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId33 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId33, _quality33, _equipType33, _attrId33, _attrValue33,
								_slotId1_33, _optId1_33, _optValue1_33, _slotId2_33, _optId2_33, _optValue2_33, 
								_slotId3_33, _optId3_33, _optValue3_33, _slotId4_33, _optId4_33, _optValue4_33, 
								_slotId5_33, _optId5_33, _optValue5_33, _slotId6_33, _optId6_33, _optValue6_33, 
								_slotId7_33, _optId7_33, _optValue7_33, _belong33, _identified33, _enchantLevel33, v_result, v_item_db_index33);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId34 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId34, _quality34, _equipType34, _attrId34, _attrValue34,
								_slotId1_34, _optId1_34, _optValue1_34, _slotId2_34, _optId2_34, _optValue2_34, 
								_slotId3_34, _optId3_34, _optValue3_34, _slotId4_34, _optId4_34, _optValue4_34, 
								_slotId5_34, _optId5_34, _optValue5_34, _slotId6_34, _optId6_34, _optValue6_34, 
								_slotId7_34, _optId7_34, _optValue7_34, _belong34, _identified34, _enchantLevel34, v_result, v_item_db_index34);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId35 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId35, _quality35, _equipType35, _attrId35, _attrValue35,
								_slotId1_35, _optId1_35, _optValue1_35, _slotId2_35, _optId2_35, _optValue2_35, 
								_slotId3_35, _optId3_35, _optValue3_35, _slotId4_35, _optId4_35, _optValue4_35, 
								_slotId5_35, _optId5_35, _optValue5_35, _slotId6_35, _optId6_35, _optValue6_35, 
								_slotId7_35, _optId7_35, _optValue7_35, _belong35, _identified35, _enchantLevel35, v_result, v_item_db_index35);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId36 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId36, _quality36, _equipType36, _attrId36, _attrValue36,
								_slotId1_36, _optId1_36, _optValue1_36, _slotId2_36, _optId2_36, _optValue2_36, 
								_slotId3_36, _optId3_36, _optValue3_36, _slotId4_36, _optId4_36, _optValue4_36, 
								_slotId5_36, _optId5_36, _optValue5_36, _slotId6_36, _optId6_36, _optValue6_36, 
								_slotId7_36, _optId7_36, _optValue7_36, _belong36, _identified36, _enchantLevel36, v_result, v_item_db_index36);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId37 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId37, _quality37, _equipType37, _attrId37, _attrValue37,
								_slotId1_37, _optId1_37, _optValue1_37, _slotId2_37, _optId2_37, _optValue2_37, 
								_slotId3_37, _optId3_37, _optValue3_37, _slotId4_37, _optId4_37, _optValue4_37, 
								_slotId5_37, _optId5_37, _optValue5_37, _slotId6_37, _optId6_37, _optValue6_37, 
								_slotId7_37, _optId7_37, _optValue7_37, _belong37, _identified37, _enchantLevel37, v_result, v_item_db_index37);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId38 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId38, _quality38, _equipType38, _attrId38, _attrValue38,
								_slotId1_38, _optId1_38, _optValue1_38, _slotId2_38, _optId2_38, _optValue2_38, 
								_slotId3_38, _optId3_38, _optValue3_38, _slotId4_38, _optId4_38, _optValue4_38, 
								_slotId5_38, _optId5_38, _optValue5_38, _slotId6_38, _optId6_38, _optValue6_38, 
								_slotId7_38, _optId7_38, _optValue7_38, _belong38, _identified38, _enchantLevel38, v_result, v_item_db_index38);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId39 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId39, _quality39, _equipType39, _attrId39, _attrValue39,
								_slotId1_39, _optId1_39, _optValue1_39, _slotId2_39, _optId2_39, _optValue2_39, 
								_slotId3_39, _optId3_39, _optValue3_39, _slotId4_39, _optId4_39, _optValue4_39, 
								_slotId5_39, _optId5_39, _optValue5_39, _slotId6_39, _optId6_39, _optValue6_39, 
								_slotId7_39, _optId7_39, _optValue7_39, _belong39, _identified39, _enchantLevel39, v_result, v_item_db_index39);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId40 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId40, _quality40, _equipType40, _attrId40, _attrValue40,
								_slotId1_40, _optId1_40, _optValue1_40, _slotId2_40, _optId2_40, _optValue2_40, 
								_slotId3_40, _optId3_40, _optValue3_40, _slotId4_40, _optId4_40, _optValue4_40, 
								_slotId5_40, _optId5_40, _optValue5_40, _slotId6_40, _optId6_40, _optValue6_40, 
								_slotId7_40, _optId7_40, _optValue7_40, _belong40, _identified40, _enchantLevel40, v_result, v_item_db_index40);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId41 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId41, _quality41, _equipType41, _attrId41, _attrValue41,
								_slotId1_41, _optId1_41, _optValue1_41, _slotId2_41, _optId2_41, _optValue2_41, 
								_slotId3_41, _optId3_41, _optValue3_41, _slotId4_41, _optId4_41, _optValue4_41, 
								_slotId5_41, _optId5_41, _optValue5_41, _slotId6_41, _optId6_41, _optValue6_41, 
								_slotId7_41, _optId7_41, _optValue7_41, _belong41, _identified41, _enchantLevel41, v_result, v_item_db_index41);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId42 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId42, _quality42, _equipType42, _attrId42, _attrValue42,
								_slotId1_42, _optId1_42, _optValue1_42, _slotId2_42, _optId2_42, _optValue2_42, 
								_slotId3_42, _optId3_42, _optValue3_42, _slotId4_42, _optId4_42, _optValue4_42, 
								_slotId5_42, _optId5_42, _optValue5_42, _slotId6_42, _optId6_42, _optValue6_42, 
								_slotId7_42, _optId7_42, _optValue7_42, _belong42, _identified42, _enchantLevel42, v_result, v_item_db_index42);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId43 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId43, _quality43, _equipType43, _attrId43, _attrValue43,
								_slotId1_43, _optId1_43, _optValue1_43, _slotId2_43, _optId2_43, _optValue2_43, 
								_slotId3_43, _optId3_43, _optValue3_43, _slotId4_43, _optId4_43, _optValue4_43, 
								_slotId5_43, _optId5_43, _optValue5_43, _slotId6_43, _optId6_43, _optValue6_43, 
								_slotId7_43, _optId7_43, _optValue7_43, _belong43, _identified43, _enchantLevel43, v_result, v_item_db_index43);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId44 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId44, _quality44, _equipType44, _attrId44, _attrValue44,
								_slotId1_44, _optId1_44, _optValue1_44, _slotId2_44, _optId2_44, _optValue2_44, 
								_slotId3_44, _optId3_44, _optValue3_44, _slotId4_44, _optId4_44, _optValue4_44, 
								_slotId5_44, _optId5_44, _optValue5_44, _slotId6_44, _optId6_44, _optValue6_44, 
								_slotId7_44, _optId7_44, _optValue7_44, _belong44, _identified44, _enchantLevel44, v_result, v_item_db_index44);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId45 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId45, _quality45, _equipType45, _attrId45, _attrValue45,
								_slotId1_45, _optId1_45, _optValue1_45, _slotId2_45, _optId2_45, _optValue2_45, 
								_slotId3_45, _optId3_45, _optValue3_45, _slotId4_45, _optId4_45, _optValue4_45, 
								_slotId5_45, _optId5_45, _optValue5_45, _slotId6_45, _optId6_45, _optValue6_45, 
								_slotId7_45, _optId7_45, _optValue7_45, _belong45, _identified45, _enchantLevel45, v_result, v_item_db_index45);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId46 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId46, _quality46, _equipType46, _attrId46, _attrValue46,
								_slotId1_46, _optId1_46, _optValue1_46, _slotId2_46, _optId2_46, _optValue2_46, 
								_slotId3_46, _optId3_46, _optValue3_46, _slotId4_46, _optId4_46, _optValue4_46, 
								_slotId5_46, _optId5_46, _optValue5_46, _slotId6_46, _optId6_46, _optValue6_46, 
								_slotId7_46, _optId7_46, _optValue7_46, _belong46, _identified46, _enchantLevel46, v_result, v_item_db_index46);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId47 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId47, _quality47, _equipType47, _attrId47, _attrValue47,
								_slotId1_47, _optId1_47, _optValue1_47, _slotId2_47, _optId2_47, _optValue2_47, 
								_slotId3_47, _optId3_47, _optValue3_47, _slotId4_47, _optId4_47, _optValue4_47, 
								_slotId5_47, _optId5_47, _optValue5_47, _slotId6_47, _optId6_47, _optValue6_47, 
								_slotId7_47, _optId7_47, _optValue7_47, _belong47, _identified47, _enchantLevel47, v_result, v_item_db_index47);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId48 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId48, _quality48, _equipType48, _attrId48, _attrValue48,
								_slotId1_48, _optId1_48, _optValue1_48, _slotId2_48, _optId2_48, _optValue2_48, 
								_slotId3_48, _optId3_48, _optValue3_48, _slotId4_48, _optId4_48, _optValue4_48, 
								_slotId5_48, _optId5_48, _optValue5_48, _slotId6_48, _optId6_48, _optValue6_48, 
								_slotId7_48, _optId7_48, _optValue7_48, _belong48, _identified48, _enchantLevel48, v_result, v_item_db_index48);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId49 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId49, _quality49, _equipType49, _attrId49, _attrValue49,
								_slotId1_49, _optId1_49, _optValue1_49, _slotId2_49, _optId2_49, _optValue2_49, 
								_slotId3_49, _optId3_49, _optValue3_49, _slotId4_49, _optId4_49, _optValue4_49, 
								_slotId5_49, _optId5_49, _optValue5_49, _slotId6_49, _optId6_49, _optValue6_49, 
								_slotId7_49, _optId7_49, _optValue7_49, _belong49, _identified49, _enchantLevel49, v_result, v_item_db_index49);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId50 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId50, _quality50, _equipType50, _attrId50, _attrValue50,
								_slotId1_50, _optId1_50, _optValue1_50, _slotId2_50, _optId2_50, _optValue2_50, 
								_slotId3_50, _optId3_50, _optValue3_50, _slotId4_50, _optId4_50, _optValue4_50, 
								_slotId5_50, _optId5_50, _optValue5_50, _slotId6_50, _optId6_50, _optValue6_50, 
								_slotId7_50, _optId7_50, _optValue7_50, _belong50, _identified50, _enchantLevel50, v_result, v_item_db_index50);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId11 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType11, _costItemId11, _costItemValue11, v_result, v_item_final_qty11);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId12 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType12, _costItemId12, _costItemValue12, v_result, v_item_final_qty12);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId13 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType13, _costItemId13, _costItemValue13, v_result, v_item_final_qty13);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId14 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType14, _costItemId14, _costItemValue14, v_result, v_item_final_qty14);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId15 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType15, _costItemId15, _costItemValue15, v_result, v_item_final_qty15);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId16 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType16, _costItemId16, _costItemValue16, v_result, v_item_final_qty16);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId17 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType17, _costItemId17, _costItemValue17, v_result, v_item_final_qty17);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId18 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType18, _costItemId18, _costItemValue18, v_result, v_item_final_qty18);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId19 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType19, _costItemId19, _costItemValue19, v_result, v_item_final_qty19);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId20 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType20, _costItemId20, _costItemValue20, v_result, v_item_final_qty20);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId21 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType21, _costItemId21, _costItemValue21, v_result, v_item_final_qty21);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId22 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType22, _costItemId22, _costItemValue22, v_result, v_item_final_qty22);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId23 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType23, _costItemId23, _costItemValue23, v_result, v_item_final_qty23);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId24 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType24, _costItemId24, _costItemValue24, v_result, v_item_final_qty24);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId25 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType25, _costItemId25, _costItemValue25, v_result, v_item_final_qty25);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId26 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType26, _costItemId26, _costItemValue26, v_result, v_item_final_qty26);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId27 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType27, _costItemId27, _costItemValue27, v_result, v_item_final_qty27);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId28 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType28, _costItemId28, _costItemValue28, v_result, v_item_final_qty28);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId29 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType29, _costItemId29, _costItemValue29, v_result, v_item_final_qty29);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId30 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType30, _costItemId30, _costItemValue30, v_result, v_item_final_qty30);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId31 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType31, _costItemId31, _costItemValue31, v_result, v_item_final_qty31);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId32 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType32, _costItemId32, _costItemValue32, v_result, v_item_final_qty32);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId33 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType33, _costItemId33, _costItemValue33, v_result, v_item_final_qty33);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId34 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType34, _costItemId34, _costItemValue34, v_result, v_item_final_qty34);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId35 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType35, _costItemId35, _costItemValue35, v_result, v_item_final_qty35);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId36 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType36, _costItemId36, _costItemValue36, v_result, v_item_final_qty36);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId37 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType37, _costItemId37, _costItemValue37, v_result, v_item_final_qty37);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId38 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType38, _costItemId38, _costItemValue38, v_result, v_item_final_qty38);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId39 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType39, _costItemId39, _costItemValue39, v_result, v_item_final_qty39);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId40 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType40, _costItemId40, _costItemValue40, v_result, v_item_final_qty40);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId41 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType41, _costItemId41, _costItemValue41, v_result, v_item_final_qty41);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId42 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType42, _costItemId42, _costItemValue42, v_result, v_item_final_qty42);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId43 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType43, _costItemId43, _costItemValue43, v_result, v_item_final_qty43);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId44 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType44, _costItemId44, _costItemValue44, v_result, v_item_final_qty44);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId45 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType45, _costItemId45, _costItemValue45, v_result, v_item_final_qty45);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId46 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType46, _costItemId46, _costItemValue46, v_result, v_item_final_qty46);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId47 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType47, _costItemId47, _costItemValue47, v_result, v_item_final_qty47);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId48 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType48, _costItemId48, _costItemValue48, v_result, v_item_final_qty48);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId49 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType49, _costItemId49, _costItemValue49, v_result, v_item_final_qty49);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId50 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType50, _costItemId50, _costItemValue50, v_result, v_item_final_qty50);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value4, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value9, _bookbelong9, v_result, v_book_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId11 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId11, _percent11, _liftTime11, _value11, _bookbelong11, v_result, v_book_db_index11);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId12 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId12, _percent12, _liftTime12, _value12, _bookbelong12, v_result, v_book_db_index12);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId13 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId13, _percent13, _liftTime13, _value13, _bookbelong13, v_result, v_book_db_index13);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId14 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId14, _percent14, _liftTime14, _value14, _bookbelong14, v_result, v_book_db_index14);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId15 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId15, _percent15, _liftTime15, _value15, _bookbelong15, v_result, v_book_db_index15);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId16 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId16, _percent16, _liftTime16, _value16, _bookbelong16, v_result, v_book_db_index16);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId17 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId17, _percent17, _liftTime17, _value17, _bookbelong17, v_result, v_book_db_index17);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId18 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId18, _percent18, _liftTime18, _value18, _bookbelong18, v_result, v_book_db_index18);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId19 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId19, _percent19, _liftTime19, _value19, _bookbelong19, v_result, v_book_db_index19);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId20 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId20, _percent20, _liftTime20, _value20, _bookbelong20, v_result, v_book_db_index20);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF 0 < _bookId21 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId21, _percent21, _liftTime21, _value21, _bookbelong21, v_result, v_book_db_index21);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId22 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId22, _percent22, _liftTime22, _value22, _bookbelong22, v_result, v_book_db_index22);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId23 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId23, _percent23, _liftTime23, _value23, _bookbelong23, v_result, v_book_db_index23);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId24 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId24, _percent24, _liftTime24, _value24, _bookbelong24, v_result, v_book_db_index24);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId25 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId25, _percent25, _liftTime25, _value25, _bookbelong25, v_result, v_book_db_index25);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId26 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId26, _percent26, _liftTime26, _value26, _bookbelong26, v_result, v_book_db_index26);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId27 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId27, _percent27, _liftTime27, _value27, _bookbelong27, v_result, v_book_db_index27);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId28 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId28, _percent28, _liftTime28, _value28, _bookbelong28, v_result, v_book_db_index28);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId29 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId29, _percent29, _liftTime29, _value29, _bookbelong29, v_result, v_book_db_index29);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId30 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId30, _percent30, _liftTime30, _value30, _bookbelong30, v_result, v_book_db_index30);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF 0 < _bookId31 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId31, _percent31, _liftTime31, _value31, _bookbelong31, v_result, v_book_db_index31);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId32 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId32, _percent32, _liftTime32, _value32, _bookbelong32, v_result, v_book_db_index32);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId33 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId33, _percent33, _liftTime33, _value33, _bookbelong33, v_result, v_book_db_index33);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId34 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId34, _percent34, _liftTime34, _value34, _bookbelong34, v_result, v_book_db_index34);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId35 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId35, _percent35, _liftTime35, _value35, _bookbelong35, v_result, v_book_db_index35);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId36 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId36, _percent36, _liftTime36, _value36, _bookbelong36, v_result, v_book_db_index36);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId37 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId37, _percent37, _liftTime37, _value37, _bookbelong37, v_result, v_book_db_index37);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId38 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId38, _percent38, _liftTime38, _value38, _bookbelong38, v_result, v_book_db_index38);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId39 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId39, _percent39, _liftTime39, _value39, _bookbelong39, v_result, v_book_db_index39);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId40 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId40, _percent40, _liftTime40, _value40, _bookbelong40, v_result, v_book_db_index40);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF 0 < _bookId41 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId41, _percent41, _liftTime41, _value41, _bookbelong41, v_result, v_book_db_index41);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId42 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId42, _percent42, _liftTime42, _value42, _bookbelong42, v_result, v_book_db_index42);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId43 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId43, _percent43, _liftTime43, _value43, _bookbelong43, v_result, v_book_db_index43);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId44 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId44, _percent44, _liftTime44, _value44, _bookbelong44, v_result, v_book_db_index44);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId45 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId45, _percent45, _liftTime45, _value45, _bookbelong45, v_result, v_book_db_index45);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId46 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId46, _percent46, _liftTime46, _value46, _bookbelong46, v_result, v_book_db_index46);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId47 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId47, _percent47, _liftTime47, _value47, _bookbelong47, v_result, v_book_db_index47);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId48 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId48, _percent48, _liftTime48, _value48, _bookbelong48, v_result, v_book_db_index48);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId49 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId49, _percent49, _liftTime49, _value49, _bookbelong49, v_result, v_book_db_index49);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId50 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId50, _percent50, _liftTime50, _value50, _bookbelong50, v_result, v_book_db_index50);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
				, v_finalqty, v_finalgold, v_finalcashA-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
                , v_item_db_index11, v_item_db_index12, v_item_db_index13, v_item_db_index14, v_item_db_index15, v_item_db_index16, v_item_db_index17, v_item_db_index18, v_item_db_index19, v_item_db_index20
                , v_item_db_index21, v_item_db_index22, v_item_db_index23, v_item_db_index24, v_item_db_index25, v_item_db_index26, v_item_db_index27, v_item_db_index28, v_item_db_index29, v_item_db_index30
                , v_item_db_index31, v_item_db_index32, v_item_db_index33, v_item_db_index34, v_item_db_index35, v_item_db_index36, v_item_db_index37, v_item_db_index38, v_item_db_index39, v_item_db_index40
                , v_item_db_index41, v_item_db_index42, v_item_db_index43, v_item_db_index44, v_item_db_index45, v_item_db_index46, v_item_db_index47, v_item_db_index48, v_item_db_index49, v_item_db_index50
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10
                , v_book_db_index11, v_book_db_index12, v_book_db_index13, v_book_db_index14, v_book_db_index15, v_book_db_index16, v_book_db_index17, v_book_db_index18, v_book_db_index19, v_book_db_index20
                , v_book_db_index21, v_book_db_index22, v_book_db_index23, v_book_db_index24, v_book_db_index25, v_book_db_index26, v_book_db_index27, v_book_db_index28, v_book_db_index29, v_book_db_index30
                , v_book_db_index31, v_book_db_index32, v_book_db_index33, v_book_db_index34, v_book_db_index35, v_book_db_index36, v_book_db_index37, v_book_db_index38, v_book_db_index39, v_book_db_index40
                , v_book_db_index41, v_book_db_index42, v_book_db_index43, v_book_db_index44, v_book_db_index45, v_book_db_index46, v_book_db_index47, v_book_db_index48, v_book_db_index49, v_book_db_index50
                ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_skillget` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_skillget`( 
	IN	p_UserID 		BIGINT
, 	IN	p_CharID 		BIGINT
, 	IN	p_ItemID 		INT		-- 아이템 번호
,	IN	p_UseQty	 	INT		-- 아이템 사용 수량
,	IN 	p_SkillID		INT		-- 스킬 ID		
)
    COMMENT '인벤토리(char_inven_item) 아이템 삭제 및 스킬 Unlock'
BEGIN
	
    DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;	-- 개수 아이템 최종 수량


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_itemcount;	             
	END; 
    

	START TRANSACTION;
		
    root:
    BEGIN
		-- 개수 아이템 삭제
		CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_UseQty, v_final_itemcount, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
        END IF;
    
		-- 아이템을 전부 사용했다면 퀵슬롯에서 제거
		IF v_final_itemcount <= 0 THEN			
			UPDATE char_quick_use
            SET item_id = 0, is_auto_flag = 0
            WHERE char_idx = p_CharID AND is_skill_flag = 0 AND item_id = p_ItemID;
        END IF;
		
		-- 스킬 넣기(습득하지 않은 스킬은 DB에 들어가 있지 않다)
		INSERT INTO char_skill (char_idx, skill_id, skill_value)
		VALUES (p_CharID, p_SkillID, 1);
        
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 101;	-- 스킬 습득 실패
		END IF;
	END;	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	SELECT v_result, v_final_itemcount;		

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_useravatar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_useravatar`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

, 	IN	_itemid 		INT
,	IN	_deleteqty	 	INT

,	IN	p_AvatarConfirmDuration 		INT

,	IN	p_failAvatarId1	INT,	IN	p_failAvatarId2	INT,	IN	p_failAvatarId3	INT,	IN	p_failAvatarId4	INT,	IN	p_failAvatarId5	INT
,	IN	p_failAvatarId6	INT,	IN	p_failAvatarId7	INT,	IN	p_failAvatarId8	INT,	IN	p_failAvatarId9	INT,	IN	p_failAvatarId10	INT,	IN	p_failAvatarId11	INT

,	IN	p_AvatarId1	INT,	IN	p_AvatarId2	INT,	IN	p_AvatarId3	INT,	IN	p_AvatarId4	INT,	IN	p_AvatarId5	INT
,	IN	p_AvatarId6	INT,	IN	p_AvatarId7	INT,	IN	p_AvatarId8	INT,	IN	p_AvatarId9	INT,	IN	p_AvatarId10	INT,	IN	p_AvatarId11	INT
)
    COMMENT '랜덤박스 사용으로 변신아바타 획득'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE final_item_count 		INT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE avatarDBIndex1 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex2 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex3 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex4 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex5 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex6 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex7 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex8 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex9 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex10 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex11 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, final_item_count, avatarDBIndex1, avatarDBIndex2, avatarDBIndex3, avatarDBIndex4, avatarDBIndex5, avatarDBIndex6, avatarDBIndex7, avatarDBIndex8, avatarDBIndex9, avatarDBIndex10, avatarDBIndex11;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- inven count item
        CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, _itemid, _deleteqty, final_item_count, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
        END IF;
    
		-- IF final_item_count <= 0 THEN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;            
        -- END IF;
        
        -- 일반 아바타 획득
		IF 0 < p_failAvatarId1 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId2 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId3 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId4 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId5 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId6 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId7 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId8 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId9 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId10 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId11 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId11, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 아바타 확정대기
        IF 0 < p_AvatarId1 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex1;
		END IF;

		IF 0 < p_AvatarId2 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex2;
		END IF;
        
        IF 0 < p_AvatarId3 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex3;
		END IF;
        
        IF 0 < p_AvatarId4 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex4;
		END IF;
        
        IF 0 < p_AvatarId5 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex5;
		END IF;
        
        IF 0 < p_AvatarId6 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex6;
		END IF;
        
        IF 0 < p_AvatarId7 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex7;
		END IF;
        
        IF 0 < p_AvatarId8 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex8;
		END IF;
        
        IF 0 < p_AvatarId9 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex9;
		END IF;
        
        IF 0 < p_AvatarId10 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex10;
		END IF;
        
        IF 0 < p_AvatarId11 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId11, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6107;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex11;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, final_item_count, avatarDBIndex1, avatarDBIndex2, avatarDBIndex3, avatarDBIndex4, avatarDBIndex5, avatarDBIndex6, avatarDBIndex7, avatarDBIndex8, avatarDBIndex9, avatarDBIndex10, avatarDBIndex11;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_userpet` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_userpet`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

, 	IN	_itemid 		INT
,	IN	_deleteqty	 	INT

,	IN	p_PetConfirmDuration 		INT

,	IN	p_failPetId1	INT,	IN	p_failPetId2	INT,	IN	p_failPetId3	INT,	IN	p_failPetId4	INT,	IN	p_failPetId5	INT
,	IN	p_failPetId6	INT,	IN	p_failPetId7	INT,	IN	p_failPetId8	INT,	IN	p_failPetId9	INT,	IN	p_failPetId10	INT,	IN	p_failPetId11	INT

,	IN	p_PetId1	INT,	IN	p_PetId2	INT,	IN	p_PetId3	INT,	IN	p_PetId4	INT,	IN	p_PetId5	INT
,	IN	p_PetId6	INT,	IN	p_PetId7	INT,	IN	p_PetId8	INT,	IN	p_PetId9	INT,	IN	p_PetId10	INT,	IN	p_PetId11	INT
)
    COMMENT '펫 랜덤박스 사용으로 펫 획득'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE final_item_count 		INT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE petDBIndex1 	BIGINT DEFAULT 0;
    DECLARE petDBIndex2 	BIGINT DEFAULT 0;
    DECLARE petDBIndex3 	BIGINT DEFAULT 0;
    DECLARE petDBIndex4 	BIGINT DEFAULT 0;
    DECLARE petDBIndex5 	BIGINT DEFAULT 0;
    DECLARE petDBIndex6 	BIGINT DEFAULT 0;
    DECLARE petDBIndex7 	BIGINT DEFAULT 0;
    DECLARE petDBIndex8 	BIGINT DEFAULT 0;
    DECLARE petDBIndex9 	BIGINT DEFAULT 0;
    DECLARE petDBIndex10 	BIGINT DEFAULT 0;
    DECLARE petDBIndex11 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, final_item_count, petDBIndex1, petDBIndex2, petDBIndex3, petDBIndex4, petDBIndex5, petDBIndex6, petDBIndex7, petDBIndex8, petDBIndex9, petDBIndex10, petDBIndex11;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- inven count item
        CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, _itemid, _deleteqty, final_item_count, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
        END IF;
    
		-- IF final_item_count <= 0 THEN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;            
        -- END IF;
        
        -- 일반 펫 획득
		IF 0 < p_failPetId1 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId2 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId3 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId4 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId5 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId6 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId7 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId8 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId9 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId10 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId11 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId11, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 펫 확정대기
        IF 0 < p_PetId1 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex1;
		END IF;

		IF 0 < p_PetId2 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex2;
		END IF;
        
        IF 0 < p_PetId3 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex3;
		END IF;
        
        IF 0 < p_PetId4 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex4;
		END IF;
        
        IF 0 < p_PetId5 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex5;
		END IF;
        
        IF 0 < p_PetId6 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex6;
		END IF;
        
        IF 0 < p_PetId7 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex7;
		END IF;
        
        IF 0 < p_PetId8 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex8;
		END IF;
        
        IF 0 < p_PetId9 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex9;
		END IF;
        
        IF 0 < p_PetId10 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex10;
		END IF;
        
        IF 0 < p_PetId11 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId11, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex11;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, final_item_count, petDBIndex1, petDBIndex2, petDBIndex3, petDBIndex4, petDBIndex5, petDBIndex6, petDBIndex7, petDBIndex8, petDBIndex9, petDBIndex10, petDBIndex11;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_uservehicle` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_uservehicle`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

, 	IN	_itemid 		INT
,	IN	_deleteqty	 	INT

,	IN	p_VehicleConfirmDuration 		INT

,	IN	p_failVehicleId1	INT,	IN	p_failVehicleId2	INT,	IN	p_failVehicleId3	INT,	IN	p_failVehicleId4	INT,	IN	p_failVehicleId5	INT
,	IN	p_failVehicleId6	INT,	IN	p_failVehicleId7	INT,	IN	p_failVehicleId8	INT,	IN	p_failVehicleId9	INT,	IN	p_failVehicleId10	INT,	IN	p_failVehicleId11	INT

,	IN	p_VehicleId1	INT,	IN	p_VehicleId2	INT,	IN	p_VehicleId3	INT,	IN	p_VehicleId4	INT,	IN	p_VehicleId5	INT
,	IN	p_VehicleId6	INT,	IN	p_VehicleId7	INT,	IN	p_VehicleId8	INT,	IN	p_VehicleId9	INT,	IN	p_VehicleId10	INT,	IN	p_VehicleId11	INT
)
    COMMENT '랜덤박스 사용으로 탈것 획득'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE final_item_count 		INT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE vehicleDBIndex1 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex2 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex3 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex4 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex5 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex6 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex7 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex8 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex9 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex10 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex11 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, final_item_count, vehicleDBIndex1, vehicleDBIndex2, vehicleDBIndex3, vehicleDBIndex4, vehicleDBIndex5, vehicleDBIndex6, vehicleDBIndex7, vehicleDBIndex8, vehicleDBIndex9, vehicleDBIndex10, vehicleDBIndex11;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- inven count item
        CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, _itemid, _deleteqty, final_item_count, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
        END IF;
    
		-- IF final_item_count <= 0 THEN
			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = _charid AND is_skill_flag = 0 AND item_id = _itemId;            
        -- END IF;
        
        -- 일반 아바타 획득
		IF 0 < p_failVehicleId1 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId2 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId3 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId4 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId5 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId6 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId7 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId8 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId9 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId10 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId11 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId11, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 아바타 확정대기
        IF 0 < p_VehicleId1 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex1;
		END IF;

		IF 0 < p_VehicleId2 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex2;
		END IF;
        
        IF 0 < p_VehicleId3 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex3;
		END IF;
        
        IF 0 < p_VehicleId4 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex4;
		END IF;
        
        IF 0 < p_VehicleId5 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex5;
		END IF;
        
        IF 0 < p_VehicleId6 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex6;
		END IF;
        
        IF 0 < p_VehicleId7 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex7;
		END IF;
        
        IF 0 < p_VehicleId8 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex8;
		END IF;
        
        IF 0 < p_VehicleId9 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex9;
		END IF;
        
        IF 0 < p_VehicleId10 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex10;
		END IF;
        
        IF 0 < p_VehicleId11 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId11, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex11;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, final_item_count, vehicleDBIndex1, vehicleDBIndex2, vehicleDBIndex3, vehicleDBIndex4, vehicleDBIndex5, vehicleDBIndex6, vehicleDBIndex7, vehicleDBIndex8, vehicleDBIndex9, vehicleDBIndex10, vehicleDBIndex11;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_delete_usescroll` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_delete_usescroll`(
	IN	_userid 		BIGINT, 
	IN	_charid 		BIGINT, 

	IN	_itemtype 		TINYINT, 
	IN	_itemid 		INT, 
	IN  _useamount 		INT,

	IN	_partyidx 		BIGINT, 
	IN	_questid 		INT, 
	IN	_questvalue 	INT
)
    COMMENT '스크롤 퀘스트 등록  및 아이템 삭제. '
BEGIN
	DECLARE _result INT DEFAULT 0;
	DECLARE _itemValue INT DEFAULT 0;
	
    DECLARE v_errno INT DEFAULT 0;	
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result;
	END;
        
        
	START TRANSACTION;
	root:
	BEGIN		
		SELECT item_value - _useamount INTO _itemValue FROM `char_inven_item` WHERE `char_idx` = _charid AND `item_type` = _itemtype AND `item_id` = _itemid;
		IF 0 < _itemValue THEN 
			UPDATE `char_inven_item` SET `item_value` = _itemValue WHERE `char_idx` = _charid AND `item_type` = _itemtype AND `item_id` = _itemid;
		ELSE
			DELETE FROM char_inven_item WHERE `char_idx` = _charid AND `item_type` = _itemtype AND `item_id` = _itemid;
		END IF;
		
		IF ROW_COUNT() <= 0 THEN 
			SET _result = 1;
			LEAVE root;
		END IF;	
		INSERT INTO `char_quest_scroll`(`char_idx`,`user_idx`,`party_idx`,`quest_id`,`quest_value`)
		VALUES (_charid, _userid, _partyidx, _questid, _questvalue);
		
		IF ROW_COUNT() <= 0 THEN 
			SET _result = 2;
			LEAVE root;
		END IF;	
	END;
	
	IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert`(
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
	
,	IN _consumeItemid 	INT
, 	IN _type 			TINYINT
, 	IN _amount 			INT
)
    COMMENT '개수 아이템 추가'
BEGIN
	
	
	
    DECLARE v_finalqty 		SMALLINT DEFAULT 0;
	
    DECLARE v_errno INT DEFAULT 0;	
	DECLARE _result INT DEFAULT 0;	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result, v_finalqty;
	END;    
        
	START TRANSACTION;	
	
	root:
	BEGIN		
		
		
		IF _consumeItemid <> 0 THEN
		BEGIN		
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _type, _consumeItemid, _amount, _result, v_finalqty);
			IF 0 <> _result THEN				
				LEAVE root;
			END IF;	
		END;
		END IF;		
	END;	
	
	
	IF _result <> 0 THEN	
	BEGIN 
		ROLLBACK;
	END;
	ELSE
	BEGIN
		COMMIT;
	END;
	END IF;	
	
	
	SELECT _result, v_finalqty;	

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert_auctionbuy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert_auctionbuy`(
	IN	_useridx	BIGINT
,	IN	_charidx	BIGINT 
,   IN 	_deccasha	BIGINT	

,	IN	_consumeitemid 	INT
,	IN	_itemtype 		TINYINT
,	IN	_itemqty 		INT
)
    COMMENT '거래소에서 개수 아이템 구매'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_cashA		BIGINT DEFAULT 0;    
    DECLARE v_final_item_qty	INT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashA, v_final_item_qty, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN

		CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
		
		CALL sp_mmo_notrans_userinfo_delete_cashA(_useridx, _deccasha, v_final_cashA, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
        
		CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;	
        

		
		CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _itemtype, _consumeitemid, _itemqty, v_result, v_final_item_qty);
		IF 0 != v_result THEN
			LEAVE root;
		END IF;	
		
	END;


	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
    
	
	SELECT v_result, v_final_cashA, v_final_item_qty, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert_auctionbuy_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert_auctionbuy_c9`(
	IN	p_UserID	BIGINT
,	IN	p_CharID	BIGINT 
,   IN 	p_CostCashB	BIGINT	

,	IN	p_ConsumeItemID 	INT			
,	IN	p_ItemType 			TINYINT		
,	IN	p_ItemQty 			INT			
)
    COMMENT '거래소에서 개수 아이템 구매'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_cashB		BIGINT DEFAULT 0;    
    DECLARE v_final_item_qty	INT DEFAULT 0;

	DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;	
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashB, v_final_item_qty, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN

		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_old, v_cashB_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
		
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
        
		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_new, v_cashB_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;	
        

		
		CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, p_ItemType, p_ConsumeItemID, p_ItemQty, v_result, v_final_item_qty);
		IF 0 != v_result THEN
			LEAVE root;
		END IF;	
		
	END;


	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
    
	
	SELECT v_result, v_final_cashB, v_final_item_qty, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert_auctionunregister` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert_auctionunregister`(
	IN	_useridx		BIGINT
,	IN	_charidx		BIGINT 
,	IN _incgold			BIGINT

,	IN	_consumeitemid 	INT
,	IN	_itemtype 		TINYINT
,	IN	_itemqty 		INT
)
    COMMENT '개수 아이템 도로 넣기, 아이템 거래소에서 회수'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_item_qty	INT DEFAULT 0;
    DECLARE v_final_gold		BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_item_qty;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		
        IF 0 < _incgold THEN
			CALL sp_mmo_notrans_charinfo_insert_gold(_useridx, _charidx, _incgold, v_final_gold, v_result);
			SET v_result = 0;
		END IF;

		
		CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _itemtype, _consumeitemid, _itemqty, v_result, v_final_item_qty);
		IF 0 != v_result THEN
			LEAVE root;
		END IF;	
		
	END;
		
        
	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
    
	
	SELECT v_result, v_final_item_qty;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert_awarehouse_keep` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert_awarehouse_keep`(
	IN _useridx 		BIGINT		
,	IN _charidx			BIGINT		
,	IN _itemID 			INT			
,	IN _itemQty			INT	

)
    COMMENT '창고에 보관하기(개수 아이템)'
BEGIN	
    DECLARE	v_errno		INT DEFAULT 0;    
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_warehouse_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    DECLARE v_db_item_qty			INT DEFAULT 0;	
    DECLARE v_affected_row			INT DEFAULT 0; 
    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
        
        
        
        
        SELECT item_value INTO v_db_item_qty FROM char_inven_item
        WHERE char_idx = _charidx AND item_id = _itemID;
        IF FOUND_ROWS() <> 1 THEN
			SET v_result = 101;	
            LEAVE root;			
        END IF;
        
        IF v_db_item_qty < _itemQty THEN
			SET v_result = 102;	
            LEAVE root;			
        END IF;
        
       
        
        INSERT INTO char_inven_item (char_idx, user_idx, item_type, item_id, item_value)
        (
			SELECT 0, user_idx, item_type, _itemID, _itemQty
            FROM char_inven_item AS B
            WHERE char_idx = _charidx AND item_id = _itemID
		)
		ON DUPLICATE KEY UPDATE item_value = char_inven_item.item_value + _itemQty; 
		
        SET v_affected_row = ROW_COUNT();
		IF NOT (v_affected_row = 2 OR v_affected_row = 1) THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;
        
        
        
        IF v_db_item_qty = _itemQty THEN
			
			DELETE FROM char_inven_item
			WHERE char_idx = _charidx AND item_id = _itemID;
			
			IF ROW_COUNT() <> 1 THEN
				SET v_result = 104;	
				LEAVE root;
			END IF;
        ELSE 
			
			UPDATE char_inven_item
			SET item_value = item_value - _itemQty
            WHERE char_idx = _charidx AND item_id = _itemID;
			
			IF ROW_COUNT() <> 1 THEN
				SET v_result = 105;	
				LEAVE root;
			END IF;			
        END IF;        
			
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result;	
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert_collect_addexp_cashb` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert_collect_addexp_cashb`( 
	IN _userid 		BIGINT
,   IN _charid 		BIGINT

,   IN _mine_exp	BIGINT
,   IN _add_exp		BIGINT

,   IN _itemId1 	INT,	IN _itemType1	INT,	IN _itemValue1	INT	
,   IN _itemId2 	INT,	IN _itemType2	INT,	IN _itemValue2	INT
,   IN _itemId3 	INT,	IN _itemType3	INT,	IN _itemValue3	INT
,   IN _itemId4 	INT,	IN _itemType4	INT,	IN _itemValue4	INT
,   IN _itemId5 	INT,	IN _itemType5	INT,	IN _itemValue5	INT
,   IN _itemId6 	INT,	IN _itemType6	INT,	IN _itemValue6	INT
,   IN _itemId7 	INT,	IN _itemType7	INT,	IN _itemValue7	INT
,   IN _itemId8 	INT,	IN _itemType8	INT,	IN _itemValue8	INT
,   IN _itemId9 	INT,	IN _itemType9	INT,	IN _itemValue9	INT
,   IN _itemId10 	INT,	IN _itemType10	INT,	IN _itemValue10	INT
, 	IN p_AddCashB	INT		
)
    COMMENT '개수 아이템들 추가, char_inven_item'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
    DECLARE v_item_qty 			INT DEFAULT 0;
    DECLARE v_final_mine_exp	BIGINT DEFAULT 0;
    DECLARE v_final_exp			BIGINT DEFAULT 0;
    DECLARE v_final_gold		BIGINT DEFAULT 0;
    DECLARE v_final_cashB		BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, v_final_mine_exp, v_final_exp, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
    
		
		IF _mine_exp > 0 THEN
			CALL sp_mmo_notrans_charinfo_insert_mineexp(_userid, _charid, _mine_exp, v_final_mine_exp, result);
            IF result != 0 THEN
				LEAVE root;
            END IF;
        END IF;
        
        
		IF _add_exp > 0 THEN
			CALL sp_mmo_notrans_charinfo_insert_expgold(_userid, _charid, _add_exp, 0, v_final_exp, v_final_gold, result);
            IF result != 0 THEN
				LEAVE root;
            END IF;
        END IF;
        
        
        IF p_AddCashB > 0 THEN
			CALL sp_mmo_notrans_userinfo_insert_cashB(_userid, p_AddCashB, v_final_cashB, result);
			IF result != 0 THEN
				LEAVE root;
			END IF;	
        END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType1, _itemId1, _itemValue1, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType2, _itemId2, _itemValue2, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType3, _itemId3, _itemValue3, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType4, _itemId4, _itemValue4, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType5, _itemId5, _itemValue5, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType6, _itemId6, _itemValue6, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType7, _itemId7, _itemValue7, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType8, _itemId8, _itemValue8, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType9, _itemId9, _itemValue9, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _itemType10, _itemId10, _itemValue10, result, v_item_qty);
            IF result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result, v_final_mine_exp, v_final_exp, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_insert_raidreward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_insert_raidreward`(
	IN	_useridx	BIGINT
,	IN	_charidx	BIGINT 

,	IN	_type1 TINYINT,		IN	_consumeItemid1 INT,		IN	_amount1 INT
,	IN	_type2 TINYINT,		IN	_consumeItemid2 INT,		IN	_amount2 INT
,	IN	_type3 TINYINT,		IN	_consumeItemid3 INT,		IN	_amount3 INT
,	IN	_type4 TINYINT,		IN	_consumeItemid4 INT,		IN	_amount4 INT
,	IN	_type5 TINYINT,		IN	_consumeItemid5 INT,		IN	_amount5 INT
,	IN	_type6 TINYINT,		IN	_consumeItemid6 INT,		IN	_amount6 INT
,	IN	_type7 TINYINT,		IN	_consumeItemid7 INT,		IN	_amount7 INT
,	IN	_type8 TINYINT,		IN	_consumeItemid8 INT,		IN	_amount8 INT
,	IN	_type9 TINYINT,		IN	_consumeItemid9 INT,		IN	_amount9 INT
,	IN	_type10 TINYINT,	IN	_consumeItemid10 INT,		IN	_amount10 INT

,	IN	_bookid1 INT,	IN	_Percent1	INT,	IN	_LiftTime1	INT,	IN	_Value1 INT,	IN	_belong1	TINYINT
,	IN	_bookid2 INT,	IN	_Percent2	INT,	IN	_LiftTime2	INT,	IN	_Value2 INT,	IN	_belong2	TINYINT
,	IN	_bookid3 INT,	IN	_Percent3	INT,	IN	_LiftTime3	INT,	IN	_Value3 INT,	IN	_belong3	TINYINT
,	IN	_bookid4 INT,	IN	_Percent4	INT,	IN	_LiftTime4	INT,	IN	_Value4 INT,	IN	_belong4	TINYINT
,	IN	_bookid5 INT,	IN	_Percent5	INT,	IN	_LiftTime5	INT,	IN	_Value5 INT,	IN	_belong5	TINYINT
,	IN	_bookid6 INT,	IN	_Percent6	INT,	IN	_LiftTime6	INT,	IN	_Value6 INT,	IN	_belong6	TINYINT
,	IN	_bookid7 INT,	IN	_Percent7	INT,	IN	_LiftTime7	INT,	IN	_Value7 INT,	IN	_belong7	TINYINT
,	IN	_bookid8 INT,	IN	_Percent8	INT,	IN	_LiftTime8	INT,	IN	_Value8 INT,	IN	_belong8	TINYINT
,	IN	_bookid9 INT,	IN	_Percent9	INT,	IN	_LiftTime9	INT,	IN	_Value9 INT,	IN	_belong9	TINYINT
,	IN	_bookid10 INT,	IN	_Percent10	INT,	IN	_LiftTime10	INT,	IN	_Value10 INT,	IN	_belong10	TINYINT
)
    COMMENT '레이드 보상 지급. 소비아이템 및 스킬북 지급'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_consume_final_qty1	INT DEFAULT 0;
    DECLARE v_consume_final_qty2	INT DEFAULT 0;
    DECLARE v_consume_final_qty3	INT DEFAULT 0;
    DECLARE v_consume_final_qty4	INT DEFAULT 0;
    DECLARE v_consume_final_qty5	INT DEFAULT 0;
    DECLARE v_consume_final_qty6	INT DEFAULT 0;
    DECLARE v_consume_final_qty7	INT DEFAULT 0;
    DECLARE v_consume_final_qty8	INT DEFAULT 0;
    DECLARE v_consume_final_qty9	INT DEFAULT 0;
    DECLARE v_consume_final_qty10	INT DEFAULT 0;
    
	DECLARE v_bookDBIndex1 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex2 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex3 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex4 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex5 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex6 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex7 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex8 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex9 BIGINT DEFAULT 0;
	DECLARE v_bookDBIndex10 BIGINT DEFAULT 0;
	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_bookDBIndex1, v_bookDBIndex2, v_bookDBIndex3, v_bookDBIndex4, v_bookDBIndex5, v_bookDBIndex6, v_bookDBIndex7, v_bookDBIndex8, v_bookDBIndex9, v_bookDBIndex10;
	END;	
        
        
	START TRANSACTION;	
	
	root:
	BEGIN

		
		IF 0 < _consumeItemid1 THEN
		BEGIN		
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type1, _consumeItemid1, _amount1, v_result, v_consume_final_qty1);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;
		END IF;
		
		IF 0 < _consumeItemid2 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type2, _consumeItemid2, _amount2, v_result, v_consume_final_qty2);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;
		END IF;
		IF 0 < _consumeItemid3 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type3, _consumeItemid3, _amount3, v_result, v_consume_final_qty3);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid4 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type4, _consumeItemid4, _amount4, v_result, v_consume_final_qty4);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid5 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type5, _consumeItemid5, _amount5, v_result, v_consume_final_qty5);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid6 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type6, _consumeItemid6, _amount6, v_result, v_consume_final_qty6);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid7 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type7, _consumeItemid7, _amount7, v_result, v_consume_final_qty7);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid8 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type8, _consumeItemid8, _amount8, v_result, v_consume_final_qty8);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid9 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type9, _consumeItemid9, _amount9, v_result, v_consume_final_qty9);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _consumeItemid10 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type10, _consumeItemid10, _amount10, v_result, v_consume_final_qty10);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;


		
		IF 0 < _bookid1 THEN
		BEGIN						
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid1, _Percent1, _LiftTime1, _Value1, _belong1, v_result, v_bookDBIndex1);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;
		END IF;		
		IF 0 < _bookid2 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid2, _Percent2, _LiftTime2, _Value2, _belong2, v_result, v_bookDBIndex2);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;
		END IF;
		IF 0 < _bookid3 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid3, _Percent3, _LiftTime3, _Value3, _belong3, v_result, v_bookDBIndex3);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;		
		END;	
		END IF;
		IF 0 < _bookid4 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid4, _Percent4, _LiftTime4, _Value4, _belong4, v_result, v_bookDBIndex4);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _bookid5 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid5, _Percent5, _LiftTime5, _Value5, _belong5, v_result, v_bookDBIndex5);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _bookid6 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid6, _Percent6, _LiftTime6, _Value6, _belong6, v_result, v_bookDBIndex6);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _bookid7 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid7, _Percent7, _LiftTime7, _Value7, _belong7, v_result, v_bookDBIndex7);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _bookid8 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid8, _Percent8, _LiftTime8, _Value8, _belong8, v_result, v_bookDBIndex8);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _bookid9 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid9, _Percent9, _LiftTime9, _Value9, _belong9, v_result, v_bookDBIndex9);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;
		IF 0 < _bookid10 THEN
		BEGIN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _bookid10, _Percent10, _LiftTime10, _Value10, _belong10, v_result, v_bookDBIndex10);
			IF 0 != v_result THEN
				LEAVE root;
			END IF;	
		END;	
		END IF;

	END;
		
        
	
	IF v_result = 0 THEN	
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	
	
    
	
	SELECT v_result, v_bookDBIndex1, v_bookDBIndex2, v_bookDBIndex3, v_bookDBIndex4, v_bookDBIndex5, v_bookDBIndex6, v_bookDBIndex7, v_bookDBIndex8, v_bookDBIndex9, v_bookDBIndex10;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenitem_update_combine` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenitem_update_combine`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_itemid			INT			
,	IN	_deleteitemqty	INT			
,	IN	_newitemid		INT			
,	IN	_newitemtype	INT			
,	IN	_newitemqty		INT			
,	IN	_deletegold		BIGINT		
)
    COMMENT '보석/승급석 아이템 조합'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE result 		INT DEFAULT 0;
    
    DECLARE final_item_qty INT DEFAULT 0;
    DECLARE new_item_qty INT DEFAULT 0;
    DECLARE final_gold BIGINT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_item_qty, new_item_qty, final_gold;
	END;       
	   
	START TRANSACTION;
    
    root:
    BEGIN
    
        
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;  

        
        CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _itemid, _deleteitemqty, final_item_qty, result);
		IF result <> 0 THEN
			LEAVE root;
		END IF;

		
        CALL sp_mmo_notrans_charinvenitem_insert(_userid, _charid, _newitemtype, _newitemid, _newitemqty, result, new_item_qty);
        IF result <> 0 THEN
			LEAVE root;
		END IF;

	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result, final_item_qty, new_item_qty, final_gold;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_delete`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,   IN	_itemidx 		BIGINT
)
    COMMENT '무공비서 아이템 판매, char_inven_skillbook'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;    
	END;    
    

	START TRANSACTION;
   
    root:
    BEGIN

		CALL sp_mmo_notrans_charinvenskillbook_delete(_userid, _charid, _itemidx, v_result);
       
	END;
		
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_delete_addgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_delete_addgold`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,   IN	_itemidx 		BIGINT
,	IN	_addgold		BIGINT
)
    COMMENT '무공비서 아이템 판매, char_inven_skillbook'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    DECLARE final_gold			BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_gold;             
	END;    
    

	START TRANSACTION;
   
    root:
    BEGIN

		CALL sp_mmo_notrans_charinvenskillbook_delete(_userid, _charid, _itemidx, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;        
                
        CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;
        
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result, final_gold;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_delete_auction` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_delete_auction`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,   IN	_itemidx 		BIGINT
,	IN	_decgold		BIGINT
)
    COMMENT '무공비서 아이템 아이템 거래소 올리기 위해 삭제, char_inven_equip'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
   
    DECLARE v_final_gold		BIGINT DEFAULT 0;
    DECLARE v_item_id			INT DEFAULT 0;
    DECLARE v_percent			INT DEFAULT 0;
    DECLARE v_life_time			INT DEFAULT 0;
    DECLARE v_value				INT DEFAULT 0;
	DECLARE v_skillid			INT DEFAULT 0;
    DECLARE v_belong			INT DEFAULT 0;

   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold, v_item_id, v_percent, v_life_time, v_value, v_belong;
	END;


	START TRANSACTION;
   
    root:
    BEGIN
    
    	
		SELECT item_id, percent, life_time, ability_value, skill_id, belong INTO v_item_id, v_percent, v_life_time, v_value, v_skillid, v_belong
		FROM char_inven_skillbook
		WHERE char_idx = _charid AND item_idx = _itemidx;
 
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;
        
		IF 0 < v_skillid THEN
			SET v_result = 102;	
			LEAVE root;
        END IF;
        
        IF 0 < v_belong THEN
			SET v_result = 103;	
			LEAVE root;
        END IF;

		
        CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _decgold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;

		
		CALL sp_mmo_notrans_charinvenskillbook_delete(_userid, _charid, _itemidx, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;        

	END;
	
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT v_result, v_final_gold, v_item_id, v_percent, v_life_time, v_value, v_belong;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_delete_auction_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_delete_auction_one`( 
	IN	p_UserID 		BIGINT
,   IN	p_CharID 		BIGINT
,   IN	p_ItemDBIdx 	BIGINT	
,	IN	p_DecGoldCost	BIGINT	
,	IN	p_NickName			VARCHAR(26)
,	IN	p_PassWord			INT
,	IN	p_SellPrice			INT
,	IN	p_CharClass			INT
,	IN	p_ItemNameID		INT
,	IN	p_ItemGroup			INT
,	IN	p_ItemSubGroup		INT
)
    COMMENT '무공비서 아이템 아이템 거래소 올리기'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
   
    DECLARE v_final_gold		BIGINT DEFAULT 0;
    DECLARE v_item_id			INT DEFAULT 0;
    DECLARE v_percent			INT DEFAULT 0;
    DECLARE v_life_time			INT DEFAULT 0;
    DECLARE v_value				INT DEFAULT 0;
	DECLARE v_skillid			INT DEFAULT 0;
    DECLARE v_belong			INT DEFAULT 0;
    
    DECLARE v_auctionidx 		BIGINT DEFAULT 0;
	DECLARE v_regist_max_qty 	INT DEFAULT 30;
    DECLARE v_regist_qty 		INT DEFAULT 0;

   
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_gold, v_auctionidx, v_item_id, v_percent, v_life_time, v_value;
	END;


	START TRANSACTION;
   
    root:
    BEGIN
    
		    
    	
		SELECT item_id, percent, life_time, ability_value, skill_id, belong 
        INTO v_item_id, v_percent, v_life_time, v_value, v_skillid, v_belong
		FROM char_inven_skillbook
		WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
 
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;
			LEAVE root;
        END IF;
        
		IF 0 < v_skillid THEN
			SET v_result = 102;
			LEAVE root;
        END IF;
        
        IF 0 < v_belong THEN
			SET v_result = 103;
			LEAVE root;
        END IF;
        
		
		SELECT count(*) INTO v_regist_qty
        FROM tbl_auction_items
        WHERE fld_char_idx = p_CharID;
    
		IF v_regist_max_qty <=  v_regist_qty THEN
			SET v_result = 104;
			LEAVE root;
        END IF;

        
        
		
        
		
        CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DecGoldCost, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;

		
		CALL sp_mmo_notrans_charinvenskillbook_delete(p_UserID, p_CharID, p_ItemDBIdx, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        
        CALL asp_mmo_auctionitemsai_insert_getindex(v_result, v_auctionidx);
		IF 0 <> v_result THEN
			SET v_result = 105;
			LEAVE root;
        END IF;
    
		
		INSERT INTO tbl_auction_items (fld_index, fld_db_idx, fld_user_idx, fld_char_idx, fld_nick, fld_char_class
										, fld_item_name_id, fld_item_group, fld_item_group_sub
                                        , fld_item_idx, fld_skillbook_item_id, fld_skillbook_percent, fld_skillbook_lifetime, fld_skillbook_value
                                        , fld_sell_password, fld_register_date, fld_expire_date, fld_sell_price)
                                        
							VALUES(v_auctionidx, 1, p_UserID, p_CharID, p_NickName, 0
									, p_ItemNameID, p_ItemGroup, p_ItemSubGroup
                                    , p_ItemDBIdx, v_item_id, v_percent, v_life_time, v_value
                                    , p_PassWord, now(), date_add(now(), interval + 2 day), p_SellPrice);
                           
		IF 0 = ROW_COUNT() THEN
			SET v_result = 106;
			LEAVE root;
		END IF;

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;


	SELECT v_result, v_final_gold, v_auctionidx, v_item_id, v_percent, v_life_time, v_value;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_insert`(
	IN	_useridx 	BIGINT
, 	IN	_charidx 	BIGINT

, 	IN	_Itemid 	INT
, 	IN	_Percent 	INT
, 	IN	_LiftTime	INT
, 	IN	_Value 		INT
,	IN	_belong 	TINYINT
)
    COMMENT '스킬 북 지급'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE _result 			INT DEFAULT 0;

	DECLARE _itemDBIndex 		BIGINT DEFAULT 0;
	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result, _itemDBIndex;
	END;
        
	START TRANSACTION;	
	
	
    call sp_mmo_notrans_charinvenskillbook_insert(_useridx, _charidx, _Itemid, _Percent, _LiftTime, _Value, _belong, _result, _itemDBIndex);
		
	
	IF 0 = _result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;  
	
	
	SELECT _result, _itemDBIndex;		

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_insert_auctionbuy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_insert_auctionbuy`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,   IN 	_deccasha		BIGINT	
,	IN	_itemid 		INT
,	IN	_percent		INT
,	IN	_lifttime		INT
,	IN	_value 			INT
)
    COMMENT '무공비서 아이템 거래소에서 구매, char_inven_skillbook'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
   
    DECLARE v_itemDBIndex	BIGINT DEFAULT 0;
    DECLARE v_final_cashA	BIGINT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    
  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_cashA, v_itemDBIndex, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
	END;


	START TRANSACTION;
   
    root:
    BEGIN
 
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
 		
		CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deccasha, v_final_cashA, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
      
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;	
               
		
		CALL sp_mmo_notrans_charinvenskillbook_insert(_userid, _charid, _itemid, _percent, _lifttime, _value, 0, v_result, v_itemDBIndex);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;

	END;
	
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT v_result, v_final_cashA, v_itemDBIndex, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_insert_auctionbuy_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_insert_auctionbuy_c9`( 
	IN	p_UserID 		BIGINT
,   IN	p_CharID 		BIGINT
,   IN 	p_CostCashB		BIGINT	
,	IN	p_ItemID 		INT
,	IN	p_Percent		INT
,	IN	p_LifeTime		INT
,	IN	p_Value 		INT
)
    COMMENT '무공비서 아이템 거래소에서 구매, char_inven_skillbook'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
   
    DECLARE v_itemDBIndex	BIGINT DEFAULT 0;
    DECLARE v_final_cashB	BIGINT DEFAULT 0;
    
	DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;	
    
  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_cashB, v_itemDBIndex, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
	END;


	START TRANSACTION;
   
    root:
    BEGIN
 
		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_old, v_cashB_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
 		
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
      
		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_new, v_cashB_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;	
               
		
		CALL sp_mmo_notrans_charinvenskillbook_insert(p_UserID, p_CharID, p_ItemID, p_Percent, p_LifeTime, p_Value, 0, v_result, v_itemDBIndex);
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;

	END;
	
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT v_result, v_final_cashB, v_itemDBIndex, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_insert_auctionunregister` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_insert_auctionunregister`( 
	IN	_userid 		BIGINT
,   IN	_charid 		BIGINT
,	IN	_incgold		BIGINT

,	IN	_itemDBIndex	BIGINT
,	IN	_itemid 		INT
,	IN	_percent		INT
,	IN	_lifttime		INT
,	IN	_value 			INT
,	IN	_belong 		TINYINT
)
    COMMENT '무공비서 아이템 다시 넣기, char_inven_skillbook'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_gold	BIGINT DEFAULT 0;
   
  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;


	START TRANSACTION;
   
    root:
    BEGIN
        
		
        IF 0 < _incgold THEN
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _incgold, v_final_gold, v_result);
			SET v_result = 0;
		END IF;
        
		
		CALL sp_mmo_notrans_charinvenskillbook_insert_reenter(_userid, _charid, _itemDBIndex, _itemid, _percent, _lifttime, _value, _belong, v_result);
 
	END;
	
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 


	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_update_awarehouse_keep` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_update_awarehouse_keep`(
	IN _useridx 		BIGINT		
,	IN _itemDBIndex 	BIGINT		

)
    COMMENT '창고에 보관하기(무공비서 아이템)'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_warehouse_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
        
        
        
        
        UPDATE char_inven_skillbook
        SET char_idx = 0
        WHERE item_idx = _itemDBIndex AND user_idx = _useridx AND char_idx = _charidx;
        
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;
			
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_update_awarehouse_take` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_update_awarehouse_take`(
	IN _useridx 		BIGINT		
,	IN _charidx			BIGINT		
,	IN _itemDBIndex 	BIGINT		
)
    COMMENT '창고에서 찾기(무공비서 아이템)'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_item_inventory_qty	INT DEFAULT 0;	
    DECLARE v_item_equip_qty 		INT DEFAULT 0;	
    DECLARE v_item_count_qty 		INT DEFAULT 0;	
    DECLARE v_item_skillbook_qty 	INT DEFAULT 0;	
    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
        
        
        
        
        UPDATE char_inven_skillbook
        SET char_idx = _charidx
        WHERE item_idx = _itemDBIndex AND user_idx = _useridx and char_idx = 0;
        
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;

	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_update_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_update_equip`(
	IN	_charid 		BIGINT
,	IN	_itemidx		BIGINT		
,	IN	_skillid		INT			
,	IN	_equipitemidx	BIGINT		
)
    COMMENT '무공비서 아이템 착용'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE skillid 			INT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
			
		
		IF _skillid <= 0 THEN
			SET result = 101;	
			LEAVE root;			
        END IF;
        
		
        IF 0 < _equipitemidx THEN
			
			UPDATE char_inven_skillbook
			SET skill_id = 0
			WHERE char_idx = _charid AND skill_id = _skillid AND item_idx = _equipitemidx;		
			
			IF row_count() = 0 THEN
				SET result = 102;	
				LEAVE root;
			END IF;           
        ELSE    
			
			SELECT skill_id INTO skillid
            FROM char_inven_skillbook
			WHERE char_idx = _charid AND skill_id = _skillid;
			
			IF FOUND_ROWS() <> 0 THEN
				SET result = 103;	
				LEAVE root;
			END IF;
        END IF;
                
           
		
		UPDATE char_inven_skillbook
		SET skill_id = _skillid
		WHERE char_idx = _charid AND item_idx = _itemidx;
		
		IF row_count() = 0 THEN
			SET result = 104;	
			LEAVE root;
		END IF;

	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinvenskillbook_update_unequip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinvenskillbook_update_unequip`(
	IN	_charid 		BIGINT
,	IN	_itemidx		BIGINT		
)
    COMMENT '무공비서 아이템 착용 해제'
BEGIN
	DECLARE result INT DEFAULT 0;
    	   
	START TRANSACTION;
    
    root:
    BEGIN
			
		
		UPDATE char_inven_skillbook
		SET skill_id = 0
		WHERE char_idx = _charid AND item_idx = _itemidx;
		
		IF row_count() = 0 THEN
			SET result = 102;	
			LEAVE root;
		END IF;

	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinven_item_fusion_change` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinven_item_fusion_change`(
	IN	_useridx			BIGINT		
,	IN	_charidx			BIGINT

, 	IN 	_costGold			INT

, 	IN	_rlt_item_id1			INT
, 	IN	_rlt_item_id2			INT
, 	IN	_rlt_item_id3			INT
, 	IN	_rlt_item_id4			INT
, 	IN	_rlt_item_id5			INT
)
    COMMENT '연성공학 정보 변경하기'
BEGIN
    DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 0;
    
    DECLARE v_changecount 	INT 	DEFAULT 0;
    
    DECLARE v_finalgold			BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result, v_finalgold;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		SELECT change_count INTO v_changecount FROM char_item_fusion WHERE char_idx = _charidx;
		IF ROW_COUNT() <= 0 THEN -- 정보 부존재
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        CALL sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _costGold, v_finalgold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        SET v_changecount = v_changecount + 1;
        
        UPDATE char_item_fusion SET change_count = v_changecount,
								rlt_item_id1 = _rlt_item_id1,
								rlt_item_id2 = _rlt_item_id2,
								rlt_item_id3 = _rlt_item_id3,
								rlt_item_id4 = _rlt_item_id4,
								rlt_item_id5 = _rlt_item_id5,
								last_update_date = CURRENT_TIMESTAMP()
			WHERE char_idx = _charidx;

		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result, v_finalgold;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinven_item_fusion_regist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinven_item_fusion_regist`(
	IN	_useridx			BIGINT		
,	IN	_charidx			BIGINT

,	IN	_materialid			INT			
, 	IN	_materialcount		INT		

,	IN	p_EquipItemDBIdx1	BIGINT,	IN	p_EquipItemDBIdx2	BIGINT,	IN	p_EquipItemDBIdx3	BIGINT,	IN	p_EquipItemDBIdx4	BIGINT,	IN	p_EquipItemDBIdx5	BIGINT

, 	IN	_belong					TINYINT
, 	IN	_total_item_score		BIGINT
, 	IN	_spent_item_id1			INT
, 	IN	_spent_item1_enchant	TINYINT
, 	IN	_spent_item_id2			INT
, 	IN	_spent_item2_enchant	TINYINT
, 	IN	_spent_item_id3			INT
, 	IN	_spent_item3_enchant	TINYINT
, 	IN	_spent_item_id4			INT
, 	IN	_spent_item4_enchant	TINYINT
, 	IN	_spent_item_id5			INT
, 	IN	_spent_item5_enchant	TINYINT
-- , 	IN	_change_count
, 	IN	_rlt_item_id1			INT
, 	IN	_rlt_item_id2			INT
, 	IN	_rlt_item_id3			INT
, 	IN	_rlt_item_id4			INT
, 	IN	_rlt_item_id5			INT

)
    COMMENT '연성공학 등록아이템 확정'
BEGIN
    DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 0;
    
    DECLARE v_finalqty				INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		IF EXISTS(SELECT 1 FROM char_item_fusion WHERE char_idx = _charidx) THEN -- 정보 존재
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _materialid, _materialcount, v_finalqty, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
        IF 0 < p_EquipItemDBIdx1 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx2 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx3 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx4 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		IF 0 < p_EquipItemDBIdx5 THEN
			CALL sp_mmo_notrans_charinvenequip_delete(_charidx, p_EquipItemDBIdx5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        INSERT INTO char_item_fusion (`char_idx`,`belong`,`total_item_score`,`spent_item_id1`,`spent_item1_enchant`,
										`spent_item_id2`,`spent_item2_enchant`,`spent_item_id3`,`spent_item3_enchant`,
										`spent_item_id4`,`spent_item4_enchant`,`spent_item_id5`,`spent_item5_enchant`,
										`change_count`,
										`rlt_item_id1`,`rlt_item_id2`,`rlt_item_id3`,`rlt_item_id4`,`rlt_item_id5`,`last_update_date`)
			VALUES (_charidx, _belong, _total_item_score, _spent_item_id1, _spent_item1_enchant,
						_spent_item_id2, _spent_item2_enchant, _spent_item_id3, _spent_item3_enchant, _spent_item_id4, _spent_item4_enchant,
						_spent_item_id5, _spent_item5_enchant, 0, -- change_count,
						_rlt_item_id1, _rlt_item_id2, _rlt_item_id3, _rlt_item_id4, _rlt_item_id5, CURRENT_TIMESTAMP());

		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result, v_finalqty;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinven_item_fusion_result` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinven_item_fusion_result`(
	IN	_useridx			BIGINT		
,	IN	_charidx			BIGINT

,	IN _Itemid 			INT,		IN _Quality 		INT,	IN _EquipType 		INT
,	IN _AttrID 			INT,		IN _AttrValue 		INT,	IN _Belong			TINYINT,	IN _Identified			TINYINT
,	IN _SlotID1 		TINYINT,	IN _OptID1 			INT,	IN _OptValue1 		SMALLINT
,	IN _SlotID2 		TINYINT,	IN _OptID2 			INT,	IN _OptValue2 		SMALLINT
,	IN _SlotID3 		TINYINT,	IN _OptID3 			INT,	IN _OptValue3 		SMALLINT
,	IN _SlotID4 		TINYINT,	IN _OptID4 			INT,	IN _OptValue4 		SMALLINT
,	IN _SlotID5 		TINYINT,	IN _OptID5 			INT,	IN _OptValue5 		SMALLINT
,	IN _SlotID6 		TINYINT,	IN _OptID6 			INT,	IN _OptValue6 		SMALLINT
,	IN _SlotID7 		TINYINT,	IN _OptID7 			INT,	IN _OptValue7 		SMALLINT
)
    COMMENT '연성공학 최종 결과 선택'
BEGIN
    DECLARE v_errno 	INT 	DEFAULT 0;
	DECLARE v_result 	INT 	DEFAULT 0;
    
    DECLARE itemDBIndex 	BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		ROLLBACK;
				
		SELECT v_result, itemDBIndex;
	END;
    
    START TRANSACTION;

	root:
    BEGIN
    
		IF NOT EXISTS(SELECT 1 FROM char_item_fusion WHERE char_idx = _charidx) THEN -- 정보 부존재
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid, _Quality, _EquipType, _AttrID, _AttrValue,
				_SlotID1, _OptID1, _OptValue1, _SlotID2, _OptID2, _OptValue2, _SlotID3, _OptID3, _OptValue3,
				_SlotID4, _OptID4, _OptValue4, _SlotID5, _OptID5, _OptValue5, _SlotID6, _OptID6, _OptValue6,
				_SlotID7, _OptID7, _OptValue7, _Belong, _Identified, v_result, itemDBIndex);
			    
		IF v_result != 0 THEN
			LEAVE root;
		END IF;
        
        DELETE FROM char_item_fusion WHERE char_idx = _charidx;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102; -- // SQL 입력 실패
            LEAVE root;
		END IF;
	END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    SELECT v_result, itemDBIndex;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinven_item_fusion_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinven_item_fusion_select`(
	IN	_useridx			BIGINT		
,	IN	_charidx			BIGINT
)
    COMMENT '연성공학 정보 가져오기'
BEGIN
    
    SELECT belong, total_item_score,
		spent_item_id1, spent_item1_enchant,
		spent_item_id2, spent_item2_enchant,
		spent_item_id3, spent_item3_enchant,
		spent_item_id4, spent_item4_enchant,
		spent_item_id5, spent_item5_enchant,
		change_count,
		rlt_item_id1, rlt_item_id2, rlt_item_id3, rlt_item_id4, rlt_item_id5 -- , last_update_date`
	FROM char_item_fusion WHERE char_idx = _charidx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charinven_jewel_composite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charinven_jewel_composite`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

-- ,	IN  p_AvatarGrade 	TINYINT
-- ,	IN  p_AddFailCount	INT

-- ,	IN	p_AvatarConfirmDuration 		INT

,	IN	_arrayResItem 		VARCHAR(4096)	-- 합성재료 아이템
	
,	IN  p_RewardType 	TINYINT
,	IN	p_coreItemId1	INT,	IN	p_coreItemId2	INT,	IN	p_coreItemId3	INT,	IN	p_coreItemId4	INT,	IN	p_coreItemId5	INT
,	IN	p_coreItemId6	INT,	IN	p_coreItemId7	INT,	IN	p_coreItemId8	INT,	IN	p_coreItemId9	INT,	IN	p_coreItemId10	INT

-- ,	IN	p_AvatarId1	INT,	IN	p_AvatarId2	INT,	IN	p_AvatarId3	INT,	IN	p_AvatarId4	INT,	IN	p_AvatarId5	INT
-- ,	IN	p_AvatarId6	INT,	IN	p_AvatarId7	INT,	IN	p_AvatarId8	INT,	IN	p_AvatarId9	INT,	IN	p_AvatarId10	INT
)
    COMMENT '몬스터 코어 아이템 합성'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	# Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
                    CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
      
        -- 합성 결과
		IF 0 < p_coreItemId1 THEN
            CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;
      
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charlostexp_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charlostexp_select`( 
	IN 	p_UserID			BIGINT		
,	IN 	char_id 			BIGINT		
,	IN	max_count			INT
)
    COMMENT '경험치 소실 목록'
BEGIN

	DECLARE v_lostexp_restorefree	TINYINT DEFAULT 0;
	DECLARE v_DLRT					DATETIME;
    SET v_DLRT = fn_Get_DateLineReferenceTime();
    
	DELETE FROM char_lost_exp WHERE char_idx = char_id AND ((restored_time is not null AND restored_time < v_DLRT) OR now() > end_time);
    
    --
    -- SELECT COUNT(1) as lostexp_restorefree FROM char_lost_exp WHERE char_idx = char_id AND restored_type = 0 AND restored_time IS NOT NULL AND v_DLRT < restored_time;
    
    -- 
    SELECT lost_exp_idx, lost_exp, UNIX_TIMESTAMP(end_time) as end_time, need_gold, need_cash
	FROM char_lost_exp 
    WHERE char_idx = char_id AND restored_time is NULL -- AND 0 < TIMESTAMPDIFF(minute, now(), end_time)
    ORDER BY lost_exp_idx DESC LIMIT 0, max_count;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charmakeitemlimit_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charmakeitemlimit_select`(
	IN	p_charIdx	BIGINT	
)
    COMMENT '아이템 제작 횟수 얻기'
BEGIN

	SELECT makeitem_id, make_qty
	FROM char_makeitem_limit
	WHERE char_idx = p_charIdx;
    
    SELECT category_num, element_id
    FROM char_bookmark
    WHERE char_idx = p_charIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charpet_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charpet_insert`(
	IN 	_user_idx		BIGINT   
,	IN 	_char_idx		BIGINT   

,	IN 	_pet_id			INT
,	IN 	_pet_value		SMALLINT
-- ,	IN 	_equip			TINYINT

-- , 	IN 	_item_id		INT
-- , 	IN 	_use_count		INT
)
    COMMENT '펫 획득'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
    DECLARE _finalcount	INT DEFAULT 0;
    -- DECLARE _pet_idx	BIGINT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result, _finalcount;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		
        -- call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, _finalcount, _result);
        -- IF _result != 0 THEN 
        --     LEAVE root;
        -- END IF;
        
        SET _finalcount = @_finalcount := _pet_value;
        
        INSERT INTO user_pet(user_idx, pet_id, pet_level, pet_value)
			VALUES(_user_idx, _pet_id, 1, _pet_value)
            ON DUPLICATE KEY UPDATE pet_value = (@_finalcount := pet_value + _pet_value);
            
        IF ROW_COUNT() = 0 THEN 
			SET _result = 429;
            LEAVE root;
        END IF;
        
		SET _finalcount = @_finalcount;
        
        -- SET _pet_idx = LAST_INSERT_ID();    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
	SELECT _result, _finalcount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charpkhistory_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charpkhistory_insert`(
	IN	p_charIdx			BIGINT			
,	IN	p_pkType			TINYINT			
,	IN 	p_pPKCharIdx		BIGINT
,	IN	p_pkNick			VARCHAR(30)		
,	IN	p_pkGuildName		VARCHAR(50)
,	IN 	p_MaxPKCount		INT
,	IN 	p_PKHistoryKeepDay	INT
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
	DECLARE v_historyIdx	BIGINT DEFAULT 0;
    DECLARE v_delIdx		BIGINT DEFAULT 0;
    
    DECLARE v_useridx		BIGINT DEFAULT 0;
       
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_historyIdx;
	END; 
    
    
	START TRANSACTION;

	root:
	BEGIN

		
		INSERT INTO char_pk_history (char_idx, pk_type, pk_char_idx, pk_nick, pk_guildname)
		VALUES (p_charIdx, p_pkType, p_pPKCharIdx, p_pkNick, p_pkGuildName);
        
        IF ROW_COUNT() = 0 THEN
			SET v_result = 100;	
			LEAVE root;
        END IF;
		
		SET v_historyIdx := LAST_INSERT_ID();  
        
        -- RDT_PK_OCCUR			= 6,		// pk 발생 pkhistory_type
		SELECT user_idx INTO v_useridx FROM `char_info` WHERE `char_idx` = p_charIdx;
		IF FOUND_ROWS() > 0 THEN 
			INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
				VALUES (v_useridx, p_charIdx, 6, p_pkType)
			ON DUPLICATE KEY UPDATE type_id = 6, element_value = p_pkType;
		END IF;
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	    
	SELECT v_result, v_historyIdx;
    
    
	
    BEGIN
		SELECT history_idx INTO v_delIdx
		FROM char_pk_history 
		WHERE char_idx = p_charIdx
		ORDER BY history_idx DESC
		LIMIT p_MaxPKCount, 1;
		
		IF 0 < FOUND_ROWS() AND 0 < v_delIdx THEN
			DELETE FROM char_pk_history
			WHERE char_idx = p_charIdx AND (history_idx <= v_delIdx OR NOW() > DATE_ADD(regist_date, INTERVAL p_PKHistoryKeepDay DAY));
		END IF;
	END;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestdone_delete_dailyquest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestdone_delete_dailyquest`( 
	IN	_userid 		BIGINT
,   IN	_charidx 		BIGINT
,	IN 	_type 			TINYINT
,   IN	_questid1 		INT
,   IN	_questid2 		INT
,   IN	_questid3 		INT
,   IN	_questid4 		INT
,   IN	_questid5 		INT
,   IN	_questid6 		INT
,   IN	_questid7 		INT
,   IN	_questid8 		INT
,   IN	_questid9 		INT
,   IN	_questid10 		INT
)
    COMMENT '도전과제 완료 기록 삭제'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  v_result;
	END;    

	START TRANSACTION;
   
    root:
    BEGIN    
		
        DELETE FROM char_quest_done WHERE char_idx = _charidx AND quest_type = _type AND quest_id IN (_questid1, _questid2, _questid3, _questid4, _questid5, _questid6, _questid7, _questid8, _questid9, _questid10);
    
		IF ROW_COUNT() <= 0 THEN
			SET v_result = 100;
			LEAVE root;
		END IF;
	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestprogress_delete_archieve_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestprogress_delete_archieve_complete`(
	IN _useridx 				BIGINT
,	IN _charidx 				BIGINT

,	IN _achievementtype 		TINYINT
,	IN _achievementid 			INT

,	IN _addgold 		BIGINT
,	IN _addguildpoint 			INT

,	IN _Itemid1 		INT,		IN _Quality1	INT,		IN _EquipType1		INT
,	IN _AttrID1			INT,		IN _AttrValue1	INT,		IN _belong1			TINYINT,		IN _Identify1			TINYINT
,	IN _SlotID1_1		TINYINT, 	IN _OptID1_1	INT,		IN _OptValue1_1		SMALLINT
,	IN _SlotID1_2		TINYINT, 	IN _OptID1_2	INT,		IN _OptValue1_2		SMALLINT
,	IN _SlotID1_3		TINYINT, 	IN _OptID1_3	INT,		IN _OptValue1_3		SMALLINT
,	IN _SlotID1_4		TINYINT, 	IN _OptID1_4	INT,		IN _OptValue1_4		SMALLINT
,	IN _SlotID1_5		TINYINT, 	IN _OptID1_5	INT,		IN _OptValue1_5		SMALLINT
,	IN _SlotID1_6		TINYINT, 	IN _OptID1_6	INT,		IN _OptValue1_6		SMALLINT
,	IN _SlotID1_7		TINYINT, 	IN _OptID1_7	INT,		IN _OptValue1_7		SMALLINT
,	IN _Itemid2 		INT,		IN _Quality2	INT,		IN _EquipType2		INT
,	IN _AttrID2			INT,		IN _AttrValue2	INT,		IN _belong2			TINYINT,		IN _Identify2			TINYINT
,	IN _SlotID2_1		TINYINT, 	IN _OptID2_1	INT,		IN _OptValue2_1		SMALLINT
,	IN _SlotID2_2		TINYINT, 	IN _OptID2_2	INT,		IN _OptValue2_2		SMALLINT
,	IN _SlotID2_3		TINYINT, 	IN _OptID2_3	INT,		IN _OptValue2_3		SMALLINT
,	IN _SlotID2_4		TINYINT, 	IN _OptID2_4	INT,		IN _OptValue2_4		SMALLINT
,	IN _SlotID2_5		TINYINT, 	IN _OptID2_5	INT,		IN _OptValue2_5		SMALLINT
,	IN _SlotID2_6		TINYINT, 	IN _OptID2_6	INT,		IN _OptValue2_6		SMALLINT
,	IN _SlotID2_7		TINYINT, 	IN _OptID2_7	INT,		IN _OptValue2_7		SMALLINT
,	IN _Itemid3 		INT,		IN _Quality3	INT,		IN _EquipType3		INT
,	IN _AttrID3			INT,		IN _AttrValue3	INT,		IN _belong3			TINYINT,		IN _Identify3			TINYINT
,	IN _SlotID3_1		TINYINT, 	IN _OptID3_1	INT,		IN _OptValue3_1		SMALLINT
,	IN _SlotID3_2		TINYINT, 	IN _OptID3_2	INT,		IN _OptValue3_2		SMALLINT
,	IN _SlotID3_3		TINYINT, 	IN _OptID3_3	INT,		IN _OptValue3_3		SMALLINT
,	IN _SlotID3_4		TINYINT, 	IN _OptID3_4	INT,		IN _OptValue3_4		SMALLINT
,	IN _SlotID3_5		TINYINT, 	IN _OptID3_5	INT,		IN _OptValue3_5		SMALLINT
,	IN _SlotID3_6		TINYINT, 	IN _OptID3_6	INT,		IN _OptValue3_6		SMALLINT
,	IN _SlotID3_7		TINYINT, 	IN _OptID3_7	INT,		IN _OptValue3_7		SMALLINT

,	IN _type1		TINYINT,	IN _consumeItemid1	INT,		IN _amount1 		INT
,	IN _type2		TINYINT,	IN _consumeItemid2	INT,		IN _amount2 		INT
,	IN _type3		TINYINT,	IN _consumeItemid3	INT,		IN _amount3 		INT
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
	DECLARE v_final_gold	BIGINT DEFAULT 0;
    DECLARE v_final_guildpoint	INT DEFAULT 0;
    
    DECLARE v_itemDBIndex1	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex2	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex3	BIGINT DEFAULT 0;
    
	DECLARE v_consume_final_qty1		INT DEFAULT 0;
	DECLARE v_consume_final_qty2		INT DEFAULT 0;
	DECLARE v_consume_final_qty3		INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_gold, v_final_guildpoint, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;
	END;
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
		
		
		DELETE FROM char_quest_progress WHERE char_idx = _charidx AND quest_type = _achievementtype AND quest_id = _achievementid;
		
		
		INSERT INTO char_quest_done(`char_idx`, `quest_type`, `quest_id`, `quest_grade`, `reset_cnt`) 
		VALUES (_charidx, _achievementtype, _achievementid, 0, 0);
		IF 0 = ROW_COUNT() THEN
			SET v_result = 1000;
			LEAVE root;
		END IF;		
                
        
		-- SELECT char_type INTO v_chartype FROM char_info WHERE `char_idx` = _charidx;
        
		UPDATE char_info 
			SET char_gold = (@final_gold := char_gold + _addgold)
			WHERE char_idx = _charidx AND user_idx = _useridx;
			IF ROW_COUNT() = 0 THEN
					SET v_result = 104;	
			END IF;
        
        SET v_final_gold = @final_gold;
        
        --
        IF _addguildpoint > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_guildpoint(_charidx, _addguildpoint, v_final_guildpoint, v_result);		
			IF v_result != 0 THEN
				SET v_result = 106;
				LEAVE root;
			END IF;
        END IF;
        --
        
		IF _Itemid1 != 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid1, _Quality1, _EquipType1, _AttrID1, _AttrValue1,
				_SlotID1_1, _OptID1_1, _OptValue1_1, _SlotID1_2, _OptID1_2, _OptValue1_2, _SlotID1_3, _OptID1_3, _OptValue1_3,
				_SlotID1_4, _OptID1_4, _OptValue1_4, _SlotID1_5, _OptID1_5, _OptValue1_5, _SlotID1_6, _OptID1_6, _OptValue1_6,
				_SlotID1_7, _OptID1_7, _OptValue1_7, _belong1, _Identify1, v_result, v_itemDBIndex1);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _Itemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid2, _Quality2, _EquipType2, _AttrID2, _AttrValue2,
				_SlotID2_1, _OptID2_1, _OptValue2_1, _SlotID2_2, _OptID2_2, _OptValue2_2, _SlotID2_3, _OptID2_3, _OptValue2_3,
				_SlotID2_4, _OptID2_4, _OptValue2_4, _SlotID2_5, _OptID2_5, _OptValue2_5, _SlotID2_6, _OptID2_6, _OptValue2_6,
				_SlotID2_7, _OptID2_7, _OptValue2_7, _belong2, _Identify2, v_result, v_itemDBIndex2);
			
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _Itemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid3, _Quality3, _EquipType3, _AttrID3, _AttrValue3,
				_SlotID3_1, _OptID3_1, _OptValue3_1, _SlotID3_2, _OptID3_2, _OptValue3_2, _SlotID3_3, _OptID3_3, _OptValue3_3,
				_SlotID3_4, _OptID3_4, _OptValue3_4, _SlotID3_5, _OptID3_5, _OptValue3_5, _SlotID3_6, _OptID3_6, _OptValue3_6,
				_SlotID3_7, _OptID3_7, _OptValue3_7, _belong3, _Identify3, result, v_itemDBIndex3);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		
        
		IF _consumeItemid1 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type1, _consumeItemid1, _amount1, v_result, v_consume_final_qty1);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _consumeItemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type2, _consumeItemid2, _amount2, v_result, v_consume_final_qty2);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _consumeItemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type3, _consumeItemid3, _amount3, v_result, v_consume_final_qty3);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
        
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	    
	SELECT v_result, v_final_gold, v_final_guildpoint, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestprogress_delete_daily_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestprogress_delete_daily_complete`(
	IN _useridx 				BIGINT
,	IN _charidx 				BIGINT

,	IN _type 		TINYINT
,	IN _id 			INT

,	IN _addgold 		BIGINT
-- ,	IN _addguildpoint 			INT

,	IN _Itemid1 		INT,		IN _Quality1	INT,		IN _EquipType1		INT
,	IN _AttrID1			INT,		IN _AttrValue1	INT,		IN _belong1			TINYINT,		IN _Identify1			TINYINT
,	IN _SlotID1_1		TINYINT, 	IN _OptID1_1	INT,		IN _OptValue1_1		SMALLINT
,	IN _SlotID1_2		TINYINT, 	IN _OptID1_2	INT,		IN _OptValue1_2		SMALLINT
,	IN _SlotID1_3		TINYINT, 	IN _OptID1_3	INT,		IN _OptValue1_3		SMALLINT
,	IN _SlotID1_4		TINYINT, 	IN _OptID1_4	INT,		IN _OptValue1_4		SMALLINT
,	IN _SlotID1_5		TINYINT, 	IN _OptID1_5	INT,		IN _OptValue1_5		SMALLINT
,	IN _SlotID1_6		TINYINT, 	IN _OptID1_6	INT,		IN _OptValue1_6		SMALLINT
,	IN _SlotID1_7		TINYINT, 	IN _OptID1_7	INT,		IN _OptValue1_7		SMALLINT
,	IN _Itemid2 		INT,		IN _Quality2	INT,		IN _EquipType2		INT
,	IN _AttrID2			INT,		IN _AttrValue2	INT,		IN _belong2			TINYINT,		IN _Identify2			TINYINT
,	IN _SlotID2_1		TINYINT, 	IN _OptID2_1	INT,		IN _OptValue2_1		SMALLINT
,	IN _SlotID2_2		TINYINT, 	IN _OptID2_2	INT,		IN _OptValue2_2		SMALLINT
,	IN _SlotID2_3		TINYINT, 	IN _OptID2_3	INT,		IN _OptValue2_3		SMALLINT
,	IN _SlotID2_4		TINYINT, 	IN _OptID2_4	INT,		IN _OptValue2_4		SMALLINT
,	IN _SlotID2_5		TINYINT, 	IN _OptID2_5	INT,		IN _OptValue2_5		SMALLINT
,	IN _SlotID2_6		TINYINT, 	IN _OptID2_6	INT,		IN _OptValue2_6		SMALLINT
,	IN _SlotID2_7		TINYINT, 	IN _OptID2_7	INT,		IN _OptValue2_7		SMALLINT
,	IN _Itemid3 		INT,		IN _Quality3	INT,		IN _EquipType3		INT
,	IN _AttrID3			INT,		IN _AttrValue3	INT,		IN _belong3			TINYINT,		IN _Identify3			TINYINT
,	IN _SlotID3_1		TINYINT, 	IN _OptID3_1	INT,		IN _OptValue3_1		SMALLINT
,	IN _SlotID3_2		TINYINT, 	IN _OptID3_2	INT,		IN _OptValue3_2		SMALLINT
,	IN _SlotID3_3		TINYINT, 	IN _OptID3_3	INT,		IN _OptValue3_3		SMALLINT
,	IN _SlotID3_4		TINYINT, 	IN _OptID3_4	INT,		IN _OptValue3_4		SMALLINT
,	IN _SlotID3_5		TINYINT, 	IN _OptID3_5	INT,		IN _OptValue3_5		SMALLINT
,	IN _SlotID3_6		TINYINT, 	IN _OptID3_6	INT,		IN _OptValue3_6		SMALLINT
,	IN _SlotID3_7		TINYINT, 	IN _OptID3_7	INT,		IN _OptValue3_7		SMALLINT

,	IN _type1		TINYINT,	IN _consumeItemid1	INT,		IN _amount1 		INT
,	IN _type2		TINYINT,	IN _consumeItemid2	INT,		IN _amount2 		INT
,	IN _type3		TINYINT,	IN _consumeItemid3	INT,		IN _amount3 		INT
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
	DECLARE v_final_gold	BIGINT DEFAULT 0;
    -- DECLARE v_final_guildpoint	INT DEFAULT 0;
    
    DECLARE v_itemDBIndex1	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex2	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex3	BIGINT DEFAULT 0;
    
	DECLARE v_consume_final_qty1		INT DEFAULT 0;
	DECLARE v_consume_final_qty2		INT DEFAULT 0;
	DECLARE v_consume_final_qty3		INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_gold, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;
	END;
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		
		INSERT INTO char_quest_done(`char_idx`, `quest_type`, `quest_id`, `quest_grade`, `reset_cnt`, done_date) 
        SELECT char_idx, quest_type, quest_id, quest_grade, reset_cnt, quest_reg_date FROM char_quest_progress WHERE char_idx = _charidx AND quest_type = _type AND quest_id = _id;
		
        IF 0 = ROW_COUNT() THEN
			SET v_result = 1000;
			LEAVE root;
		END IF;		
		
		
		DELETE FROM char_quest_progress WHERE char_idx = _charidx AND quest_type = _type AND quest_id = _id;
		                
        
		-- SELECT char_type INTO v_chartype FROM char_info WHERE `char_idx` = _charidx;
        
		UPDATE char_info 
			SET char_gold = (@final_gold := char_gold + _addgold)
			WHERE char_idx = _charidx AND user_idx = _useridx;
			IF ROW_COUNT() = 0 THEN
					SET v_result = 104;	
			END IF;
        
        SET v_final_gold = @final_gold;
        
        --
        -- IF _addguildpoint > 0 THEN 		
		-- 	CALL sp_mmo_notrans_charinfo_insert_guildpoint(_charidx, _addguildpoint, v_final_guildpoint, v_result);		
		-- 	IF v_result != 0 THEN
		-- 		SET v_result = 106;
		-- 		LEAVE root;
		-- 	END IF;
        -- END IF;
        --
        
		IF _Itemid1 != 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid1, _Quality1, _EquipType1, _AttrID1, _AttrValue1,
				_SlotID1_1, _OptID1_1, _OptValue1_1, _SlotID1_2, _OptID1_2, _OptValue1_2, _SlotID1_3, _OptID1_3, _OptValue1_3,
				_SlotID1_4, _OptID1_4, _OptValue1_4, _SlotID1_5, _OptID1_5, _OptValue1_5, _SlotID1_6, _OptID1_6, _OptValue1_6,
				_SlotID1_7, _OptID1_7, _OptValue1_7, _belong1, _Identify1, v_result, v_itemDBIndex1);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _Itemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid2, _Quality2, _EquipType2, _AttrID2, _AttrValue2,
				_SlotID2_1, _OptID2_1, _OptValue2_1, _SlotID2_2, _OptID2_2, _OptValue2_2, _SlotID2_3, _OptID2_3, _OptValue2_3,
				_SlotID2_4, _OptID2_4, _OptValue2_4, _SlotID2_5, _OptID2_5, _OptValue2_5, _SlotID2_6, _OptID2_6, _OptValue2_6,
				_SlotID2_7, _OptID2_7, _OptValue2_7, _belong2, _Identify2, v_result, v_itemDBIndex2);
			
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _Itemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid3, _Quality3, _EquipType3, _AttrID3, _AttrValue3,
				_SlotID3_1, _OptID3_1, _OptValue3_1, _SlotID3_2, _OptID3_2, _OptValue3_2, _SlotID3_3, _OptID3_3, _OptValue3_3,
				_SlotID3_4, _OptID3_4, _OptValue3_4, _SlotID3_5, _OptID3_5, _OptValue3_5, _SlotID3_6, _OptID3_6, _OptValue3_6,
				_SlotID3_7, _OptID3_7, _OptValue3_7, _belong3, _Identify3, result, v_itemDBIndex3);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		
        
		IF _consumeItemid1 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type1, _consumeItemid1, _amount1, v_result, v_consume_final_qty1);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _consumeItemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type2, _consumeItemid2, _amount2, v_result, v_consume_final_qty2);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _consumeItemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type3, _consumeItemid3, _amount3, v_result, v_consume_final_qty3);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
        
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	    
	SELECT v_result, v_final_gold, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestprogress_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestprogress_insert`(
	IN	_userid 		BIGINT 
,	IN	_charid 		BIGINT
,	IN	_questtype 		TINYINT
,	IN	_questid 		INT
,	IN	_questvalue 	INT
,	IN	_questgrade 	TINYINT
,	IN	_resetcnt 		INT
)
    COMMENT '퀘스트 수락'
BEGIN
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;
		
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
		
		SELECT result;
	END;	
    
    root:
	BEGIN	
		
        IF EXISTS (SELECT * FROM char_quest_progress WHERE char_idx = _charid AND quest_type = _questtype AND quest_id = _questid) THEN 
			SET result = 103;
            LEAVE root;
		END IF;
    
		INSERT INTO char_quest_progress(`char_idx`, `quest_type`, `quest_id`, `quest_value`, `quest_grade`, `reset_cnt`) 
		VALUES (_charid, _questtype, _questid, _questvalue, _questgrade, _resetcnt);		
        
        IF ROW_COUNT() <= 0 THEN 
			SET result = 102;
            LEAVE root;
		END IF;
    END;
    
    SELECT result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestprogress_update_8` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestprogress_update_8`( 
	IN _userId 		BIGINT
,	IN _characterId BIGINT
,	IN _questId1 	INT
,	IN _questValue1 INT
,	IN _questId2 	INT
,	IN _questValue2 INT
,	IN _questId3 	INT
,	IN _questValue3 INT
,	IN _questId4 	INT
,	IN _questValue4 INT
,	IN _questId5 	INT
,	IN _questValue5 INT
,	IN _questId6 	INT
,	IN _questValue6 INT
,	IN _questId7 	INT
,	IN _questValue7 INT
,	IN _questId8 	INT
,	IN _questValue8 INT
)
    COMMENT '다수의 퀘스트 정보 갱신'
BEGIN
    DECLARE result INT;
    
    SET result = 0;
      
    root:
    BEGIN    
        IF _questId1 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId1, quest_value = _questValue1
			WHERE char_idx = _characterId AND quest_id = _questId1;
		END IF;	
		
        IF _questId2 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId2, quest_value = _questValue2
			WHERE char_idx = _characterId AND quest_id = _questId2;
		END IF;	
        IF _questId3 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId3, quest_value = _questValue3
			WHERE char_idx = _characterId AND quest_id = _questId3;
		END IF;	
        IF _questId4 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId4, quest_value = _questValue4
			WHERE char_idx = _characterId AND quest_id = _questId4;
		END IF;	
        IF _questId5 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId5, quest_value = _questValue5
			WHERE char_idx = _characterId AND quest_id = _questId5;
		END IF;	
        IF _questId6 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId6, quest_value = _questValue6
			WHERE char_idx = _characterId AND quest_id = _questId6;
		END IF;	
        IF _questId7 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId7, quest_value = _questValue7
			WHERE char_idx = _characterId AND quest_id = _questId7;
		END IF;	
        IF _questId8 > 0 THEN
			UPDATE char_quest_progress
			SET quest_id = _questId8, quest_value = _questValue8
			WHERE char_idx = _characterId AND quest_id = _questId8;
		END IF;	
		
	END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestprogress_update_archieve` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestprogress_update_archieve`( 
	IN	_userId BIGINT
, 	IN	_charId BIGINT
,	IN 	_type 		TINYINT
, 	IN	_questId1 INT,		IN	_questValue1 INT
, 	IN	_questId2 INT,		IN	_questValue2 INT
, 	IN	_questId3 INT,		IN	_questValue3 INT
, 	IN	_questId4 INT,		IN	_questValue4 INT
, 	IN	_questId5 INT,		IN	_questValue5 INT
, 	IN	_questId6 INT,		IN	_questValue6 INT
, 	IN	_questId7 INT,		IN	_questValue7 INT
, 	IN	_questId8 INT,		IN	_questValue8 INT
, 	IN	_questId9 INT,		IN	_questValue9 INT
, 	IN	_questId10 INT,		IN	_questValue10 INT
, 	IN	_questId11 INT,		IN	_questValue11 INT
, 	IN	_questId12 INT,		IN	_questValue12 INT
, 	IN	_questId13 INT,		IN	_questValue13 INT
, 	IN	_questId14 INT,		IN	_questValue14 INT
, 	IN	_questId15 INT,		IN	_questValue15 INT
, 	IN	_questId16 INT,		IN	_questValue16 INT
, 	IN	_questId17 INT,		IN	_questValue17 INT
, 	IN	_questId18 INT,		IN	_questValue18 INT
, 	IN	_questId19 INT,		IN	_questValue19 INT
, 	IN	_questId20 INT,		IN	_questValue20 INT
, 	IN	_questId21 INT,		IN	_questValue21 INT
, 	IN	_questId22 INT,		IN	_questValue22 INT
, 	IN	_questId23 INT,		IN	_questValue23 INT
, 	IN	_questId24 INT,		IN	_questValue24 INT
, 	IN	_questId25 INT,		IN	_questValue25 INT
, 	IN	_questId26 INT,		IN	_questValue26 INT
, 	IN	_questId27 INT,		IN	_questValue27 INT
, 	IN	_questId28 INT,		IN	_questValue28 INT
, 	IN	_questId29 INT,		IN	_questValue29 INT
, 	IN	_questId30 INT,		IN	_questValue30 INT
)
    COMMENT '업적 정보 갱신'
BEGIN
    DECLARE result INT;
    
    SET result = 0;
      
    root:
    BEGIN    
        IF _questId1 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId1) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId1, _questValue1, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue1;            
		END IF;	
		
        IF _questId2 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId2) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId2, _questValue2, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue2;
		END IF;	

        IF _questId3 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId3) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId3, _questValue3, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue3;			
		END IF;	

        IF _questId4 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId4) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId4, _questValue4, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue4;
		END IF;	

        IF _questId5 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId5) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId5, _questValue5, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue5;
		END IF;	

        IF _questId6 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId6) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId6, _questValue6, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue6;
		END IF;	

        IF _questId7 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId7) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId7, _questValue7, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue7;            
		END IF;	

        IF _questId8 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId8) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId8, _questValue8, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue8;
		END IF;	
		
        IF _questId9 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId9) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId9, _questValue9, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue9;
		END IF;	
        
		IF _questId10 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId10) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId10, _questValue10, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue10;
		END IF;	
 
		IF _questId11 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId11) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId11, _questValue11, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue11;
		END IF;	
 
        IF _questId12 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId12) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId12, _questValue12, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue12;
		END IF;	
		       
        IF _questId13 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId13) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId13, _questValue13, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue13;
		END IF;	
		
		IF _questId14 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId14) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId14, _questValue14, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue14;
		END IF;	

        IF _questId15 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId15) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId15, _questValue15, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue15;
		END IF;	

        IF _questId16 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId16) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId16, _questValue16, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue16;			
		END IF;	

        IF _questId17 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId17) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId17, _questValue17, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue17;
		END IF;	

        IF _questId18 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId18) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId18, _questValue18, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue18;            
		END IF;	

        IF _questId19 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId19) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId19, _questValue19, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue19;
		END IF;	

        IF _questId20 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId20) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId20, _questValue20, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue20;
		END IF;	
        
        IF _questId21 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId21) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId21, _questValue21, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue21;
		END IF;	
        
        IF _questId22 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId22) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId22, _questValue22, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue22;
		END IF;	
        
        IF _questId23 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId23) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId23, _questValue23, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue23;
		END IF;	
        
        IF _questId24 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId24) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId24, _questValue24, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue24;
		END IF;	
        
        IF _questId25 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId25) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId25, _questValue25, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue25;
		END IF;	
        
        IF _questId26 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId26) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId26, _questValue26, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue26;
		END IF;	
        
        IF _questId27 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId27) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId27, _questValue27, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue27;
		END IF;	
        
        IF _questId28 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId28) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId28, _questValue28, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue28;
		END IF;	
        
        IF _questId29 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId29) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId29, _questValue29, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue29;
		END IF;	
        
        IF _questId30 > 0 AND NOT EXISTS(SELECT 1 FROM char_quest_done WHERE char_idx = _charId AND quest_type = _type AND quest_id = _questId30) THEN
			insert into char_quest_progress(char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt) 
            values (_charId, _type, _questId30, _questValue30, 0, 0)
            ON DUPLICATE KEY UPDATE quest_value = _questValue30;
		END IF;	
        
	END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestprogress_update_grade3` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestprogress_update_grade3`(
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT
,	IN p_QuestType 		TINYINT
,	IN p_QuestID		INT
,	IN p_QuestGrade		TINYINT	
,	IN p_ResetCnt		INT		
,	IN p_UseGold		BIGINT	
,	IN p_UseCashA		BIGINT 	
,	IN p_UseCashB		BIGINT 	
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
    
    DECLARE v_final_gold	BIGINT DEFAULT 0;	
    DECLARE v_final_cashA	BIGINT DEFAULT 0;	
	DECLARE v_final_cashB	BIGINT DEFAULT 0;	
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_gold, v_final_cashA, v_final_cashB;
	END;	    
    

	START TRANSACTION;
	
	root:
	BEGIN    
	
		
		UPDATE char_quest_progress 
		SET quest_grade = p_QuestGrade, reset_cnt = p_ResetCnt 
		WHERE char_idx = p_CharID AND quest_type = p_QuestType AND quest_id = p_QuestID;
    
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 101;		
			LEAVE root;
		END IF;    

		
		IF 0 < p_UseGold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_UseGold, v_final_gold, v_result);
			IF v_result <> 0 THEN 
				SET v_result = 102;
				LEAVE root;
			END IF;     
		END IF;
        
        
        IF 0 < p_UseCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_UseCashA, v_final_cashA, v_result);    
			IF 0 <> v_result THEN
				SET v_result = 103;
				LEAVE root;
			END IF;        
        END IF;	

		
        IF 0 < p_UseCashB THEN
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_UseCashB, v_final_cashB, v_result);    
			IF 0 <> v_result THEN
				SET v_result = 104;
				LEAVE root;
			END IF;        
        END IF;

    END;

	IF 0 = v_result THEN
		COMMIT;		
	ELSE
		ROLLBACK;
	END IF;	
    
	select v_result, v_final_gold, v_final_cashA, v_final_cashB;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_delete`(
	IN	p_UserID		BIGINT		
,	IN 	p_CharID		BIGINT		
,	IN	p_QuestID		INT			
,	IN 	p_PartyScroll	INT 		
)
BEGIN	
	DECLARE _result INT DEFAULT 0;
    
    IF 0 < p_PartyScroll THEN
		
		DELETE FROM char_quest_scroll 
		WHERE user_idx = p_UserID and quest_id = p_QuestID and party_idx <> 0;
		
		IF ROW_COUNT() = 0 THEN 
			SET _result = 100;
		END IF;
	ELSE
		
		DELETE FROM char_quest_scroll 
		WHERE char_idx = p_CharID and quest_id = p_QuestID;
		
		IF ROW_COUNT() = 0 THEN 
			SET _result = 100;
		END IF;
	END IF;
    
	SELECT _result;
	 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_delete_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_delete_complete`(
	IN	_useridx 	BIGINT	
,	IN	_charidx 	BIGINT 	
,	IN 	_chartype	INT		
,	IN	_questType 	INT,		IN	_partyidx 	BIGINT,	IN	_questid 		INT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT

,	IN _Itemid1 		INT,		IN _Quality1	INT,		IN _EquipType1		INT
,	IN _AttrID1			INT,		IN _AttrValue1	INT,		IN _belong1			TINYINT,		IN _Identify1			TINYINT
,	IN _SlotID1_1		TINYINT, 	IN _OptID1_1	INT,		IN _OptValue1_1		SMALLINT
,	IN _SlotID1_2		TINYINT, 	IN _OptID1_2	INT,		IN _OptValue1_2		SMALLINT
,	IN _SlotID1_3		TINYINT, 	IN _OptID1_3	INT,		IN _OptValue1_3		SMALLINT
,	IN _SlotID1_4		TINYINT, 	IN _OptID1_4	INT,		IN _OptValue1_4		SMALLINT
,	IN _SlotID1_5		TINYINT, 	IN _OptID1_5	INT,		IN _OptValue1_5		SMALLINT
,	IN _SlotID1_6		TINYINT, 	IN _OptID1_6	INT,		IN _OptValue1_6		SMALLINT
,	IN _SlotID1_7		TINYINT, 	IN _OptID1_7	INT,		IN _OptValue1_7		SMALLINT
,	IN _Itemid2 		INT,		IN _Quality2	INT,		IN _EquipType2		INT
,	IN _AttrID2			INT,		IN _AttrValue2	INT,		IN _belong2			TINYINT,		IN _Identify2			TINYINT
,	IN _SlotID2_1		TINYINT, 	IN _OptID2_1	INT,		IN _OptValue2_1		SMALLINT
,	IN _SlotID2_2		TINYINT, 	IN _OptID2_2	INT,		IN _OptValue2_2		SMALLINT
,	IN _SlotID2_3		TINYINT, 	IN _OptID2_3	INT,		IN _OptValue2_3		SMALLINT
,	IN _SlotID2_4		TINYINT, 	IN _OptID2_4	INT,		IN _OptValue2_4		SMALLINT
,	IN _SlotID2_5		TINYINT, 	IN _OptID2_5	INT,		IN _OptValue2_5		SMALLINT
,	IN _SlotID2_6		TINYINT, 	IN _OptID2_6	INT,		IN _OptValue2_6		SMALLINT
,	IN _SlotID2_7		TINYINT, 	IN _OptID2_7	INT,		IN _OptValue2_7		SMALLINT
,	IN _Itemid3 		INT,		IN _Quality3	INT,		IN _EquipType3		INT
,	IN _AttrID3			INT,		IN _AttrValue3	INT,		IN _belong3			TINYINT,		IN _Identify3			TINYINT
,	IN _SlotID3_1		TINYINT, 	IN _OptID3_1	INT,		IN _OptValue3_1		SMALLINT
,	IN _SlotID3_2		TINYINT, 	IN _OptID3_2	INT,		IN _OptValue3_2		SMALLINT
,	IN _SlotID3_3		TINYINT, 	IN _OptID3_3	INT,		IN _OptValue3_3		SMALLINT
,	IN _SlotID3_4		TINYINT, 	IN _OptID3_4	INT,		IN _OptValue3_4		SMALLINT
,	IN _SlotID3_5		TINYINT, 	IN _OptID3_5	INT,		IN _OptValue3_5		SMALLINT
,	IN _SlotID3_6		TINYINT, 	IN _OptID3_6	INT,		IN _OptValue3_6		SMALLINT
,	IN _SlotID3_7		TINYINT, 	IN _OptID3_7	INT,		IN _OptValue3_7		SMALLINT

,	IN _type1		TINYINT,	IN _consumeItemid1	INT,		IN _amount1 		INT
,	IN _type2		TINYINT,	IN _consumeItemid2	INT,		IN _amount2 		INT
,	IN _type3		TINYINT,	IN _consumeItemid3	INT,		IN _amount3 		INT
)
    COMMENT '스크롤 퀘스트 완료처리'
BEGIN
	DECLARE _nick VARCHAR(30) DEFAULT '';
	DECLARE _charid INT DEFAULT _chartype;
	
    DECLARE v_final_exp		BIGINT DEFAULT 0;
    DECLARE v_final_gold	BIGINT DEFAULT 0;
    
    DECLARE v_itemDBIndex1	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex2	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex3	BIGINT DEFAULT 0;
    
	DECLARE v_consume_final_qty1		INT DEFAULT 0;
	DECLARE v_consume_final_qty2		INT DEFAULT 0;
	DECLARE v_consume_final_qty3		INT DEFAULT 0;
    
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE result 			INT DEFAULT 0;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
		
		SELECT result, v_final_exp, v_final_gold, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;
	END; 

	START TRANSACTION;
	
    root:
	BEGIN
		
	SELECT char_type INTO _charid FROM char_info WHERE `char_idx` = _charidx;
	
    IF _questType = 5 THEN
		DELETE FROM char_quest_scroll WHERE user_idx = _useridx AND party_idx = _partyidx AND quest_id = _questid;
    ELSE
		DELETE FROM `char_quest_scroll` WHERE `char_idx` = _charidx AND `quest_id` = _questid;
    END IF;
	
	IF ROW_COUNT() != 0 THEN 
	BEGIN				
		UPDATE char_info 
			SET char_exp = (@final_exp := char_exp + _addexp), 
				char_gold = (@final_gold := char_gold + _addgold),
				char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
			WHERE char_idx = _charidx AND user_idx = _useridx;
			IF ROW_COUNT() = 0 THEN
					SET result = 104;	
			END IF;
        
        SET v_final_exp = @final_exp;
        SET v_final_gold = @final_gold;
        
		IF _Itemid1 != 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid1, _Quality1, _EquipType1, _AttrID1, _AttrValue1,
				_SlotID1_1, _OptID1_1, _OptValue1_1, _SlotID1_2, _OptID1_2, _OptValue1_2, _SlotID1_3, _OptID1_3, _OptValue1_3,
				_SlotID1_4, _OptID1_4, _OptValue1_4, _SlotID1_5, _OptID1_5, _OptValue1_5, _SlotID1_6, _OptID1_6, _OptValue1_6,
				_SlotID1_7, _OptID1_7, _OptValue1_7, _belong1, _Identify1, result, v_itemDBIndex1);
				
			IF 0 <> result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _Itemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid2, _Quality2, _EquipType2, _AttrID2, _AttrValue2,
				_SlotID2_1, _OptID2_1, _OptValue2_1, _SlotID2_2, _OptID2_2, _OptValue2_2, _SlotID2_3, _OptID2_3, _OptValue2_3,
				_SlotID2_4, _OptID2_4, _OptValue2_4, _SlotID2_5, _OptID2_5, _OptValue2_5, _SlotID2_6, _OptID2_6, _OptValue2_6,
				_SlotID2_7, _OptID2_7, _OptValue2_7, _belong2, _Identify2, result, v_itemDBIndex2);
			
			IF 0 <> result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _Itemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(_useridx, _charidx, _Itemid3, _Quality3, _EquipType3, _AttrID3, _AttrValue3,
				_SlotID3_1, _OptID3_1, _OptValue3_1, _SlotID3_2, _OptID3_2, _OptValue3_2, _SlotID3_3, _OptID3_3, _OptValue3_3,
				_SlotID3_4, _OptID3_4, _OptValue3_4, _SlotID3_5, _OptID3_5, _OptValue3_5, _SlotID3_6, _OptID3_6, _OptValue3_6,
				_SlotID3_7, _OptID3_7, _OptValue3_7, _belong3, _Identify3, result, v_itemDBIndex3);
				
			IF 0 <> result THEN
				LEAVE root;
			END IF;	
		END IF;		
		
        
		IF _consumeItemid1 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type1, _consumeItemid1, _amount1, result, v_consume_final_qty1);
			IF 0 <> result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _consumeItemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type2, _consumeItemid2, _amount2, result, v_consume_final_qty2);
			IF 0 <> result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _consumeItemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _useridx, _charidx, _type3, _consumeItemid3, _amount3, result, v_consume_final_qty3);
			IF 0 <> result THEN
				LEAVE root;
			END IF;	
		END IF;	
        
	END;
	ELSE
		IF ROW_COUNT() <= 0 THEN 
			SET result = 100;
		END IF;
	END IF;	
	END;
	
	
	IF result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
    SELECT result, v_final_exp, v_final_gold, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_delete_party` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_delete_party`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT 
,	IN	_partyidx 		BIGINT 
,	IN	_questid 		INT
)
    COMMENT '스크롤 퀘스트 삭제'
BEGIN
	DECLARE charidx BIGINT DEFAULT 0;
    
    DECLARE v_errno	INT DEFAULT 0;
	DECLARE _result INT DEFAULT 0;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		
		SELECT _result;
	END; 
	
	IF _charid <= 0 THEN 
	BEGIN
		SELECT `char_idx` INTO charidx FROM `char_quest_scroll` WHERE user_idx = _userid AND `party_idx` = _partyidx AND `quest_id` = _questid;
		
		SET _charid = charidx;
	END;
	END IF;
    
	IF _charid > 0 THEN
		DELETE FROM char_quest_scroll WHERE `char_idx` = _charid AND `party_idx` = _partyidx AND `quest_id` = _questid;
	END IF;
    
    SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_delete_party_offuser` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_delete_party_offuser`(
	IN	_userid 		BIGINT
,	IN	_partyidx 		BIGINT

)
    COMMENT '파티원 스크롤 퀘스트 삭제.'
BEGIN	
 
    DECLARE v_errno	INT DEFAULT 0;
	DECLARE _result INT DEFAULT 0;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		
		SELECT _result;
	END;

	DELETE FROM char_quest_scroll WHERE `user_idx` = _userid AND `party_idx` = _partyidx;	

	SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_insert`(
	IN _userid 		BIGINT
,	IN _charid 		BIGINT
,	IN _partyidx 	BIGINT
,	IN _questid 	INT
,	IN _questvalue 	INT
)
    COMMENT '스크롤 퀘스트 추가'
BEGIN

	DECLARE v_errno INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
				
		SELECT _result;
	END;	

	root:
    BEGIN
    
		
        IF EXISTS (SELECT * FROM char_quest_scroll WHERE char_idx = _charid AND quest_id = _questid AND party_idx = _partyidx) THEN 
			SET _result = 102;
            LEAVE root;
		END IF;

		INSERT INTO `char_quest_scroll`(`char_idx`,`user_idx`,`party_idx`,`quest_id`,`quest_value`)
		VALUES (_charid, _userid, _partyidx, _questid, _questvalue);
        
		IF ROW_COUNT() <= 0 THEN 
			SET _result = 101;
            LEAVE root;
		END IF;
    END;
    
	SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_select_party_exsits` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_select_party_exsits`(
	IN _userid 		BIGINT
,	IN _charid 		BIGINT
)
    COMMENT '파티 스크롤 퀘스트 존재여부 확인'
BEGIN

	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
				
		SELECT _result;
	END;	

	root:
    BEGIN
    
		
        IF EXISTS (SELECT * FROM char_quest_scroll WHERE char_idx = _charid AND party_idx > 0) THEN 
			SET _result = 102;
            LEAVE root;
		END IF;
        
    END;
    
	SELECT _result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquestscroll_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquestscroll_update`(
	IN	_userid 		BIGINT 
,	IN	_charid 		BIGINT 
,	IN 	_partyidx 		BIGINT
,	IN	_questtype 		INT
,	IN	_questid 		INT
,	IN	_questvalue 	INT
)
    COMMENT '스크롤 퀘스트 업데이트'
BEGIN
	DECLARE char_id BIGINT DEFAULT 0;
	
    IF _questtype = 5 THEN
		
		UPDATE char_quest_scroll SET quest_value = _questvalue WHERE user_idx = _userid AND quest_id = _questid;
    ELSE    
		
		IF _charid > 0 THEN
			UPDATE char_quest_scroll SET quest_value = _questvalue WHERE char_idx = _charid AND quest_id = _questid;
		END IF;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquest_update_dailyquest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquest_update_dailyquest`( 
	IN	_userid 		BIGINT
,   IN	_charidx 		BIGINT
,	IN 	_type 			TINYINT
,   IN	_questid1 		INT
,   IN	_questvalue1	INT
,   IN	_questdate1 	BIGINT
,   IN	_questid2 		INT
,   IN	_questvalue2	INT
,   IN	_questdate2 	BIGINT
,   IN	_questid3 		INT
,   IN	_questvalue3	INT
,   IN	_questdate3 	BIGINT
,   IN	_questid4 		INT
,   IN	_questvalue4	INT
,   IN	_questdate4 	BIGINT
,   IN	_questid5 		INT
,   IN	_questvalue5	INT
,   IN	_questdate5 	BIGINT
,   IN	_questid6 		INT
,   IN	_questvalue6	INT
,   IN	_questdate6 	BIGINT
,   IN	_questid7 		INT
,   IN	_questvalue7	INT
,   IN	_questdate7 	BIGINT
,   IN	_questid8 		INT
,   IN	_questvalue8	INT
,   IN	_questdate8 	BIGINT
,   IN	_questid9 		INT
,   IN	_questvalue9	INT
,   IN	_questdate9 	BIGINT
,   IN	_questid10 		INT
,   IN	_questvalue10	INT
,   IN	_questdate10 	BIGINT
)
    COMMENT '도전과제 업데이트'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT  v_result;
	END;    

	START TRANSACTION;
   
    root:
    BEGIN
		
		IF _questid1 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid1, _questvalue1, 0, 0, FROM_UNIXTIME(_questdate1))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue1, quest_reg_date = FROM_UNIXTIME(_questdate1);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 100;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid2 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid2, _questvalue2, 0, 0, FROM_UNIXTIME(_questdate2))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue2, quest_reg_date = FROM_UNIXTIME(_questdate2);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 101;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid3 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid3, _questvalue3, 0, 0, FROM_UNIXTIME(_questdate3))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue3, quest_reg_date = FROM_UNIXTIME(_questdate3);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 102;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid4 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid4, _questvalue4, 0, 0, FROM_UNIXTIME(_questdate4))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue4, quest_reg_date = FROM_UNIXTIME(_questdate4);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 103;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid5 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid5, _questvalue5, 0, 0, FROM_UNIXTIME(_questdate5))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue5, quest_reg_date = FROM_UNIXTIME(_questdate5);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 104;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid6 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid6, _questvalue6, 0, 0, FROM_UNIXTIME(_questdate6))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue6, quest_reg_date = FROM_UNIXTIME(_questdate6);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 105;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid7 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid7, _questvalue7, 0, 0, FROM_UNIXTIME(_questdate7))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue7, quest_reg_date = FROM_UNIXTIME(_questdate7);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 106;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid8 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid8, _questvalue8, 0, 0, FROM_UNIXTIME(_questdate8))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue8, quest_reg_date = FROM_UNIXTIME(_questdate8);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 107;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid9 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid9, _questvalue9, 0, 0, FROM_UNIXTIME(_questdate9))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue9, quest_reg_date = FROM_UNIXTIME(_questdate9);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 108;
				LEAVE root;
            END IF;
        END IF;
        
        IF _questid10 > 0 THEN 
			INSERT INTO char_quest_progress (char_idx, quest_type, quest_id, quest_value, quest_grade, reset_cnt, quest_reg_date)
            VALUES (_charidx, _type, _questid10, _questvalue10, 0, 0, FROM_UNIXTIME(_questdate10))
            ON DUPLICATE KEY UPDATE quest_value = _questvalue10, quest_reg_date = FROM_UNIXTIME(_questdate10);
            
            IF ROW_COUNT() <= 0 THEN
				SET v_result = 109;
				LEAVE root;
            END IF;
        END IF;
        
	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquest_update_questcomplete2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquest_update_questcomplete2`(
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT
,	IN p_AddGold 		BIGINT	
,	IN p_AddExp			BIGINT	
, 	IN p_AddCashA		BIGINT 	
, 	IN p_AddCashB		BIGINT	

,	IN p_DelQuestItemID		INT

,	IN p_QuestType		TINYINT
,	IN p_QuestID 		INT
,	IN p_QuestValue 	INT
,	IN p_QuestGrade		TINYINT
,	IN p_ResetCnt		INT

,	IN p_AddQuestType	TINYINT
,	IN p_AddQuestID		INT
,	IN p_AddQuestValue	INT
,	IN p_AddQuestGrade	TINYINT
,	IN p_AddResetCnt	INT

,	IN _Itemid1 		INT,		IN _Quality1	INT,		IN _EquipType1		INT
,	IN _AttrID1			INT,		IN _AttrValue1	INT,		IN _belong1			TINYINT,		IN _Identify1			TINYINT
,	IN _SlotID1_1		TINYINT, 	IN _OptID1_1	INT,		IN _OptValue1_1		SMALLINT
,	IN _SlotID1_2		TINYINT, 	IN _OptID1_2	INT,		IN _OptValue1_2		SMALLINT
,	IN _SlotID1_3		TINYINT, 	IN _OptID1_3	INT,		IN _OptValue1_3		SMALLINT
,	IN _SlotID1_4		TINYINT, 	IN _OptID1_4	INT,		IN _OptValue1_4		SMALLINT
,	IN _SlotID1_5		TINYINT, 	IN _OptID1_5	INT,		IN _OptValue1_5		SMALLINT
,	IN _SlotID1_6		TINYINT, 	IN _OptID1_6	INT,		IN _OptValue1_6		SMALLINT
,	IN _SlotID1_7		TINYINT, 	IN _OptID1_7	INT,		IN _OptValue1_7		SMALLINT
,	IN _Itemid2 		INT,		IN _Quality2	INT,		IN _EquipType2		INT
,	IN _AttrID2			INT,		IN _AttrValue2	INT,		IN _belong2			TINYINT,		IN _Identify2			TINYINT
,	IN _SlotID2_1		TINYINT, 	IN _OptID2_1	INT,		IN _OptValue2_1		SMALLINT
,	IN _SlotID2_2		TINYINT, 	IN _OptID2_2	INT,		IN _OptValue2_2		SMALLINT
,	IN _SlotID2_3		TINYINT, 	IN _OptID2_3	INT,		IN _OptValue2_3		SMALLINT
,	IN _SlotID2_4		TINYINT, 	IN _OptID2_4	INT,		IN _OptValue2_4		SMALLINT
,	IN _SlotID2_5		TINYINT, 	IN _OptID2_5	INT,		IN _OptValue2_5		SMALLINT
,	IN _SlotID2_6		TINYINT, 	IN _OptID2_6	INT,		IN _OptValue2_6		SMALLINT
,	IN _SlotID2_7		TINYINT, 	IN _OptID2_7	INT,		IN _OptValue2_7		SMALLINT
,	IN _Itemid3 		INT,		IN _Quality3	INT,		IN _EquipType3		INT
,	IN _AttrID3			INT,		IN _AttrValue3	INT,		IN _belong3			TINYINT,		IN _Identify3			TINYINT
,	IN _SlotID3_1		TINYINT, 	IN _OptID3_1	INT,		IN _OptValue3_1		SMALLINT
,	IN _SlotID3_2		TINYINT, 	IN _OptID3_2	INT,		IN _OptValue3_2		SMALLINT
,	IN _SlotID3_3		TINYINT, 	IN _OptID3_3	INT,		IN _OptValue3_3		SMALLINT
,	IN _SlotID3_4		TINYINT, 	IN _OptID3_4	INT,		IN _OptValue3_4		SMALLINT
,	IN _SlotID3_5		TINYINT, 	IN _OptID3_5	INT,		IN _OptValue3_5		SMALLINT
,	IN _SlotID3_6		TINYINT, 	IN _OptID3_6	INT,		IN _OptValue3_6		SMALLINT
,	IN _SlotID3_7		TINYINT, 	IN _OptID3_7	INT,		IN _OptValue3_7		SMALLINT

,	IN _type1		TINYINT,	IN _consumeItemid1	INT,		IN _amount1 		INT
,	IN _type2		TINYINT,	IN _consumeItemid2	INT,		IN _amount2 		INT
,	IN _type3		TINYINT,	IN _consumeItemid3	INT,		IN _amount3 		INT
)
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
	DECLARE v_itemDBIndex1	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex2	BIGINT DEFAULT 0;
	DECLARE v_itemDBIndex3	BIGINT DEFAULT 0;
    
	DECLARE v_consume_final_qty1		INT DEFAULT 0;
	DECLARE v_consume_final_qty2		INT DEFAULT 0;
	DECLARE v_consume_final_qty3		INT DEFAULT 0;
	
    DECLARE v_final_exp		BIGINT DEFAULT 0;	
    DECLARE v_final_gold	BIGINT DEFAULT 0;	
    DECLARE v_final_cashA	BIGINT DEFAULT 0;	
    DECLARE v_final_cashB	BIGINT DEFAULT 0;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_exp, v_final_gold, v_final_cashA, v_final_cashB, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;
	END;         
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
		
        
		CALL sp_mmo_notrans_charinfo_insert_expgold(p_UserID, p_CharID, p_AddExp, p_AddGold, v_final_exp, v_final_gold, v_result);
		IF v_result != 0 THEN
			LEAVE root;
		END IF;
        
        
        IF 0 < p_AddCashA THEN
			CALL sp_mmo_notrans_userinfo_insert_cashA(p_UserID, p_AddCashA, v_final_cashA, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;	
        END IF;
        
        
        IF 0 < p_AddCashB THEN
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, p_AddCashB, v_final_cashB, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;        
        END IF;

		
		DELETE FROM char_quest_progress WHERE char_idx = p_CharID AND quest_type = p_QuestType AND quest_id = p_QuestID;
		IF 0 = ROW_COUNT() THEN
			SET v_result = 102;
			LEAVE root;
		END IF;		
		
		
		INSERT INTO char_quest_done(`char_idx`, `quest_type`, `quest_id`, `quest_grade`, `reset_cnt`) 
		VALUES (p_CharID, p_QuestType, p_QuestID, p_QuestGrade, p_ResetCnt);
		IF 0 = ROW_COUNT() THEN
			SET v_result = 103;
			LEAVE root;
		END IF;		
		
        
		IF p_AddQuestID != 0 THEN 
			INSERT INTO char_quest_progress(`char_idx`, `quest_type`, `quest_id`, `quest_value`, `quest_grade`, `reset_cnt`) 
			VALUES (p_CharID, p_AddQuestType, p_AddQuestID, p_AddQuestValue, p_AddQuestGrade, p_AddResetCnt);		 
			
			IF 0 = ROW_COUNT() THEN
				SET v_result = 104;
				LEAVE root;
			END IF;		
		END IF;
		
		-- p_DelQuestItemID
        IF p_DelQuestItemID != 0 THEN
			DELETE FROM char_inven_item WHERE char_idx = p_CharID AND item_id = p_DelQuestItemID;
			
		-- 	IF 0 = ROW_COUNT() THEN
		-- 		SET v_result = 105;
		-- 		LEAVE root;
		-- 	END IF;		
		END IF;
		
        
		IF _Itemid1 != 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(p_UserID, p_CharID, _Itemid1, _Quality1, _EquipType1, _AttrID1, _AttrValue1,
				_SlotID1_1, _OptID1_1, _OptValue1_1, _SlotID1_2, _OptID1_2, _OptValue1_2, _SlotID1_3, _OptID1_3, _OptValue1_3,
				_SlotID1_4, _OptID1_4, _OptValue1_4, _SlotID1_5, _OptID1_5, _OptValue1_5, _SlotID1_6, _OptID1_6, _OptValue1_6,
				_SlotID1_7, _OptID1_7, _OptValue1_7, _belong1, _Identify1, v_result, v_itemDBIndex1);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _Itemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(p_UserID, p_CharID, _Itemid2, _Quality2, _EquipType2, _AttrID2, _AttrValue2,
				_SlotID2_1, _OptID2_1, _OptValue2_1, _SlotID2_2, _OptID2_2, _OptValue2_2, _SlotID2_3, _OptID2_3, _OptValue2_3,
				_SlotID2_4, _OptID2_4, _OptValue2_4, _SlotID2_5, _OptID2_5, _OptValue2_5, _SlotID2_6, _OptID2_6, _OptValue2_6,
				_SlotID2_7, _OptID2_7, _OptValue2_7, _belong2, _Identify2, v_result, v_itemDBIndex2);
			
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _Itemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenequip_insert(p_UserID, p_CharID, _Itemid3, _Quality3, _EquipType3, _AttrID3, _AttrValue3,
				_SlotID3_1, _OptID3_1, _OptValue3_1, _SlotID3_2, _OptID3_2, _OptValue3_2, _SlotID3_3, _OptID3_3, _OptValue3_3,
				_SlotID3_4, _OptID3_4, _OptValue3_4, _SlotID3_5, _OptID3_5, _OptValue3_5, _SlotID3_6, _OptID3_6, _OptValue3_6,
				_SlotID3_7, _OptID3_7, _OptValue3_7, _belong3, _Identify3, v_result, v_itemDBIndex3);
				
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		
        
		IF _consumeItemid1 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, _type1, _consumeItemid1, _amount1, v_result, v_consume_final_qty1);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;		
		IF _consumeItemid2 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, _type2, _consumeItemid2, _amount2, v_result, v_consume_final_qty2);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;
		IF _consumeItemid3 <> 0 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, _type3, _consumeItemid3, _amount3, v_result, v_consume_final_qty3);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;	
		END IF;	
	END;
		    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
	SELECT v_result, v_final_exp, v_final_gold, v_final_cashA, v_final_cashB, v_itemDBIndex1, v_itemDBIndex2, v_itemDBIndex3;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquickuse_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquickuse_update`(
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
,	IN	_set_num		TINYINT
, 	IN	_slot 			INT
,	IN	_is_skill_flag	TINYINT
,	IN	_is_auto_flag	TINYINT
, 	IN	_itemid			INT
, 	IN	_cooltime		BIGINT
)
    COMMENT '퀵슬롯 업데이트'
BEGIN
    DECLARE result INT;
    SET result = 0;
	
	INSERT INTO char_quick_use (char_idx, set_num, quick_use_type, is_skill_flag, is_auto_flag, item_id, slot_cooltime)
	VALUES (_charid, _set_num, _slot, _is_skill_flag, _is_auto_flag, _itemid, _cooltime)
	ON DUPLICATE KEY UPDATE is_skill_flag = _is_skill_flag, is_auto_flag = _is_auto_flag, item_id = _itemid, slot_cooltime = _cooltime;

	IF row_count() = 0 THEN
		SET result = 101;	
	END IF;

	SELECT result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charquickuse_update_cooltime_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charquickuse_update_cooltime_init`(
 	IN	_charid 		BIGINT
)
    COMMENT '퀵슬롯 쿨타임 초기화'
BEGIN
    
    DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	
    
    UPDATE char_quick_use SET slot_cooltime = unix_timestamp(now()) WHERE char_idx = _charid;
    
    SELECT _result;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charraidplaycnt_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charraidplaycnt_select`( 
	IN p_CharID 		BIGINT		
)
    COMMENT '레이드 플레이 횟수 얻기'
BEGIN
	
    SELECT indun_id, play_cnt, UNIX_TIMESTAMP(play_time) AS play_time
    FROM char_raid_play_cnt
    WHERE char_idx = p_CharID AND 0 = DATEDIFF(NOW(), play_time);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charraidplaycnt_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charraidplaycnt_update`( 
	IN p_CharID		BIGINT	
,	IN p_IndunID	INT		
)
    COMMENT '인던 이용 횟수 추가'
BEGIN
	
	INSERT INTO char_raid_play_cnt(char_idx, indun_id, play_cnt, play_time)
		VALUES(p_CharID, p_IndunID, 1, NOW())
    ON DUPLICATE KEY UPDATE play_cnt = IF(0 = DATEDIFF(NOW(), play_time), play_cnt + 1, 1), play_time = NOW();
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charshoppurchaselimit_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charshoppurchaselimit_update`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		

,	IN 	_shopID				INT 		
,	IN 	_purchaselimitqty	INT 		
,	IN  _purchaselimitadd 	INT 		
,	IN  _is_package		 	TINYINT 	
)
    COMMENT '상점 상품 구매 비용 차감'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
    
    DECLARE v_fianlQty				INT DEFAULT 0;
	DECLARE v_lastBuyDate			DATETIME DEFAULT NOW();    
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result, v_fianlQty,  UNIX_TIMESTAMP(v_lastBuyDate) as v_lastBuyDate;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
	        
        
        IF _purchaselimitqty = 0 THEN
			SET v_result = 101; 	
			LEAVE root;
        END IF;
        
        IF _purchaselimitadd = 1 THEN
			
			INSERT INTO user_shop_purchase_limit (user_idx, char_idx, shop_id, buy_qty, last_buy_date, is_package)
										VALUES (_useridx, _charidx, _shopID, _purchaselimitqty, v_lastBuyDate, _is_package)
			ON DUPLICATE KEY UPDATE buy_qty = _purchaselimitqty, last_buy_date = v_lastBuyDate;
            
        ELSE
        BEGIN
			
			INSERT INTO user_shop_purchase_limit (user_idx, char_idx, shop_id, buy_qty, last_buy_date, is_package)
										VALUES (_useridx, _charidx, _shopID, _purchaselimitqty, v_lastBuyDate, _is_package)
			ON DUPLICATE KEY UPDATE buy_qty = buy_qty + _purchaselimitqty, last_buy_date = v_lastBuyDate;							
		END;
        END IF;
        
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result, v_fianlQty,  UNIX_TIMESTAMP(v_lastBuyDate) as v_lastBuyDate;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charshoppurchaselimit_update_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charshoppurchaselimit_update_init`( 
	IN	p_UserID 			BIGINT
, 	IN	p_CharID	 		BIGINT
,	IN 	p_BuffID	 		INT		
,	IN 	p_ShopID			INT		
)
    COMMENT '구매 제한 기록 삭제(특별 버프 사용)'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    DECLARE v_buffexsit		BOOL DEFAULT FALSE;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;    
    
    
  -- IF 0 < (SELECT COUNT(*) FROM char_buff_special WHERE char_idx = p_CharID and buff_id = p_BuffID AND NOW() < buff_affect_time) THEN
  -- SET v_buffexsit = true;
  --  END IF;

	
	root:
	BEGIN
		
		IF FALSE = v_buffexsit THEN
			SET v_result = 100;		
			LEAVE root;
        END IF;
    
		START TRANSACTION;	
        
        subroot:
        BEGIN
			
			UPDATE char_buff_special
			SET buff_affect_time = now()
			WHERE char_idx = p_CharID and buff_id = p_BuffID;
			
			IF ROW_COUNT() = 0 THEN 
				SET v_result = 101;		
				LEAVE subroot;
			END IF;

			
			UPDATE user_shop_purchase_limit
			SET buy_qty = 0
			WHERE user_idx = p_UserID AND char_idx IN (0, p_CharID) AND shop_id = p_ShopID;

			IF ROW_COUNT() = 0 THEN 
				SET v_result = 102;		
				LEAVE subroot;
			END IF;
		END;
        
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;    
	END;        
	
    
    SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_combat_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_combat_finish`( 
	IN p_UserID 			BIGINT
,	IN p_CharID 			BIGINT
,	IN p_DungeonType 		TINYINT		

,	IN p_RivalIdx 			BIGINT		
,	IN p_CombatType			TINYINT		
,	IN p_IsWin 				TINYINT		
,	IN p_AddCombatPoint 	BIGINT		
,	IN p_CombatTier 		TINYINT		
,	IN p_SuccessCount 		INT			

,	IN p_FreeEnterResetTime DATETIME	
,	IN p_SeasonResetTime 	DATETIME	

)
    COMMENT '무투전 던전 종료'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    
    DECLARE v_row_cnt			INT DEFAULT 0;
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_RivalResetCnt		INT	DEFAULT 0;			
	DECLARE v_RivalUpgradeResetCnt	INT	DEFAULT 0;		
	DECLARE v_DailyWinCnt		SMALLINT DEFAULT 0;		
	DECLARE v_SeasonWinCnt		SMALLINT DEFAULT 0;		
    DECLARE v_NewGradeReward	TINYINT DEFAULT 1;		
	DECLARE v_DailyReward		TINYINT	DEFAULT 0;		
	DECLARE v_SeasonReward		TINYINT	DEFAULT 0;		
    DECLARE v_FinalCombatPoint	BIGINT	DEFAULT 0;			
    DECLARE v_use_ticket_time	DATETIME;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
    root:
    BEGIN
    		
		CALL sp_mmo_charsingleplaycnt_update_init_combat_c9(p_CharID, p_DungeonType, p_FreeEnterResetTime, p_SeasonResetTime, v_play_cnt, v_reset_cnt, v_RivalResetCnt, v_RivalUpgradeResetCnt, 
														v_DailyWinCnt, v_SeasonWinCnt, v_NewGradeReward, v_DailyReward, v_SeasonReward, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 141;	
			LEAVE root;
        END IF;        

		START TRANSACTION;
        
        subroot:
		BEGIN
            UPDATE user_combat 
            SET combat_grade_id = p_CombatTier, 
				combat_score = (@finalCombatScore := IF(combat_score + p_AddCombatPoint < 0, 0, combat_score + p_AddCombatPoint)), 
				combat_win_cnt = IF(p_IsWin = 0, combat_win_cnt + 1, combat_win_cnt), 
				combat_succ = p_SuccessCount, 
                daily_combat_win_cnt = (@finalDailyWinCnt := IF(p_IsWin = 0, daily_combat_win_cnt + 1, daily_combat_win_cnt)),                 
                season_combat_win_cnt  = (@finalSeasonWinCnt := IF(p_IsWin = 0, season_combat_win_cnt + 1, season_combat_win_cnt)), 
                newgrade_combat_reward = (@NewGradeReward := IF(p_IsWin = 0 AND p_CombatType = 2, 0, newgrade_combat_reward))	
            WHERE user_idx = p_UserID;
        	
			SET v_FinalCombatPoint = @finalCombatScore;			
			SET v_DailyWinCnt = @finalDailyWinCnt;				
			SET v_SeasonWinCnt = @finalSeasonWinCnt;			
            SET v_NewGradeReward = @NewGradeReward;
            
            
            
            IF p_IsWin = 0 THEN 
				UPDATE user_combat_rivals SET rival_isWin = 1 WHERE user_idx = p_UserID AND rival_user_idx = p_RivalIdx AND rival_type = p_CombatType;
                IF ROW_COUNT() = 0 THEN 
					SET v_result = 100;
					LEAVE subroot;
                END IF;
                
                
                IF p_CombatType = 2 THEN
					DELETE FROM user_combat_rivals WHERE user_idx = p_UserID;
					IF ROW_COUNT() = 0 THEN 
						SET v_result = 101;
						LEAVE subroot;
					END IF;
                END IF;
            END IF;
            
        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;          
        
	END;

	
	SELECT v_result, v_play_cnt, v_reset_cnt, v_FinalCombatPoint, v_RivalResetCnt, v_RivalUpgradeResetCnt, v_DailyWinCnt, v_SeasonWinCnt, v_NewGradeReward, v_DailyReward, v_SeasonReward, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_combat_start` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_combat_start`( 
	IN p_UserID 			BIGINT
,	IN p_CharID 			BIGINT
,	IN p_DungeonType 		TINYINT		
,	IN p_TicketItemID		INT			
,	IN p_TicketItemUseQty 	INT			
,	IN p_MaxFreeEnter		INT 		
,	IN p_FreeEnterResetTime DATETIME	
,	IN p_SeasonResetTime 	DATETIME	
)
    COMMENT '무투전 던전 시작'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE	v_errmsg	TEXT;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    
    DECLARE v_row_cnt			INT DEFAULT 0;
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_RivalResetCnt		INT	DEFAULT 0;			
	DECLARE v_RivalUpgradeResetCnt	INT	DEFAULT 0;		
	DECLARE v_DailyWinCnt		SMALLINT DEFAULT 0;		
	DECLARE v_SeasonWinCnt		SMALLINT DEFAULT 0;		
    DECLARE v_NewGradeReward	TINYINT DEFAULT 1;		
	DECLARE v_DailyReward		TINYINT	DEFAULT 0;		
	DECLARE v_SeasonReward		TINYINT	DEFAULT 0;		
    DECLARE v_use_ticket_time	DATETIME;
    DECLARE v_final_ticket_qty 	INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO,
            v_errmsg =  MESSAGE_TEXT;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_errmsg;
	END;
   
   
	root:
    BEGIN

    	IF 0 = p_MaxFreeEnter AND (0 = p_TicketItemID OR 0 = p_TicketItemUseQty) THEN
			SET v_result = 101;	
			LEAVE root;		
		END IF;
    
    	
		CALL sp_mmo_charsingleplaycnt_update_init_combat_c9(p_CharID, p_DungeonType, p_FreeEnterResetTime, p_SeasonResetTime, v_play_cnt, v_reset_cnt, v_RivalResetCnt, v_RivalUpgradeResetCnt, 
														v_DailyWinCnt, v_SeasonWinCnt, v_NewGradeReward, v_DailyReward, v_SeasonReward, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 141;	
			LEAVE root;
        END IF;        

		START TRANSACTION;
        
        subroot:
		BEGIN
        		
			IF 0 < p_MaxFreeEnter THEN
			BEGIN
				
				SET @play_cnt 	:= 1;
                SET @reset_cnt 	:= 0;
                
				INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
											VALUES (p_CharID, p_DungeonType, @play_cnt, @reset_cnt)
				ON DUPLICATE KEY UPDATE play_cnt = @play_cnt := play_cnt + 1, reset_cnt = @reset_cnt := reset_cnt;        
			
				SET v_row_cnt = ROW_COUNT();
				IF 0 = v_row_cnt THEN
					SET v_result = 111;		
					LEAVE subroot;
				END IF;
				
				SET v_play_cnt 	= @play_cnt;
				SET v_reset_cnt = @reset_cnt;
				
				IF p_MaxFreeEnter < v_play_cnt THEN
					SET v_result = 112;	
					LEAVE subroot;
				END IF;   
                
				
			END;
			ELSE
			BEGIN
				
				CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_TicketItemID, p_TicketItemUseQty, v_final_ticket_qty, v_result);
				IF v_result <> 0 THEN
					SET v_result = 113;	
					LEAVE subroot;
				END IF;        
			
			END;
			END IF;
            
        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;          
        
	END;
    

	
	SELECT v_result, v_play_cnt, v_reset_cnt, v_RivalResetCnt, v_RivalUpgradeResetCnt, v_DailyWinCnt, v_SeasonWinCnt, v_NewGradeReward, v_DailyReward, v_SeasonReward, v_final_ticket_qty, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_endless_start` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_endless_start`( 
	IN p_UserID 			BIGINT
,	IN p_CharID 			BIGINT
,	IN p_DungeonType 		TINYINT		
,	IN p_StageID			INT			
,	IN p_TicketItemID		INT			
,	IN p_TicketItemUseQty 	INT			
,	IN p_MaxFreeEnter		INT 		
,	IN p_FreeEnterResetTime DATETIME	
)
    COMMENT '무한 던전 시작'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    
    DECLARE v_row_cnt			INT DEFAULT 0;
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    DECLARE v_final_ticket_qty 	INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   
    	
    
    root:
    BEGIN

    	IF 0 = p_MaxFreeEnter AND (0 = p_TicketItemID OR 0 = p_TicketITEMUseQty) THEN
			SET v_result = 101;	
			LEAVE root;		
		END IF;
    
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 141;	
			LEAVE root;
        END IF;        
    
   
    
		START TRANSACTION;
        
        subroot:
		BEGIN
        			
			IF 0 < p_MaxFreeEnter THEN
			BEGIN
            
				SET @play_cnt 	:= 1;
                SET @reset_cnt 	:= 0;
			
				INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
											VALUES (p_CharID, p_DungeonType, @play_cnt, @reset_cnt)
				ON DUPLICATE KEY UPDATE play_cnt = @play_cnt := play_cnt + 1, reset_cnt = @reset_cnt := reset_cnt;        
			
				SET v_row_cnt = ROW_COUNT();
				IF 0 = v_row_cnt THEN
					SET v_result = 111;		
					LEAVE subroot;
				END IF;
				
				SET v_play_cnt 	= @play_cnt;
				SET v_reset_cnt = @reset_cnt;
				
				IF p_MaxFreeEnter < v_play_cnt THEN
					SET v_result = 112;	
					LEAVE subroot;
				END IF;            
				
			END;
			ELSE
			BEGIN
				
				CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_TicketItemID, p_TicketItemUseQty, v_final_ticket_qty, v_result);
				IF v_result <> 0 THEN
					SET v_result = 113;	
					LEAVE subroot;
				END IF;        
			
			END;
			END IF;
		
			
			UPDATE char_info
			SET current_trial = p_StageID
			WHERE char_idx = p_CharID;        
            
        END;

		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;         
	END;
    

	
	SELECT v_result, v_play_cnt, v_reset_cnt, v_final_ticket_qty, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_gamestart` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_gamestart`(
	IN	p_charId 				BIGINT	
		
,	IN 	p_dungeonType			INT		
		
,	IN 	p_maxFreeCount			INT		
		
,	IN 	p_ticketId				INT		
,	IN 	p_ticketCount			INT		

,	IN 	p_freeEnterResetTime	DATETIME 
)
    COMMENT '요일던전 입장. '
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;

	DECLARE v_useridx			BIGINT DEFAULT 0;
    DECLARE final_playcount		TINYINT DEFAULT 0;
    DECLARE final_resetcount	TINYINT DEFAULT 0;
    DECLARE final_item_count	INT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_playcount, final_resetcount, final_item_count, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;
	END;     
    
    
    CALL sp_mmo_charsingleplaycnt_update_init(p_charId, p_dungeonType, p_freeEnterResetTime, final_playcount, final_resetcount, v_use_ticket_time, result);
       
	START TRANSACTION;
    
    root:
    BEGIN
	    
        SELECT user_idx INTO v_useridx FROM char_info WHERE char_idx = p_charId;
        
        IF p_maxFreeCount > 0 THEN 
			
            INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
			VALUES (p_charId, p_dungeonType, 1, 0)
			ON DUPLICATE KEY UPDATE play_cnt = play_cnt + 1, reset_cnt = reset_cnt;
			
            IF ROW_COUNT() < 1 THEN 
				SET result = 1000;
                LEAVE root;
            END IF;
            
            
            SELECT play_cnt, reset_cnt INTO final_playcount, final_resetcount FROM char_single_play_cnt WHERE char_idx = p_charId AND dungeon_type = p_dungeonType;
            
            
            IF final_playcount > p_maxFreeCount THEN 
				SET result = 1001;
                LEAVE root;
            END IF; 
            
        ELSE
            
			IF p_ticketId > 0 AND p_ticketCount > 0 THEN	
				call sp_mmo_notrans_charinvenitem_delete(v_useridx, p_charId, p_ticketId, p_ticketCount, final_item_count, result);
                IF result != 0 THEN 
					LEAVE root;
                END IF;
                
                
				SELECT play_cnt, reset_cnt INTO final_playcount, final_resetcount FROM char_single_play_cnt WHERE char_idx = p_charId AND dungeon_type = p_dungeonType;
                
			ELSE
				
				SET result = 1002;
                LEAVE root;
                
			END IF;	
        END IF;
               
	END;

	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	SELECT result, final_playcount, final_resetcount, final_item_count, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_grow_start` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_grow_start`( 
	IN p_UserID 			BIGINT
,	IN p_CharID 			BIGINT
,	IN p_SubCharType 		INT
,	IN p_DungeonType 		TINYINT		
,	IN p_StageID			INT			
,	IN p_TicketItemID		INT			
,	IN p_TicketItemUseQty 	INT			
,	IN p_MaxFreeEnter		INT 		
,	IN p_FreeEnterResetTime DATETIME	
)
    COMMENT '성장 던전 시작'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    
    DECLARE v_row_cnt			INT DEFAULT 0;
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    DECLARE v_final_ticket_qty 	INT DEFAULT 0;
    DECLARE v_sub_char_idx		BIGINT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   
   
    root:
    BEGIN

    	IF 0 = p_MaxFreeEnter AND (0 = p_TicketItemID OR 0 = p_TicketItemUseQty) THEN
			SET v_result = 101;	
			LEAVE root;		
		END IF;
    
		
        CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 141;	
			LEAVE root;
        END IF;        

   
    
		START TRANSACTION;
        
        subroot:
		BEGIN
        		
			IF 0 < p_MaxFreeEnter THEN
			BEGIN
			
				SET @play_cnt 	:= 1;
                SET @reset_cnt 	:= 0;
                
				INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
											VALUES (p_CharID, p_DungeonType, @play_cnt, @reset_cnt)
				ON DUPLICATE KEY UPDATE play_cnt = @play_cnt := play_cnt + 1, reset_cnt = @reset_cnt := reset_cnt;        
			
				SET v_row_cnt = ROW_COUNT();
				IF 0 = v_row_cnt THEN
					SET v_result = 111;		
					LEAVE subroot;
				END IF;
				
				SET v_play_cnt 	= @play_cnt;
				SET v_reset_cnt = @reset_cnt;
				
				IF p_MaxFreeEnter < v_play_cnt THEN
					SET v_result = 112;	
					LEAVE subroot;
				END IF;            
				
			END;
			ELSE
			BEGIN
				
				CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_TicketItemID, p_TicketItemUseQty, v_final_ticket_qty, v_result);
				IF v_result <> 0 THEN
					SET v_result = 113;	
					LEAVE subroot;
				END IF;        
			
			END;
			END IF;
            
            IF p_SubCharType > 0 THEN
				SELECT char_idx INTO v_sub_char_idx FROM char_info WHERE user_idx = p_UserID AND char_type = p_SubCharType;
                
				IF FOUND_ROWS() <= 0 THEN 
					SET v_result = 114;	
					LEAVE subroot;
				END IF;
            END IF;
			
			UPDATE userinfo SET sub_char_idx = v_sub_char_idx WHERE user_idx = p_UserID;
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 116;	
				LEAVE subroot;
			END IF;
			
        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;    
        
	END;
    

	
	SELECT v_result, v_play_cnt, v_reset_cnt, v_final_ticket_qty, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_init`( 
	IN 	p_CharID 			BIGINT
,	IN 	p_DungenType		TINYINT			
,	IN 	p_ResetTime 		DATETIME		
,	OUT p_PlayCnt			TINYINT			
,	OUT p_ResetCnt			TINYINT			
,	OUT p_UseTicketTime		DATETIME		
,	OUT p_Result			INT
)
    COMMENT '던전 무료 입장 초기화'
BEGIN   
	DECLARE	v_errno				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET p_Result := (v_errno * -1);
		ROLLBACK;
	END;
    	 
    SET p_Result = 0;
	SET p_PlayCnt = 0;
	SET p_ResetCnt = 0;
	     
    root:
    BEGIN
        
		SELECT use_ticket_time INTO p_UseTicketTime
		FROM char_info
		WHERE char_idx = p_CharID;
        
		IF 0 = FOUND_ROWS() THEN
			SET p_Result = 101;		
			LEAVE root;
		END IF;        

		
		IF p_UseTicketTime < p_ResetTime THEN
			
			START TRANSACTION;	
            
			subroot:
            BEGIN
				
				UPDATE char_single_play_cnt
				SET play_cnt = 0, reset_cnt = 0
				WHERE char_idx = p_CharID;
				
				UPDATE char_info
				SET use_ticket_time = NOW()
				WHERE char_idx = p_CharID;
				
				IF 0 = ROW_COUNT() THEN
					SET p_Result = 103;		
                    leave subroot;
				END IF;
                
                SET p_UseTicketTime = now();
                
			END;
        
			
			if 0 = p_Result THEN
				COMMIT;
			ELSE
				ROLLBACK;
			END IF;
            
		ELSE
			
			SELECT play_cnt, reset_cnt INTO p_PlayCnt, p_ResetCnt
			FROM char_single_play_cnt
			WHERE char_idx = p_CharID AND dungeon_type = p_DungenType;
			
        END IF;

	END;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_init_combat_c9` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_init_combat_c9`( 
	IN 	p_CharID 			BIGINT
,	IN 	p_DungenType		TINYINT			
,	IN 	p_ResetTime 		DATETIME		
,	IN 	p_SeasonResetTime 	DATETIME		
,	OUT p_PlayCnt			TINYINT			
,	OUT p_ResetCnt			TINYINT			

,	OUT p_RivalResetCnt		INT				
,	OUT p_RivalUpgradeResetCnt	INT			
,	OUT p_DailyWinCnt		SMALLINT		
,	OUT p_SeasonWinCnt		SMALLINT		
, 	OUT p_NewGradeReward	TINYINT			
,	OUT p_DailyReward		TINYINT			
,	OUT p_SeasonReward		TINYINT			

,	OUT p_UseTicketTime		DATETIME		
,	OUT p_Result			INT
)
    COMMENT '던전 무료 입장 초기화'
BEGIN   
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE	v_UserIdx			BIGINT DEFAULT 0;
    DECLARE	v_last_combat_time	DATETIME DEFAULT NOW();
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET p_Result := (v_errno * -1);
		ROLLBACK;
	END;
    
    
    SET p_PlayCnt = 0;
    SET p_ResetCnt = 0;
    SET p_UseTicketTime = NOW();
    SET p_RivalResetCnt = 0;
    SET p_RivalUpgradeResetCnt = 0;
    SET p_DailyWinCnt = 0;
	SET p_SeasonWinCnt = 0;
    SET p_NewGradeReward = 1;	
	SET p_DailyReward = 0;
	SET p_SeasonReward = 0;
    SET p_Result = 0;
	    
	START TRANSACTION;	
    
    root:
    BEGIN
    
		
		SELECT user_idx, use_ticket_time INTO v_UserIdx, p_UseTicketTime FROM char_info WHERE char_idx = p_CharID;
        IF 0 = FOUND_ROWS() THEN
			SET p_Result = 101;		
			LEAVE root;
		END IF;        
        
        
        SELECT combat_time, newgrade_combat_reward INTO v_last_combat_time, p_NewGradeReward FROM user_combat WHERE user_idx = v_UserIdx;
        IF 0 = FOUND_ROWS() THEN
			SET p_Result = 102;		
			LEAVE root;
		END IF;        
        
        
        
		IF v_last_combat_time < p_ResetTime THEN
			UPDATE user_combat 
			SET hero_combat_reset_cnt = 0, combat_grade_up_reset_cnt = 0, combat_time = NOW()
			WHERE user_idx = v_UserIdx;
        END IF;
        
		
		
		IF p_UseTicketTime < p_ResetTime THEN

			
			UPDATE char_single_play_cnt SET play_cnt = 0, reset_cnt = 0 WHERE char_idx = p_CharID;
			
            
			UPDATE char_info SET use_ticket_time = NOW() WHERE char_idx = p_CharID;
			
			IF 0 = ROW_COUNT() THEN
				SET p_Result = 103;		
                LEAVE root;
			END IF;
                    
		ELSE
			
			SELECT play_cnt, reset_cnt INTO p_PlayCnt, p_ResetCnt
			FROM char_single_play_cnt
			WHERE char_idx = p_CharID AND dungeon_type = p_DungenType;
            
            
            SELECT hero_combat_reset_cnt, combat_grade_up_reset_cnt, daily_combat_win_cnt, season_combat_win_cnt, newgrade_combat_reward, daily_combat_reward, season_combat_reward 
            INTO p_RivalResetCnt, p_RivalUpgradeResetCnt, p_DailyWinCnt, p_SeasonWinCnt, p_NewGradeReward, p_DailyReward, p_SeasonReward
			FROM user_combat
			WHERE user_idx = v_UserIdx;
        END IF;

	END;
    
    
	if 0 = p_Result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_memory_start` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_memory_start`( 
	IN p_UserID 			BIGINT
,	IN p_CharID 			BIGINT
,	IN p_DungeonType 		TINYINT		
,	IN p_StageID			INT			
,	IN p_TicketItemID		INT			
,	IN p_TicketItemUseQty 	INT			
,	IN p_MaxFreeEnter		INT 		
,	IN p_FreeEnterResetTime DATETIME	
)
    COMMENT '성장 던전 시작'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    
    DECLARE v_row_cnt			INT DEFAULT 0;
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    DECLARE v_final_ticket_qty 	INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   
    	
    
    root:
    BEGIN

		
    	IF 0 = p_MaxFreeEnter AND (0 = p_TicketItemID OR 0 = p_TicketItemUseQty) THEN
			SET v_result = 101;	
			LEAVE root;		
		END IF;
    
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 141;	
			LEAVE root;
        END IF;
        
    
		START TRANSACTION;
        
        subroot:
		BEGIN
        		
			IF 0 < p_MaxFreeEnter THEN
			BEGIN
            
				SET @play_cnt 	:= 1;
                SET @reset_cnt 	:= 0;            
			
				INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
											VALUES (p_CharID, p_DungeonType, @play_cnt, @reset_cnt)
				ON DUPLICATE KEY UPDATE play_cnt = @play_cnt := play_cnt + 1, reset_cnt = @reset_cnt := reset_cnt;        
			
				SET v_row_cnt = ROW_COUNT();
				IF 0 = v_row_cnt THEN
					SET v_result = 111;		
					LEAVE subroot;
				END IF;
				
				SET v_play_cnt 	= @play_cnt;
				SET v_reset_cnt = @reset_cnt;
				
				IF p_MaxFreeEnter < v_play_cnt THEN
					SET v_result = 112;	
					LEAVE subroot;
				END IF;            
				
			END;
			ELSE
			BEGIN
				
				CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_TicketItemID, p_TicketItemUseQty, v_final_ticket_qty, v_result);
				IF v_result <> 0 THEN
					SET v_result = 113;	
					LEAVE subroot;
				END IF;        
			
			END;
			END IF;
        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF; 
        
	END;
    

	
	SELECT v_result, v_play_cnt, v_reset_cnt, v_final_ticket_qty, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_payreset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_payreset`( 
	IN p_UserID 		BIGINT
,	IN p_CharID 		BIGINT
,	IN p_DungeonType 	TINYINT		
, 	IN p_CostCashA		BIGINT		
,	IN p_CostCashB		BIGINT		
)
    COMMENT '던전 무료 이용 초기화'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_reset_cnt		 	TINYINT DEFAULT 0;
    DECLARE v_final_CashA 		BIGINT DEFAULT 0;    
	DECLARE v_final_CashB		BIGINT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   
   	START TRANSACTION;	
    
    root:
    BEGIN
	
		
        IF 0 < p_CostCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_CashA, v_result);    
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;        
        END IF;

		
        IF 0 < p_CostCashB THEN
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_CashB, v_result);    
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;        
        END IF;
        
		INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
									VALUES (p_CharID, p_DungeonType, 0, 1)
		ON DUPLICATE KEY UPDATE play_cnt = 0, reset_cnt = @v_reset_cnt := reset_cnt + 1;

		IF 0 = ROW_COUNT() THEN
			SET v_result = 101;		
            LEAVE root;
        END IF;   
		
        SET v_reset_cnt = @v_reset_cnt;
        
        UPDATE char_info
        SET use_ticket_time = NOW()
        WHERE char_idx = p_CharID;
        
		IF 0 = ROW_COUNT() THEN
			SET v_result = 102;		
            LEAVE root;
        END IF;         
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		

	
	SELECT v_result, v_reset_cnt, v_final_CashA, v_final_CashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charsingleplaycnt_update_week_start` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charsingleplaycnt_update_week_start`(
	IN 	p_UserID 				BIGINT    
,	IN	p_CharID 				BIGINT	
,	IN 	p_DungeonType			TINYINT	
,	IN 	p_MaxFreeEnter			INT		
,	IN 	p_TicketID				INT		
,	IN 	p_TicketCount			INT		
,	IN 	p_FreeEnterResetTime	DATETIME 
)
    COMMENT '요일던전 입장. '
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;

	DECLARE v_useridx			BIGINT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
    DECLARE v_play_cnt			TINYINT DEFAULT 0;
    DECLARE v_reset_cnt			TINYINT DEFAULT 0;
    
    DECLARE v_final_item_count	INT DEFAULT 0;
    DECLARE v_use_ticket_time	DATETIME;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;     
    
    
    root:
    BEGIN
    
		
		CALL sp_mmo_charsingleplaycnt_update_init(p_CharID, p_DungeonType, p_FreeEnterResetTime, v_play_cnt, v_reset_cnt, v_use_ticket_time, v_call_result);
        IF 0 <> v_call_result THEN
			SET v_result = 1003;	
			LEAVE root;
        END IF;        

    

		START TRANSACTION;
        
        subroot:
		BEGIN
        
			IF 0 < p_MaxFreeEnter THEN 
			BEGIN
				SET @play_cnt 	:= 1;
				SET @reset_cnt 	:= 0;
					
				
				INSERT INTO char_single_play_cnt (char_idx, dungeon_type, play_cnt, reset_cnt)
				VALUES (p_charId, p_dungeonType, @play_cnt, @reset_cnt)
				ON DUPLICATE KEY UPDATE play_cnt = @play_cnt := play_cnt + 1, reset_cnt = @reset_cnt := reset_cnt;
				
				IF ROW_COUNT() < 1 THEN 
					SET v_result = 1000;
					LEAVE root;
				END IF;
				
				SET v_play_cnt 	= @play_cnt;
				SET v_reset_cnt = @reset_cnt;            
				
				
				IF p_MaxFreeEnter < v_play_cnt THEN
					SET v_result = 1001;	
					LEAVE root;
				END IF;             
			END;    
			ELSE
			BEGIN
				
				IF p_ticketId > 0 AND p_ticketCount > 0 THEN	
					call sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_TicketID, p_TicketCount, v_final_item_count, result);
					IF v_result != 0 THEN 
						LEAVE root;
					END IF;
				ELSE
					
					SET v_result = 1002;
					LEAVE root;
				END IF;	
			END;
			END IF;
		END;
        
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;        
                
	END;



	SELECT v_result, v_play_cnt, v_reset_cnt, v_final_item_count, UNIX_TIMESTAMP(v_use_ticket_time) AS v_use_ticket_time;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charskillgauge_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charskillgauge_update`(
	IN	_charidx 	BIGINT

,	IN	_gauge1		SMALLINT
,	IN	_gauge2		SMALLINT
,	IN	_gauge3		SMALLINT
,	IN	_gaugetrans	SMALLINT
)
    COMMENT '미션 패키지 달성 정보 수정'
BEGIN
	
    DECLARE v_errno INT DEFAULT 0;
	DECLARE v_result INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result;
	END;	
	
	
    START TRANSACTION;	
	
	root:
	BEGIN
		
        
        
        INSERT INTO char_skill_gauge(char_idx, skill1_gauge, skill2_gauge, skill3_gauge, transform_gauge) 
							VALUES(_charidx, _gauge1, _gauge2, _gauge3, _gaugetrans)
		ON DUPLICATE KEY UPDATE skill1_gauge = _gauge1, skill2_gauge = _gauge2, skill3_gauge = _gauge3, transform_gauge = _gaugetrans;
                
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 1001;
			LEAVE root;
		END IF;
        
	END;
    
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charskillrune_update_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charskillrune_update_level`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		
,	IN	_skill_id	 		INT			
,	IN	_skill_value 		INT			
,	IN	_rune_id			INT			
,	IN	_rune_value			INT			
)
    COMMENT '스킬 룬 레벨업'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE _result 		INT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result;
	END;    
    
	START TRANSACTION;	
	
	root:
	BEGIN    
        
		INSERT INTO char_skill (char_idx, skill_id, skill_value)
							VALUES (_charidx, _skill_id, _skill_value)
		ON DUPLICATE KEY UPDATE skill_value = _skill_value;
								
		IF ROW_COUNT() = 0 THEN 
			SET _result = 102;
			LEAVE root;
		END IF;
                       
        
		INSERT INTO char_skill_rune (skill_id, char_idx, rune_id, rune_value)
				VALUES (_skill_id, _charidx, _rune_id, _rune_value)
		ON DUPLICATE KEY UPDATE rune_value = _rune_value;
        
        IF ROW_COUNT() = 0 THEN 
			SET _result = 104;
			LEAVE root;
        END IF;
        
	END; 

	
	IF 0 = _result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
	
	SELECT _result;
	 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charskill_insert_unlock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charskill_insert_unlock`( 
	IN	p_UserID 		BIGINT
, 	IN	p_CharID 		BIGINT

,	IN	_deletegold		BIGINT		
,	IN	_deleteCashA	BIGINT
, 	IN	p_ItemID 		INT		-- 아이템 번호
,	IN	p_UseQty	 	INT		-- 아이템 사용 수량
,	IN 	p_SkillID		INT		-- 스킬 ID		
)
    COMMENT '인벤토리(char_inven_item) 아이템 삭제 및 스킬 Unlock'
BEGIN
	
    DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;	-- 개수 아이템 최종 수량

	DECLARE v_final_gold 		BIGINT DEFAULT 0;
	DECLARE v_finalCashA		BIGINT DEFAULT 0;
    
	DECLARE v_cashA_old			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old	BIGINT DEFAULT 0;
	DECLARE v_cashA_new			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new	BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_itemcount, v_finalCashA, v_final_gold;
	END; 
    

	START TRANSACTION;
		
    root:
    BEGIN
    
		CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        IF 0 = _deleteCashA THEN
			SET v_finalCashA = v_cashA_new + v_cashA_Free_new;
        END IF;
    
		-- 개수 아이템 삭제
		CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_UseQty, v_final_itemcount, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
        END IF;
    
		-- 아이템을 전부 사용했다면 퀵슬롯에서 제거
		-- IF v_final_itemcount <= 0 THEN			
		-- 	UPDATE char_quick_use
        --     SET item_id = 0, is_auto_flag = 0
        --     WHERE char_idx = p_CharID AND is_skill_flag = 0 AND item_id = p_ItemID;
        -- END IF;
		
		-- 스킬 넣기(습득하지 않은 스킬은 DB에 들어가 있지 않다)
		INSERT INTO char_skill (char_idx, skill_id, skill_value)
		VALUES (p_CharID, p_SkillID, 1);
        
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 101;	-- 스킬 습득 실패
		END IF;
	END;	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	SELECT v_result, v_final_itemcount, v_finalCashA, v_final_gold;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charskill_update_init` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charskill_update_init`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		

,	IN	_skillid 			INT			

,	IN	_use_gold	 		BIGINT		
,	IN	_use_cashgreen 		BIGINT		
,	IN	_use_cashred 		BIGINT		
)
    COMMENT '스킬 초기화'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;

	DECLARE _skillcount		INT DEFAULT 0;
	DECLARE _runecount 		INT DEFAULT 0;
	
    declare v_finalgold				BIGINT default 0;
	
    DECLARE v_finalcashA 			BIGINT 	DEFAULT 0;
    DECLARE v_finalcashB 			BIGINT 	DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  	

       
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_finalgold, v_finalcashA, v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
	END;    

        
	START TRANSACTION;	
	
	root:
	BEGIN    
		
		IF _use_gold > 0 THEN  
			call sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _use_gold, v_finalgold, v_result);
        	if v_result != 0 then 
				Leave root;
			end if;
		end if;
        
        
		IF _use_cashgreen > 0 THEN  
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			call sp_mmo_notrans_userinfo_delete_cashA(_useridx, _use_cashgreen, v_finalcashA, v_result);
			if v_result != 0 then 
				Leave root;
			end if;
			
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
        end if;

		
		IF _use_cashred > 0 THEN    
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_old, v_cashB_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			call sp_mmo_notrans_userinfo_delete_cashB(_useridx, _use_cashred, v_finalcashB, v_result);
			if v_result != 0 then 
				Leave root;
			end if;
			
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_new, v_cashB_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;			
        end if;
        
        
        UPDATE char_skill SET skill_value = 1, used_point = 0
        WHERE char_idx = _charidx AND skill_id = _skillid;
        set _skillcount = ROW_COUNT();
		
        
        DELETE FROM char_skill_rune 
        WHERE char_idx = _charidx AND skill_id = _skillid;
        set _runecount = ROW_COUNT();
        
        IF _skillcount = 0 AND _runecount = 0 THEN 
			SET v_result = 101;
			LEAVE root;
        END IF;

	END; 

	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT v_result, v_finalgold, v_finalcashA, v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charskill_update_initall` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charskill_update_initall`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		

,	IN	_use_gold	 		BIGINT		
,	IN	_use_cashgreen 		BIGINT		
,	IN	_use_cashred 		BIGINT		
)
    COMMENT '스킬 초기화'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE _skillcount		INT DEFAULT 0;
	DECLARE _runecount 		INT DEFAULT 0;

    DECLARE v_finalgold				BIGINT DEFAULT 0;
    
    DECLARE v_finalcashA 			BIGINT DEFAULT 0;
    DECLARE v_finalcashB 			BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;    
	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_finalgold, v_finalcashA, v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
	END;       


	START TRANSACTION;	
	
	root:
	BEGIN    
		
		IF _use_gold > 0 THEN  
			call sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _use_gold, v_finalgold, v_result);
        	if v_result != 0 then 
				Leave root;
			end if;
		end if;
        
        
		IF _use_cashgreen > 0 THEN  
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 		
		
			call sp_mmo_notrans_userinfo_delete_cashA(_useridx, _use_cashgreen, v_finalCashA, v_result);
			if v_result != 0 then 
				Leave root;
			end if;
			
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;			
        end if;

		
		IF _use_cashred > 0 THEN    
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_old, v_cashB_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 		
		
			call sp_mmo_notrans_userinfo_delete_cashB(_useridx, _use_cashred, v_finalCashB, v_result);
			if v_result != 0 then 
				Leave root;
			end if;
			
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_new, v_cashB_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;				
        end if;        

        
        UPDATE char_skill SET skill_value = 1, used_point = 0 WHERE char_idx = _charidx;
        set _skillcount = ROW_COUNT();
		
        
		
        DELETE FROM char_skill_rune WHERE char_idx = _charidx;
        set _runecount = ROW_COUNT();
        
        IF _skillcount = 0 AND _runecount = 0 THEN 
			SET v_result = 101;
			LEAVE root;
        END IF;

	END; 

	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
	
	SELECT v_result, v_finalgold, v_finalcashA, v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charskill_update_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charskill_update_level`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		
,	IN	_skill_id	 		INT			
,	IN	_skill_value 		INT			

,	IN	_use_skill_point 	SMALLINT			
,	IN	_deletegold			BIGINT		
,	IN	_deleteCashA		BIGINT
,	IN	_arrayResItem 		VARCHAR(4096)
)
    COMMENT '스킬 레벨업'
BEGIN	
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	DECLARE v_final_gold 		BIGINT DEFAULT 0;
	DECLARE v_finalCashA		BIGINT DEFAULT 0;
    -- DECLARE v_finalSkillPoint	SMALLINT DEFAULT 0;
    
	DECLARE v_cashA_old			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old	BIGINT DEFAULT 0;
	DECLARE v_cashA_new			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new	BIGINT DEFAULT 0;
    
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    # Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_final_gold;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN
    
        CALL sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_useridx, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        IF 0 = _deleteCashA THEN
			SET v_finalCashA = v_cashA_new + v_cashA_Free_new;
        END IF;
        
        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
					CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
        
		INSERT INTO char_skill (char_idx, skill_id, skill_value, used_point)
				VALUES (_charidx, _skill_id, _skill_value, _use_skill_point)
		ON DUPLICATE KEY UPDATE skill_value = _skill_value, used_point = used_point + _use_skill_point;
		
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 102;
			LEAVE root;
        END IF;
        
	END; 

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
	
	SELECT v_result, v_finalCashA, v_final_gold;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charstat_delete_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charstat_delete_all`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_statResetCnt	TINYINT
,	IN	_decCashA		INT
,	IN	p_DeleteGold	BIGINT
-- ,	IN	p_CostCashB		BIGINT
,	IN	p_ResItemID		INT
,	IN	p_ResItemCnt	INT
)
    COMMENT '배분 스탯 포인트 전부 삭제, 초기화'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
    DECLARE v_finalCashA	BIGINT DEFAULT 0;
	DECLARE v_final_gold 			BIGINT DEFAULT 0;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
 	
    
 	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_finalCashA, v_final_gold, v_resitem_final_qty
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	END;      
    
	START TRANSACTION;	
	
	root:
	BEGIN   
    
		IF 0 = p_DeleteGold THEN
			SELECT char_gold INTO v_final_gold FROM char_info WHERE char_idx = _charid AND user_idx = _userid;
        ELSE
			CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, p_DeleteGold, v_final_gold, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;

		IF 0 < p_ResItemID THEN
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, p_ResItemID, p_ResItemCnt, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
		END IF;
        
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _decCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _decCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        IF 0 = _decCashA THEN
			SET v_finalCashA = v_cashA_new + v_cashA_Free_new;
        END IF;
        
		UPDATE char_info SET stat_reset_count = _statResetCnt WHERE char_idx = _charid;
		DELETE FROM char_stat WHERE char_idx = _charid;
		IF ROW_COUNT() = 0 THEN 
			SET v_result = 101;	
			LEAVE root;
		END IF;	

 	END; 

	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;   
    
    
	SELECT v_result, v_finalCashA, v_final_gold, v_resitem_final_qty
			, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
	
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charstat_insert_distribute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charstat_insert_distribute`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN id_array VARCHAR(1000)
)
    COMMENT '스탯 포인트 배분'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
    # Status
    DECLARE id_array_local VARCHAR(1000);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id INT;
    DECLARE v_status_value INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
    

	START TRANSACTION;	
	
	root:
	BEGIN
    
		-- Status begin
		SET id_array_local = id_array;
		SET start_pos = 1;
		SET comma_pos = locate(',', id_array_local);
		SET colon_pos = locate(':', id_array_local);

		REPEAT
			SET current_id = '';
			SET current_value = '';
			
			IF colon_pos > 0 THEN -- id:value 형태
				SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
				IF comma_pos > 0 THEN
					SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
					SET end_loop = 0;
				ELSE
					SET current_value = substring(id_array_local, colon_pos + 1);
					SET end_loop = 1;
				END IF;
			ELSE -- id 만 있는 형태
				IF comma_pos > 0 THEN
					SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
					SET end_loop = 0;
				ELSE
					SET current_id = substring(id_array_local, start_pos);
					SET end_loop = 1;
				END IF;
			END IF;
		 
			SET v_status_id := CAST(current_id as unsigned);
			SET v_status_value := CAST(current_value as unsigned);
			# Place here your code that uses current_id
			IF 0 < v_status_id AND 0 < v_status_value THEN
				INSERT INTO char_stat (char_idx, stat_type, stat_value)
										VALUES (_charid, v_status_id, v_status_value)
					ON DUPLICATE KEY UPDATE stat_value = IF( 0 < (stat_value + v_status_value), stat_value + v_status_value, 0);
											
				IF 0 = row_count() THEN
					SET v_result = 119;	
					LEAVE root; -- 
				END IF;	
			END IF;

			IF end_loop = 0 THEN
				SET id_array_local = substring(id_array_local, comma_pos + 1);
				SET comma_pos = locate(',', id_array_local);
				SET colon_pos = locate(':', id_array_local);
			END IF;
		UNTIL end_loop = 1

		END REPEAT;
		-- Status End
		
  	END;
	
	
	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;   
    
    
    
    SELECT v_result;
    
    IF 0 = v_result THEN    
		
		SELECT stat_type, stat_value 
		FROM char_stat
		WHERE char_idx = _charid;
    END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charvehicle_update_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charvehicle_update_equip`(
	IN	_userid 			BIGINT
,	IN	_charid 			BIGINT
,	IN 	_equip_vehicle_id	INT   
,	IN 	_show_vehicle_id	INT
)
    COMMENT '탑승물 교체'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	START TRANSACTION;
	root:
	BEGIN
    
		IF 0 < _show_vehicle_id THEN 
        
			IF 1 < _show_vehicle_id AND NOT EXISTS(SELECT 1 FROM user_vehicle WHERE user_idx = _userid AND vehicle_id = _show_vehicle_id) THEN
				SET _result = 6090;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET show_vehicleid = _show_vehicle_id WHERE char_idx = _charid;
		ELSE
			
			UPDATE char_info SET show_vehicleid = 0 WHERE char_idx = _charid;
            
		END IF;
    
        IF 0 < _equip_vehicle_id THEN 
        
			IF NOT EXISTS(SELECT 1 FROM user_vehicle WHERE user_idx = _userid AND vehicle_id = _equip_vehicle_id) THEN
				SET _result = 6091;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET equip_vehicleid = _equip_vehicle_id WHERE char_idx = _charid;
            
        ELSE
			
			UPDATE char_info SET equip_vehicleid = 0 WHERE char_idx = _charid;
            
        END IF;
    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_charwaypoint_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_charwaypoint_insert`( 
	IN _userid 		BIGINT
,	IN _charid 		BIGINT
,	IN _waypointid 	INT
)
    COMMENT '웨이 포인트 추가'
BEGIN
    DECLARE result INT;    
    SET result = 0;
 
	INSERT INTO char_waypoint(char_idx, waypoint_idx)
	VALUES (_charid, _waypointid);
	
	IF row_count() = 0 THEN
		SET result = 101;	
	END IF;
		
	SELECT result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_dungeontimelimit_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_dungeontimelimit_update`( 
	IN p_CharID			BIGINT
,	IN p_DungeonId		INT
,	IN p_InitType		TINYINT
,	IN p_AddUseSecTime	INT
-- ,	IN p_LimitUseSecTime	INT
,	IN p_ChargedSecTime	INT
)
    COMMENT '캐릭터 시간 제한 지역 이용 시간 Update'
BEGIN

	-- DECLARE v_DLRT					DATETIME;
    -- SET v_DLRT = fn_Get_DateLineReferenceTime();

	INSERT INTO char_dungeon_timelimit VALUES (p_CharID, p_DungeonId, p_InitType, p_AddUseSecTime, p_ChargedSecTime, now())
		ON DUPLICATE KEY UPDATE use_sec_time = p_AddUseSecTime
			, charged_sec_time = p_ChargedSecTime
			, update_time = now();

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_info_Gold_Execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_info_Gold_Execute`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	IN	p_goldAmount	BIGINT	
,	IN	p_maxGoldAmount	BIGINT	
,	IN	p_flag		TINYINT	
)
BEGIN



	DECLARE	v_charGold	BIGINT;	
	DECLARE	v_Result	INT;	
	DECLARE	v_Msg		TEXT;	

	CALL usp_char_info_Gold_Execute(p_userIdx, p_charIdx, p_goldAmount, p_maxGoldAmount, p_flag, v_charGold, v_Result, v_Msg);
    
    SELECT v_charGold, v_Result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_injection_Execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_injection_Execute`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	IN	p_type		TINYINT	
,	IN	p_value		INT	
,	IN	p_flag		TINYINT	
,	IN	p_itemType	TINYINT	
,	IN	p_itemId	INT	
,	IN	p_itemValue	INT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE	v_Result	INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	

	DECLARE v_mercValue	INT;	
	DECLARE v_mercBossValue	INT;	
	DECLARE v_towerValue	INT;	
	DECLARE	v_itemTotValue	INT;	
	DECLARE	v_typeTotValue	INT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET v_Result := (v_errno * -1000) + v_Result;
		ROLLBACK;
	END;


	
	
	IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
	BEGIN
		SET v_itemTotValue := 0;
		SET v_typeTotValue := 0;
		SET v_Result := -4;
		SET v_msg := '';
		SELECT v_itemTotValue, v_typeTotValue, v_Result;
	END;

	ELSE
	BEGIN

		
		CALL usp_userinfo_Check_Sel(p_userIdx, v_Resultfn);
		IF v_Resultfn <> -31 THEN
		BEGIN
			SET v_itemTotValue := 0;
			SET v_typeTotValue := 0;
			SET v_Result := v_Resultfn;
			SET v_msg := '';
			SELECT v_itemTotValue, v_typeTotValue, v_Result;
		END;

		ELSE
		BEGIN

			
			CALL usp_char_info_Check_Sel(p_userIdx, p_charIdx, v_Resultfn);
			IF v_Resultfn <> -33 THEN
			BEGIN
				SET v_itemTotValue := 0;
				SET v_typeTotValue := 0;
				SET v_Result := v_Resultfn;
				SET v_msg := '';
				SELECT v_itemTotValue, v_typeTotValue, v_Result;
			END;

			ELSE
			root:
			BEGIN

				
				IF EXISTS( SELECT * FROM char_injection WHERE char_idx = p_charIdx) THEN
				BEGIN
					
					SELECT merc_value, merc_boss_value, tower_value INTO v_mercValue, v_mercBossValue, v_towerValue
					FROM char_injection WHERE char_idx = p_charIdx;

					
					IF p_type = 1 THEN	
					BEGIN
						SET v_typeTotValue := v_mercBossValue + p_value;
					END;

					ELSEIF p_type = 2 THEN	
					BEGIN
						SET v_typeTotValue := v_towerValue + p_value;
					END;

					ELSE			
					BEGIN
						SET v_typeTotValue := v_mercValue + p_value;
					END;
					END IF;
					
					
					
					START TRANSACTION;
						
						CALL usp_char_inven_item_Private_Execute(p_userIdx, p_charIdx, p_itemType, p_itemId, p_itemValue, p_flag, v_itemTotValue, v_Resultfn);
						
						IF v_Resultfn <> 1 THEN	
						BEGIN
							SET v_itemTotValue := 0;
							SET v_typeTotValue := 0;
							SET v_Result := v_Resultfn;
							SET v_msg := '';
							SELECT v_itemTotValue, v_typeTotValue, v_Result;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;

						
						SET v_Resultfn := udf_char_injection_Upd(0, p_charIdx, p_type, v_typeTotValue);
						
						IF v_Resultfn <> 1 THEN	
						BEGIN
							SET v_itemTotValue := 0;
							SET v_typeTotValue := 0;
							SET v_Result := v_Resultfn;
							SET v_msg := '';
							SELECT v_itemTotValue, v_typeTotValue, v_Result;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;
					COMMIT;

					SET v_Result := 1;	
					SET v_msg := '';
					SELECT v_itemTotValue, v_typeTotValue, v_Result;
				END;

				ELSE
				BEGIN
					SET v_typeTotValue := p_value;

					
					
					START TRANSACTION;
						
						CALL usp_char_inven_item_Private_Execute(p_userIdx, p_charIdx, p_itemType, p_itemId, p_itemValue, p_flag, v_itemTotValue, v_Resultfn);
						
						IF v_Resultfn <> 1 THEN	
						BEGIN
							SET v_itemTotValue := 0;
							SET v_typeTotValue := 0;
							SET v_Result := v_Resultfn;
							SET v_msg := '';
							SELECT v_itemTotValue, v_typeTotValue, v_Result;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;

						
						SET v_Resultfn := udf_char_injection_Ins(0, p_charIdx, p_type, v_typeTotValue);
						
						IF v_Resultfn <> 1 THEN	
						BEGIN
							SET v_itemTotValue := 0;
							SET v_typeTotValue := 0;
							SET v_Result := v_Resultfn;
							SET v_msg := '';
							SELECT v_itemTotValue, v_typeTotValue, v_Result;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;
					COMMIT;

					SET v_Result := 1;	
					SET v_msg := '';
					SELECT v_itemTotValue, v_typeTotValue, v_Result;
				END;
				END IF;

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_injection_Reset_Upd` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_injection_Reset_Upd`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
)
BEGIN



	DECLARE	v_errno		INT;
	DECLARE	v_Result	INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
	DECLARE v_type		TINYINT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET v_Result := (v_errno * -1000) + v_Result;
		ROLLBACK;
	END;


	
	
	IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
	BEGIN
		SET v_Result := -4;
		SET v_msg := '';
		SELECT v_Result;
	END;

	ELSE
	BEGIN

		
		CALL usp_userinfo_Check_Sel(p_userIdx, v_Resultfn);
		IF v_Resultfn <> -31 THEN
		BEGIN
			SET v_Result := v_Resultfn;
			SET v_msg := '';
			SELECT v_Result;
		END;

		ELSE
		BEGIN

			
			CALL usp_char_info_Check_Sel(p_userIdx, p_charIdx, v_Resultfn);
			IF v_Resultfn <> -33 THEN
			BEGIN
				SET v_Result := v_Resultfn;
				SET v_msg := '';
				SELECT v_Result;
			END;

			ELSE
			root:
			BEGIN
				SET v_type := 0;

				
				IF EXISTS( SELECT * FROM char_injection WHERE char_idx = p_charIdx) THEN
				BEGIN
					
					
					START TRANSACTION;
						
						SET v_Resultfn := udf_char_injection_Upd(0, p_charIdx, v_type, 0);
						
						IF v_Resultfn <> 1 THEN	
						BEGIN
							SET v_Result := v_Resultfn;
							SET v_msg := '';
							SELECT v_Result;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;
					COMMIT;

					SET v_Result := 1;	
					SET v_msg := '';
					SELECT v_Result;
				END;

				ELSE
				BEGIN
					
					
					
					START TRANSACTION;
						
						SET v_Resultfn := udf_char_injection_Ins(0, p_charIdx, v_type, 0);
						
						IF v_Resultfn <> 1 THEN	
						BEGIN
							SET v_Result := v_Resultfn;
							SET v_msg := '';
							SELECT v_Result;
							ROLLBACK;
							LEAVE root;
						END;
						END IF;
					COMMIT;

					SET v_Result := 1;	
					SET v_msg := '';
					SELECT v_Result;
				END;
				END IF;
			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_injection_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_injection_Sel`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
)
BEGIN



	SELECT merc_value, merc_boss_value, tower_value, UNIX_TIMESTAMP(last_date) as last_date
	FROM char_injection
	WHERE char_idx = p_charIdx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_pk_record_upsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `sp_mmo_char_pk_record_upsert`(
    IN p_char_id BIGINT,
    IN p_pk_type BIGINT,
    IN p_add_pk_point INT,
	IN p_PKDefaultPoint	INT
)
BEGIN
	/*
    @기능 명세서
		@ 기능 설명
			캐릭터의 PK 전적을 업데이트 
			pkType에 따라 전적(kill_count, assist_count, death_count) 중 해당하는 값을 증가
			갱신 시간(last_update_date)을 최신으로 업데이트해야 함.
			기존 데이터가 있으면 업데이트(Update), 없으면 새로 생성(Insert)해야 함.

		@ 예외사항
			캐릭터 정보(char_info 테이블)가 존재하는 경우에만 실행해야 함
	*/

	DECLARE v_errno			INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	DECLARE v_char_exists		INT DEFAULT 0;  -- 캐릭터 존재 여부 변수
   
	-- 반환 값
	DECLARE v_score			BIGINT DEFAULT 0; -- 반환 PK 점수
	DECLARE v_kill_count		BIGINT DEFAULT 0; -- 반환 킬 횟수
	DECLARE v_assist_count		BIGINT DEFAULT 0; -- 반환 도움 횟수
	DECLARE v_death_count		BIGINT DEFAULT 0; -- 반환 사망 횟수
	DECLARE v_last_update_date	BIGINT DEFAULT 0; -- 반환 마지막 갱신 시간
   
   -- 예외 처리
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        SELECT v_result, v_score, v_kill_count, v_assist_count, v_death_count, v_last_update_date;
	END;

    START TRANSACTION;
root:
	BEGIN
		-- 캐릭터 정보 존재 여부 확인
		SELECT COUNT(1) INTO v_char_exists FROM char_info WHERE char_idx = p_char_id;
		IF v_char_exists = 0 THEN
			SET v_result = 6140;
			LEAVE root;
		END IF;

		-- 데이터 존재 여부 확인
		IF EXISTS (SELECT 1 FROM char_pk_record WHERE char_idx = p_char_id) THEN
			-- 기존 데이터 업데이트 (p_pk_type에 따라 증가할 컬럼 결정)
			UPDATE char_pk_record 
			SET score = GREATEST(score + p_add_pk_point, 0),
			kill_count = kill_count + IF(p_pk_type = 1, 1, 0),
			assist_count = assist_count + IF(p_pk_type = 2, 1, 0),
			death_count = death_count + IF(p_pk_type = 0, 1, 0),
			last_update_date = NOW()
			WHERE char_idx = p_char_id;
        
		ELSE
			-- 새로운 데이터 삽입 (p_pk_type에 맞는 컬럼을 1로 설정)
			INSERT INTO char_pk_record (char_idx, score, kill_count, assist_count, death_count)
			VALUES (
				p_char_id, 
				GREATEST(p_PKDefaultPoint + p_add_pk_point, 0), 
				IF(p_pk_type = 1, 1, 0),  -- kill_count 증가
				IF(p_pk_type = 2, 1, 0),  -- assist_count 증가
				IF(p_pk_type = 0, 1, 0)  -- death_count 증가
			);
		END IF;
        
         -- 업데이트 또는 삽입 후, 최종값을 반환 변수에 세팅
        SELECT score, kill_count, assist_count, death_count, UNIX_TIMESTAMP(last_update_date) AS last_update_date
        INTO v_score, v_kill_count, v_assist_count, v_death_count, v_last_update_date
        FROM char_pk_record
        WHERE char_idx = p_char_id;
        
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result, v_score, v_kill_count, v_assist_count, v_death_count, v_last_update_date;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_reddot_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_reddot_delete`(
	IN p_useridx 		BIGINT
,   IN p_charidx 		BIGINT
,	IN p_typeflag 		INT
,   IN p_elementvalue 	BIGINT
)
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
    
		IF 0 = p_typeflag THEN
			IF 0 = p_elementvalue THEN
				DELETE FROM user_reddot WHERE user_idx = p_useridx AND char_idx IN (0, p_charidx)
					AND type_id IN (1, 2); -- equip, material Item
			ELSE
				DELETE FROM user_reddot WHERE user_idx = p_useridx AND char_idx IN (0, p_charidx)
					AND type_id IN (1, 2) AND element_value = p_elementvalue; -- equip, material Item
            END IF;
		ELSE
			IF 0 = p_elementvalue THEN
				DELETE FROM user_reddot WHERE user_idx = p_useridx AND char_idx IN (0, p_charidx)
					AND type_id = p_typeflag;
			ELSE
				DELETE FROM user_reddot WHERE user_idx = p_useridx AND char_idx IN (0, p_charidx)
					AND type_id = p_typeflag AND element_value = p_elementvalue;
            END IF;
        END IF;
    
		-- IF 0 = ROW_COUNT() THEN
		-- 	SET v_result = 101;	
		-- END IF;
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_vigilance_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_vigilance_delete`(
	IN _charidx 			BIGINT
,	IN _target_charidx  	BIGINT
)
    COMMENT '경계대상 삭제'
BEGIN	
	DECLARE result 	INT DEFAULT 0;
	
	
    delete from `char_vigilance` where char_idx = _charidx and vigilance_char_idx = _target_charidx;
	
	IF ROW_COUNT() <= 0 THEN 
		SET result = 100;
	END IF;
	
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_char_vigilance_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_char_vigilance_insert`(
	IN	_charidx 			BIGINT
,	IN	_dbidx 				INT
,	IN	_target_charidx  	BIGINT
,	IN	_max_alert_count	INT
)
    COMMENT '경계대상 추가 .'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;
    
    DECLARE v_char_type 	INT DEFAULT 0;
    DECLARE v_char_exp 	BIGINT DEFAULT 0;
    DECLARE v_nickname	varchar(30) DEFAULT '';
    DECLARE v_is_logon 	TINYINT DEFAULT 0;
    DECLARE v_last_logoff_date DATETIME DEFAULT NOW();
        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
				
		SELECT result, v_char_type as char_type, v_char_exp as char_exp, v_is_logon as is_logon, UNIX_TIMESTAMP(v_last_logoff_date) as last_logoff_date;
	END;	

	root:
    BEGIN
		
		-- SELECT `user_idx`, `base_char_idx` INTO useridx, charidx FROM `userinfo` WHERE `user_idx` = _target_useridx;
		-- IF FOUND_ROWS() <= 0 THEN 
		-- 	SET result = 100;
		--  LEAVE root;
		-- END IF;
		
		SELECT char_type, char_exp, nickname, is_logon, last_logoff_date INTO v_char_type, v_char_exp, v_nickname, v_is_logon, v_last_logoff_date FROM `char_info` WHERE `char_idx` = _target_charidx;
		IF FOUND_ROWS() <= 0 THEN 
			SET result = 18016; -- ERROR_VIGILANCE_NOT_EXIST_TARGET					// 없는 친구.  
            LEAVE root;
		END IF;
        
        IF (SELECT COUNT(*) FROM `char_vigilance` WHERE char_idx = _charidx) >= _max_alert_count THEN 
			SET result = 18015; -- ERROR_VIGILANCE_HAVE_MAX_COUNT = 18015,				// 친구가 가득찼음.  
			LEAVE root;
		END IF;
		
        IF EXISTS (SELECT * FROM `char_vigilance` WHERE char_idx = _charidx AND vigilance_char_idx = _target_charidx) THEN 
			SET result = 18017; -- 18008 // 이미 친구신청을 한 유저임  
            LEAVE root;
		END IF;
		
		INSERT INTO `char_vigilance`(`char_idx`,`vigilance_char_idx`,`vigilance_db_sharding_idx`,`vigilance_nick`,`vigilance_char_type`)
			VALUES(_charidx, _target_charidx, _dbidx, v_nickname, v_char_type);
        
		IF ROW_COUNT() <= 0 THEN 
			SET result = 18018; -- ERROR_VIGILANCE_SQL1,						// 18012		// SQL 입력 실패
			LEAVE root;
		END IF;
	END;
    
	SELECT result, v_char_type as char_type, v_char_exp as char_exp, v_is_logon as is_logon, UNIX_TIMESTAMP(v_last_logoff_date) as last_logoff_date;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_chat_select_charinfo_equipinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_chat_select_charinfo_equipinfo`(
	IN p_char_idx		BIGINT
)
    COMMENT '해당 케릭터의 경험치, 스탯 정보, 장비 아이템 정보'
BEGIN
	
	SELECT ci.char_type, ci.char_exp, ci.battle_power
    FROM char_info ci
    WHERE ci.char_idx = p_char_idx;
	
    
    SELECT cs.stat_type, cs.stat_value
    FROM char_stat cs
    WHERE cs.char_idx = p_char_idx;
    
    
	SELECT cie.item_idx, cie.item_id, cie.quality_grade, cie.item_level
	FROM char_inven_equip cie
	WHERE cie.char_idx = p_char_idx AND equip = 1;
	
    
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.item_idx = ie.item_idx
	WHERE ie.char_idx = p_char_idx and ie.equip = 1;     
    
    
    SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = p_char_idx AND ie.`equip` = 1;
    
    
    SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`char_idx` = p_char_idx AND ie.`equip` = 1;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_chat_select_userinfo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_chat_select_userinfo`(
	IN	p_userid	BIGINT(20)
)
    COMMENT '채팅 서버에서 유저 정보 읽어오기'
BEGIN

	DECLARE char_id 				BIGINT DEFAULT 0;

	SELECT base_char_idx INTO char_id
	FROM userinfo 
	WHERE user_idx = p_userid;
	
    
	SELECT nickname, char_idx, char_type
    FROM char_info
    WHERE char_idx = char_id;
    
    
    SELECT friend_char_idx, friend_nick, friend_db_sharding_idx FROM char_friend WHERE char_idx = char_id;
    
    SELECT block_num, block_char_type, block_nick FROM user_chat_block WHERE user_idx = p_userid;

	-- 내가 등록한 경계대상
    SELECT vigilance_char_idx, vigilance_db_sharding_idx, vigilance_nick, vigilance_char_type, UNIX_TIMESTAMP(reg_date) as reg_date
	FROM `char_vigilance` 
	WHERE char_idx = char_id; -- order by reg_date desc;
    
    -- 나를 등록한 경계대상
    SELECT char_idx
	FROM `char_vigilance` 
	WHERE vigilance_char_idx = char_id;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_add_mileage_gpoint_pkgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_add_mileage_gpoint_pkgold`( 
	_userid 		BIGINT
,	_charid 		BIGINT
,	_addMileage 	INT
,	_addGuildPoint 	INT
,	_addPkGold	 	INT
)
    COMMENT '치트키 = 마일리지, 길드포인트, pk포인트 추가'
BEGIN
	DECLARE v_finalGuildPoint 	INT DEFAULT 0;
    DECLARE v_finalPkGold 		INT DEFAULT 0;
    DECLARE v_finalMileage	 	INT DEFAULT 0;
	
    SET @final_guildpoint = 0;
    SET @final_mileage = 0;
    SET @final_pkgold = 0;
        
	-- UPDATE userinfo
	-- SET guild_point = (@final_guildpoint := guild_point + _addGuildPoint)
		-- pk_gold = (@final_pkgold := pk_gold + _addPkGold)
	-- WHERE user_idx = _userid; 
    
    UPDATE char_info
    SET char_mileage = (@final_mileage := char_mileage + _addMileage)
		, guild_point = (@final_guildpoint := guild_point + _addGuildPoint)
		-- pk_point = (@final_pkgold := pk_point + _addPkGold)
    WHERE char_idx = _charid;
    
    SET v_finalGuildPoint = @final_guildpoint;
    SET v_finalPkGold = @final_pkgold;
    SET v_finalMileage = @final_mileage;
    
    SELECT v_finalMileage, v_finalGuildPoint, v_finalPkGold;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_clearquest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_clearquest`(
	IN	_charid		BIGINT(20)
)
    COMMENT '치트키 = 퀘스트 모두 초기화'
BEGIN

	DELETE FROM char_quest_done
	WHERE char_idx = _charid;
    
	DELETE FROM char_quest_progress
	WHERE char_idx = _charid;
    
	DELETE FROM char_quest_scroll
	WHERE char_idx = _charid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_field_insert_monster_dropitems` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_field_insert_monster_dropitems`( 
	IN _userid BIGINT
,	IN _charid BIGINT
,	IN _addExp BIGINT
,	IN _addGold BIGINT

,   IN _itemId1 	INT,		IN _quality1	INT
,	IN _equipType1	INT,		IN _attrId1		INT,	IN _attrValue1	INT,	IN _ebelong1	INT
,	IN _identified1	TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT
,	IN _equipType2	INT,		IN _attrId2		INT,	IN _attrValue2	INT,	IN _ebelong2	INT
,	IN _identified2	TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT
,	IN _equipType3	INT,		IN _attrId3		INT,	IN _attrValue3	INT,	IN _ebelong3	INT
,	IN _identified3	TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT
,	IN _equipType4	INT,		IN _attrId4		INT,	IN _attrValue4	INT,	IN _ebelong4	INT
,	IN _identified4	TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT
,	IN _equipType5	INT,		IN _attrId5		INT,	IN _attrValue5	INT,	IN _ebelong5	INT
,	IN _identified5	TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT


,	IN	_bookid1 	INT, IN	_Percent1 	INT, IN	_LiftTime1 	INT, IN	_Value1	INT, IN	_belong1	TINYINT
,	IN	_bookid2	INT, IN	_Percent2 	INT, IN	_LiftTime2 	INT, IN	_Value2	INT, IN	_belong2	TINYINT
,	IN	_bookid3 	INT, IN	_Percent3 	INT, IN	_LiftTime3 	INT, IN	_Value3	INT, IN	_belong3	TINYINT
,	IN	_bookid4 	INT, IN	_Percent4 	INT, IN	_LiftTime4 	INT, IN	_Value4	INT, IN	_belong4	TINYINT
,	IN	_bookid5 	INT, IN	_Percent5 	INT, IN	_LiftTime5 	INT, IN	_Value5	INT, IN	_belong5	TINYINT
)
    COMMENT '치트키 = 아이템 추가(장비아이템char_inven_equip, 개수아이템char_inven_item, 스킬 북)'
BEGIN
    
    
    
    DECLARE equip_count INT;
    DECLARE cost_count INT;
    
    DECLARE item_count INT;
    DECLARE item_db_index1 BIGINT;
    DECLARE item_db_index2 BIGINT;
    DECLARE item_db_index3 BIGINT;
    DECLARE item_db_index4 BIGINT;
    DECLARE item_db_index5 BIGINT;

    DECLARE item_insert_count INT;
    DECLARE call_result INT;
	DECLARE call_result1 INT;
	DECLARE call_result2 INT;
	DECLARE call_result3 INT;
	DECLARE call_result4 INT;
	DECLARE call_result5 INT;
    DECLARE result INT;
    
    DECLARE v_item_qty 	INT DEFAULT 0;
    
    DECLARE book_db_index1 BIGINT DEFAULT 0;
    DECLARE book_db_index2 BIGINT DEFAULT 0;
    DECLARE book_db_index3 BIGINT DEFAULT 0;
    DECLARE book_db_index4 BIGINT DEFAULT 0;
    DECLARE book_db_index5 BIGINT DEFAULT 0;
    
    SET result = 0;
    SET call_result = 0;
	SET call_result1 = 0;
	SET call_result2 = 0;
	SET call_result3 = 0;
	SET call_result4 = 0;
	SET call_result5 = 0;
	set equip_count = 0;
	SET cost_count = 0;
    SET item_count = 0;
    SET item_insert_count = 0;    
    SET item_db_index1 = 0;
    SET item_db_index2 = 0;
    SET item_db_index3 = 0;
    SET item_db_index4 = 0;
    SET item_db_index5 = 0;
   
    root:
    BEGIN
	        
        UPDATE char_info
		SET char_exp = (@final_exp := char_exp + _addExp),
			char_gold = char_gold + _addGold, 
			max_inven_size = (@max_inven_size := max_inven_size),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = _charid AND user_idx = _userid;
    
        SELECT COUNT(char_idx) INTO equip_count FROM  `char_inven_equip`
        WHERE char_idx = _charid;
        
        SELECT COUNT(char_idx) INTO cost_count FROM  `char_inven_item`
        WHERE char_idx = _charid;
        
        set item_count = equip_count + cost_count;
        
        
        IF 0 = found_rows() THEN
			SET result = 101;	
            LEAVE root;
		END IF;
        
       
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, 0, _identified1, call_result, item_db_index1);
            IF call_result != 0 THEN
				
				SET item_db_index1 = 0;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, 0, _identified2, call_result, item_db_index2);
            IF call_result != 0 THEN
				
				SET item_db_index2 = 0;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, 0, _identified3, call_result, item_db_index3);
            IF call_result != 0 THEN
				
				SET item_db_index3 = 0;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, 0, _identified4, call_result, item_db_index4);
            IF call_result != 0 THEN
				
				SET item_db_index4 = 0;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, 0, _identified5, call_result, item_db_index5);
            IF call_result != 0 THEN
				
				SET item_db_index5 = 0;
            END IF;
		END IF;
		
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, call_result1, v_item_qty);
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, call_result2, v_item_qty);
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, call_result3, v_item_qty);
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, call_result4, v_item_qty);
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, call_result5, v_item_qty);
		END IF;		
        
        
        IF 0 < _bookid1 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_userid, _charid, _bookid1, _Percent1, _LiftTime1, _Value1, _belong1, call_result, book_db_index1);
        END IF;
        
        IF 0 < _bookid2 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_userid, _charid, _bookid2, _Percent2, _LiftTime2, _Value2, _belong2, call_result, book_db_index2);
        END IF;
        
        IF 0 < _bookid3 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_userid, _charid, _bookid3, _Percent3, _LiftTime3, _Value3, _belong3, call_result, book_db_index3);
        END IF;
        
        IF 0 < _bookid4 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_userid, _charid, _bookid4, _Percent4, _LiftTime4, _Value4, _belong4, call_result, book_db_index4);
        END IF;
        
        IF 0 < _bookid5 THEN
			CALL sp_mmo_notrans_charinvenskillbook_insert(_userid, _charid, _bookid5, _Percent5, _LiftTime5, _Value5, _belong5, call_result, book_db_index5);
        END IF;
		
	END;
    
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
			

	SELECT result, item_db_index1, item_db_index2, item_db_index3, item_db_index4, item_db_index5
			, call_result1, call_result2, call_result3, call_result4, call_result5
            , book_db_index1, book_db_index2, book_db_index3, book_db_index4, book_db_index5;
			
	select char_exp, char_gold from char_info WHERE char_idx = _charid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_goquest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_goquest`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_questtype		INT		
,	IN	_questIndex		INT
,	IN	_questGrade		INT
)
    COMMENT '치트키 = 해당 퀘스트 추가'
BEGIN

	IF _questtype = 0 THEN
		
		INSERT INTO char_quest_scroll (char_idx, user_idx, party_idx, quest_id, quest_value)
								VALUES (_charid, _userid, 0, _questIndex, _questGrade)
		ON DUPLICATE KEY UPDATE char_idx = _charid, user_idx = _userid, party_idx = 0, quest_id = _questIndex,
									quest_value = 0;    
 
    ELSE
		
		DELETE FROM char_quest_done
		WHERE char_idx = _charid AND quest_type = _questtype;
		
		DELETE FROM char_quest_progress
		WHERE char_idx = _charid AND quest_type = _questtype; 
        
		INSERT INTO char_quest_progress(`char_idx`, `quest_type`, `quest_id`, `quest_value`, `quest_grade`, `reset_cnt`) 
		VALUES (_charid, _questtype, _questIndex, 0, _questGrade, 0);		
        
    END IF;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_insert_cash` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_insert_cash`( 
	_userid 	BIGINT
,	_AValue 	INT
,	_BValue 	INT
)
    COMMENT '치트키 = 캐쉬 넣기'
BEGIN
    
	UPDATE userinfo
	SET cashA_Free = (cashA_Free + _AValue),
		cashB_Free = (cashB_Free + _BValue)
	WHERE user_idx = _userid; 
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_pkpoint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_pkpoint`( 
	IN	_charid 			BIGINT,
    IN	_pkstate	 		TINYINT,
    IN	_pkpoint			INT
)
    COMMENT 'pk 포인트 강제 셋팅'
BEGIN
    DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_final_pkpoint			INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_final_pkpoint;
	END;
    
    START TRANSACTION;
    
    root:
	BEGIN
		SELECT pk_point INTO v_final_pkpoint FROM char_info WHERE char_idx = _charid;
        IF FOUND_ROWS() = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
        
		UPDATE char_info
		SET pk_point = _pkpoint, pk_state = _pkstate
		WHERE char_idx = _charid;
		
		SET v_final_pkpoint = @_pkpoint;
    
	END;
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    SELECT v_result, v_final_pkpoint;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_setstat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_setstat`(
	IN	_charid			BIGINT(20)
,	IN	_value			INT(11)
)
    COMMENT '치트키 = 스탯 초기화 및 포인트 부여'
BEGIN
	
    UPDATE char_stat 
    SET stat_value = 0
    WHERE char_idx = _charid;

	UPDATE char_info
    SET char_stat_point = _value
    WHERE char_idx = _charid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_cheat_update_exp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_cheat_update_exp`( 
	IN _charid 	BIGINT
,	IN _exp 	BIGINT
)
    COMMENT '치트키 = 경험치 셋팅/레벨 셋팅임..'
BEGIN  
	UPDATE char_info 
	SET char_exp = (@final_exp := _exp),
		char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
	WHERE char_idx = _charid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_guild_donation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_guild_donation`( 
	p_UserID	 		BIGINT
,	p_CharID			BIGINT
,	p_DonationType		TINYINT	-- 0:gold, 1:cashA
,	p_DonationQty		BIGINT		-- 소모 재화량
,	p_GuildPointQty		BIGINT
,	p_exp				BIGINT
,	p_DayDonationMax	INT
,	p_DonationCount		INT
,	IN	p_guildmaxexp		BIGINT
)
    COMMENT '길드에 재화 기부'
BEGIN
	DECLARE v_errno					INT DEFAULT 0;
    DECLARE v_result 					INT DEFAULT 0;
    
    DECLARE v_DLRT						DATETIME;

	DECLARE v_donationCnt				INT DEFAULT 0;
	DECLARE v_donationDateTime			DATETIME DEFAULT NOW();
    DECLARE v_newDay					BOOL DEFAULT FALSE;		

    DECLARE v_final_gold 				BIGINT DEFAULT 0;
    DECLARE v_finalCashA 				BIGINT DEFAULT 0;
    DECLARE v_finalGuildPoint			BIGINT DEFAULT 0;		
    DECLARE v_finalDonationCnt			INT DEFAULT 0;		
    
    DECLARE v_guild_idx 				BIGINT DEFAULT 0;
    DECLARE v_final_exp 				BIGINT DEFAULT 0;
	DECLARE v_weekly_contribution		INT DEFAULT 0;
    DECLARE v_final_my_contribution	BIGINT DEFAULT 0;
    DECLARE v_last_play_date			DATETIME;
    
    DECLARE v_total_guild_donation_value	BIGINT DEFAULT 0;
    
    DECLARE v_final_tmp_GuildPoint				BIGINT DEFAULT 0;
    DECLARE v_final_tmp_DonationCnt			INT DEFAULT 0;
	DECLARE v_total_tmp_guild_donation_value	BIGINT DEFAULT 0;
    DECLARE v_tmp_guild_exp					BIGINT DEFAULT 0;
    
    DECLARE v_montime					DATETIME;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_gold, v_finalCashA, v_finalGuildPoint, v_finalDonationCnt, UNIX_TIMESTAMP(v_donationDateTime) AS v_donationDateTime
			,v_final_exp, v_weekly_contribution, v_final_my_contribution, v_total_guild_donation_value;
	END;
    
    root:
    BEGIN
    
		SET v_DLRT = fn_Get_DateLineReferenceTime();
        
        -- 
        SELECT guild_idx, guild_contribution, weekly_contribution, last_play_date INTO v_guild_idx, v_final_my_contribution, v_weekly_contribution, v_last_play_date FROM guild_member WHERE char_idx = p_CharID;
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 101;
			LEAVE root;
        END IF;
        
        -- weekly_contribution init
		SET v_montime = fn_Get_ThisWeekMonday5am();
		IF v_montime < current_timestamp() AND v_montime > v_last_play_date THEN
			SET v_weekly_contribution = 0;
        END IF;
        -- 
        
        -- v_final_gold
        SELECT char_gold INTO v_final_gold FROM char_info WHERE char_idx = p_CharID;
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 108;
			LEAVE root;
        END IF;
        
        -- v_finalCashA
        SELECT cashA + cashA_Free INTO v_finalCashA FROM userinfo WHERE user_idx = p_UserID;
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 109;
			LEAVE root;
        END IF;
        
        IF 0 = p_DonationType OR 1 = p_DonationType THEN
			SELECT guild_donation_count, guild_donation_last_update INTO v_donationCnt, v_donationDateTime
			FROM char_info
			WHERE char_idx = p_CharID;
        ELSE								
			SET v_result = 6201;
			LEAVE root;
        END IF;
        
        IF 0 = FOUND_ROWS() THEN
			SET v_result = 102;		
			LEAVE root;
        END IF;
        
        IF v_donationDateTime >= v_DLRT THEN
        BEGIN
			IF p_DayDonationMax < v_donationCnt + p_DonationCount THEN
				SET v_result = 103;		
                LEAVE root;
            END IF;
		END;
        ELSE
			SET v_newDay = true;
        END IF;
        
        SET v_donationDateTime = NOW();
    
		START TRANSACTION;
        
        IF p_DonationQty <= 0 THEN
			SET v_result = 104;
			LEAVE root;
        END IF;
        
        IF 0 < p_DonationType THEN			-- 1:cashA
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_DonationQty, v_finalCashA, v_result);
			
			UPDATE guild
			SET guild_cashA = guild_cashA + p_DonationQty
            WHERE guild_idx = v_guild_idx;
            
			IF 0 = ROW_COUNT() THEN
				SET v_result = 6201;	
				LEAVE root;
            END IF;            
            
			SELECT guild_cashA INTO v_total_tmp_guild_donation_value
			FROM guild
		    WHERE guild_idx = v_guild_idx;
            
        ELSE								-- 0:gold
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DonationQty, v_final_gold, v_result);
            
			UPDATE guild
			SET guild_gold = guild_gold + p_DonationQty
            WHERE guild_idx = v_guild_idx;
            
            IF 0 = ROW_COUNT() THEN
				SET v_result = 6202;	
				LEAVE root;
            END IF;            
            
			SELECT guild_gold INTO v_total_tmp_guild_donation_value
			FROM guild
		    WHERE guild_idx = v_guild_idx;
            
        END IF;
		
		IF v_result <> 0 THEN 
			LEAVE root;
		END IF;
        
		
        IF p_exp > 0 THEN
			SET v_final_my_contribution = v_final_my_contribution + p_exp;
			SET v_weekly_contribution = v_weekly_contribution + p_exp;
            
            UPDATE guild_member SET guild_contribution = v_final_my_contribution, weekly_contribution = v_weekly_contribution, last_play_date = current_timestamp() WHERE guild_idx = v_guild_idx AND char_idx = p_CharID;
			IF row_count() <= 0 THEN
				SET v_result = 105;
				LEAVE root;	
			END IF;
			
			UPDATE guild SET exp = (
				CASE
					WHEN (exp + p_exp) > p_guildmaxexp THEN (p_guildmaxexp) 
                    ELSE exp + p_exp 
				END
				) WHERE guild_idx = v_guild_idx;
                
			IF row_count() <= 0 THEN
				SET v_result = 106;
				LEAVE root;	
			END IF;
            
			SELECT exp INTO v_tmp_guild_exp
			FROM guild
			WHERE guild_idx = v_guild_idx;
            
            SET v_final_exp = v_tmp_guild_exp;
        END IF;
        
        IF 0 < p_GuildPointQty THEN
        BEGIN
			UPDATE char_info
				SET guild_point = guild_point + p_GuildPointQty,
					guild_donation_count = IF(true = v_newDay, p_DonationCount, guild_donation_count + p_DonationCount), 
                    guild_donation_last_update = v_donationDateTime
				WHERE char_idx = p_CharID;
        
            IF 0 = ROW_COUNT() THEN
				SET v_result = 107;	
				LEAVE root;
            END IF;    
            
			SELECT guild_point, guild_donation_count INTO v_final_tmp_GuildPoint, v_final_tmp_DonationCnt
			FROM char_info
			WHERE char_idx = p_CharID;
            
            SET v_finalGuildPoint = v_final_tmp_GuildPoint;
            SET v_finalDonationCnt = v_final_tmp_DonationCnt;  
            SET v_total_guild_donation_value = v_total_tmp_guild_donation_value;
		END;
        END IF;
	END;
	
	if 0 = v_result THEN
		COMMIT;
		SET v_result = 1;
	ELSE
		ROLLBACK;
	END IF; 
    
    SELECT v_result, v_final_gold, v_finalCashA, v_finalGuildPoint, v_finalDonationCnt, UNIX_TIMESTAMP(v_donationDateTime) AS v_donationDateTime
		,v_final_exp, v_weekly_contribution, v_final_my_contribution, v_total_guild_donation_value;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_itemjewels_delete_unmount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_itemjewels_delete_unmount`(
	IN 	p_UserID		BIGINT
,	IN 	p_CharID		BIGINT
,	IN	p_ItemIDX		BIGINT		
,	IN	p_JewelSlot		INT
,	IN  p_CostGold		BIGINT		
)
    COMMENT '장비 아이템에 장착된 슬롯 보석 삭제'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_final_gold	BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_gold; 
	END;  


	START TRANSACTION;
    
	root:
    BEGIN
		IF 0 < p_CostGold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_CostGold, v_final_gold, v_result);
			IF v_result <> 0 THEN 
				LEAVE root;
			END IF;     
		END IF;
	
		DELETE FROM item_jewels
		WHERE item_idx = p_ItemIDX AND slot_id = p_JewelSlot;

		IF ROW_COUNT() = 0 THEN
			SET v_result = 1073;	
		END IF;
	END;
      
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;        
	
	SELECT v_result, v_final_gold;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_itemjewels_delete_unmountall` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_itemjewels_delete_unmountall`(
	IN	_itemidx		BIGINT		
)
    COMMENT '장비 아이템에 장착된 보석 전부 삭제'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
   
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result; 
	END;  
    
	START TRANSACTION;
    
    root:
    BEGIN
    
        
        CALL sp_mmo_notrans_itemjewels_delete_all(_itemidx, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;
 
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_itemjewels_delete_unmount_toinven` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_itemjewels_delete_unmount_toinven`(
	IN 	p_UserID			BIGINT
,	IN 	p_CharID			BIGINT
,	IN	p_ItemIDX			BIGINT	
,	IN	p_JewelSlot			INT		
,	IN  p_CostCashA			BIGINT	
, 	IN  p_JewelItemType		INT 	
,	IN 	p_JewelItemID		INT 	
,	IN 	p_JewelItemAddQty	INT		
)
    COMMENT '장비 아이템에 장착된 슬롯 보석 가방으로 이동'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
	DECLARE v_final_casha		BIGINT DEFAULT 0;	
    DECLARE v_final_item_count	INT DEFAULT 0;		
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_casha, v_final_item_count;
	END;  


	START TRANSACTION;
    
	root:
    BEGIN
		
		IF 0 < p_CostCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_cashA, v_result);
			IF v_result <> 0 THEN 
				LEAVE root;
			END IF;     
		END IF;

		
		DELETE FROM item_jewels
		WHERE item_idx = p_ItemIDX AND slot_id = p_JewelSlot;
		IF ROW_COUNT() = 0 THEN
			SET v_result = 1073;
			LEAVE root;
		END IF;

        
		CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_JewelItemType, p_JewelItemID, p_JewelItemAddQty, v_result, v_final_item_count);
		IF v_result != 0 THEN
			LEAVE root;
		END IF;
	END;
      
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;        
	
	SELECT v_result, v_final_casha, v_final_item_count;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_itemjewels_insert_mount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_itemjewels_insert_mount`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT

,	IN	_deletegold		INT		
,	IN	_deleteCashA	INT
,	IN 	_materialitemid		INT
,	IN 	_materialitemcount	INT

,	IN	_itemidx		BIGINT		
,	IN	_jewelslot		INT			
,	IN	_jewelitemid	INT			
)
    COMMENT '장비 아이템에 보석 장착(장착이 있는 경우 덮어씌움)'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE result 			INT DEFAULT 0;
    
	DECLARE v_final_gold 			BIGINT DEFAULT 0;
	DECLARE v_finalCashA			BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;
    
    DECLARE slot_qty 		BIGINT DEFAULT 0;	
    DECLARE jewel_qty 		BIGINT DEFAULT 0;	
    DECLARE final_itemqty 	INT DEFAULT 0;		
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result, final_itemqty, v_resitem_final_qty, v_final_gold, v_finalCashA;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
    
		CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, result);
		IF result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, result);
		IF result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_finalCashA, result);		
			IF result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, result);
		IF result != 0 THEN 
			LEAVE root;
		END IF;

		IF 0 < _materialitemid AND 0 < _materialitemcount THEN
                
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _materialitemid, _materialitemcount, v_resitem_final_qty, result);
			IF result <> 0 THEN
				LEAVE root;
			END IF;
                    
		END IF;
    
		
        SELECT quality_grade INTO slot_qty FROM char_inven_equip
        WHERE item_idx = _itemidx AND char_idx = _charid;
        
        IF FOUND_ROWS() = 0 THEN
			SET result = 101;		
			LEAVE root;
        END IF;
        
        
        
		DELETE FROM item_jewels
		WHERE item_idx = _itemidx AND slot_id = _jewelslot;

		IF ROW_COUNT() = 0 THEN
			
			SELECT COUNT(item_idx) INTO jewel_qty FROM item_jewels
			WHERE item_idx = _itemidx;
        
			IF slot_qty <= jewel_qty THEN
				SET result = 102;		
				LEAVE root;
			END IF;
		END IF;
    
 
        
        CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _jewelitemid, 1, final_itemqty, result);
		IF result <> 0 THEN
			LEAVE root;
		END IF;

        
        CALL sp_mmo_notrans_itemjewels_insert_equip(_userid, _charid, _itemidx, _jewelitemid, _jewelslot, result);
		IF result <> 0 THEN
			LEAVE root;
		END IF;
        
	END;

	
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT result, final_itemqty, v_resitem_final_qty, v_final_gold, v_finalCashA;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_itemoption_insert_unlock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_itemoption_insert_unlock`(
	IN	p_UserID 		BIGINT		
,	IN	p_CharID 		BIGINT		
,	IN	p_ItemIdx		BIGINT
,	IN	p_DeleteGold	BIGINT
,	IN	p_DeleteCashA	BIGINT
-- ,	IN	p_CostCashB		BIGINT
,	IN	p_ResItemID		INT
,	IN	p_ResItemCnt	INT
,	IN	p_OptionID		INT			
,	IN	p_OptionValue	INT			
,	IN	p_OptionSlot	INT			
)
    COMMENT '장비 아이템 옵션 추가'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
    DECLARE v_result 				INT DEFAULT 0;

	DECLARE v_final_gold 			BIGINT DEFAULT 0;
	DECLARE v_final_cashA 			BIGINT DEFAULT 0;
-- 	DECLARE v_final_cashB 			BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
	DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
	DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
	
-- 	DECLARE v_cashB_old				BIGINT DEFAULT 0;
-- 	DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
-- 	DECLARE v_cashB_new				BIGINT DEFAULT 0;
-- 	DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;	
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
	END;


	START TRANSACTION;
    
    root:
    BEGIN
    
		CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_DeleteGold, v_final_gold, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;

		IF 0 < p_ResItemID THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ResItemID, p_ResItemCnt, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;        
        END IF;
        
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
     
		IF 0 < p_DeleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_DeleteCashA, v_final_cashA, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        IF 0 = p_DeleteCashA THEN
			SET v_final_cashA = v_cashA_new + v_cashA_Free_new;
        END IF;
		
-- 		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_old, v_cashB_Free_old, v_result);
-- 		IF v_result != 0 THEN 
-- 			LEAVE root;
-- 		END IF;
	
-- 		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
-- 		IF v_result <> 0 THEN
-- 			LEAVE root;
-- 		END IF;
        
-- 		CALL sp_mmo_notrans_userinfo_select_cashB(p_UserID, v_cashB_new, v_cashB_Free_new, v_result);
-- 		IF v_result != 0 THEN 
-- 			LEAVE root;
-- 		END IF; 
        
        
		CALL sp_mmo_notrans_itemoption_insert(p_ItemIdx, p_OptionID, p_OptionSlot, p_OptionValue, v_result);
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;

	END;

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;


	SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;	
-- 	SELECT v_result, v_final_gold, v_resitem_final_qty, v_final_cashB, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_itemoption_update_change2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_itemoption_update_change2`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT
,	IN	p_ItemIdx		BIGINT		
,	IN	p_DeleteCashA	BIGINT		
,	IN	p_DeleteCashB	BIGINT
,	IN	p_OptionID1		INT			
,	IN	p_OptionValue1	INT			
,	IN	p_OptionSlot1	INT			
,	IN	p_OptionID2		INT			
,	IN	p_OptionValue2	INT			
,	IN	p_OptionSlot2	INT			
,	IN	p_OptionID3		INT			
,	IN	p_OptionValue3	INT			
,	IN	p_OptionSlot3	INT			
,	IN	p_OptionID4		INT			
,	IN	p_OptionValue4	INT			
,	IN	p_OptionSlot4	INT			
,	IN	p_OptionID5		INT			
,	IN	p_OptionValue5	INT			
,	IN	p_OptionSlot5	INT			
,	IN	p_OptionID6		INT			
,	IN	p_OptionValue6	INT			
,	IN	p_OptionSlot6	INT			
-- ,	IN	p_OptionID7		INT			
-- ,	IN	p_OptionValue7	INT			
-- ,	IN	p_OptionSlot7	INT			
)
    COMMENT '장비 아이템 옵션 변경'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
    DECLARE v_result 				INT DEFAULT 0;

    DECLARE v_final_cashA 			BIGINT DEFAULT 0;
    DECLARE v_final_cashB 			BIGINT DEFAULT 0;
	
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_cashA, v_final_cashB;
	END;


	START TRANSACTION;
    
    root:
    BEGIN

        
		IF 0 < p_DeleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_DeleteCashA, v_final_cashA, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		
		IF 0 < p_DeleteCashB THEN
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_DeleteCashB, v_final_cashB, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
		
        IF 0 < p_OptionID1 THEN
			CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID1, p_OptionSlot1, p_OptionValue1, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < p_OptionID2 THEN
			CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID2, p_OptionSlot2, p_OptionValue2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
		
        IF 0 < p_OptionID3 THEN
			CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID3, p_OptionSlot3, p_OptionValue3, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < p_OptionID4 THEN
			CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID4, p_OptionSlot4, p_OptionValue4, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < p_OptionID5 THEN
			CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID5, p_OptionSlot5, p_OptionValue5, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < p_OptionID6 THEN
			CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID6, p_OptionSlot6, p_OptionValue6, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        -- IF 0 < p_OptionID7 THEN
		-- 	CALL sp_mmo_notrans_itemoption_update(p_ItemIdx, p_OptionID7, p_OptionSlot7, p_OptionValue7, v_result);
		-- 	IF v_result <> 0 THEN
		-- 		LEAVE root;
		-- 	END IF;           
        -- END IF;        
	END;
	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
	
	SELECT v_result, v_final_cashA, v_final_cashB;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_new_charinfo_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `sp_mmo_new_charinfo_insert`(
	IN p_UserID		BIGINT
,	IN p_Character 	INT
,	IN p_NickName	VARCHAR(30) CHARACTER SET UTF8MB4
,	IN p_DefaultRegion INT
,	IN p_BaseGold INT
,	IN p_InvenBaseSize INT
,	IN id_array VARCHAR(1000)
)
    COMMENT '새로운 캐릭터 생성하기'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		SMALLINT DEFAULT 0;
	
    DECLARE v_char_slot_count	TINYINT DEFAULT 0;
    DECLARE v_char_count	TINYINT DEFAULT 0;
    DECLARE v_char_idx		BIGINT DEFAULT 0;
    
    # Status
    DECLARE id_array_local VARCHAR(1000);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id INT;
    DECLARE v_status_value INT;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN
		
		IF (p_NickName IS NULL) || (p_NickName = '') || (p_NickName = ' ') THEN
		BEGIN
			SET v_result = 1;	
			LEAVE root;
		END;
        END IF;
		
		
		SET p_NickName := REPLACE(p_NickName, ' ', '');        

		
        -- IF (p_Character != 10101001) AND (p_Character != 10102001) AND (p_Character != 10103001) AND (p_Character != 10104001) THEN
        -- BEGIN
		-- 	SET v_result = 2;	
        --    LEAVE root;
        -- END;
        -- END IF;
	
		
		IF NOT EXISTS( SELECT * FROM userinfo WHERE user_idx = p_UserID ) THEN
			SET v_result = 3;	
			LEAVE root;
		END IF;
        
    	
		IF EXISTS( SELECT * FROM userinfo WHERE nick = p_NickName ) THEN
			SET v_result = 4;	
            LEAVE root;
        END IF;        
        
        
        IF EXISTS( SELECT * FROM char_info WHERE nickname = p_NickName ) THEN
			SET v_result = 5;	
            LEAVE root;
        END IF;  
        
        SELECT char_slot_count INTO v_char_slot_count FROM userinfo WHERE user_idx = p_UserID;
        SELECT COUNT(user_idx) INTO v_char_count FROM char_info WHERE user_idx = p_UserID;
    
		IF v_char_slot_count <= v_char_count THEN
			SET v_result = 6;		
			LEAVE root;		
        END IF;

        
        START TRANSACTION;
        
        subroot:
        BEGIN        
			
            INSERT INTO char_info (user_idx, char_type, char_gold, max_mmobag_size, last_region, max_inven_size, nickname)
			VALUES (p_UserID, p_Character, p_BaseGold, 5, p_DefaultRegion, p_InvenBaseSize, p_NickName);

			IF ROW_COUNT() <> 1 THEN
				SET v_result = 7;	
				LEAVE subroot;
			END IF;
            
            SET v_char_idx = LAST_INSERT_ID();
            
            -- Status begin
			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_status_id := CAST(current_id as unsigned);
                SET v_status_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_status_id AND 0 < v_status_value THEN
					INSERT INTO char_stat (char_idx, stat_type, stat_value)
											VALUES (v_char_idx, v_status_id, v_status_value)
						ON DUPLICATE KEY UPDATE stat_value = IF( 0 < (stat_value + v_status_value), stat_value + v_status_value, 0);
												
					IF 0 = row_count() THEN
						SET v_result = 119;	
                        LEAVE subroot;
					END IF;	
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
			-- Status End
            
		END;
                
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;

    END;
	
    IF 0 = v_result THEN
		SELECT v_result, char_idx, char_type, char_exp, job_step, battle_power, nickname, pk_point, UNIX_TIMESTAMP(last_logoff_date) AS last_logoff_date, UNIX_TIMESTAMP(reg_date) AS reg_date
			FROM char_info WHERE char_idx = v_char_idx;
	ELSE
		SELECT v_result;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charbuff_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charbuff_insert`( 
	IN 	_charid 		BIGINT
,	IN 	_buffid 		INT		
,	IN 	_buffvalue0		INT			
,	IN 	_buffvalue1		INT			
,	IN 	_buffvalue2		INT			
,	IN 	_buffvalue3		INT			
,	IN 	_buffvalue4		INT			
,	IN 	_buffvalue5		INT			
,	IN 	_buffvalue6		INT			
,	IN 	_buffvalue7		INT			
,	IN 	_buffvalue8		INT			
,	IN 	_buffvalue9		INT			
,	IN 	_bufftime 		INT		
,	IN 	_groupid 		INT
,	IN 	_contentid 		INT
,	IN 	_flagview 		TINYINT
,	IN 	_flagdeath 		TINYINT
,	IN 	_contenttype 	INT
,	IN 	_subtype 		INT
,	OUT	_result			INT
)
    COMMENT '캐릭터 버프 추가'
BEGIN

    SET _result = 0;
    
       
	root:
	BEGIN    
    
		IF _bufftime <= 0 THEN
			SET _result = 1131;	
		    LEAVE root;
        END IF;
           
		INSERT INTO char_buff (char_idx, buff_id, buff_value, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_time, remain_time, group_id, flag_view, flag_death, content_id,content_type,subtype)
							VALUES (_charid, _buffid, _buffvalue0, _buffvalue1, _buffvalue2, _buffvalue3, _buffvalue4, _buffvalue5, _buffvalue6, _buffvalue7, _buffvalue8, _buffvalue9, DATE_ADD(NOW(), INTERVAL _bufftime second), _bufftime, _groupid, _flagview, _flagdeath, _contentid,_contenttype,_subtype)
		ON DUPLICATE KEY UPDATE char_idx = _charid, buff_id = _buffid, buff_value = _buffvalue0, buff_value_1 = _buffvalue1, buff_value_2 = _buffvalue2, buff_value_3 = _buffvalue3, buff_value_4 = _buffvalue4, 
								buff_value_5 = _buffvalue5, buff_value_6 = _buffvalue6, buff_value_7 = _buffvalue7, buff_value_8 = _buffvalue8, buff_value_9 = _buffvalue9, 
								 buff_time = DATE_ADD(NOW(), INTERVAL _bufftime second)
                                 , remain_time = _bufftime
                                 , group_id = _groupid, flag_view = _flagview, flag_death = _flagdeath, content_id = _contentid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1132;	
		    LEAVE root;
		END IF;
     
	END;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_delete_gold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_delete_gold`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_decgold 		BIGINT
,	OUT	_finalgold		BIGINT
,	OUT	_result			INT
)
    COMMENT '캐릭터 금전 삭감'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _decgold < 0 THEN
			SET _result = 1061;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_gold = (@final_gold := char_gold - _decgold)
		WHERE char_idx = _charid AND user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1062;	
		    LEAVE root;
		END IF;
        
        IF @final_gold < 0 THEN
			SET _result = 1063;	
            LEAVE root;
        END IF;
        
        SET _finalgold = @final_gold;        
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_delete_guildpoint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_delete_guildpoint`(
	IN 	_charid 			BIGINT
,	IN 	_decguildpoint 		INT
,	OUT	_finalguildpoint	INT
,	OUT	_result				INT
)
    COMMENT '유저 길드포인트 삭감'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _decguildpoint < 0 THEN
			SET _result = 1101;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET guild_point = (@finalguildpoint := guild_point - _decguildpoint)
		WHERE char_idx = _charid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1102;	
		    LEAVE root;
		END IF;
        
        IF @finalguildpoint < 0 THEN
			SET _result = 1103;	
            LEAVE root;
        END IF;
        
        SET _finalguildpoint = @finalguildpoint;
	END;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_delete_mileage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_delete_mileage`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_decmileage		BIGINT
,	OUT	_finalmileage	BIGINT
,	OUT	_result			INT
)
    COMMENT '캐릭터 마일리지 삭감'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _decmileage < 0 THEN
			SET _result = 1081;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_mileage = (@final_mileage := char_mileage - _decmileage)
		WHERE char_idx = _charid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1082;	
		    LEAVE root;
		END IF;
        
        IF @final_mileage < 0 THEN
			SET _result = 1083;	
            LEAVE root;
        END IF;
        
        SET _finalmileage = @final_mileage;        
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_exp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_exp`( 
	IN 	p_CharID 		BIGINT
,	IN 	p_AddExp		BIGINT
,	OUT	p_FinalExp		BIGINT
,	OUT	p_Result		INT
)
    COMMENT '캐릭터 금전 추가'
BEGIN

	SET p_Result = 1192;
        
	root:
	BEGIN    
    
		IF p_AddExp <= 0 THEN
			SET p_Result = 1191;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_exp = (@final_exp := char_exp + p_AddExp),
			char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
		WHERE char_idx = p_CharID;
        
		IF 1 = ROW_COUNT() THEN			
		    SET p_FinalExp 	= @final_exp; 
            SET p_Result 	= 0;
		END IF;
   
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_expgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_expgold`( 
	IN _userid 			BIGINT
,	IN _charid 			BIGINT
,	IN _addexp 			BIGINT
,	IN _addgold 		BIGINT
,	OUT _finalexp		BIGINT
,	OUT _finalgold		BIGINT
,	OUT _result			INT
)
    COMMENT '캐릭터 경험치/금전 추가'
BEGIN

	SET _result 	= 1181;	
    SET _finalexp 	= 0;
    SET _finalgold 	= 0;
    
    
	UPDATE char_info 
	SET char_exp = (@final_exp := char_exp + _addexp), 
		char_gold = (@final_gold := char_gold + _addgold),
		char_exp_high = IF(char_exp_high < @final_exp, @final_exp, char_exp_high)
	WHERE char_idx = _charid AND user_idx = _userid;
       
	IF 0 < ROW_COUNT() THEN
		SET _finalexp 	= @final_exp;
		SET _finalgold 	= @final_gold;
		SET _result 	= 0;
	END IF;

	    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_gold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_gold`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_incgold 		BIGINT
,	OUT	_finalgold		BIGINT
,	OUT	_result			INT
)
    COMMENT '캐릭터 금전 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _incgold <= 0 THEN
			SET _result = 1191;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_gold = (@final_gold := char_gold + _incgold)
		WHERE char_idx = _charid AND user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1192;	
		    LEAVE root;
		END IF;
        
        IF @final_gold < 0 THEN
			SET _result = 1193;	
            LEAVE root;
        END IF;
        
        SET _finalgold = @final_gold;        
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_guildpoint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_guildpoint`( 
	IN 	_charid 			BIGINT
,	IN 	_incguildpoint 		INT
,	OUT	_finalguildpoint	INT
,	OUT	_result				INT
)
    COMMENT '유저 길드포인트 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _incguildpoint < 0 THEN
			SET _result = 1241;	
		    LEAVE root;        
        END IF;
        
		UPDATE char_info 
		SET guild_point = (@finalguildpoint := guild_point + _incguildpoint)
		WHERE char_idx = _charid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1242;	
		    LEAVE root;
		END IF;
        
        IF @_finalguildpoint < 0 THEN
			SET _result = 1243;	
            LEAVE root;
        END IF;
        
        SET _finalguildpoint = @finalguildpoint;
	END;    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_mileage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_mileage`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_incmileage		BIGINT
,	OUT	_finalmileage	BIGINT
,	OUT	_result			INT
)
    COMMENT '캐릭터 마일리지 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _incmileage < 0 THEN
			SET _result = 1221;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_mileage = (@final_mileage := char_mileage + _incmileage)
		WHERE char_idx = _charid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1222;	
		    LEAVE root;
		END IF;
        
        IF @final_mileage < 0 THEN
			SET _result = 1223;	
            LEAVE root;
        END IF;
        
        SET _finalmileage = @final_mileage;
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_mineexp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_mineexp`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_inc_mineexp	BIGINT
,	OUT	_final_mineexp	BIGINT
,	OUT	_result			INT
)
    COMMENT '캐릭터 채집 숙련도 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _inc_mineexp <= 0 THEN
			SET _result = 1181;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_mine_exp = (@_final_mineexp := char_mine_exp + _inc_mineexp)
		WHERE char_idx = _charid AND user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1182;	
		    LEAVE root;
		END IF;
        
        IF @_final_mineexp < 0 THEN
			SET _result = 1183;	
            LEAVE root;
        END IF;
        
        SET _final_mineexp = @_final_mineexp;        
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinfo_insert_skillpoint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinfo_insert_skillpoint`( 
	IN 	_userid 			BIGINT
,	IN 	_charid 			BIGINT
,	IN 	_incskillpoint		INT
,	OUT	_finalskillpoint	INT
,	OUT	_result				INT
)
    COMMENT '캐릭터 스킬포인트 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _incskillpoint < 0 THEN
			SET _result = 1261;	
		    LEAVE root;        
        END IF;
    
		UPDATE char_info 
		SET char_skill_point = (@finalskillpoint := char_skill_point + _incskillpoint)
		WHERE char_idx = _charid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1262;	
		    LEAVE root;
		END IF;
        
        IF @finalskillpoint < 0 THEN
			SET _result = 1263;	
            LEAVE root;
        END IF;
        
        SET _finalskillpoint = @finalskillpoint;
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenbag_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenbag_delete`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	OUT	_result			INT
)
    COMMENT '가차 아이템 삭제'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _itemidx <= 0 THEN
			SET _result = 1021;	
		    LEAVE root;        
        END IF;

		DELETE FROM char_inven_bag
		WHERE char_idx = _charid AND item_idx = _itemidx;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1022;	
            LEAVE root;
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequiprestorebox_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequiprestorebox_delete`( 
	IN 	p_CharID 			BIGINT	
, 	IN 	p_ItemDBIdx			BIGINT 	
,	OUT p_result			INT 	
)
    COMMENT '복구함 장비 아이템 삭제'
BEGIN
	SET p_result = 0;

	root:
	BEGIN    
		
		DELETE FROM char_inven_equip_restorebox
		WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;

        IF ROW_COUNT() = 0 THEN
			SET p_result = 1032;	
            LEAVE root;
        END IF;

		
		DELETE FROM item_attribute
		WHERE item_idx = p_ItemDBIdx;
				
		
		DELETE FROM item_jewels
		WHERE item_idx = p_ItemDBIdx;

		
		DELETE FROM item_option
		WHERE item_idx = p_ItemDBIdx;
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequiprestorebox_delete_expire` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequiprestorebox_delete_expire`( 
	IN 	p_CharID 			BIGINT	
)
    COMMENT '복구함 장비 아이템 날짜 지난거 정리'
BEGIN

		
        DELETE IA 
        FROM item_attribute IA, char_inven_equip_restorebox RB
        WHERE IA.item_idx = (RB.item_idx) AND RB.char_idx = p_CharID AND RB.expire_date < NOW();
                
        DELETE IJ
        FROM item_jewels IJ, char_inven_equip_restorebox RB
        WHERE IJ.item_idx = (RB.item_idx) AND RB.char_idx = p_CharID AND RB.expire_date < NOW();
        
        DELETE IO
        FROM item_option IO, char_inven_equip_restorebox RB
        WHERE IO.item_idx = (RB.item_idx) AND RB.char_idx = p_CharID AND RB.expire_date < NOW();
        		
		DELETE FROM char_inven_equip_restorebox
		WHERE char_idx = p_CharID AND expire_date < NOW();
        
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequiprestorebox_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequiprestorebox_insert`( 
	IN 	p_CharID 			BIGINT		
,	IN 	p_ItemDBIdx 		BIGINT		
,	IN 	p_ExpireTime		INT			
,	OUT	p_Result			INT			
)
    COMMENT '장비 아이템 삭제, 복구 박스로 이동'
BEGIN
	SET p_Result = 0;
        
	root:
	BEGIN    
		
		IF p_ItemDBIdx <= 0 THEN
			SET p_Result = 1031;	
		    LEAVE root;        
        END IF;
        
        
        INSERT INTO char_inven_equip_restorebox (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level, identify, expire_date) 
        SELECT item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level, identify, DATE_ADD(NOW(), INTERVAL p_ExpireTime MINUTE)
        FROM char_inven_equip
        WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
        
		IF ROW_COUNT() = 0 THEN
			SET p_Result = 1032;	
			LEAVE root;
        END IF;
		
        
		DELETE FROM char_inven_equip
		WHERE char_idx = p_CharID AND item_idx = p_ItemDBIdx;
        
        IF ROW_COUNT() = 0 THEN
			SET p_Result = 1033;	
            LEAVE root;
        END IF;
        
 	END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_delete`( 
	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	OUT	_result			INT
)
    COMMENT '장비 아이템 삭제'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _itemidx <= 0 THEN
			SET _result = 1031;	
		    LEAVE root;        
        END IF;

		
        DELETE FROM item_attribute
        WHERE item_idx = _itemidx;
        
        DELETE FROM item_jewels
        WHERE item_idx = _itemidx;
        
        DELETE FROM item_option
        WHERE item_idx = _itemidx;        
        
		
		DELETE FROM char_inven_equip
		WHERE char_idx = _charid AND item_idx = _itemidx;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1032;	
            LEAVE root;
        END IF;
        
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_insert`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_itemId			INT
,	IN	_quility		INT
,	IN	_equipType		INT
,	IN	_attrId			INT
,	IN	_attrValue		INT
,	IN	_slotId1		TINYINT
,	IN	_optId1			INT
,	IN	_optValue1		SMALLINT
,	IN	_slotId2		TINYINT
,	IN	_optId2			INT
,	IN	_optValue2		SMALLINT
,	IN	_slotId3		TINYINT
,	IN	_optId3			INT
,	IN	_optValue3		SMALLINT
,	IN	_slotId4		TINYINT
,	IN	_optId4			INT
,	IN	_optValue4		SMALLINT
,	IN	_slotId5		TINYINT
,	IN	_optId5			INT
,	IN	_optValue5		SMALLINT
,	IN	_slotId6		TINYINT
,	IN	_optId6			INT
,	IN	_optValue6		SMALLINT
,	IN	_slotId7		TINYINT
,	IN	_optId7			INT
,	IN	_optValue7		SMALLINT
,	IN	_belong			TINYINT		
,	IN	_identified		TINYINT
,	OUT	_result			INT
,	OUT _itemDBIndex	BIGINT
)
    COMMENT '새로운 장비 아이템 추가, 신규 생성, char_inven_equip'
BEGIN

       
	SET _result = 0;
	SET _itemDBIndex = 0;
	
    
    root:
    BEGIN
	
		INSERT INTO char_inven (char_idx) 
								VALUES (_charid);
		IF 0 = ROW_COUNT() THEN
			SET _result = 1141;	
			LEAVE root;
		END IF;		
		
		SELECT LAST_INSERT_ID() INTO _itemDBIndex;
		
		INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, belong, identify)
									  VALUES(_itemDBIndex, _charid, _userid, _itemId, _quility, 1, _equipType, _belong, _identified);
									  
		IF 0 = ROW_COUNT() THEN
			SET _result = 1142;	
			LEAVE root;			
		END IF;	
        
		IF 0 <_attrId THEN
			INSERT INTO item_attribute (item_idx, attribute_id, attribute_value) VALUES (_itemDBIndex, _attrId, _attrValue);
		END IF;		
	
		IF 0 <_optId1 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId1, _slotId1, _optValue1, @g_result);			
		END IF;
        
		IF 0 <_optId2 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId2, _slotId2, _optValue2, @g_result);
		END IF;
        
		IF 0 <_optId3 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId3, _slotId3, _optValue3, @g_result);
		END IF;
        
		IF 0 <_optId4 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId4, _slotId4, _optValue4, @g_result);
		END IF;
		
		IF 0 <_optId5 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId5, _slotId5, _optValue5, @g_result);
		END IF;
		
		IF 0 <_optId6 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId6, _slotId6, _optValue6, @g_result);
		END IF;
		
		IF 0 <_optId7 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId7, _slotId7, _optValue7, @g_result);
		END IF;
        
        INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, _charid, 1, _itemDBIndex)
		ON DUPLICATE KEY UPDATE type_id = 1, element_value = _itemDBIndex;
        
	END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_insert2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_insert2`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_itemId			INT
,	IN	_quility		INT
,	IN	_equipType		INT
,	IN	_attrId			INT
,	IN	_attrValue		INT
,	IN	_slotId1		TINYINT
,	IN	_optId1			INT
,	IN	_optValue1		SMALLINT
,	IN	_slotId2		TINYINT
,	IN	_optId2			INT
,	IN	_optValue2		SMALLINT
,	IN	_slotId3		TINYINT
,	IN	_optId3			INT
,	IN	_optValue3		SMALLINT
,	IN	_slotId4		TINYINT
,	IN	_optId4			INT
,	IN	_optValue4		SMALLINT
,	IN	_slotId5		TINYINT
,	IN	_optId5			INT
,	IN	_optValue5		SMALLINT
,	IN	_slotId6		TINYINT
,	IN	_optId6			INT
,	IN	_optValue6		SMALLINT
,	IN	_slotId7		TINYINT
,	IN	_optId7			INT
,	IN	_optValue7		SMALLINT
,	IN	_belong			TINYINT
,	IN	_identified		TINYINT	
,	IN 	_enchantLevel	INT 		
,	OUT	_result			INT
,	OUT _itemDBIndex	BIGINT
)
    COMMENT '새로운 장비 아이템 추가, 신규 생성, char_inven_equip'
BEGIN

       
	SET _result = 0;
	SET _itemDBIndex = 0;
	
    
    root:
    BEGIN
	
		INSERT INTO char_inven (char_idx) 
								VALUES (_charid);
		IF 0 = ROW_COUNT() THEN
			SET _result = 1141;	
			LEAVE root;
		END IF;		
		
		SELECT LAST_INSERT_ID() INTO _itemDBIndex;
		
		INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, belong, identify, enchant_level)
									  VALUES(_itemDBIndex, _charid, _userid, _itemId, _quility, 1, _equipType, _belong, _identified, _enchantLevel);
									  
		IF 0 = ROW_COUNT() THEN
			SET _result = 1142;	
			LEAVE root;			
		END IF;	
        
		IF 0 <_attrId THEN
			INSERT INTO item_attribute (item_idx, attribute_id, attribute_value) VALUES (_itemDBIndex, _attrId, _attrValue);
		END IF;		
	
		IF 0 <_optId1 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId1, _slotId1, _optValue1, @g_result);			
		END IF;
        
		IF 0 <_optId2 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId2, _slotId2, _optValue2, @g_result);
		END IF;
        
		IF 0 <_optId3 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId3, _slotId3, _optValue3, @g_result);
		END IF;
        
		IF 0 <_optId4 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId4, _slotId4, _optValue4, @g_result);
		END IF;
		
		IF 0 <_optId5 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId5, _slotId5, _optValue5, @g_result);
		END IF;
		
		IF 0 <_optId6 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId6, _slotId6, _optValue6, @g_result);
		END IF;
		
		IF 0 <_optId7 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId7, _slotId7, _optValue7, @g_result);
		END IF;
		
        INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, _charid, 1, _itemDBIndex)
		ON DUPLICATE KEY UPDATE type_id = 1, element_value = _itemDBIndex;
	END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_insert_buy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_insert_buy`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_itemId			INT
,	IN	_quility		INT
,	IN	_itemlevel		INT
,	IN	_equipType		INT
,	IN	_itemexp		INT
,	IN 	_enchantlevel	TINYINT
,	IN	_attrId			INT
,	IN	_attrValue		INT
,	IN	_jewel1			INT
,	IN	_jewel2			INT
,	IN	_jewel3			INT
,	IN	_jewel4			INT
,	IN	_jewel5			INT
,	IN	_jewel6			INT
,	IN 	_identified		TINYINT
,	IN	_slotId1		TINYINT
,	IN	_optId1			INT
,	IN	_optValue1		SMALLINT
,	IN	_slotId2		TINYINT
,	IN	_optId2			INT
,	IN	_optValue2		SMALLINT
,	IN	_slotId3		TINYINT
,	IN	_optId3			INT
,	IN	_optValue3		SMALLINT
,	IN	_slotId4		TINYINT
,	IN	_optId4			INT
,	IN	_optValue4		SMALLINT
,	IN	_slotId5		TINYINT
,	IN	_optId5			INT
,	IN	_optValue5		SMALLINT
,	IN	_slotId6		TINYINT
,	IN	_optId6			INT
,	IN	_optValue6		SMALLINT
,	IN	_slotId7		TINYINT
,	IN	_optId7			INT
,	IN	_optValue7		SMALLINT
,	IN	_belong			TINYINT		
,	OUT	_result			INT			
,	OUT _itemDBIndex	BIGINT		
)
    COMMENT '장비 아이템 추가, 구매로 인해 원래 있던 아이템을 다시 넣을경우, DBindex 새로 발급, char_inven_equip'
BEGIN

       
	SET _result = 0;
	SET _itemDBIndex = 0;
    
    root:
    BEGIN

		INSERT INTO char_inven (char_idx) 
								VALUES (_charid);
		IF 0 = ROW_COUNT() THEN
			SET _result = 1151;	
			LEAVE root;			
		END IF;		
		
		SELECT LAST_INSERT_ID() INTO _itemDBIndex;
        
	
		INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, identify)
									  VALUES(_itemDBIndex, _charid, _userid, _itemId, _quility, _itemlevel, _equipType, _itemexp, _enchantlevel, 0, _belong, _identified);
									  
		IF 0 = ROW_COUNT() THEN
			SET _result = 1152;	
			LEAVE root;			
		END IF;	
 
		IF 0 <_attrId THEN
			INSERT INTO item_attribute (item_idx, attribute_id, attribute_value) VALUES (_itemDBIndex, _attrId, _attrValue);
		END IF;		
        
		IF 0 <_optId1 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId1, _slotId1, _optValue1, @g_result);			
		END IF;
        
		IF 0 <_optId2 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId2, _slotId2, _optValue2, @g_result);
		END IF;
        
		IF 0 <_optId3 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId3, _slotId3, _optValue3, @g_result);
		END IF;
        
		IF 0 <_optId4 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId4, _slotId4, _optValue4, @g_result);
		END IF;
		
		IF 0 <_optId5 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId5, _slotId5, _optValue5, @g_result);
		END IF;
		
		IF 0 <_optId6 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId6, _slotId6, _optValue6, @g_result);
		END IF;
		
		IF 0 <_optId7 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId7, _slotId7, _optValue7, @g_result);
		END IF;		        
        
        IF 0 < _jewel1 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 1, _jewel1);
        END IF;

        IF 0 < _jewel2 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 2, _jewel2);
        END IF;
        
        IF 0 < _jewel3 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 3, _jewel3);
        END IF;
        
        IF 0 < _jewel4 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 4, _jewel4);
        END IF;
        
        IF 0 < _jewel5 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 5, _jewel5);
        END IF;
        
        IF 0 < _jewel6 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 6, _jewel6);
        END IF;

	END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_insert_post` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_insert_post`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_itemId			INT
,	IN	_quility		INT			
,	IN	_equipType		INT
,	IN	_itemlevel		INT			
,	IN 	_enchantlevel	TINYINT		
,	IN	_attrId			INT
,	IN	_attrValue		INT
,	IN	_slotId1		TINYINT
,	IN	_optId1			INT
,	IN	_optValue1		SMALLINT
,	IN	_slotId2		TINYINT
,	IN	_optId2			INT
,	IN	_optValue2		SMALLINT
,	IN	_slotId3		TINYINT
,	IN	_optId3			INT
,	IN	_optValue3		SMALLINT
,	IN	_slotId4		TINYINT
,	IN	_optId4			INT
,	IN	_optValue4		SMALLINT
,	IN	_slotId5		TINYINT
,	IN	_optId5			INT
,	IN	_optValue5		SMALLINT
,	IN	_slotId6		TINYINT
,	IN	_optId6			INT
,	IN	_optValue6		SMALLINT
,	IN	_slotId7		TINYINT
,	IN	_optId7			INT
,	IN	_optValue7		SMALLINT
,	IN	_belong			TINYINT	
,	OUT	_result			INT
,	OUT _itemDBIndex	BIGINT
)
    COMMENT '새로운 장비 아이템 추가, 신규 생성, char_inven_equip'
BEGIN       
	SET _result = 0;
	SET _itemDBIndex = 0;	
    
    root:
    BEGIN
	
		INSERT INTO char_inven (char_idx) VALUES (_charid);
		IF 0 = ROW_COUNT() THEN
			SET _result = 1141;	
			LEAVE root;
		END IF;		
		
		SELECT LAST_INSERT_ID() INTO _itemDBIndex;
		
		INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, enchant_level, belong)
									  VALUES(_itemDBIndex, _charid, _userid, _itemId, _quility, _itemlevel, _equipType, _enchantlevel, _belong);
        
		IF 0 = ROW_COUNT() THEN
			SET _result = 1142;	
			LEAVE root;			
		END IF;	
        
		IF 0 <_attrId THEN
			INSERT INTO item_attribute (item_idx, attribute_id, attribute_value) VALUES (_itemDBIndex, _attrId, _attrValue);
		END IF;		
	
		IF 0 <_optId1 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId1, _slotId1, _optValue1, @g_result);			
		END IF;
        
		IF 0 <_optId2 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId2, _slotId2, _optValue2, @g_result);
		END IF;
        
		IF 0 <_optId3 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId3, _slotId3, _optValue3, @g_result);
		END IF;
        
		IF 0 <_optId4 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId4, _slotId4, _optValue4, @g_result);
		END IF;
		
		IF 0 <_optId5 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId5, _slotId5, _optValue5, @g_result);
		END IF;
		
		IF 0 <_optId6 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId6, _slotId6, _optValue6, @g_result);
		END IF;
		
		IF 0 <_optId7 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId7, _slotId7, _optValue7, @g_result);
		END IF;		
	END;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_insert_reenter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_insert_reenter`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT
,	IN	_itemDBIndex	BIGINT
,	IN	_itemId			INT
,	IN	_quility		INT
,	IN	_itemlevel		INT
,	IN	_equipType		INT
,	IN	_itemexp		INT
,	IN 	_enchantlevel	TINYINT
,	IN	_attrId			INT
,	IN	_attrValue		INT
,	IN	_jewel1			INT
,	IN	_jewel2			INT
,	IN	_jewel3			INT
,	IN	_jewel4			INT
,	IN	_jewel5			INT
,	IN	_jewel6			INT
,	IN	_identify		TINYINT
,	IN	_slotId1		TINYINT
,	IN	_optId1			INT
,	IN	_optValue1		SMALLINT
,	IN	_slotId2		TINYINT
,	IN	_optId2			INT
,	IN	_optValue2		SMALLINT
,	IN	_slotId3		TINYINT
,	IN	_optId3			INT
,	IN	_optValue3		SMALLINT
,	IN	_slotId4		TINYINT
,	IN	_optId4			INT
,	IN	_optValue4		SMALLINT
,	IN	_slotId5		TINYINT
,	IN	_optId5			INT
,	IN	_optValue5		SMALLINT
,	IN	_slotId6		TINYINT
,	IN	_optId6			INT
,	IN	_optValue6		SMALLINT
,	IN	_slotId7		TINYINT
,	IN	_optId7			INT
,	IN	_optValue7		SMALLINT
,	IN	_belong			TINYINT		
,	OUT	_result			INT
)
    COMMENT '장비 아이템 추가, 원래 있던 아이템을 다시 넣을경우, char_inven_equip'
BEGIN

       
	SET _result = 0;
	
    
    root:
    BEGIN
	
		INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, enchant_level, equip, belong, identify)
									  VALUES(_itemDBIndex, _charid, _userid, _itemId, _quility, _itemlevel, _equipType, _itemexp, _enchantlevel, 0, _belong, _identify);
									  
		IF 0 = ROW_COUNT() THEN
			SET _result = 1161;	
			LEAVE root;			
		END IF;	
        
		IF 0 <_attrId THEN
   			INSERT INTO item_attribute (item_idx, attribute_id, attribute_value) VALUES (_itemDBIndex, _attrId, _attrValue);
		END IF;		
	
		IF 0 <_optId1 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId1, _slotId1, _optValue1, @g_result);			
		END IF;
        
		IF 0 <_optId2 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId2, _slotId2, _optValue2, @g_result);
		END IF;
        
		IF 0 <_optId3 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId3, _slotId3, _optValue3, @g_result);
		END IF;
        
		IF 0 <_optId4 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId4, _slotId4, _optValue4, @g_result);
		END IF;
		
		IF 0 <_optId5 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId5, _slotId5, _optValue5, @g_result);
		END IF;
		
		IF 0 <_optId6 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId6, _slotId6, _optValue6, @g_result);
		END IF;
		
		IF 0 <_optId7 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemDBIndex, _optId7, _slotId7, _optValue7, @g_result);
		END IF;		                
        
        IF 0 < _jewel1 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 1, _jewel1);
        END IF;

        IF 0 < _jewel2 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 2, _jewel2);
        END IF;
        
        IF 0 < _jewel3 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 3, _jewel3);
        END IF;
        
        IF 0 < _jewel4 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 4, _jewel4);
        END IF;
        
        IF 0 < _jewel5 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 5, _jewel5);
        END IF;
        
        IF 0 < _jewel6 THEN
			INSERT INTO item_jewels (item_idx, slot_id, id) VALUES (_itemDBIndex, 6, _jewel6);
        END IF;
               
	END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_update_enchant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_update_enchant`( 
	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	IN	_enchantlevel	TINYINT	
,	OUT	_result			INT
)
    COMMENT '장비 아이템 Enchant Level 변경'
BEGIN

	SET _result = 0;

	root:
	BEGIN    
    
		
		UPDATE char_inven_equip
        SET enchant_level = _enchantlevel
        WHERE char_idx = _charid AND item_idx = _itemidx;
	
        IF row_count() = 0 THEN
			SET _result = 1311;	
            LEAVE root;
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_update_exp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_update_exp`( 
	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	IN	_itemexp		INT
,	OUT	_result			INT
)
    COMMENT '장비 아이템 경험치 변경'
BEGIN

	SET _result = 0;

	root:
	BEGIN    
    
		
		UPDATE char_inven_equip
        SET item_exp = _itemexp
        WHERE char_idx = _charid AND item_idx = _itemidx;
	
        IF row_count() = 0 THEN
			SET _result = 1271;	
            LEAVE root;
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_update_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_update_level`( 
	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	IN	_itemlevel		INT
,	IN	_itemexp		INT
,	OUT	_result			INT
)
    COMMENT '장비 아이템 레벨/경험치 변경'
BEGIN

	SET _result = 0;

	root:
	BEGIN    
    
		
		UPDATE char_inven_equip
        SET item_level = _itemlevel, item_exp = _itemexp
        WHERE char_idx = _charid AND item_idx = _itemidx;
	
        IF row_count() = 0 THEN
			SET _result = 1281;	
            LEAVE root;
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_update_qualitygrade_inc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_update_qualitygrade_inc`( 
	IN 	p_CharID 		BIGINT
,	IN 	p_ItemIdx 		BIGINT
,	IN	p_QualityGradeNew	INT
,	OUT	p_result			INT
)
    COMMENT '장비 아이템 레벨/경험치 변경'
BEGIN
	SET p_result = 0;

	root:
	BEGIN    
		
		UPDATE char_inven_equip
        SET quality_grade = (@quality_grade := quality_grade + 1)
        WHERE char_idx = p_CharID AND item_idx = p_ItemIdx;
	
        IF row_count() = 0 THEN
			SET p_result = 1281;	
            LEAVE root;
        END IF;
        
        
        IF p_QualityGradeNew != @quality_grade THEN
			SET p_result = 1282;	
            LEAVE root;        
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenequip_update_upgrade` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenequip_update_upgrade`( 
	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	IN	_itemid			INT
,	OUT	_result			INT
)
    COMMENT '장비 아이템 승급'
BEGIN

	SET _result = 0;

	root:
	BEGIN    
    
		
		UPDATE char_inven_equip
        SET item_id = _itemid, item_level = 1, item_exp = 0
        WHERE char_idx = _charid AND item_idx = _itemidx;
	
        IF row_count() = 0 THEN
			SET _result = 1291;	
            LEAVE root;
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenitem_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenitem_delete`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_itemid 		INT		
,	IN	_deleteitemqty	INT		
,	OUT	_finalqty		INT		
,	OUT	_result			INT
)
    COMMENT '개수 아이템(material, upgrade 아이템 삭제)'
BEGIN

	SET _result = 0;
	SET _finalqty = 0;
    
	root:
	BEGIN   
    
		IF _itemid <= 0 THEN
			SET _result = 1041;	
		    LEAVE root;        
        END IF;

		IF _deleteitemqty <= 0 THEN
			SET _result = 1042;	
		    LEAVE root;        
        END IF;
        

        
        UPDATE char_inven_item
        SET item_value = (@item_value := IF( 0 < (item_value - _deleteitemqty), item_value - _deleteitemqty, 0))
        WHERE char_idx = _charid AND item_id = _itemid;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1043;	
            LEAVE root;
        END IF;

        SET _finalqty = @item_value;
        
		IF _finalqty <= 0 THEN
			
			DELETE FROM char_inven_item
			WHERE char_idx = _charid AND item_id = _itemid;
            
			IF ROW_COUNT() = 0 THEN
				SET _result = 1044;	
				LEAVE root;
			END IF;   
        END IF;
		
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenitem_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenitem_insert`( 
	IN	_userid 		BIGINT
, 	IN	_charid 		BIGINT
, 	IN	_itemType 		INT
, 	IN	_itemId 		INT
, 	IN	_itemValue 		INT
,	OUT	_result 		INT
,	OUT _finalitemQty	INT
)
    COMMENT '개수 아이템 추가, char_inven_item'
BEGIN

        


	SET _result = 0;
    SET _finalitemQty = @_finalitemQty := _itemValue;
    
    --
    IF NOT EXISTS(SELECT @_previtemQty := item_value FROM char_inven_item WHERE user_idx = _userid AND char_idx = _charid AND item_type = _itemType AND item_id = _itemId) THEN
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, _charid, 2, _itemId)
		ON DUPLICATE KEY UPDATE type_id = 2, element_value = _itemId;
	ELSE
		IF 0 = @_previtemQty THEN
			INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
				VALUES (_userid, _charid, 2, _itemId)
			ON DUPLICATE KEY UPDATE type_id = 2, element_value = _itemId;
        END IF;
    END IF;
    --

	INSERT INTO char_inven_item (char_idx, user_idx, item_type, item_id, item_value)
								VALUES (_charid, _userid, _itemType, _itemId, _itemValue)
			ON DUPLICATE KEY UPDATE char_idx = _charid, user_idx = _userid, item_type = _itemType, item_id = _itemId,
									item_value = (@_finalitemQty := IF( 0 <= (item_value + _itemValue), item_value + _itemValue, 0));
	
	IF 0 = row_count() THEN
		SET _result = 4051;	
	END IF;	
        	
    SET _finalitemQty = @_finalitemQty;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenskillbook_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenskillbook_delete`( 
	IN 	_userid 		BIGINT
,	IN 	_charid 		BIGINT
,	IN 	_itemidx 		BIGINT
,	OUT	_result			INT
)
    COMMENT '무공비서 아이템 삭제'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _itemidx <= 0 THEN
			SET _result = 1051;	
		    LEAVE root;        
        END IF;

		DELETE FROM char_inven_skillbook
		WHERE char_idx = _charid AND item_idx = _itemidx;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1052;	
            LEAVE root;
        END IF;
         
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenskillbook_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenskillbook_insert`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT

,	IN	_itemid 		INT
,	IN	_percent		INT
,	IN	_liftTime		INT
,	IN	_value 			INT
,	IN	_belong 		TINYINT

,	OUT	_result			INT
,	OUT _itemDBIndex	BIGINT
)
    COMMENT '스킬북 지급'
BEGIN

	SET _result = 0;
	SET _itemDBIndex = 0;
	
    root:
    BEGIN
		INSERT INTO char_inven (char_idx)	VALUES (_charid);
		IF 0 = row_count() THEN
			SET _result = 1241;
			LEAVE root;
		END IF;
		
		SELECT LAST_INSERT_ID() INTO _itemDBIndex;

		INSERT INTO char_inven_skillbook (item_idx, char_idx, user_idx, item_id, percent, life_time, ability_value, belong)
										VALUES (_itemDBIndex, _charid, _userid, _itemid, _percent, _liftTime, _value, _belong);

		IF 0 = row_count() THEN
			SET _result = 1242;
			LEAVE root;
		END IF;
		
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_charinvenskillbook_insert_reenter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_charinvenskillbook_insert_reenter`(
	IN	_userid			BIGINT
,	IN	_charid			BIGINT

,	IN	_itemDBIndex	BIGINT
,	IN	_itemid 		INT
,	IN	_percent		INT
,	IN	_liftTime		INT
,	IN	_value 			INT
,	IN	_belong 		TINYINT

,	OUT	_result			INT
)
    COMMENT '스킬북 다시 넣기'
BEGIN

	SET _result = 0;
	
    root:
    BEGIN
		
		IF 0 = _itemDBIndex THEN
			SET _result = 1251;
			LEAVE root;
		END IF;

		INSERT INTO char_inven_skillbook (item_idx, char_idx, user_idx, item_id, percent, life_time, ability_value, belong)
										VALUES (_itemDBIndex, _charid, _userid, _itemid, _percent, _liftTime, _value, _belong);

		IF 0 = row_count() THEN
			SET _result = 1252;
			LEAVE root;
		END IF;
		
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_equipitem_alloptions_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_equipitem_alloptions_insert`( 
	IN	_itemidx		BIGINT
,	IN	_optionid1		INT,	IN	_optionvalue1	INT,	IN	_optionslot1	INT
,	IN	_optionid2		INT,	IN	_optionvalue2	INT,	IN	_optionslot2	INT
,	IN	_optionid3		INT,	IN	_optionvalue3	INT,	IN	_optionslot3	INT
,	IN	_optionid4		INT,	IN	_optionvalue4	INT,	IN	_optionslot4	INT
,	IN	_optionid5		INT,	IN	_optionvalue5	INT,	IN	_optionslot5	INT
,	IN	_optionid6		INT,	IN	_optionvalue6	INT,	IN	_optionslot6	INT
,	OUT	_result			INT
)
    COMMENT '장비 아이템 서브 옵션들 수정하기'
BEGIN

	SET _result = 0;
    
	root:
	BEGIN   
        
		IF _itemidx <= 0 THEN
			SET _result = 1301;	
		    LEAVE root;        
        END IF;
		
		
        IF 0 < _optionid1 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid1, _optionslot1, _optionvalue1, _result);
			IF _result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < _optionid2 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid2, _optionslot2, _optionvalue2, _result);
			IF _result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
		
        IF 0 < _optionid3 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid3, _optionslot3, _optionvalue3, _result);
			IF _result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < _optionid4 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid4, _optionslot4, _optionvalue4, _result);
			IF _result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < _optionid5 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid5, _optionslot5, _optionvalue5, _result);
			IF _result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
        IF 0 < _optionid6 THEN
			CALL sp_mmo_notrans_itemoption_insert(_itemidx, _optionid6, _optionslot6, _optionvalue6, _result);
			IF _result <> 0 THEN
				LEAVE root;
			END IF;           
        END IF;
        
 	END;    
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_itemjewels_delete_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_itemjewels_delete_all`( 
	IN	_itemidx		BIGINT	
,	OUT	_result			INT
)
    COMMENT '장비 아이템 보석 전부 제거하기'
BEGIN


	SET _result = 0;
    
	root:
	BEGIN   
		IF _itemidx <= 0 THEN
			SET _result = 1071;	
		    LEAVE root;        
        END IF;

		DELETE FROM item_jewels
        WHERE item_idx = _itemidx;

        IF ROW_COUNT() = 0 THEN
			SET _result = 1073;	
            LEAVE root;
        END IF;
        
 	END;
 
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_itemjewels_insert_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_itemjewels_insert_equip`( 
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN	_itemidx		BIGINT	
,	IN 	_itemid 		INT		
,	IN	_slotid			INT		
,	OUT	_result			INT
)
    COMMENT '장비 아이템 보석 장착 하기'
BEGIN


	SET _result = 0;
    
	root:
	BEGIN   
        
		IF _itemid <= 0 OR _itemidx <= 0 THEN
			SET _result = 1201;	
		    LEAVE root;        
        END IF;

		IF _slotid <= 0 THEN
			SET _result = 1202;	
		    LEAVE root;        
        END IF;


		INSERT INTO item_jewels (item_idx, slot_id, id)
							VALUES (_itemidx, _slotid, _itemid);
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1203;	
            LEAVE root;
        END IF;
        
 	END;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_itemoption_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_itemoption_insert`( 
	IN	_itemidx		BIGINT	
,	IN 	_optionid 		INT		
,	IN	_slotid			INT		
,	IN	_optionvalue	INT		
,	OUT	_result			INT
)
    COMMENT '장비 아이템 옵션 추가하기'
BEGIN


	SET _result = 0;
    
	root:
	BEGIN   
        
		IF _itemidx <= 0 THEN
			SET _result = 1211;	
		    LEAVE root;        
        END IF;

		IF _optionid <= 0 THEN
			SET _result = 1212;	
		    LEAVE root;        
        END IF;

		INSERT INTO item_option (item_idx, slot_id, option_id, option_value)
							VALUES (_itemidx, _slotid, _optionid, _optionvalue);
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1213;	
            LEAVE root;
        END IF;
        
 	END;

    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_itemoption_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_itemoption_update`( 
	IN	_itemidx		BIGINT	
,	IN 	_optionid 		INT		
,	IN	_slotid			INT		
,	IN	_optionvalue	INT		
,	OUT	_result			INT
)
    COMMENT '장비 아이템 옵션 수정하기'
BEGIN

	SET _result = 0;
    
	root:
	BEGIN   
        
		IF _itemidx <= 0 THEN
			SET _result = 1301;	
		    LEAVE root;        
        END IF;

		IF _optionid <= 0 THEN
			SET _result = 1302;	
		    LEAVE root;        
        END IF;

		UPDATE item_option
        SET option_id = _optionid, option_value = _optionvalue 
        WHERE item_idx = _itemidx AND slot_id =_slotid;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 1303;	
            LEAVE root;
        END IF;
        
 	END;    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_useravatar_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_useravatar_delete`( 
	IN 	_userid 		BIGINT
-- ,	IN 	_charid 		BIGINT
,	IN 	_avatarid 		INT		
,	IN	_deleteavatarqty	INT		
,	OUT	_finalqty		INT		
,	OUT	_result			INT
)
    COMMENT '변신아바타 개수 삭제'
BEGIN

	SET _result = 0;
	SET _finalqty = 0;
    
	root:
	BEGIN   
    
		IF _avatarid <= 0 THEN
			SET _result = 6091;	
		    LEAVE root;        
        END IF;

		IF _deleteavatarqty <= 0 THEN
			SET _result = 6092;	
		    LEAVE root;        
        END IF;
        

        
        UPDATE user_avatar
        SET avatar_value = (@avatar_value := IF( 0 < (avatar_value - _deleteavatarqty), avatar_value - _deleteavatarqty, 0))
        WHERE user_idx = _userid AND avatar_id = _avatarid;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 6093;	
            LEAVE root;
        END IF;

        SET _finalqty = @avatar_value;
        
 	END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_useravatar_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_useravatar_insert`( 
	IN	_userid 		BIGINT
-- , 	IN	_charid 		BIGINT
, 	IN	_avatarId 			INT
, 	IN	_avatarValue 		INT
,	OUT	_result 		INT
,	OUT _finalQty	SMALLINT
)
    COMMENT '변신아바타 개수 추가'
BEGIN

	SET _result = 0;
    SET _finalQty = @_finalQty := _avatarValue;
    
    SET @reddot = 0;
    IF NOT EXISTS(SELECT 1 FROM user_avatar WHERE user_idx = _userid AND avatar_id = _avatarId) THEN
		SET @reddot = 1;
    END IF;

	INSERT INTO user_avatar (user_idx, avatar_id, avatar_level, avatar_value)
								VALUES (_userid, _avatarId, 1, IF( 1 < _avatarValue, _avatarValue - 1, 0 ))
			ON DUPLICATE KEY UPDATE user_idx = _userid, avatar_id = _avatarId,
									avatar_value = (@_finalQty := IF( 0 <= (avatar_value + _avatarValue), avatar_value + _avatarValue, 0));
	
	IF 0 = row_count() THEN
		SET _result = 6094;	
	END IF;	

    IF 1 = @reddot AND 0 = _result THEN
    
		-- RDT_AVATAR_GAIN = 30,
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, 0, 30, _avatarId)
		ON DUPLICATE KEY UPDATE type_id = 30, element_value = _avatarId;
        
        -- RDT_AVATAR_SHOWABLE = 33,
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, 0, 33, _avatarId)
		ON DUPLICATE KEY UPDATE type_id = 33, element_value = _avatarId;
        
    END IF;

    SET _finalQty = @_finalQty;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_usereventmission_update_withtime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_usereventmission_update_withtime`(
	IN p_UserID 				BIGINT		
,	IN p_EventID 				INT			
,	IN p_MissionID 				INT			
,	IN p_MissionMaxValue 		INT 		
,	IN p_MissionAddValue 		INT			
,	IN p_DateTime				DATETIME	
,	OUT p_result				INT			
)
    COMMENT '미션 업데이트'
BEGIN
	SET p_result = 0;

	UPDATE user_event_mission
	SET mission_value = IF(p_MissionMaxValue < mission_value + p_MissionAddValue, p_MissionMaxValue, mission_value + p_MissionAddValue),
		update_time = p_DateTime
	WHERE user_idx = p_UserID AND event_id = p_EventID AND mission_id = p_MissionID AND DATEDIFF(p_DateTime, update_time) > 0;
    
    IF ROW_COUNT() = 0 THEN
		SET p_result = 101;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_usereventplaycnt_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_usereventplaycnt_select`( 
	IN p_UserID 		BIGINT
,	IN p_EventID		INT 		
,	IN p_SubID			INT 		
,	OUT p_PlayCnt		INT 		
)
    COMMENT '이벤트 플레이 회수 얻기'
BEGIN
	SET p_PlayCnt = 0;
	
	SELECT play_cnt INTO p_PlayCnt
	FROM user_event_play_cnt
	WHERE user_idx = p_UserID AND event_id = p_EventID AND sub_id = p_SubID;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_usereventplaycnt_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_usereventplaycnt_update`( 
	IN p_UserID 		BIGINT
,	IN p_EventID		INT 		
,	IN p_SubID			INT 		
, 	IN p_AddPlayCnt		INT 		
,	IN p_PlayCntMax		INT 		
,	OUT p_PlayCnt_final	INT			
,	OUT p_result		INT 		
)
    COMMENT '이벤트 플레이 회수 설정하기'
BEGIN

	SET p_PlayCnt_final = 0;
	SET p_result = 0;

	root:
	BEGIN
	
		
		CALL sp_mmo_notrans_usereventplaycnt_select(p_UserID, p_EventID, p_SubID, p_PlayCnt_final);

		IF 0 = p_PlayCntMax THEN
			
			LEAVE root;
		END IF;
		
		IF p_PlayCntMax <= p_PlayCnt_final THEN
			SET p_result = 102;		
			LEAVE root;
		END IF;
		
		
		SET @play_cnt 	:= p_AddPlayCnt;	

		
		INSERT INTO user_event_play_cnt (user_idx, event_id, sub_id, play_cnt) VALUES (p_UserID, p_EventID, p_SubID, p_AddPlayCnt)
				ON DUPLICATE KEY UPDATE play_cnt = @play_cnt := p_AddPlayCnt + 1, update_time = now(); 
				
        IF row_count() = 0 THEN
			SET p_result = 101;		
            LEAVE root;
        END IF;
		
		IF p_PlayCntMax < @play_cnt THEN
			SET p_result = 102;		
			LEAVE root;
		END IF;
		
		SET p_PlayCnt_final = @play_cnt;
	
	
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_delete_awarehouse_gold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_delete_awarehouse_gold`( 
	IN 	_userid 		BIGINT
,	IN 	_decgold 		BIGINT
,	OUT	_finalgold		BIGINT
,	OUT	_result			INT
)
    COMMENT '캐릭터 금전 삭감'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _decgold < 0 THEN
			SET _result = 1061;	
		    LEAVE root;        
        END IF;
    
		UPDATE userinfo 
		SET awarehouse_gold = (@final_gold := awarehouse_gold - _decgold)
		WHERE user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1062;	
		    LEAVE root;
		END IF;
        
        IF @final_gold < 0 THEN
			SET _result = 1063;	
            LEAVE root;
        END IF;
        
        SET _finalgold = @final_gold;        
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_delete_cashA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_delete_cashA`( 
	IN	_userid 	BIGINT
,	IN	_decvalue 	INT
,	OUT _finalCashA	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬A 업데이트(삭감)'
BEGIN

    DECLARE result INT;
    
    DECLARE dec_total BIGINT;
    DECLARE dec_cashA BIGINT;
    DECLARE dec_cashA_Free BIGINT;
       
    DECLARE cash_total BIGINT;    
    DECLARE icashA BIGINT;
    DECLARE icashA_Free BIGINT;

    
    SET result = 0;	
    
    SET dec_total = _decvalue;
    SET dec_cashA = 0;
    SET dec_cashA_Free = 0;
    SET cash_total = 0;
    SET icashA = 0;
    SET icashA_Free = 0;
    
    SET _finalCashA = 0;
    SET _result = 0;

        
    root:
    BEGIN
    
		SELECT cashA, cashA_free INTO icashA, icashA_Free FROM userinfo
        WHERE user_idx = _userid;
        
        IF found_rows() = 0 THEN
			SET result = 1001;	
            LEAVE root;
        END IF;
        
        SET cash_total = icashA + icashA_Free;       
        
		IF cash_total < _decvalue THEN
			SET result = 1002;	
			LEAVE root;	
		END IF;
        
        IF icashA < dec_total THEN
			IF icashA + icashA_Free < dec_total THEN
				SET result = 1003;	
				LEAVE root;
			ELSE
				SET dec_cashA = icashA;
				SET dec_cashA_Free = dec_total - icashA;             
			END IF;
		ELSE
			SET dec_cashA = dec_total;
		END IF;
        
        UPDATE userinfo
        SET cashA = (@icashA := icashA - dec_cashA), 
            cashA_Free = (@icashA_Free := icashA_Free - dec_cashA_Free)
        WHERE user_idx = _userid;

        IF row_count() = 0 THEN
			SET result = 1004;	
            LEAVE root;
        END IF;
        
        IF @icashA < 0 OR @icashA_free < 0 THEN
			SET result = 1005;	
            LEAVE root;
        END IF; 

	END;
		
	
    SET _result = result;
    SET _finalCashA = @icashA + @icashA_free;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_delete_cashB` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_delete_cashB`( 
	IN	_userid 	BIGINT
,	IN	_decvalue 	INT
,	OUT _finalcashB	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬B 업데이트(삭감)'
BEGIN

    DECLARE result INT;
    
    DECLARE dec_total BIGINT;
    DECLARE dec_cashB BIGINT;
    DECLARE dec_cashB_Free BIGINT;
       
    DECLARE cash_total BIGINT;    
    DECLARE icashB BIGINT;
    DECLARE icashB_Free BIGINT;

    
    SET result = 0;
    
    SET dec_total = _decvalue;
    SET dec_cashB = 0;
    SET dec_cashB_Free = 0;
    SET cash_total = 0;
    SET icashB = 0;
    SET icashB_Free = 0;
    
    SET _finalcashB = 0;
    SET _result = 0;

        
    root:
    BEGIN
    
		SELECT cashB, cashB_free INTO icashB, icashB_Free FROM userinfo
        WHERE user_idx = _userid;
        
        IF found_rows() = 0 THEN
			SET result = 1011;	
            LEAVE root;
        END IF;
        
        SET cash_total = icashB + icashB_Free;       
        
		IF cash_total < _decvalue THEN
			SET result = 1012;	
			LEAVE root;	
		END IF;
        
        IF icashB < dec_total THEN
			IF icashB + icashB_Free < dec_total THEN
				SET result = 1013;	
				LEAVE root;
			ELSE
				SET dec_cashB = icashB;
				SET dec_cashB_Free = dec_total - icashB;             
			END IF;
		ELSE
			SET dec_cashB = dec_total;
		END IF;
        
        UPDATE userinfo
        SET cashB = (@icashB := icashB - dec_cashB), 
            cashB_Free = (@icashB_Free := icashB_Free - dec_cashB_Free)
        WHERE user_idx = _userid;

        IF row_count() = 0 THEN
			SET result = 1014;	
            LEAVE root;
        END IF;
        
        IF @icashB < 0 OR @icashB_free < 0 THEN
			SET result = 1015;	
            LEAVE root;
        END IF; 

	END;
		
	
    SET _result = result;
    SET _finalcashB = @icashB + @icashB_free;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_delete_pkgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_delete_pkgold`(
	IN 	_userid 		BIGINT
,	IN 	_decpkgold	 	INT
,	OUT	_finalpkgold	INT
,	OUT	_result			INT
)
    COMMENT '유저 pk골드 삭감'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _decpkgold < 0 THEN
			SET _result = 1091;	
		    LEAVE root;        
        END IF;
    
		UPDATE userinfo 
		SET pk_gold = (@final_pkgold := pk_gold - _decpkgold)
		WHERE user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1092;	
		    LEAVE root;
		END IF;
        
        IF @final_pkgold < 0 THEN
			SET _result = 1093;	
            LEAVE root;
        END IF;
        
        SET _finalpkgold = @final_pkgold;
	END;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_insert_awarehouse_gold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_insert_awarehouse_gold`( 
	IN 	_userid 		BIGINT
,	IN 	_incgold 		BIGINT
,	OUT	_finalgold		BIGINT
,	OUT	_result			INT
)
    COMMENT '계정창고 금전 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _incgold <= 0 THEN
			SET _result = 1191;	
		    LEAVE root;        
        END IF;
    
		UPDATE userinfo 
		SET awarehouse_gold = (@final_gold := awarehouse_gold + _incgold)
		WHERE user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1192;	
		    LEAVE root;
		END IF;
        
        IF @final_gold < 0 THEN
			SET _result = 1193;	
            LEAVE root;
        END IF;
        
        SET _finalgold = @final_gold;        
	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_insert_cashA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_insert_cashA`( 
	IN	_userid 	BIGINT
,	IN	_incvalue 	INT
,	OUT _finalcashA	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬A 업데이트(증감)'
BEGIN

	SET _result = 0;
	SET _finalcashA = 0;
    
    root:
    BEGIN
    
       
		IF _incvalue <= 0 THEN
			SET _result = 1111;	
			LEAVE root;	
		END IF;
        
        
        UPDATE userinfo
        SET cashA = (@_finalcashA := cashA + _incvalue),
			cashA_free = (@_chshA_free := cashA_free)
        WHERE user_idx = _userid;

        IF row_count() = 0 THEN
			SET _result = 1112;	
            LEAVE root;
        END IF;
        
        SET _finalcashA = @_finalcashA + @_chshA_free;
	END;
		    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_insert_cashAFree` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_insert_cashAFree`( 
	IN	_userid 	BIGINT
,	IN	_incvalue 	INT
,	OUT _finalcashA	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬A 업데이트(증감)'
BEGIN

	SET _result = 0;
	SET _finalcashA = 0;
    
    root:
    BEGIN
           
		IF _incvalue <= 0 THEN
			SET _result = 1111;	
			LEAVE root;	
		END IF;
        
        SET @_cashA = 0;
        SET @_cashA_free = 0;
        
        UPDATE userinfo
        SET cashA = (@_cashA := cashA),
			cashA_free = (@_chshA_free := cashA_free + _incvalue)
        WHERE user_idx = _userid;

        IF row_count() = 0 THEN
			SET _result = 1112;	
            LEAVE root;
        END IF;
        
        SET _finalcashA = @_cashA + @_chshA_free;
	END;
		    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_insert_cashB` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_insert_cashB`( 
	IN	_userid 	BIGINT
,	IN	_incvalue 	INT
,	OUT _finalcashB	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬B 업데이트(증감)'
BEGIN

	SET _result = 0;
	SET _finalcashB = 0;
    
    root:
    BEGIN
    
       
		IF _incvalue <= 0 THEN
			SET _result = 1121;	
			LEAVE root;	
		END IF;
        
        
        UPDATE userinfo
        SET cashB = (@_finalcashB := cashB + _incvalue),
			cashB_free = (@_chshB_free := cashB_free)
        WHERE user_idx = _userid;

        IF row_count() = 0 THEN
			SET _result = 1122;	
            LEAVE root;
        END IF;
        
        SET _finalcashB = @_finalcashB + @_chshB_free;
	END;
		    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_insert_cashBFree` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_insert_cashBFree`( 
	IN	_userid 	BIGINT
,	IN	_incvalue 	INT
,	OUT _finalcashB	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬B 업데이트(증감)'
BEGIN

	SET _result = 0;
	SET _finalcashB = 0;
    
    root:
    BEGIN
    
       
		IF _incvalue <= 0 THEN
			SET _result = 1121;	
			LEAVE root;	
		END IF;
        
        SET @_cashB = 0;
        SET @_cashB_free = 0;
        
        UPDATE userinfo
        SET cashB = (@_cashB := cashB),
			cashB_free = (@_chshB_free := cashB_free + _incvalue)
        WHERE user_idx = _userid;

        IF row_count() = 0 THEN
			SET _result = 1122;	
            LEAVE root;
        END IF;
        
        SET _finalcashB = @_cashB + @_chshB_free;
	END;
		    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_insert_pkgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_insert_pkgold`( 
	IN 	_userid 		BIGINT
,	IN 	_incpkgold	 	INT
,	OUT	_finalpkgold	INT
,	OUT	_result			INT
)
    COMMENT '유저 pk골드 추가'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _incpkgold < 0 THEN
			SET _result = 1231;	
		    LEAVE root;        
        END IF;
        
		UPDATE userinfo 
		SET pk_gold = (@final_pkgold := pk_gold + _incpkgold)
		WHERE user_idx = _userid;
        
		IF ROW_COUNT() = 0 THEN
			SET _result = 1232;	
		    LEAVE root;
		END IF;
        
        IF @final_pkgold < 0 THEN
			SET _result = 1233;	
            LEAVE root;
        END IF;
        
        SET _finalpkgold = @final_pkgold;
	END;    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_select_cashA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_select_cashA`( 
	IN	_userid 	BIGINT
,	OUT _cashA		BIGINT
,	OUT _cashAFree	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬정보 얻기'
BEGIN

	SET _result = 1112;
	SET _cashA = 0;
    SET _cashAFree = 0;
    
	SELECT cashA, cashA_Free INTO _cashA, _cashAFree
	FROM userinfo
	WHERE user_idx = _userid;
	
	IF FOUND_ROWS() != 0 THEN
		SET _result = 0;
	END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userinfo_select_cashB` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userinfo_select_cashB`( 
	IN	_userid 	BIGINT
,	OUT _cashB		BIGINT
,	OUT _cashBFree	BIGINT
,	OUT	_result		INT
)
    COMMENT '캐쉬정보 얻기'
BEGIN

	SET _result = 1112;
	SET _cashB = 0;
    SET _cashBFree = 0;
    
	SELECT cashB, cashB_Free INTO _cashB, _cashBFree
	FROM userinfo
	WHERE user_idx = _userid;
	
	IF FOUND_ROWS() != 0 THEN
		SET _result = 0;
	END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userpet_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userpet_delete`( 
	IN 	_userid 		BIGINT
-- ,	IN 	_charid 		BIGINT
,	IN 	_petid 		INT		
,	IN	_deletepetqty	INT		
,	OUT	_finalqty		INT		
,	OUT	_result			INT
)
    COMMENT '펫 개수 삭제'
BEGIN

	SET _result = 0;
	SET _finalqty = 0;
    
	root:
	BEGIN   
    
		IF _petid <= 0 THEN
			SET _result = 2011;	
		    LEAVE root;        
        END IF;

		IF _deletepetqty <= 0 THEN
			SET _result = 2012;	
		    LEAVE root;        
        END IF;
        

        
        UPDATE user_pet
        SET pet_value = (@pet_value := IF( 0 < (pet_value - _deletepetqty), pet_value - _deletepetqty, 0))
        WHERE user_idx = _userid AND pet_id = _petid;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 2013;	
            LEAVE root;
        END IF;

        SET _finalqty = @pet_value;
        
 	END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userpet_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userpet_insert`( 
	IN	_userid 		BIGINT
-- , 	IN	_charid 		BIGINT
, 	IN	_petId 			INT
, 	IN	_petValue 		INT
,	OUT	_result 		INT
,	OUT _finalQty	SMALLINT
)
    COMMENT '펫 개수 추가'
BEGIN

	SET _result = 0;
    SET _finalQty = @_finalQty := _petValue;
    
    SET @reddot = 0;
    IF NOT EXISTS(SELECT 1 FROM user_pet WHERE user_idx = _userid AND pet_id = _petId) THEN
		SET @reddot = 1;
    END IF;

	INSERT INTO user_pet (user_idx, pet_id, pet_level, pet_value)
								VALUES (_userid, _petId, 1, IF( 1 < _petValue, _petValue - 1, 0 ))
			ON DUPLICATE KEY UPDATE user_idx = _userid, pet_id = _petId,
									pet_value = (@_finalQty := IF( 0 <= (pet_value + _petValue), pet_value + _petValue, 0));
	
	IF 0 = row_count() THEN
		SET _result = 4051;	
	END IF;
    
    
    IF 1 = @reddot AND 0 = _result THEN
    
		-- RDT_PET_GAIN = 20,
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, 0, 20, _petId)
		ON DUPLICATE KEY UPDATE type_id = 20, element_value = _petId;
        
        -- RDT_PET_SHOWABLE = 23,
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, 0, 23, _petId)
		ON DUPLICATE KEY UPDATE type_id = 23, element_value = _petId;
        
    END IF;
        	
    SET _finalQty = @_finalQty;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_userpost_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_userpost_delete`( 
	IN 	_useridx 		BIGINT
,	IN 	_postidx 		BIGINT
,	OUT	_result			INT
)
    COMMENT '우편 삭제'
BEGIN

	SET _result = 0;
        
	root:
	BEGIN    
    
		IF _postidx <= 0 THEN
			SET _result = 1101;	
		    LEAVE root;        
        END IF;

		DELETE FROM user_post 
        WHERE post_idx = _postidx AND user_idx = _useridx;		
        IF ROW_COUNT() = 0 THEN
			SET _result = 1102;	
            LEAVE root;
        END IF;
        
 	END;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_uservehicle_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_uservehicle_delete`( 
	IN 	_userid 		BIGINT
-- ,	IN 	_charid 		BIGINT
,	IN 	_vehicleid 		INT		
,	IN	_deletevehicleqty	INT		
,	OUT	_finalqty		INT		
,	OUT	_result			INT
)
    COMMENT '탈것 개수 삭제'
BEGIN

	SET _result = 0;
	SET _finalqty = 0;
    
	root:
	BEGIN   
    
		IF _vehicleid <= 0 THEN
			SET _result = 2011;	
		    LEAVE root;        
        END IF;

		IF _deletevehicleqty <= 0 THEN
			SET _result = 2012;	
		    LEAVE root;        
        END IF;
        

        
        UPDATE user_vehicle
        SET vehicle_value = (@vehicle_value := IF( 0 < (vehicle_value - _deletevehicleqty), vehicle_value - _deletevehicleqty, 0))
        WHERE user_idx = _userid AND vehicle_id = _vehicleid;
        
        IF ROW_COUNT() = 0 THEN
			SET _result = 2013;	
            LEAVE root;
        END IF;

        SET _finalqty = @vehicle_value;
        
 	END;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_notrans_uservehicle_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_notrans_uservehicle_insert`( 
	IN	_userid 		BIGINT
-- , 	IN	_charid 		BIGINT
, 	IN	_vehicleId 			INT
, 	IN	_vehicleValue 		INT
,	OUT	_result 		INT
,	OUT _finalQty	SMALLINT
)
    COMMENT '탈것 개수 추가'
BEGIN

	SET _result = 0;
    SET _finalQty = @_finalQty := _vehicleValue;
    
    SET @reddot = 0;
    IF NOT EXISTS(SELECT 1 FROM user_vehicle WHERE user_idx = _userid AND vehicle_id = _vehicleId) THEN
		SET @reddot = 1;
    END IF;

	INSERT INTO user_vehicle (user_idx, vehicle_id, vehicle_level, vehicle_value)
								VALUES (_userid, _vehicleId, 1, IF( 1 < _vehicleValue, _vehicleValue - 1, 0 ))
			ON DUPLICATE KEY UPDATE user_idx = _userid, vehicle_id = _vehicleId,
									vehicle_value = (@_finalQty := IF( 0 <= (vehicle_value + _vehicleValue), vehicle_value + _vehicleValue, 0));
	
	IF 0 = row_count() THEN
		SET _result = 4051;	
	END IF;	

    IF 1 = @reddot AND 0 = _result THEN
    
		-- RDT_VEHICLE_GAIN = 40,
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, 0, 40, _vehicleId)
		ON DUPLICATE KEY UPDATE type_id = 40, element_value = _vehicleId;
        
        -- RDT_VEHICLE_SHOWABLE = 43,
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (_userid, 0, 43, _vehicleId)
		ON DUPLICATE KEY UPDATE type_id = 43, element_value = _vehicleId;
        
    END IF;

    SET _finalQty = @_finalQty;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_serverbuff_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_serverbuff_insert`( 
	IN 	p_BuffID 			INT			
,	IN 	p_Buffvalue1		INT			
,	IN 	p_Buffvalue2		INT			
,	IN 	p_Buffvalue3		INT			
,	IN 	p_Buffvalue4		INT			
,	IN 	p_Buffvalue5		INT			
,	IN 	p_Buffvalue6		INT			
,	IN 	p_Buffvalue7		INT			
,	IN 	p_Buffvalue8		INT			
,	IN 	p_Buffvalue9		INT			
,	IN 	p_Buffvalue10		INT			
,	IN 	p_BuffTimeSec		INT	
)
    COMMENT '서버 버프 저장하기'
BEGIN
	DECLARE v_result 	INT DEFAULT 0;
    	
	INSERT INTO server_buff (buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, buff_time_start, buff_time_end)
						VALUES (p_BuffID, p_Buffvalue1, p_Buffvalue2, p_Buffvalue3, p_Buffvalue4, p_Buffvalue5, p_Buffvalue6, p_Buffvalue7, p_Buffvalue8, p_Buffvalue9, p_Buffvalue10, NOW(), DATE_ADD(NOW(), INTERVAL p_BuffTimeSec second))
	ON DUPLICATE KEY UPDATE buff_id = p_BuffID, buff_value_1 = p_Buffvalue1, buff_value_2 = p_Buffvalue2, buff_value_3 = p_Buffvalue3, buff_value_4 = p_Buffvalue4, 
							buff_value_5 = p_Buffvalue5, buff_value_6 = p_Buffvalue6, buff_value_7 = p_Buffvalue7, buff_value_8 = p_Buffvalue8, buff_value_9 = p_Buffvalue9, buff_value_10 = p_Buffvalue10,
							buff_time_start = NOW(), buff_time_end = DATE_ADD(NOW(), INTERVAL p_BuffTimeSec second);    
    
	IF ROW_COUNT() = 0 THEN
		SET v_result = 1132;	
	END IF;   
    
    SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_serverbuff_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_serverbuff_select`( 
)
    COMMENT '서버 버프 읽어오기'
BEGIN
	
    SELECT buff_id, buff_value_1, buff_value_2, buff_value_3, buff_value_4, buff_value_5, buff_value_6, buff_value_7, buff_value_8, buff_value_9, buff_value_10, 
			UNIX_TIMESTAMP(buff_time_start) as buff_time_start, UNIX_TIMESTAMP(buff_time_end) as buff_time_end
    FROM server_buff
    WHERE NOW() < buff_time_end;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_servermakeitemlimit_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_servermakeitemlimit_select`()
    COMMENT '서버 제작 개수 정보 읽기'
BEGIN

	SELECT make_id, make_limit, make_qty
    FROM server_makeitem_limit ORDER BY make_id;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_truncate_char_pk_record` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `sp_mmo_truncate_char_pk_record`()
BEGIN
    -- 모든 데이터 삭제
    TRUNCATE TABLE char_pk_record;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_tutorialid_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_tutorialid_insert`( 
	IN	_pUserID	 	BIGINT		
,	IN 	_pTutorialID	INT 		
)
    COMMENT '튜토리얼 저장하기'
BEGIN
    
    INSERT IGNORE INTO user_tutorial (user_idx, tutorial_id, complete, complete_date)
    VALUES (_pUserID, _pTutorialID, 1, NOW());
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userapplyfriend_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userapplyfriend_delete`(
	IN _charidx 			BIGINT
,	IN _target_charidx  	BIGINT
)
    COMMENT '친구 신청 거절'
BEGIN	
	DECLARE result 	INT DEFAULT 0;
	
	
    delete from `char_apply_friend` where char_idx = _charidx and friend_char_idx = _target_charidx;
	
	IF ROW_COUNT() <= 0 THEN 
		SET result = 100;
	END IF;
	
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userapplyfriend_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userapplyfriend_insert`(
	IN	_sender_charidx 	BIGINT
,	IN	_sender_dbidx 		INT
,	IN	_sender_nick 		VARCHAR(30)
,	IN	_sender_chartype 	INT
,	IN	_sender_charlevel 	INT
,	IN	_target_charidx  	BIGINT
,	IN	_max_friend_count 	INT
,	IN	_max_request_count 	INT
)
    COMMENT '친구 신청 정보 추가 .'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;
    DECLARE v_char_type 	INT DEFAULT 0;
    DECLARE v_char_exp 		BIGINT DEFAULT 0;
    DECLARE v_target_useridx 		BIGINT DEFAULT 0;
        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
				
		SELECT result;
	END;	

	root:
    BEGIN
		
		-- SELECT `user_idx`, `base_char_idx` INTO useridx, charidx FROM `userinfo` WHERE `user_idx` = _target_useridx;
		-- IF FOUND_ROWS() <= 0 THEN 
		-- 	SET result = 100;
		--  LEAVE root;
		-- END IF;
		
		-- SELECT @chartype := char_type, @charexp := char_exp FROM `char_info` WHERE `char_idx` = _target_charidx;
        SELECT user_idx, char_type, char_exp INTO v_target_useridx, v_char_type, v_char_exp FROM `char_info` WHERE `char_idx` = _target_charidx;
		IF FOUND_ROWS() <= 0 THEN 
			SET result = 18005; -- ERROR_FRIEND_HAVENT_FIEND = 18005,					// 없는 친구.  
            LEAVE root;
		END IF;
        
        IF (SELECT COUNT(*) FROM `char_friend` WHERE char_idx = _sender_charidx) >= _max_friend_count THEN 
			SET result = 18003; -- ERROR_FRIEND_HAVE_MAX_COUNT = 18003,				// 친구가 가득찼음.  
            LEAVE root;
		END IF;
		
		IF (SELECT COUNT(*) FROM `char_friend` WHERE char_idx = _target_charidx) >= _max_friend_count THEN 
			SET result = 18004; -- ERROR_FRIEND_NEWFRIEND_HAVE_MAX_COUNT = 18004,		// 새로운 친구의 친구수가 가득찼음.  
            LEAVE root;
		END IF;
        
        IF (SELECT COUNT(*) FROM `char_apply_friend` WHERE friend_char_idx = _sender_charidx) >= _max_request_count THEN 
			SET result = 18009; -- ERROR_FRIEND_HAVE_REQUEST_MAX_COUNT,	// 18009		// 친구 요청수가 가득찼음.
            LEAVE root;
		END IF;
        
        IF (SELECT COUNT(*) FROM `char_apply_friend` WHERE char_idx = _target_charidx) >= _max_request_count THEN 
			SET result = 18010; -- 18010 // 새로운 친구의 받을 수있는 친구 요청수가 가득찼음.
            LEAVE root;
		END IF;
        
        IF EXISTS (SELECT * FROM `char_apply_friend` WHERE char_idx = _target_charidx AND friend_char_idx = _sender_charidx) THEN 
			SET result = 18008; -- 18008 // 이미 친구신청을 한 유저임  
            LEAVE root;
		END IF;
		
		INSERT INTO `char_apply_friend`(`char_idx`,`friend_char_idx`,`friend_db_sharding_idx`,`friend_nick`,`friend_char_type`,`friend_char_level`)
		VALUES(_target_charidx, _sender_charidx, _sender_dbidx, _sender_nick, _sender_chartype, _sender_charlevel);		
        
		IF ROW_COUNT() <= 0 THEN 
			SET result = 18012; -- ERROR_FRIEND_SQL,						// 18012		// SQL 입력 실패
            LEAVE root;
		END IF;
        
        -- RDT_APPLY_FRIEND = 4,		// 친구 신청
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
			VALUES (v_target_useridx, _target_charidx, 4, _sender_charidx)
		ON DUPLICATE KEY UPDATE type_id = 4, element_value = _sender_charidx;
        
	END;
    
    SELECT result, v_char_type, v_char_exp;
	-- SELECT result, @chartype as char_type, @charexp as char_exp;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_composite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_composite`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN  p_AvatarGrade 	TINYINT
,	IN  p_AddFailCount	INT

,	IN	p_AvatarConfirmDuration 		INT

,	IN	_arrayResItem 		VARCHAR(4096)	-- 합성재료 변신아바타
	
,	IN	p_failAvatarId1	INT,	IN	p_failAvatarId2	INT,	IN	p_failAvatarId3	INT,	IN	p_failAvatarId4	INT,	IN	p_failAvatarId5	INT
,	IN	p_failAvatarId6	INT,	IN	p_failAvatarId7	INT,	IN	p_failAvatarId8	INT,	IN	p_failAvatarId9	INT,	IN	p_failAvatarId10	INT

,	IN	p_AvatarId1	INT,	IN	p_AvatarId2	INT,	IN	p_AvatarId3	INT,	IN	p_AvatarId4	INT,	IN	p_AvatarId5	INT
,	IN	p_AvatarId6	INT,	IN	p_AvatarId7	INT,	IN	p_AvatarId8	INT,	IN	p_AvatarId9	INT,	IN	p_AvatarId10	INT
)
    COMMENT '변신아바타 합성'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	# Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE avatarDBIndex1 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex2 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex3 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex4 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex5 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex6 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex7 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex8 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex9 	BIGINT DEFAULT 0;
    DECLARE avatarDBIndex10 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, avatarDBIndex1, avatarDBIndex2, avatarDBIndex3, avatarDBIndex4, avatarDBIndex5, avatarDBIndex6, avatarDBIndex7, avatarDBIndex8, avatarDBIndex9, avatarDBIndex10;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
					CALL sp_mmo_notrans_useravatar_delete(p_UserID, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
        
        -- 합성 횟수
        IF 0 < p_AddFailCount THEN
			INSERT INTO user_avatar_composite (user_idx, avatar_grade, fail_count)
									VALUES (p_UserID, p_AvatarGrade, p_AddFailCount)
				ON DUPLICATE KEY UPDATE user_idx = p_UserID, avatar_grade = p_AvatarGrade,
										fail_count = (@_finalQty := IF( 0 <= (fail_count + p_AddFailCount), fail_count + p_AddFailCount, 0));
		END IF;
        
        -- 합성 결과
		IF 0 < p_failAvatarId1 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId2 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId3 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId4 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId5 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId6 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId7 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId8 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId9 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failAvatarId10 THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_failAvatarId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 변신아바타 확정대기
        IF 0 < p_AvatarId1 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex1;
		END IF;

		IF 0 < p_AvatarId2 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex2;
		END IF;
        
        IF 0 < p_AvatarId3 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex3;
		END IF;
        
        IF 0 < p_AvatarId4 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex4;
		END IF;
        
        IF 0 < p_AvatarId5 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex5;
		END IF;
        
        IF 0 < p_AvatarId6 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex6;
		END IF;
        
        IF 0 < p_AvatarId7 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex7;
		END IF;
        
        IF 0 < p_AvatarId8 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex8;
		END IF;
        
        IF 0 < p_AvatarId9 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex9;
		END IF;
        
        IF 0 < p_AvatarId10 THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6089;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex10;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, avatarDBIndex1, avatarDBIndex2, avatarDBIndex3, avatarDBIndex4, avatarDBIndex5, avatarDBIndex6, avatarDBIndex7, avatarDBIndex8, avatarDBIndex9, avatarDBIndex10;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_confirm_pending_acquire` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_confirm_pending_acquire`(
	IN	p_UserID 		BIGINT
-- ,	IN	p_CharID 		BIGINT

,	IN  p_AvatarCPIdx 		BIGINT

,	IN	p_AvatarId	INT
)
    COMMENT '변신아바타 확정대기 수령'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    DECLARE db_avatar_id 		INT	DEFAULT 0;
    DECLARE v_finalcount		INT	DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalcount;
	END;

	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT avatar_id INTO db_avatar_id FROM user_avatar_confirm_pending WHERE user_idx = p_UserID AND avatar_cp_idx = p_AvatarCPIdx;
        IF ROW_COUNT() = 0 THEN
			SET v_result = 6103;
			LEAVE root;
		END IF;
        
        IF db_avatar_id <> p_AvatarId THEN
			SET v_result = 6104;
			LEAVE root;
		END IF;
        
        -- 
        DELETE FROM user_avatar_confirm_pending WHERE user_idx = p_UserID AND avatar_cp_idx = p_AvatarCPIdx;
        
        -- 
        SET @_finalcount = 0;
        
        INSERT INTO user_avatar(user_idx, avatar_id, avatar_level, avatar_value)
			VALUES(p_UserID, p_AvatarId, 1, 0)
            ON DUPLICATE KEY UPDATE avatar_value = (@_finalcount := avatar_value + 1);
            
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 6105;
            LEAVE root;
        END IF;
        
		SET v_finalcount = @_finalcount;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalcount;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_confirm_pending_change` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_confirm_pending_change`(
	IN 	_user_idx		BIGINT   
-- ,	IN 	_char_idx		BIGINT   
        
,	IN 	_avatarcpidx		BIGINT   
, 	IN 	_costCashA		INT

,	IN 	_avatarId			INT

-- , 	IN 	_costGold		INT
-- , 	IN 	_costCashB		INT

-- , 	IN 	_item_id		INT
-- , 	IN 	_use_count		INT
)
    COMMENT '변신아바타 확정대기 변경'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;

	DECLARE v_change_count		TINYINT DEFAULT 0;
    
    DECLARE v_finalgold			BIGINT DEFAULT 0; 
    DECLARE v_finalCashA		BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB		BIGINT DEFAULT 0; 
    DECLARE v_finalcount		INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_finalCashA;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		-- call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, v_finalcount, v_result);
        -- IF v_result != 0 THEN 
        --     LEAVE root;
        -- END IF;
    
        -- CALL sp_mmo_notrans_charinfo_delete_gold(_user_idx, _char_idx, _costGold, v_finalgold, v_result);
		-- IF v_result <> 0 THEN
		--     LEAVE root;
		-- END IF;
        
        -- CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_old, v_cashA_Free_old, v_result);
		-- IF v_result != 0 THEN 
		-- 	LEAVE root;
		-- END IF; 	

		-- CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalcashA, v_result);		
        -- IF v_result != 0 THEN
		-- 	LEAVE root;
		-- END IF;
		
		-- CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_new, v_cashA_Free_new, v_result);
		-- IF v_result != 0 THEN 
		-- 	LEAVE root;
		-- END IF; 
        
        SELECT change_count INTO v_change_count FROM user_avatar_confirm_pending WHERE user_idx = _user_idx AND avatar_cp_idx = _avatarcpidx AND end_date > NOW();
        IF ROW_COUNT() = 0 THEN
			SET v_result = 6095;
			LEAVE root;
		END IF;
        
        -- 캐쉬 체크
        IF 0 >= _costCashA THEN 
			SET v_result = 6096;
			LEAVE root;
        END IF;
        
		CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalCashA, v_result);
		IF v_result != 0 THEN 
			SET v_result = 6097;
			LEAVE root;
		END IF;
		
		UPDATE user_avatar_confirm_pending SET avatar_id = _avatarId, change_count = change_count + 1 WHERE user_idx = _user_idx AND avatar_cp_idx = _avatarcpidx;
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 6098;
            LEAVE root;
        END IF;
        
	END;    
    
    IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT v_result, v_finalCashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_insert`(
	IN 	_user_idx		BIGINT   
,	IN 	_char_idx		BIGINT   

,	IN 	_avatar_id			INT
,	IN 	_avatar_value		SMALLINT
-- ,	IN 	_equip			TINYINT

-- , 	IN 	_item_id		INT
-- , 	IN 	_use_count		INT
)
    COMMENT '변신아바타 획득'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
    DECLARE _finalcount	INT DEFAULT 0;
    -- DECLARE _avatar_idx	BIGINT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result, _finalcount;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		
        -- call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, _finalcount, _result);
        -- IF _result != 0 THEN 
        --     LEAVE root;
        -- END IF;
        
        SET _finalcount = @_finalcount := _avatar_value;
        
        INSERT INTO user_avatar(user_idx, avatar_id, avatar_level, avatar_value)
			VALUES(_user_idx, _avatar_id, 1, _avatar_value)
            ON DUPLICATE KEY UPDATE avatar_value = (@_finalcount := avatar_value + _avatar_value);
            
        IF ROW_COUNT() = 0 THEN 
			SET _result = 429;
            LEAVE root;
        END IF;
        
		SET _finalcount = @_finalcount;
        
        -- SET _avatar_idx = LAST_INSERT_ID();    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
	SELECT _result, _finalcount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_mileage_use` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_mileage_use`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN  p_AvatarGrade 		TINYINT
,	IN  p_CostFailCount	INT

,	IN	p_AvatarId	INT

,	IN	p_AvatarConfirmDuration 		INT
,	IN	p_AvatarConfirmId	INT
)
    COMMENT '변신아바타 합성 실패누적횟수 사용'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE v_fail_count	INT DEFAULT 0;
    DECLARE avatarDBIndex 		BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, avatarDBIndex;
	END;


	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT fail_count INTO v_fail_count FROM user_avatar_composite WHERE user_idx = p_UserID AND avatar_grade = p_AvatarGrade;
        IF ROW_COUNT() = 0 THEN
			SET v_result = 6099;
			LEAVE root;
		END IF;
        
        IF 0 > p_CostFailCount OR p_CostFailCount > v_fail_count THEN
			SET v_result = 6100;
			LEAVE root;
		END IF;
        
        UPDATE user_avatar_composite
			SET fail_count = (@fail_count := IF( 0 < (fail_count - p_CostFailCount), fail_count - p_CostFailCount, 0))
			WHERE user_idx = p_UserID AND avatar_grade = p_AvatarGrade;
		IF ROW_COUNT() = 0 THEN
			SET v_result = 6101;	
		    LEAVE root;
		END IF;
        
        -- 결과 (하위 등급 )
		IF 0 < p_AvatarId THEN
			CALL sp_mmo_notrans_useravatar_insert(p_UserID, p_AvatarId, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        
		-- 결과 (상위 등급 ) 확정대기
        IF 0 < p_AvatarConfirmId THEN
			INSERT INTO user_avatar_confirm_pending (user_idx, avatar_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_AvatarConfirmId, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_AvatarConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6102;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO avatarDBIndex;
            
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, avatarDBIndex;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_update_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_update_equip`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN 	_equip_avatar_id		INT
,	IN 	_show_avatar_id		INT
)
    COMMENT '변신아바타 교체'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	START TRANSACTION;
	root:
	BEGIN
    
		IF 0 < _show_avatar_id THEN 
        
			IF 1 < _show_avatar_id AND NOT EXISTS(SELECT 1 FROM user_avatar WHERE user_idx = _userid AND avatar_id = _show_avatar_id) THEN
				SET _result = 6090;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET show_avatarid = _show_avatar_id WHERE char_idx = _charid;
		ELSE
			
			UPDATE char_info SET show_avatarid = 0 WHERE char_idx = _charid;
            
		END IF;
    
        IF 0 < _equip_avatar_id THEN 
        
			IF NOT EXISTS(SELECT 1 FROM user_avatar WHERE user_idx = _userid AND avatar_id = _equip_avatar_id) THEN
				SET _result = 6091;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET equip_avatarid = _equip_avatar_id WHERE char_idx = _charid;
            
        ELSE
			
			UPDATE char_info SET equip_avatarid = 0 WHERE char_idx = _charid;
            
        END IF;
    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_useravatar_update_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_useravatar_update_level`(
	IN 	_user_idx		BIGINT   
,	IN 	_char_idx		BIGINT   
        
,	IN 	_avatar_id		BIGINT   
,	IN 	_level			INT

, 	IN 	_costGold		INT
, 	IN 	_costCashA		INT
-- , 	IN 	_costCashB		INT

, 	IN 	_item_id		INT
, 	IN 	_use_count		INT
)
    COMMENT '변신아바타 레벨업'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_finalgold			BIGINT DEFAULT 0; 
    DECLARE v_finalcashA		BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB		BIGINT DEFAULT 0; 
    DECLARE v_finalcount		INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_finalcount, v_finalgold, v_finalcashA;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, v_finalcount, v_result);
        IF v_result != 0 THEN 
            LEAVE root;
        END IF;
    
        CALL sp_mmo_notrans_charinfo_delete_gold(_user_idx, _char_idx, _costGold, v_finalgold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	

		CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalcashA, v_result);		
        IF v_result != 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
		
		UPDATE user_avatar SET avatar_level = _level WHERE user_idx = _user_idx AND avatar_id = _avatar_id;
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 100;
            LEAVE root;
        END IF;
	END;    
    
    IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT v_result, v_finalcount, v_finalgold, v_finalcashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userbattlepass_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userbattlepass_insert`(
	IN p_UserID 		BIGINT
,	IN p_BattlePassID 		INT
,	IN p_ExpireTime 	BIGINT
)
    COMMENT '배틀패스 정보 추가'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_nowtime	DATETIME DEFAULT NOW();
    DECLARE v_yesterdaytime DATETIME DEFAULT DATE_SUB(v_nowtime, INTERVAL 1 DAY);
    
    DECLARE v_insert_cnt	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result, v_insert_cnt;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
		
		INSERT INTO user_battlepass(user_idx, pass_id, total_point, recv_reward, recv_silver_reward, recv_gold_reward, reg_date, expire_time, update_time)
			VALUES (p_UserID, p_BattlePassID, 0, 0, 0, 0, NOW(), FROM_UNIXTIME(p_ExpireTime), v_yesterdaytime)
		ON DUPLICATE KEY UPDATE total_point = 0, expire_time = FROM_UNIXTIME(p_ExpireTime), update_time = v_yesterdaytime, recv_reward = 0, recv_silver_reward = 0, recv_gold_reward = 0;

		SET v_insert_cnt = ROW_COUNT();    

		IF v_insert_cnt <= 0 THEN 
			SET v_result = 101;	
		END IF;
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;

	SELECT v_result, v_insert_cnt;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userbattlepass_mission_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userbattlepass_mission_insert`(
	IN p_UserID 		BIGINT
,	IN p_BattlePassID 	INT
,	IN	_arrayResItem 		VARCHAR(4096)	-- 
)
    COMMENT '배틀패스 미션 정보 갱신'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_nowtime	DATETIME DEFAULT NOW();
    DECLARE v_yesterdaytime DATETIME DEFAULT DATE_SUB(v_nowtime, INTERVAL 1 DAY);
    
    DECLARE v_insert_cnt	INT DEFAULT 0;
    
    # Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value BIGINT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result, v_insert_cnt;
	END;

	
	START TRANSACTION;
    
    root:
    BEGIN
    
		-- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
        
					INSERT INTO user_battlepass_mission(user_idx, pass_id, mission_id, mission_value, expire_time, update_time, get_reward)
						VALUES (p_UserID, p_BattlePassID, v_cntitem_id, 0, FROM_UNIXTIME(v_cntitem_value), v_yesterdaytime, 0)
						ON DUPLICATE KEY UPDATE mission_value = 0, expire_time = FROM_UNIXTIME(v_cntitem_value), update_time = v_yesterdaytime;
                        
					SET v_insert_cnt = ROW_COUNT();    
					IF v_insert_cnt <= 0 THEN 
						SET v_result = 6055;	
					END IF;
					
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
		
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	
	SELECT v_result, v_insert_cnt;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userbattlepass_mission_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userbattlepass_mission_update`(
	IN p_UserID 		BIGINT
,	IN	_arrayResItem 		VARCHAR(4096)	-- 
,	IN	_arrayMission 		VARCHAR(4096)	-- 
)
    COMMENT '배틀패스 정보 및 미션 정보 갱신'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_nowtime	DATETIME DEFAULT NOW();
    DECLARE v_yesterdaytime DATETIME DEFAULT DATE_SUB(v_nowtime, INTERVAL 1 DAY);
    
    DECLARE v_insert_cnt	INT DEFAULT 0;
    
    # BattlePass
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result, v_insert_cnt;
	END;

	
	START TRANSACTION;
    
    root:
    BEGIN
    
		-- BattlePass begin
        IF LENGTH(_arrayResItem) > 1 THEN
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
        
					IF NOT EXISTS(SELECT 1 FROM user_battlepass WHERE user_idx = p_UserID AND pass_id = v_cntitem_id) THEN
						SET v_result = 6056;
                    END IF;
                    
                    IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
                    UPDATE user_battlepass SET total_point = v_cntitem_value WHERE user_idx = p_UserID AND pass_id = v_cntitem_id;
                    
                    SET v_insert_cnt = ROW_COUNT();    
					IF v_insert_cnt <= 0 THEN 
						SET v_result = 6057;	
					END IF;
                    
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		END IF;
		-- BattlePass End
        
        -- user_battlepass_mission begin
        IF LENGTH(_arrayMission) > 1 THEN
			SET id_array_local = _arrayMission;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
        
					IF NOT EXISTS(SELECT 1 FROM user_battlepass_mission WHERE user_idx = p_UserID AND mission_id = v_cntitem_id) THEN
						SET v_result = 6058;
                    END IF;
                    
                    IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
                    UPDATE user_battlepass_mission SET mission_value = v_cntitem_value WHERE user_idx = p_UserID AND mission_id = v_cntitem_id;
                    
                    SET v_insert_cnt = ROW_COUNT();    
					IF v_insert_cnt <= 0 THEN 
						SET v_result = 6059;	
					END IF;
                    
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		END IF;
		-- user_battlepass_mission End
		
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    

	SELECT v_result, v_insert_cnt;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userbattlepass_reward_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userbattlepass_reward_update`(
	IN	_userid BIGINT
,	IN	_charid BIGINT
,	IN	_BattlPassID INT
,	IN	_normal_rewardflag INT
,	IN	_silver_rewardflag INT
,	IN	_gold_rewardflag INT

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT

-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT


,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT
)
    COMMENT '우편 보상 지급.'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
   
--    DECLARE v_iPartKeyMonth			INT;
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
--     DECLARE v_finalGuildPoint		INT DEFAULT 0; 
--     DECLARE v_finalqty				INT DEFAULT 0; 
--    	DECLARE v_useTime				DATETIME DEFAULT NOW();
-- 	DECLARE v_lastBuyDate			DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
					, v_finalgold, v_finalcashA-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
		-- 
        -- SET v_iPartKeyMonth := fn_Get_PartKeyMonth();
        
        IF NOT EXISTS(SELECT 1 FROM user_battlepass WHERE user_idx = _userid AND pass_id = _BattlPassID) THEN
			SET v_result = 6062;
		END IF;
		
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;
        
        
        UPDATE user_battlepass
			SET recv_reward = _normal_rewardflag,
                recv_silver_reward = _silver_rewardflag,
                recv_gold_reward = _gold_rewardflag
            WHERE user_idx = _userid AND pass_id = _BattlPassID;
        
		-- 
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_finalgold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_finalcashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;        
        END IF;
       
        
-- 		IF _addCashB > 0 THEN 		
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
--   
-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_finalcashB, v_result);
-- 			IF v_result != 0 THEN
-- 				LEAVE root;
-- 			END IF;
--                   
--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;  
--    
--         END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
								_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
								_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
								_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
								_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, v_result, v_item_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
								_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
								_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
								_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
								_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, v_result, v_item_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
								_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
								_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
								_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
								_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, v_result, v_item_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
								_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
								_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
								_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
								_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, v_result, v_item_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
								_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
								_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
								_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
								_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, v_result, v_item_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value, _bookbelong9, v_result, v_book_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
				, v_finalgold, v_finalcashA-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userbattlepass_stepup_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userbattlepass_stepup_update`( 
	IN	p_UserID 		BIGINT
, 	IN	p_CharID 		BIGINT

,	IN	_deleteCashA	BIGINT

, 	IN	p_BattlPassID 	INT		-- 
,	IN	p_TotalPoint 	INT		-- 
)
    COMMENT '배틀패스 건너뛰기 요청'
BEGIN
	
    DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result			INT DEFAULT 0;

	-- DECLARE v_final_gold 		BIGINT DEFAULT 0;
	DECLARE v_finalCashA		BIGINT DEFAULT 0;
    
	DECLARE v_cashA_old			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old	BIGINT DEFAULT 0;
	DECLARE v_cashA_new			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new	BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA;
	END; 
    

	START TRANSACTION;
		
    root:
    BEGIN
    
		IF NOT EXISTS(SELECT 1 FROM user_battlepass WHERE user_idx = p_UserID AND pass_id = p_BattlPassID) THEN
			SET v_result = 6060;
		END IF;
		
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;
    
		-- CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, _deletegold, v_final_gold, v_result);
		-- IF v_result <> 0 THEN
		--     LEAVE root;
		-- END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        IF 0 = _deleteCashA THEN
			SET v_finalCashA = v_cashA_new + v_cashA_Free_new;
        END IF;
    
		-- 
        UPDATE user_battlepass SET total_point = p_TotalPoint WHERE user_idx = p_UserID AND pass_id = p_BattlPassID;
        
        IF ROW_COUNT() <= 0 THEN 
			SET v_result = 6061;	-- 실패
		END IF;
	END;	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	SELECT v_result, v_finalCashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usercastle_update_reset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usercastle_update_reset`( 
	IN _useridx 				BIGINT
,	IN _nextexpiretime			BIGINT
)
    COMMENT '성 사냥터 플레이 정보 리셋'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
   	START TRANSACTION;	
    
    root:
    BEGIN
		
        
        UPDATE user_castle SET total_point = 0, daily_point = 0, daily_reward = 0, expire_date = from_unixtime(_nextexpiretime) WHERE user_idx = _useridx AND expire_date < now();
        
    
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usercastle_update_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usercastle_update_reward`( 
	IN _useridx 				BIGINT
,	IN _regioncode				INT

,	IN	_rewardtype		 		TINYINT
,	IN	_rewardid 				INT
,	IN	_rewardvalue 			INT

,	IN	_posttextidx 			INT
)
    COMMENT '성 사냥터 일일 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE v_posttype		INT DEFAULT 1;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
   	START TRANSACTION;	
    
    root:
    BEGIN
		
        
        UPDATE user_castle SET daily_reward = 1 WHERE user_idx = _useridx AND region_code = _regioncode;
        IF ROW_COUNT() <= 0 THEN
			SET v_result = 1000;
            LEAVE root;
        END IF;
    
		
		IF _rewardid != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;

		END IF;
		
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usercollect_register` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usercollect_register`(
	IN	p_UserID				BIGINT
,	IN	p_CharID				BIGINT

,	IN 	p_ItemBookID			INT
,	IN 	p_CollectOrder			TINYINT

, 	IN 	p_EquipItemDBIdx		BIGINT
,	IN 	p_ItemID				INT
,	IN 	p_ItemValue				SMALLINT
)
    COMMENT '아이템 도감 아이템 등록'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
	DECLARE v_book_type		INT DEFAULT 1;	-- BOOKS::BT_ITEM
    DECLARE v_final_item_count		INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_final_item_count;
	END;
	
	START TRANSACTION;
	
	root:
	BEGIN
		
        IF EXISTS(SELECT 1 FROM user_collect WHERE user_idx = p_UserID AND collect_type = v_book_type AND collect_id = p_ItemBookID AND collect_order = p_CollectOrder) THEN
		BEGIN
			SET v_result = 101;	
            LEAVE root;
		END;
        END IF;
        
        
        IF 0 < p_EquipItemDBIdx THEN
			CALL sp_mmo_notrans_charinvenequip_delete(p_CharID, p_EquipItemDBIdx, v_result);
			IF v_result <> 0 THEN
				SET v_result = 102;	
				LEAVE root;
			END IF;
		ELSEIF 0 < p_ItemID AND 0 < p_ItemValue THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_ItemValue, v_final_item_count, v_result);
			IF v_result <> 0 THEN
				SET v_result = 103;
				LEAVE root;
			END IF;
		ELSE
			SET v_result = 104;
			LEAVE root;
        END IF;
        
        
        INSERT INTO user_collect (`user_idx`,`collect_type`,`collect_id`,`collect_order`,`item_id`,`level`)
			VALUES (p_UserID, v_book_type, p_ItemBookID, p_CollectOrder, p_ItemID, p_ItemValue);
        IF ROW_COUNT() = 0 THEN
			SET v_result = 105;	
            LEAVE root;
        END IF;
		
    END;
	
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	SELECT v_result, v_final_item_count;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usercombatrivals_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usercombatrivals_insert`( 
	IN p_UserID 			BIGINT	
, 	IN p_CombatType			TINYINT
    
,   IN p_Rival1_UserID 		BIGINT	
,   IN p_Rival1_DBId 		INT	
,   IN p_Rival1_Nick 		VARCHAR(30)
,	IN p_Rival1_Point 		BIGINT	

,   IN p_Rival2_UserID 		BIGINT	
,   IN p_Rival2_DBId 		INT	
,   IN p_Rival2_Nick 		VARCHAR(30)
,	IN p_Rival2_Point 		BIGINT	
    
,   IN p_Rival3_UserID 		BIGINT	
,   IN p_Rival3_DBId 		INT	
,   IN p_Rival3_Nick 		VARCHAR(30)
,	IN p_Rival3_Point 		BIGINT	
    
,   IN p_Rival4_UserID 		BIGINT	
,   IN p_Rival4_DBId 		INT	
,   IN p_Rival4_Nick 		VARCHAR(30)
,	IN p_Rival4_Point 		BIGINT	
    
,   IN p_Rival5_UserID 		BIGINT	
,   IN p_Rival5_DBId 		INT	
,   IN p_Rival5_Nick 		VARCHAR(30)
,	IN p_Rival5_Point 		BIGINT	
)
    COMMENT '무투전 대전 상대 정보 입력'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   	START TRANSACTION;	
    
    root:
    BEGIN
    
		
        DELETE FROM user_combat_rivals WHERE user_idx = p_UserID AND rival_type = p_CombatType;
        
        IF p_Rival1_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival1_UserID, p_Rival1_DBId, p_Rival1_Nick, p_CombatType, 0, p_Rival1_Point, 0);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 100;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival2_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival2_UserID, p_Rival2_DBId, p_Rival2_Nick, p_CombatType, 0, p_Rival2_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 200;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival3_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival3_UserID, p_Rival3_DBId, p_Rival3_Nick, p_CombatType, 0, p_Rival3_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 300;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival4_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival4_UserID, p_Rival4_DBId, p_Rival4_Nick, p_CombatType, 0, p_Rival4_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 400;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival5_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival5_UserID, p_Rival5_DBId, p_Rival5_Nick, p_CombatType, 0, p_Rival5_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 500;
                LEAVE root;
            END IF;
        END IF;

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		

	
    SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usercombat_update_reset_rival` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usercombat_update_reset_rival`( 
	IN p_UserID 			BIGINT	
, 	IN p_CombatType			TINYINT
, 	IN p_ResetCount			INT

, 	IN p_UseCashA			BIGINT

,   IN p_Rival1_UserID 		BIGINT	
,   IN p_Rival1_DBId 		INT	
,   IN p_Rival1_Nick 		VARCHAR(30)
,	IN p_Rival1_Point 		BIGINT	

,   IN p_Rival2_UserID 		BIGINT	
,   IN p_Rival2_DBId 		INT	
,   IN p_Rival2_Nick 		VARCHAR(30)
,	IN p_Rival2_Point 		BIGINT	
    
,   IN p_Rival3_UserID 		BIGINT	
,   IN p_Rival3_DBId 		INT	
,   IN p_Rival3_Nick 		VARCHAR(30)
,	IN p_Rival3_Point 		BIGINT	
    
,   IN p_Rival4_UserID 		BIGINT	
,   IN p_Rival4_DBId 		INT	
,   IN p_Rival4_Nick 		VARCHAR(30)
,	IN p_Rival4_Point 		BIGINT	
    
,   IN p_Rival5_UserID 		BIGINT	
,   IN p_Rival5_DBId 		INT	
,   IN p_Rival5_Nick 		VARCHAR(30)
,	IN p_Rival5_Point 		BIGINT	
)
    COMMENT '무투전 대전 상대 정보 리셋'
BEGIN

	DECLARE v_finalCashA 		BIGINT DEFAULT 0;
    DECLARE v_finalResetCount 	INT DEFAULT 0;
   
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_finalResetCount;
	END;
   
   	START TRANSACTION;	
    
    root:
    BEGIN
    
		
        IF p_CombatType <> 1 AND p_CombatType <> 2 THEN
			SET v_result = 1000;
			LEAVE root;
        END IF;
    
		
        IF p_UseCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_UseCashA, v_finalCashA, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
        UPDATE user_combat 
        SET hero_combat_reset_cnt = (@hero_combat_reset_cnt := IF(p_CombatType = 1, p_ResetCount, hero_combat_reset_cnt)), 
			combat_grade_up_reset_cnt = (@combat_grade_up_reset_cnt := IF(p_CombatType = 2, p_ResetCount, combat_grade_up_reset_cnt))
        WHERE p_UserID = user_idx;
    
		
        SET v_finalResetCount = IF(p_CombatType = 1, @hero_combat_reset_cnt, @combat_grade_up_reset_cnt);
    
		
        DELETE FROM user_combat_rivals WHERE user_idx = p_UserID AND rival_type = p_CombatType;
        
        IF p_Rival1_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival1_UserID, p_Rival1_DBId, p_Rival1_Nick, p_CombatType, 0, p_Rival1_Point, 0);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 100;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival2_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival2_UserID, p_Rival2_DBId, p_Rival2_Nick, p_CombatType, 0, p_Rival2_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 200;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival3_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival3_UserID, p_Rival3_DBId, p_Rival3_Nick, p_CombatType, 0, p_Rival3_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 300;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival4_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival4_UserID, p_Rival4_DBId, p_Rival4_Nick, p_CombatType, 0, p_Rival4_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 400;
                LEAVE root;
            END IF;
        END IF;
        
        IF p_Rival5_UserID > 0 THEN
			INSERT INTO user_combat_rivals(user_idx, rival_user_idx, rival_db_idx, rival_nick, rival_type, rival_rank, rival_combatPoint, rival_isWin) 
			VALUES (p_UserID, p_Rival5_UserID, p_Rival5_DBId, p_Rival5_Nick, p_CombatType, 0, p_Rival5_Point, 0);
			
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 500;
                LEAVE root;
            END IF;
        END IF;

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		

	
    SELECT v_result, v_finalCashA, v_finalResetCount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usercombat_update_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usercombat_update_reward`( 
	IN p_UserID 			BIGINT	
,	IN p_CharID 			BIGINT	
, 	IN p_rewardType			TINYINT

, 	IN p_AddGold			BIGINT
, 	IN p_AddCashA			BIGINT
, 	IN p_AddCashB			BIGINT
)
    COMMENT '무투전 보상 지급'
BEGIN

	DECLARE v_finalGold 		BIGINT DEFAULT 0;
	DECLARE v_finalCashA 		BIGINT DEFAULT 0;
	DECLARE v_finalCashB 		BIGINT DEFAULT 0;
       
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalGold, v_finalCashA, v_finalCashB;
	END;
   
   	START TRANSACTION;	
    
    root:
    BEGIN
    
		
        IF p_rewardType <> 0 AND p_rewardType <> 1 AND p_rewardType <> 2 THEN
			SET v_result = 1000;
			LEAVE root;
        END IF;
    
		
        UPDATE user_combat 
        SET newgrade_combat_reward = IF(p_rewardType = 0, 1, newgrade_combat_reward),
			daily_combat_reward = IF(p_rewardType = 1, 1, daily_combat_reward), 
			season_combat_reward = IF(p_rewardType = 2, 1, season_combat_reward) 
        WHERE user_idx = p_UserID; 
		
        
        IF p_AddGold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_insert_gold(p_UserID, p_CharID, p_AddGold, v_finalGold, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
        IF p_AddCashA > 0 THEN 
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(p_UserID, p_AddCashA, v_finalCashA, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
        IF p_AddCashB > 0 THEN 
			CALL sp_mmo_notrans_userinfo_insert_cashBFree(p_UserID, p_AddCashB, v_finalCashB, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result, v_finalGold, v_finalCashA, v_finalCashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattendmission_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattendmission_delete`(
	IN _useridx 				BIGINT
,	IN _eventid 				INT
)
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		        
		SELECT _result;
	END;
    
    DELETE FROM user_event_attend_mission WHERE user_idx = _useridx AND event_id = _eventid;
    
	SELECT _result;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattendmission_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattendmission_insert`(
	IN _useridx 				BIGINT
,	IN _eventid 				INT
,	IN _eventattendmissionid 	INT
,	IN _eventtype 				INT
, 	IN _daycount				TINYINT
,	IN _event_day1	 			TINYINT
,	IN _event_day2	 			TINYINT
,	IN _event_day3	 			TINYINT
,	IN _event_day4	 			TINYINT
,	IN _event_day5	 			TINYINT
,	IN _event_day6	 			TINYINT
,	IN _event_day7	 			TINYINT
,	IN _expiretime 				BIGINT
)
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
                
		SELECT _result;
	END;
    
    
    START TRANSACTION;
    
    root:
    BEGIN
		
        
        INSERT INTO user_event_attend(user_idx, event_id, event_attend_id, event_type, day_count, last_date, get_reward, expire_time) 
								VALUES (_useridx, _eventid, _eventattendmissionid, _eventtype, 1, NOW(), 0, FROM_UNIXTIME(_expiretime));
		IF ROW_COUNT() <= 0 THEN
			SET _result = 108;
			LEAVE root;
		END IF;
        
        
		IF _daycount = 1 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime));	
											
			IF ROW_COUNT() <= 0 THEN
				SET _result = 100;
                LEAVE root;
			END IF;
		ELSEIF _daycount = 2 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day2, 0, FROM_UNIXTIME(_expiretime));
			IF ROW_COUNT() <= 0 THEN
				SET _result = 101;
                LEAVE root;
			END IF;
			
		ELSEIF _daycount = 3 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day2, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day3, 0, FROM_UNIXTIME(_expiretime));
			IF ROW_COUNT() <= 0 THEN
				SET _result = 102;
                LEAVE root;
			END IF;
			
		ELSEIF _daycount = 4 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day2, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day3, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day4, 0, FROM_UNIXTIME(_expiretime));
			IF ROW_COUNT() <= 0 THEN
				SET _result = 103;
                LEAVE root;
			END IF;
			
		ELSEIF _daycount = 5 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day2, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day3, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day4, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day5, 0, FROM_UNIXTIME(_expiretime));
			IF ROW_COUNT() <= 0 THEN
				SET _result = 104;
                LEAVE root;
			END IF;
			
		ELSEIF _daycount = 6 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day2, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day3, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day4, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day5, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day6, 0, FROM_UNIXTIME(_expiretime));
			IF ROW_COUNT() <= 0 THEN
				SET _result = 105;
                LEAVE root;
			END IF;
			
		ELSEIF _daycount = 7 THEN
			INSERT INTO user_event_attend_mission(user_idx, event_id, event_attend_mission_id, event_day, get_reward, expire_time)
											VALUES(_useridx, _eventid, _eventattendmissionid, _event_day1, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day2, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day3, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day4, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day5, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day6, 0, FROM_UNIXTIME(_expiretime))
												,(_useridx, _eventid, _eventattendmissionid, _event_day7, 0, FROM_UNIXTIME(_expiretime));
			IF ROW_COUNT() <= 0 THEN
				SET _result = 106;
                LEAVE root;
			END IF;
			
		ELSE 
			set _result = 107;
		END IF;
	END;
    
    IF _result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
        
	SELECT _result;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattendmission_update_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattendmission_update_complete`(
	IN	_useridx 	BIGINT
,	IN	_eventid 	INT, 			IN	_eventday 	TINYINT
,	IN	_rewardtype TINYINT,		IN	_rewardid 	INT,	IN	_rewardvalue 	INT
,	IN 	_rewardtextidx INT
)
BEGIN
    
    DECLARE v_chartype 		INT DEFAULT 0;
	
    DECLARE v_posttype		INT DEFAULT 1;
        
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE _result 		INT DEFAULT 0;
	
    DECLARE v_postidx		BIGINT DEFAULT 0;
    
    DECLARE v_postCnt		INT DEFAULT 0;
	DECLARE new_post		TINYINT DEFAULT 0;
    
    DECLARE v_getreward		TINYINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result, v_postidx, v_postCnt, new_post;
	END;        
        
    
	START TRANSACTION;
	
    root:
    BEGIN
		
		
		SELECT char_type INTO v_chartype FROM char_info WHERE `char_idx` = (SELECT base_char_idx FROM userinfo WHERE user_idx = _useridx);
    
		
		SELECT get_reward INTO v_getreward FROM user_event_attend_mission WHERE user_idx = _useridx AND event_id = _eventid AND event_day = _eventday;
		IF v_getreward != 0 THEN 
			SET _result = 1002;
            LEAVE root;
		END IF;
		
		
		UPDATE user_event_attend_mission SET get_reward = 1 WHERE user_idx = _useridx AND event_id = _eventid AND event_day = _eventday;
		IF ROW_COUNT() > 0 THEN 
		BEGIN		
			
			IF _rewardid != 0 THEN 
				INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, '', 0, 0, v_posttype, _rewardtextidx, '', ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
				IF ROW_COUNT() <= 0 THEN 
					SET _result = 101;
                    LEAVE root;
				END IF;
				
				SET v_postidx = LAST_INSERT_ID();
			END IF;		
			
			
			SELECT COUNT(*), BIT_OR(post_type) INTO v_postCnt, new_post FROM user_post WHERE user_idx = _useridx and char_id IN (0, v_chartype) and expire_date >= CURRENT_TIMESTAMP();
			
		END;
		ELSE
			SET _result = 100;
            LEAVE root;
		END IF;	
		
    END;
    
	
	IF _result != 0 THEN
		ROLLBACK;        
	ELSE
		COMMIT;
	END IF;	
	
	SELECT _result, v_postidx, v_postCnt, new_post;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattend_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattend_delete`(
	IN _useridx 				BIGINT
,	IN _eventid 				INT
)
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		        
		SELECT _result;
	END;
    
    DELETE FROM user_event_attend WHERE user_idx = _useridx AND event_id = _eventid;
    
	SELECT _result;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattend_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattend_insert`(
	IN _useridx 		BIGINT
,	IN _eventid 		INT
,	IN _eventattendid 	INT
,	IN _eventtype 		INT
,	IN _daycount	 	TINYINT
,	IN _lastdate 		BIGINT
,	IN _expiretime 		BIGINT
)
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		                
		SELECT _result;
	END;
    
    INSERT INTO user_event_attend(user_idx, event_id, event_attend_id, event_type, day_count, last_date, get_reward, expire_time) 
							VALUES(_useridx, _eventid, _eventattendid, _eventtype, _daycount, FROM_UNIXTIME(_lastdate), 0, FROM_UNIXTIME(_expiretime));
    
    IF ROW_COUNT() <= 0 THEN
		SET _result = 100;
    END IF;
    
	SELECT _result;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattend_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattend_update`(
	IN	_useridx 	BIGINT

,	IN	_eventid 	INT
,	IN	_daycount 	TINYINT
,	IN	_lastdate 	BIGINT
)
BEGIN
    
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE _result 		INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		
		SELECT _result;
	END;        
    
	
	UPDATE user_event_attend SET day_count = _daycount, last_date = FROM_UNIXTIME(_lastdate) WHERE user_idx = _useridx AND event_id = _eventid;
	IF ROW_COUNT() <= 0 THEN 
		SET _result = 100;
	END IF;	
	
	SELECT _result;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattend_update_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattend_update_complete`(
	IN	_useridx 	BIGINT

,	IN	_eventid 	INT

,	IN	_rewardtype TINYINT,		IN	_rewardid 	INT,	IN	_rewardvalue 	INT
,	IN 	_rewardtextidx INT
)
BEGIN
    
	DECLARE v_chartype 		INT DEFAULT 0;
    
    DECLARE v_posttype		INT DEFAULT 1;
    
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE _result 		INT DEFAULT 0;
    
    DECLARE v_postidx		BIGINT DEFAULT 0;
    
    DECLARE v_postCnt		INT DEFAULT 0;
	DECLARE new_post		TINYINT DEFAULT 0;
    
    DECLARE v_getreward		TINYINT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result, v_postidx, v_postCnt, new_post;
	END;        
        
    
	START TRANSACTION;	
	
    root:
    BEGIN
    
		
		
        SELECT ci.char_type INTO v_chartype
        FROM char_info ci INNER JOIN userinfo ui ON ci.char_idx = ui.base_char_idx AND ci.user_idx = ui.user_idx
		WHERE ci.user_idx=_useridx;
		
		
		SELECT get_reward INTO v_getreward FROM user_event_attend WHERE user_idx = _useridx AND event_id = _eventid;    
		IF v_getreward != 0 THEN 
			SET _result = 1002;
            LEAVE root;
		END IF;
			
		
		UPDATE user_event_attend SET get_reward = 1 WHERE user_idx = _useridx AND event_id = _eventid;
		IF ROW_COUNT() > 0 THEN 
		BEGIN		
			
			IF _rewardid != 0 THEN 
				INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, '', 0, 0, v_posttype, _rewardtextidx, '', ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
				IF ROW_COUNT() <= 0 THEN 
					SET _result = 101;
                    LEAVE root;
				END IF;
				
				SET v_postidx = LAST_INSERT_ID();
			END IF;		
			
			
			SELECT COUNT(user_idx), BIT_OR(post_type) INTO v_postCnt, new_post FROM user_post WHERE user_idx = _useridx and char_id IN (0, v_chartype) and expire_date >= CURRENT_TIMESTAMP();
		END;
		ELSE
			SET _result = 100;
            LEAVE root;
		END IF;	
    END;
	
	
	IF _result != 0 THEN
		ROLLBACK;        
	ELSE
		COMMIT;
	END IF;	
	
	SELECT _result, v_postidx, v_postCnt, new_post;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventattend_update_complete_condition` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventattend_update_complete_condition`(
	IN	_useridx 	BIGINT

,	IN	_eventid 	INT, 			IN	_daycount 	TINYINT,		IN	_lastdate 	BIGINT

,	IN	_rewardtype TINYINT,		IN	_rewardid 	INT,			IN	_rewardvalue 	INT
,	IN 	_rewardtextidx INT
)
BEGIN
    
	
    DECLARE v_posttype		INT DEFAULT 1;
    
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE _result 		INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result;
	END;        
        
    
	START TRANSACTION;	
	
    
    
    
	
	UPDATE user_event_attend SET day_count = _daycount, last_date = FROM_UNIXTIME(_lastdate) WHERE user_idx = _useridx AND event_id = _eventid;
	IF ROW_COUNT() > 0 THEN 
	BEGIN		
		
		IF _rewardid != 0 THEN 
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx, 0, '', 0, 0, v_posttype, _rewardtextidx, '', ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET _result = 101;
			END IF;
		END IF;		
	END;
	ELSE
		SET _result = 100;
	END IF;	
	
	
	IF _result != 0 THEN
		ROLLBACK;        
	ELSE
		COMMIT;
	END IF;	
	
	SELECT _result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_delete`(
	IN _useridx 				BIGINT
,	IN _eventid 				INT
)
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		        
		SELECT _result;
	END;
    
    DELETE FROM user_event_mission WHERE user_idx = _useridx AND event_id = _eventid;
    
	SELECT _result;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_insert`(
	IN p_UserID 		BIGINT
,	IN p_EventID 		INT
,	IN p_MissionID1 	INT,	IN p_MissionID2 	INT,	IN p_MissionID3 	INT,	IN p_MissionID4 	INT,	IN p_MissionID5 	INT
,	IN p_MissionID6		INT,	IN p_MissionID7 	INT,	IN p_MissionID8		INT,	IN p_MissionID9 	INT,	IN p_MissionID10	INT
,	IN p_MissionID11	INT,	IN p_MissionID12	INT,	IN p_MissionID13	INT,	IN p_MissionID14	INT,	IN p_MissionID15	INT
,	IN p_MissionID16	INT,	IN p_MissionID17	INT,	IN p_MissionID18	INT,	IN p_MissionID19	INT,	IN p_MissionID20	INT
,	IN p_ExpireTime 	BIGINT
)
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_nowtime	DATETIME DEFAULT NOW();
    DECLARE v_yesterdaytime DATETIME DEFAULT DATE_SUB(v_nowtime, INTERVAL 1 DAY);
    
    DECLARE v_insert_cnt	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result, v_insert_cnt;
	END;

	
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_usereventmission(user_idx BIGINT, mission_id INT);
	
	TRUNCATE TABLE tbl_temp_usereventmission;
    
    INSERT INTO tbl_temp_usereventmission values (p_UserID, p_MissionID1), (p_UserID, p_MissionID2), (p_UserID, p_MissionID3), (p_UserID, p_MissionID4), (p_UserID, p_MissionID5),
												(p_UserID, p_MissionID6), (p_UserID, p_MissionID7), (p_UserID, p_MissionID8), (p_UserID, p_MissionID9), (p_UserID, p_MissionID10),
												(p_UserID, p_MissionID11), (p_UserID, p_MissionID12), (p_UserID, p_MissionID13), (p_UserID, p_MissionID14), (p_UserID, p_MissionID15),
												(p_UserID, p_MissionID16), (p_UserID, p_MissionID17), (p_UserID, p_MissionID18), (p_UserID, p_MissionID19), (p_UserID, p_MissionID20);

	START TRANSACTION;
    
    root:
    BEGIN
		
		INSERT INTO user_event_mission(user_idx, event_id, mission_id, mission_value, expire_time, update_time, get_reward)
			SELECT p_UserID, p_EventID, mission_id, 0, FROM_UNIXTIME(p_ExpireTime), v_yesterdaytime, 0
			FROM tbl_temp_usereventmission WHERE user_idx = p_UserID AND mission_id > 0
		ON DUPLICATE KEY UPDATE mission_value = 0, expire_time = FROM_UNIXTIME(p_ExpireTime), update_time = v_yesterdaytime, get_reward = 0;

		SET v_insert_cnt = ROW_COUNT();    

		IF v_insert_cnt <= 0 THEN 
			SET v_result = 101;	
		END IF;
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	
	TRUNCATE TABLE tbl_temp_usereventmission;

	SELECT v_result, v_insert_cnt;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_select`(
	IN	p_UserID 		BIGINT
)
    COMMENT '미션 데이터 얻기'
BEGIN

	SELECT event_id, mission_id, mission_value, get_reward
    FROM user_event_mission
    WHERE user_idx = p_UserID AND NOW() < expire_time;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_10` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_10`(
	IN	_useridx 		BIGINT

,	IN _eventid1 		INT,	IN 	_missionid1 	INT,	IN 	_missionval1 		INT
,	IN _eventid2 		INT,	IN 	_missionid2 	INT,	IN 	_missionval2 		INT
,	IN _eventid3 		INT,	IN 	_missionid3 	INT,	IN 	_missionval3 		INT
,	IN _eventid4 		INT,	IN 	_missionid4 	INT,	IN 	_missionval4 		INT
,	IN _eventid5 		INT,	IN 	_missionid5 	INT,	IN 	_missionval5 		INT
,	IN _eventid6 		INT,	IN 	_missionid6 	INT,	IN 	_missionval6 		INT
,	IN _eventid7 		INT,	IN 	_missionid7 	INT,	IN 	_missionval7 		INT
,	IN _eventid8 		INT,	IN 	_missionid8 	INT,	IN 	_missionval8 		INT
,	IN _eventid9 		INT,	IN 	_missionid9 	INT,	IN 	_missionval9 		INT
,	IN _eventid10 		INT,	IN 	_missionid10 	INT,	IN 	_missionval10 		INT
)
    COMMENT '유저 이벤트 미션 업데이트'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE _result 	INT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
        
		SELECT _result;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
    
		UPDATE user_event_mission 
        SET mission_value = CASE 
							WHEN event_id = _eventid1 AND mission_id = _missionid1 THEN _missionval1
                            WHEN event_id = _eventid2 AND mission_id = _missionid2 THEN _missionval2
                            WHEN event_id = _eventid3 AND mission_id = _missionid3 THEN _missionval3
                            WHEN event_id = _eventid4 AND mission_id = _missionid4 THEN _missionval4
                            WHEN event_id = _eventid5 AND mission_id = _missionid5 THEN _missionval5
                            WHEN event_id = _eventid6 AND mission_id = _missionid6 THEN _missionval6
                            WHEN event_id = _eventid7 AND mission_id = _missionid7 THEN _missionval7
                            WHEN event_id = _eventid8 AND mission_id = _missionid8 THEN _missionval8
                            WHEN event_id = _eventid9 AND mission_id = _missionid9 THEN _missionval9
                            WHEN event_id = _eventid10 AND mission_id = _missionid10 THEN _missionval10
                            ELSE mission_value
                            END
			, update_time = now()
        WHERE user_idx = _useridx;
    
    END;
    
    IF _result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
      
    
	SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_cash` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_cash`(
	IN	p_UserID 		BIGINT
,	IN p_EventID1 		INT,	IN 	p_MissionID1 	INT,	IN 	p_MissionMaxValue1 		INT,	IN 	p_MissionAddValue1 		INT,	IN	p_ExpireDate1 	BIGINT
,	IN p_EventID2 		INT,	IN 	p_MissionID2 	INT,	IN 	p_MissionMaxValue2 		INT,	IN 	p_MissionAddValue2 		INT,	IN	p_ExpireDate2 	BIGINT
,	IN p_EventID3 		INT,	IN 	p_MissionID3 	INT,	IN 	p_MissionMaxValue3 		INT,	IN 	p_MissionAddValue3 		INT,	IN	p_ExpireDate3 	BIGINT
,	IN p_EventID4 		INT,	IN 	p_MissionID4 	INT,	IN 	p_MissionMaxValue4 		INT,	IN 	p_MissionAddValue4 		INT,	IN	p_ExpireDate4 	BIGINT
,	IN p_EventID5 		INT,	IN 	p_MissionID5 	INT,	IN 	p_MissionMaxValue5 		INT,	IN 	p_MissionAddValue5 		INT,	IN	p_ExpireDate5 	BIGINT
,	IN p_EventID6 		INT,	IN 	p_MissionID6 	INT,	IN 	p_MissionMaxValue6 		INT,	IN 	p_MissionAddValue6 		INT,	IN	p_ExpireDate6 	BIGINT
,	IN p_EventID7 		INT,	IN 	p_MissionID7 	INT,	IN 	p_MissionMaxValue7 		INT,	IN 	p_MissionAddValue7 		INT,	IN	p_ExpireDate7 	BIGINT
,	IN p_EventID8 		INT,	IN 	p_MissionID8 	INT,	IN 	p_MissionMaxValue8 		INT,	IN 	p_MissionAddValue8 		INT,	IN	p_ExpireDate8 	BIGINT
,	IN p_EventID9 		INT,	IN 	p_MissionID9 	INT,	IN 	p_MissionMaxValue9 		INT,	IN 	p_MissionAddValue9 		INT,	IN	p_ExpireDate9 	BIGINT
,	IN p_EventID10 		INT,	IN 	p_MissionID10 	INT,	IN 	p_MissionMaxValue10 	INT,	IN 	p_MissionAddValue10 	INT,	IN	p_ExpireDate10 	BIGINT
,	IN p_EventID11 		INT,	IN 	p_MissionID11 	INT,	IN 	p_MissionMaxValue11 	INT,	IN 	p_MissionAddValue11 	INT,	IN	p_ExpireDate11 	BIGINT
,	IN p_EventID12 		INT,	IN 	p_MissionID12 	INT,	IN 	p_MissionMaxValue12 	INT,	IN 	p_MissionAddValue12 	INT,	IN	p_ExpireDate12 	BIGINT
,	IN p_EventID13 		INT,	IN 	p_MissionID13 	INT,	IN 	p_MissionMaxValue13 	INT,	IN 	p_MissionAddValue13 	INT,	IN	p_ExpireDate13 	BIGINT
,	IN p_EventID14 		INT,	IN 	p_MissionID14 	INT,	IN 	p_MissionMaxValue14 	INT,	IN 	p_MissionAddValue14 	INT,	IN	p_ExpireDate14 	BIGINT
,	IN p_EventID15 		INT,	IN 	p_MissionID15 	INT,	IN 	p_MissionMaxValue15 	INT,	IN 	p_MissionAddValue15 	INT,	IN	p_ExpireDate15 	BIGINT
,	IN p_EventID16 		INT,	IN 	p_MissionID16 	INT,	IN 	p_MissionMaxValue16 	INT,	IN 	p_MissionAddValue16 	INT,	IN	p_ExpireDate16 	BIGINT
,	IN p_EventID17 		INT,	IN 	p_MissionID17 	INT,	IN 	p_MissionMaxValue17 	INT,	IN 	p_MissionAddValue17 	INT,	IN	p_ExpireDate17 	BIGINT
,	IN p_EventID18 		INT,	IN 	p_MissionID18 	INT,	IN 	p_MissionMaxValue18 	INT,	IN 	p_MissionAddValue18 	INT,	IN	p_ExpireDate18 	BIGINT
,	IN p_EventID19 		INT,	IN 	p_MissionID19 	INT,	IN 	p_MissionMaxValue19 	INT,	IN 	p_MissionAddValue19 	INT,	IN	p_ExpireDate19 	BIGINT
,	IN p_EventID20 		INT,	IN 	p_MissionID20 	INT,	IN 	p_MissionMaxValue20 	INT,	IN 	p_MissionAddValue20 	INT,	IN	p_ExpireDate20 	BIGINT
)
    COMMENT '유저 캐쉬 이벤트 미션 업데이트'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_nowtime	DATETIME DEFAULT NOW();
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;
    
	
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_usereventmission_cash(user_idx BIGINT, event_id INT, mission_id INT, mission_max INT, mission_add INT, expire_date BIGINT);
	
	TRUNCATE TABLE tbl_temp_usereventmission_cash;
    
    INSERT INTO tbl_temp_usereventmission_cash 
			values (p_UserID, p_EventID1, p_MissionID1, p_MissionMaxValue1, p_MissionAddValue1, p_ExpireDate1),
					(p_UserID, p_EventID2, p_MissionID2, p_MissionMaxValue2, p_MissionAddValue2, p_ExpireDate2),
                    (p_UserID, p_EventID3, p_MissionID3, p_MissionMaxValue3, p_MissionAddValue3, p_ExpireDate3),
                    (p_UserID, p_EventID4, p_MissionID4, p_MissionMaxValue4, p_MissionAddValue4, p_ExpireDate4),
                    (p_UserID, p_EventID5, p_MissionID5, p_MissionMaxValue5, p_MissionAddValue5, p_ExpireDate5),
                    (p_UserID, p_EventID6, p_MissionID6, p_MissionMaxValue6, p_MissionAddValue6, p_ExpireDate6),
                    (p_UserID, p_EventID7, p_MissionID7, p_MissionMaxValue7, p_MissionAddValue7, p_ExpireDate7),
                    (p_UserID, p_EventID8, p_MissionID8, p_MissionMaxValue8, p_MissionAddValue8, p_ExpireDate8),
                    (p_UserID, p_EventID9, p_MissionID9, p_MissionMaxValue9, p_MissionAddValue9, p_ExpireDate9),
                    (p_UserID, p_EventID10, p_MissionID10, p_MissionMaxValue10, p_MissionAddValue10, p_ExpireDate10),
                    (p_UserID, p_EventID11, p_MissionID11, p_MissionMaxValue11, p_MissionAddValue11, p_ExpireDate11),
                    (p_UserID, p_EventID12, p_MissionID12, p_MissionMaxValue12, p_MissionAddValue12, p_ExpireDate12),
                    (p_UserID, p_EventID13, p_MissionID13, p_MissionMaxValue13, p_MissionAddValue13, p_ExpireDate13),
                    (p_UserID, p_EventID14, p_MissionID14, p_MissionMaxValue14, p_MissionAddValue14, p_ExpireDate14),
                    (p_UserID, p_EventID15, p_MissionID15, p_MissionMaxValue15, p_MissionAddValue15, p_ExpireDate15),
                    (p_UserID, p_EventID16, p_MissionID16, p_MissionMaxValue16, p_MissionAddValue16, p_ExpireDate16),
                    (p_UserID, p_EventID17, p_MissionID17, p_MissionMaxValue17, p_MissionAddValue17, p_ExpireDate17),
                    (p_UserID, p_EventID18, p_MissionID18, p_MissionMaxValue18, p_MissionAddValue18, p_ExpireDate18),
                    (p_UserID, p_EventID19, p_MissionID19, p_MissionMaxValue19, p_MissionAddValue19, p_ExpireDate19),
                    (p_UserID, p_EventID20, p_MissionID20, p_MissionMaxValue20, p_MissionAddValue20, p_ExpireDate20);

	root:
    BEGIN
		
		INSERT INTO user_event_mission(user_idx, event_id, mission_id, mission_value, expire_time, update_time, get_reward)
			SELECT p_UserID, event_id, mission_id, mission_add, FROM_UNIXTIME(expire_date), v_nowtime, 0
			FROM tbl_temp_usereventmission_cash WHERE user_idx = p_UserID AND event_id > 0
		ON DUPLICATE KEY UPDATE mission_value = IF(expire_time < now(), mission_add, IF(mission_max < mission_value + mission_add, mission_max, mission_value + mission_add)), 
								get_reward = IF(expire_time < now(), 0, get_reward),
								expire_time = IF(expire_time < now(), FROM_UNIXTIME(expire_date), expire_time);

	END;
    
	SELECT v_result;
	
	
	IF 0 = v_result THEN
		SELECT event_id, mission_id, mission_value, get_reward
		FROM user_event_mission
		WHERE (user_idx, event_id, mission_id) IN (
			SELECT user_idx, event_id, mission_id
            FROM tbl_temp_usereventmission_cash
            WHERE user_idx = p_UserID AND event_id > 0);
	END IF;
	
	
	TRUNCATE TABLE tbl_temp_usereventmission_cash;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_cash_daily` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_cash_daily`(
	IN	p_UserID 		BIGINT
,	IN p_EventID1 		INT,	IN 	p_MissionID1 	INT,	IN 	p_MissionMaxValue1 		INT,	IN 	p_MissionAddValue1 		INT,	IN	p_ExpireDate1 	BIGINT
,	IN p_EventID2 		INT,	IN 	p_MissionID2 	INT,	IN 	p_MissionMaxValue2 		INT,	IN 	p_MissionAddValue2 		INT,	IN	p_ExpireDate2 	BIGINT
,	IN p_EventID3 		INT,	IN 	p_MissionID3 	INT,	IN 	p_MissionMaxValue3 		INT,	IN 	p_MissionAddValue3 		INT,	IN	p_ExpireDate3 	BIGINT
,	IN p_EventID4 		INT,	IN 	p_MissionID4 	INT,	IN 	p_MissionMaxValue4 		INT,	IN 	p_MissionAddValue4 		INT,	IN	p_ExpireDate4 	BIGINT
,	IN p_EventID5 		INT,	IN 	p_MissionID5 	INT,	IN 	p_MissionMaxValue5 		INT,	IN 	p_MissionAddValue5 		INT,	IN	p_ExpireDate5 	BIGINT
,	IN p_EventID6 		INT,	IN 	p_MissionID6 	INT,	IN 	p_MissionMaxValue6 		INT,	IN 	p_MissionAddValue6 		INT,	IN	p_ExpireDate6 	BIGINT
,	IN p_EventID7 		INT,	IN 	p_MissionID7 	INT,	IN 	p_MissionMaxValue7 		INT,	IN 	p_MissionAddValue7 		INT,	IN	p_ExpireDate7 	BIGINT
,	IN p_EventID8 		INT,	IN 	p_MissionID8 	INT,	IN 	p_MissionMaxValue8 		INT,	IN 	p_MissionAddValue8 		INT,	IN	p_ExpireDate8 	BIGINT
,	IN p_EventID9 		INT,	IN 	p_MissionID9 	INT,	IN 	p_MissionMaxValue9 		INT,	IN 	p_MissionAddValue9 		INT,	IN	p_ExpireDate9 	BIGINT
,	IN p_EventID10 		INT,	IN 	p_MissionID10 	INT,	IN 	p_MissionMaxValue10 	INT,	IN 	p_MissionAddValue10 	INT,	IN	p_ExpireDate10 	BIGINT
,	IN p_EventID11 		INT,	IN 	p_MissionID11 	INT,	IN 	p_MissionMaxValue11 	INT,	IN 	p_MissionAddValue11 	INT,	IN	p_ExpireDate11 	BIGINT
,	IN p_EventID12 		INT,	IN 	p_MissionID12 	INT,	IN 	p_MissionMaxValue12 	INT,	IN 	p_MissionAddValue12 	INT,	IN	p_ExpireDate12 	BIGINT
,	IN p_EventID13 		INT,	IN 	p_MissionID13 	INT,	IN 	p_MissionMaxValue13 	INT,	IN 	p_MissionAddValue13 	INT,	IN	p_ExpireDate13 	BIGINT
,	IN p_EventID14 		INT,	IN 	p_MissionID14 	INT,	IN 	p_MissionMaxValue14 	INT,	IN 	p_MissionAddValue14 	INT,	IN	p_ExpireDate14 	BIGINT
,	IN p_EventID15 		INT,	IN 	p_MissionID15 	INT,	IN 	p_MissionMaxValue15 	INT,	IN 	p_MissionAddValue15 	INT,	IN	p_ExpireDate15 	BIGINT
,	IN p_EventID16 		INT,	IN 	p_MissionID16 	INT,	IN 	p_MissionMaxValue16 	INT,	IN 	p_MissionAddValue16 	INT,	IN	p_ExpireDate16 	BIGINT
,	IN p_EventID17 		INT,	IN 	p_MissionID17 	INT,	IN 	p_MissionMaxValue17 	INT,	IN 	p_MissionAddValue17 	INT,	IN	p_ExpireDate17 	BIGINT
,	IN p_EventID18 		INT,	IN 	p_MissionID18 	INT,	IN 	p_MissionMaxValue18 	INT,	IN 	p_MissionAddValue18 	INT,	IN	p_ExpireDate18 	BIGINT
,	IN p_EventID19 		INT,	IN 	p_MissionID19 	INT,	IN 	p_MissionMaxValue19 	INT,	IN 	p_MissionAddValue19 	INT,	IN	p_ExpireDate19 	BIGINT
,	IN p_EventID20 		INT,	IN 	p_MissionID20 	INT,	IN 	p_MissionMaxValue20 	INT,	IN 	p_MissionAddValue20 	INT,	IN	p_ExpireDate20 	BIGINT
)
    COMMENT '유저 캐쉬 이벤트 미션 업데이트(매일 초기화 되는 종류)'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;	
    DECLARE v_nowtime	DATETIME DEFAULT NOW();
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;
    
	
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_usereventmission_cash_daily(user_idx BIGINT, event_id INT, mission_id INT, mission_max INT, mission_add INT, expire_date BIGINT);
	
	TRUNCATE TABLE tbl_temp_usereventmission_cash_daily;
    
    INSERT INTO tbl_temp_usereventmission_cash_daily 
			values (p_UserID, p_EventID1, p_MissionID1, p_MissionMaxValue1, p_MissionAddValue1, p_ExpireDate1),
					(p_UserID, p_EventID2, p_MissionID2, p_MissionMaxValue2, p_MissionAddValue2, p_ExpireDate2),
                    (p_UserID, p_EventID3, p_MissionID3, p_MissionMaxValue3, p_MissionAddValue3, p_ExpireDate3),
                    (p_UserID, p_EventID4, p_MissionID4, p_MissionMaxValue4, p_MissionAddValue4, p_ExpireDate4),
                    (p_UserID, p_EventID5, p_MissionID5, p_MissionMaxValue5, p_MissionAddValue5, p_ExpireDate5),
                    (p_UserID, p_EventID6, p_MissionID6, p_MissionMaxValue6, p_MissionAddValue6, p_ExpireDate6),
                    (p_UserID, p_EventID7, p_MissionID7, p_MissionMaxValue7, p_MissionAddValue7, p_ExpireDate7),
                    (p_UserID, p_EventID8, p_MissionID8, p_MissionMaxValue8, p_MissionAddValue8, p_ExpireDate8),
                    (p_UserID, p_EventID9, p_MissionID9, p_MissionMaxValue9, p_MissionAddValue9, p_ExpireDate9),
                    (p_UserID, p_EventID10, p_MissionID10, p_MissionMaxValue10, p_MissionAddValue10, p_ExpireDate10),
                    (p_UserID, p_EventID11, p_MissionID11, p_MissionMaxValue11, p_MissionAddValue11, p_ExpireDate11),
                    (p_UserID, p_EventID12, p_MissionID12, p_MissionMaxValue12, p_MissionAddValue12, p_ExpireDate12),
                    (p_UserID, p_EventID13, p_MissionID13, p_MissionMaxValue13, p_MissionAddValue13, p_ExpireDate13),
                    (p_UserID, p_EventID14, p_MissionID14, p_MissionMaxValue14, p_MissionAddValue14, p_ExpireDate14),
                    (p_UserID, p_EventID15, p_MissionID15, p_MissionMaxValue15, p_MissionAddValue15, p_ExpireDate15),
                    (p_UserID, p_EventID16, p_MissionID16, p_MissionMaxValue16, p_MissionAddValue16, p_ExpireDate16),
                    (p_UserID, p_EventID17, p_MissionID17, p_MissionMaxValue17, p_MissionAddValue17, p_ExpireDate17),
                    (p_UserID, p_EventID18, p_MissionID18, p_MissionMaxValue18, p_MissionAddValue18, p_ExpireDate18),
                    (p_UserID, p_EventID19, p_MissionID19, p_MissionMaxValue19, p_MissionAddValue19, p_ExpireDate19),
                    (p_UserID, p_EventID20, p_MissionID20, p_MissionMaxValue20, p_MissionAddValue20, p_ExpireDate20);    
    
	root:
    BEGIN
		
		INSERT INTO user_event_mission(user_idx, event_id, mission_id, mission_value, expire_time, update_time, get_reward)
			SELECT p_UserID, event_id, mission_id, mission_add, FROM_UNIXTIME(expire_date), v_nowtime, 0
			FROM tbl_temp_usereventmission_cash_daily WHERE user_idx = p_UserID AND event_id > 0
		ON DUPLICATE KEY UPDATE mission_value = IF(expire_time < v_nowtime, mission_add, IF(DATEDIFF(v_nowtime, update_time) = 0, IF(mission_max < mission_value + mission_add, mission_max, mission_value + mission_add), IF(mission_max < mission_add, mission_max, mission_add))),
								get_reward = IF(expire_time < v_nowtime, 0, get_reward),
                                update_time = v_nowtime,
								expire_time = IF(expire_time < v_nowtime, FROM_UNIXTIME(expire_date), expire_time);

	END;    

	SELECT v_result;
    
	
	IF 0 = v_result THEN
		SELECT event_id, mission_id, mission_value, get_reward
		FROM user_event_mission
		WHERE (user_idx, event_id, mission_id) IN (
			SELECT user_idx, event_id, mission_id
            FROM tbl_temp_usereventmission_cash_daily
            WHERE user_idx = p_UserID AND event_id > 0);
	END IF;
    
	
	TRUNCATE TABLE tbl_temp_usereventmission_cash_daily;	    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_cash_daily_onetime` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_cash_daily_onetime`(
	IN	p_UserID 		BIGINT
,	IN p_EventID1 		INT,	IN 	p_MissionID1 	INT,	IN 	p_MissionMaxValue1 		INT,	IN 	p_MissionAddValue1 		INT,	IN	p_ExpireDate1 	BIGINT
,	IN p_EventID2 		INT,	IN 	p_MissionID2 	INT,	IN 	p_MissionMaxValue2 		INT,	IN 	p_MissionAddValue2 		INT,	IN	p_ExpireDate2 	BIGINT
,	IN p_EventID3 		INT,	IN 	p_MissionID3 	INT,	IN 	p_MissionMaxValue3 		INT,	IN 	p_MissionAddValue3 		INT,	IN	p_ExpireDate3 	BIGINT
,	IN p_EventID4 		INT,	IN 	p_MissionID4 	INT,	IN 	p_MissionMaxValue4 		INT,	IN 	p_MissionAddValue4 		INT,	IN	p_ExpireDate4 	BIGINT
,	IN p_EventID5 		INT,	IN 	p_MissionID5 	INT,	IN 	p_MissionMaxValue5 		INT,	IN 	p_MissionAddValue5 		INT,	IN	p_ExpireDate5 	BIGINT
,	IN p_EventID6 		INT,	IN 	p_MissionID6 	INT,	IN 	p_MissionMaxValue6 		INT,	IN 	p_MissionAddValue6 		INT,	IN	p_ExpireDate6 	BIGINT
,	IN p_EventID7 		INT,	IN 	p_MissionID7 	INT,	IN 	p_MissionMaxValue7 		INT,	IN 	p_MissionAddValue7 		INT,	IN	p_ExpireDate7 	BIGINT
,	IN p_EventID8 		INT,	IN 	p_MissionID8 	INT,	IN 	p_MissionMaxValue8 		INT,	IN 	p_MissionAddValue8 		INT,	IN	p_ExpireDate8 	BIGINT
,	IN p_EventID9 		INT,	IN 	p_MissionID9 	INT,	IN 	p_MissionMaxValue9 		INT,	IN 	p_MissionAddValue9 		INT,	IN	p_ExpireDate9 	BIGINT
,	IN p_EventID10 		INT,	IN 	p_MissionID10 	INT,	IN 	p_MissionMaxValue10 	INT,	IN 	p_MissionAddValue10 	INT,	IN	p_ExpireDate10 	BIGINT
,	IN p_EventID11 		INT,	IN 	p_MissionID11 	INT,	IN 	p_MissionMaxValue11 	INT,	IN 	p_MissionAddValue11 	INT,	IN	p_ExpireDate11 	BIGINT
,	IN p_EventID12 		INT,	IN 	p_MissionID12 	INT,	IN 	p_MissionMaxValue12 	INT,	IN 	p_MissionAddValue12 	INT,	IN	p_ExpireDate12 	BIGINT
,	IN p_EventID13 		INT,	IN 	p_MissionID13 	INT,	IN 	p_MissionMaxValue13 	INT,	IN 	p_MissionAddValue13 	INT,	IN	p_ExpireDate13 	BIGINT
,	IN p_EventID14 		INT,	IN 	p_MissionID14 	INT,	IN 	p_MissionMaxValue14 	INT,	IN 	p_MissionAddValue14 	INT,	IN	p_ExpireDate14 	BIGINT
,	IN p_EventID15 		INT,	IN 	p_MissionID15 	INT,	IN 	p_MissionMaxValue15 	INT,	IN 	p_MissionAddValue15 	INT,	IN	p_ExpireDate15 	BIGINT
,	IN p_EventID16 		INT,	IN 	p_MissionID16 	INT,	IN 	p_MissionMaxValue16 	INT,	IN 	p_MissionAddValue16 	INT,	IN	p_ExpireDate16 	BIGINT
,	IN p_EventID17 		INT,	IN 	p_MissionID17 	INT,	IN 	p_MissionMaxValue17 	INT,	IN 	p_MissionAddValue17 	INT,	IN	p_ExpireDate17 	BIGINT
,	IN p_EventID18 		INT,	IN 	p_MissionID18 	INT,	IN 	p_MissionMaxValue18 	INT,	IN 	p_MissionAddValue18 	INT,	IN	p_ExpireDate18 	BIGINT
,	IN p_EventID19 		INT,	IN 	p_MissionID19 	INT,	IN 	p_MissionMaxValue19 	INT,	IN 	p_MissionAddValue19 	INT,	IN	p_ExpireDate19 	BIGINT
,	IN p_EventID20 		INT,	IN 	p_MissionID20 	INT,	IN 	p_MissionMaxValue20 	INT,	IN 	p_MissionAddValue20 	INT,	IN	p_ExpireDate20 	BIGINT
)
    COMMENT '유저 캐쉬 이벤트 미션 업데이트(매일 초기화 되는 종류)'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;	
    DECLARE v_nowtime	DATETIME DEFAULT NOW();
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;
    
	
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_usereventmission_cash_daily_onetime(user_idx BIGINT, event_id INT, mission_id INT, mission_max INT, mission_add INT, expire_date BIGINT);
	
	TRUNCATE TABLE tbl_temp_usereventmission_cash_daily_onetime;
    
    INSERT INTO tbl_temp_usereventmission_cash_daily_onetime 
			values (p_UserID, p_EventID1, p_MissionID1, p_MissionMaxValue1, p_MissionAddValue1, p_ExpireDate1),
					(p_UserID, p_EventID2, p_MissionID2, p_MissionMaxValue2, p_MissionAddValue2, p_ExpireDate2),
                    (p_UserID, p_EventID3, p_MissionID3, p_MissionMaxValue3, p_MissionAddValue3, p_ExpireDate3),
                    (p_UserID, p_EventID4, p_MissionID4, p_MissionMaxValue4, p_MissionAddValue4, p_ExpireDate4),
                    (p_UserID, p_EventID5, p_MissionID5, p_MissionMaxValue5, p_MissionAddValue5, p_ExpireDate5),
                    (p_UserID, p_EventID6, p_MissionID6, p_MissionMaxValue6, p_MissionAddValue6, p_ExpireDate6),
                    (p_UserID, p_EventID7, p_MissionID7, p_MissionMaxValue7, p_MissionAddValue7, p_ExpireDate7),
                    (p_UserID, p_EventID8, p_MissionID8, p_MissionMaxValue8, p_MissionAddValue8, p_ExpireDate8),
                    (p_UserID, p_EventID9, p_MissionID9, p_MissionMaxValue9, p_MissionAddValue9, p_ExpireDate9),
                    (p_UserID, p_EventID10, p_MissionID10, p_MissionMaxValue10, p_MissionAddValue10, p_ExpireDate10),
                    (p_UserID, p_EventID11, p_MissionID11, p_MissionMaxValue11, p_MissionAddValue11, p_ExpireDate11),
                    (p_UserID, p_EventID12, p_MissionID12, p_MissionMaxValue12, p_MissionAddValue12, p_ExpireDate12),
                    (p_UserID, p_EventID13, p_MissionID13, p_MissionMaxValue13, p_MissionAddValue13, p_ExpireDate13),
                    (p_UserID, p_EventID14, p_MissionID14, p_MissionMaxValue14, p_MissionAddValue14, p_ExpireDate14),
                    (p_UserID, p_EventID15, p_MissionID15, p_MissionMaxValue15, p_MissionAddValue15, p_ExpireDate15),
                    (p_UserID, p_EventID16, p_MissionID16, p_MissionMaxValue16, p_MissionAddValue16, p_ExpireDate16),
                    (p_UserID, p_EventID17, p_MissionID17, p_MissionMaxValue17, p_MissionAddValue17, p_ExpireDate17),
                    (p_UserID, p_EventID18, p_MissionID18, p_MissionMaxValue18, p_MissionAddValue18, p_ExpireDate18),
                    (p_UserID, p_EventID19, p_MissionID19, p_MissionMaxValue19, p_MissionAddValue19, p_ExpireDate19),
                    (p_UserID, p_EventID20, p_MissionID20, p_MissionMaxValue20, p_MissionAddValue20, p_ExpireDate20);     
    
	root:
    BEGIN
		
		INSERT INTO user_event_mission(user_idx, event_id, mission_id, mission_value, expire_time, update_time, get_reward)
			SELECT p_UserID, event_id, mission_id, mission_add, FROM_UNIXTIME(expire_date), v_nowtime, 0
			FROM tbl_temp_usereventmission_cash_daily_onetime WHERE user_idx = p_UserID AND event_id > 0
		ON DUPLICATE KEY UPDATE mission_value = IF(expire_time < v_nowtime, mission_add, IF(DATEDIFF(v_nowtime, update_time) != 0, IF(mission_max < mission_value + mission_add, mission_max, mission_value + mission_add), mission_value)),
								get_reward = IF(expire_time < v_nowtime, 0, get_reward),
                                update_time = IF(DATEDIFF(v_nowtime, update_time) != 0, v_nowtime, update_time),
								expire_time = IF(expire_time < v_nowtime, FROM_UNIXTIME(expire_date), expire_time);

	END;    
    
	SELECT v_result;
    
	
	IF 0 = v_result THEN
		SELECT event_id, mission_id, mission_value, get_reward
		FROM user_event_mission
		WHERE (user_idx, event_id, mission_id) IN (
			SELECT user_idx, event_id, mission_id
            FROM tbl_temp_usereventmission_cash_daily_onetime
            WHERE user_idx = p_UserID AND event_id > 0);
	END IF;    
    
	
	TRUNCATE TABLE tbl_temp_usereventmission_cash_daily_onetime;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_cash_first` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_cash_first`(
	IN p_UserID 		BIGINT
,	IN p_EventID		INT,	IN  p_MissionID	INT, 	IN 	p_MissionValue		INT
,	IN 	p_MailPathID	INT
,	IN p_ItemType1 		INT,	IN 	p_ItemID1 	INT,	IN 	p_ItemCount1 		INT
,	IN p_ItemType2 		INT,	IN 	p_ItemID2 	INT,	IN 	p_ItemCount2 		INT
,	IN p_ItemType3 		INT,	IN 	p_ItemID3 	INT,	IN 	p_ItemCount3 		INT
)
    COMMENT '유저 캐쉬 이벤트 미션 업데이트(최초 결제 전용)'
BEGIN

	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;	
    
	DECLARE v_posttype		INT DEFAULT 2;  
    DECLARE v_postIdx_1		BIGINT DEFAULT 0;
    DECLARE v_postIdx_2		BIGINT DEFAULT 0;
    DECLARE v_postIdx_3		BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result, v_postIdx_1, v_postIdx_2, v_postIdx_3;
	END;


	START TRANSACTION;	
	
	root:
	BEGIN
    
		
		UPDATE user_event_mission 
		SET mission_value = p_MissionValue, get_reward = 1
		WHERE user_idx = p_UserID AND event_id = p_EventID AND mission_id = p_MissionID;
        
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 1000;
			LEAVE root;
		END IF;        

		
		IF 0 < p_ItemID1 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), p_ItemType1, p_ItemID1, p_ItemCount1);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
				LEAVE root;
			END IF;		
            
            SET v_postIdx_1 := LAST_INSERT_ID();  
		END IF;
		
		IF 0 < p_ItemID2 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), p_ItemType2, p_ItemID2, p_ItemCount2);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1002;
				LEAVE root;
			END IF;		
            
            SET v_postIdx_2 := LAST_INSERT_ID();  
		END IF;
		
		IF 0 < p_ItemID3 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), p_ItemType3, p_ItemID3, p_ItemCount3);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1003;
				LEAVE root;
			END IF;		
            
            SET v_postIdx_3 := LAST_INSERT_ID();  
		END IF; 
    
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    SELECT v_result, v_postIdx_1, v_postIdx_2, v_postIdx_3;   
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_common_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_common_complete`(
	IN	_userid 	BIGINT
,	IN	_charid 	BIGINT
    
,	IN	_eventid 	INT, 		IN	_missionid 	INT, 	IN 	_missionvalue	INT

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT
-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT


,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT

)
BEGIN
    
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
    
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
--     DECLARE v_finalGuildPoint		INT DEFAULT 0; 
    DECLARE v_finalqty				INT DEFAULT 0;
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
--    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;
	
    DECLARE v_chartype			INT DEFAULT 0;
    DECLARE v_getreward		TINYINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
					, v_finalqty, v_finalgold, v_finalcashA-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	END;        
        
    
	START TRANSACTION;	
	
    root:
    BEGIN
		
		
		
        SELECT ci.char_type INTO v_chartype 
        FROM char_info ci INNER JOIN userinfo ui ON ci.char_idx = ui.base_char_idx AND ci.user_idx = ui.user_idx
		WHERE ci.user_idx = _userid;
		
		
		SELECT get_reward INTO v_getreward FROM user_event_mission WHERE user_idx = _userid AND event_id = _eventid AND mission_id = _missionid;
		IF v_getreward != 0 THEN 
			SET v_result = 1002;
			LEAVE root;
		END IF;
			
		
		UPDATE user_event_mission SET mission_value = _missionvalue, get_reward = 1, update_time = now() WHERE user_idx = _userid AND event_id = _eventid AND mission_id = _missionid;
		IF ROW_COUNT() > 0 THEN 
		BEGIN		
			
			IF _addgold > 0 THEN 		
				CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_finalgold, v_result);		
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			
			IF _addCashA > 0 THEN
				CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
				IF v_result != 0 THEN 
					LEAVE root;
				END IF; 
			
				CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_finalcashA, v_result);		
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
				
				CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
				IF v_result != 0 THEN 
					LEAVE root;
				END IF;        
			END IF;
		   
			
	-- 		IF _addCashB > 0 THEN 		
	-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
	-- 			IF v_result != 0 THEN 
	-- 				LEAVE root;
	-- 			END IF; 
	--   
	-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_final_cashB, v_result);
	-- 			IF v_result != 0 THEN
	-- 				LEAVE root;
	-- 			END IF;
	--                   
	--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
	-- 			IF v_result != 0 THEN 
	-- 				LEAVE root;
	-- 			END IF;  
	--    
	--         END IF;

			
			IF _itemId1 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
									_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
									_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
									_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
									_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, v_result, v_item_db_index1);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;

			IF _itemId2 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
									_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
									_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
									_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
									_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, v_result, v_item_db_index2);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			IF _itemId3 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
									_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
									_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
									_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
									_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, v_result, v_item_db_index3);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			IF _itemId4 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
									_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
									_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
									_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
									_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, v_result, v_item_db_index4);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;        
			
			IF _itemId5 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
									_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
									_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
									_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
									_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, v_result, v_item_db_index5);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			IF _itemId6 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
									_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
									_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
									_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
									_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, v_result, v_item_db_index6);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;

			IF _itemId7 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
									_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
									_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
									_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
									_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, v_result, v_item_db_index7);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			IF _itemId8 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
									_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
									_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
									_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
									_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, v_result, v_item_db_index8);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			IF _itemId9 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
									_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
									_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
									_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
									_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, v_result, v_item_db_index9);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;        
			
			IF _itemId10 > 0 THEN
				CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
									_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
									_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
									_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
									_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, v_result, v_item_db_index10);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			
			IF 0 < _costItemId1 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			
			
			IF 0 < _costItemId2 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			

			IF 0 < _costItemId3 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			

			IF 0 < _costItemId4 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			

			IF 0 < _costItemId5 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
			
			IF 0 < _costItemId6 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			
			
			IF 0 < _costItemId7 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			

			IF 0 < _costItemId8 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			

			IF 0 < _costItemId9 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			

			IF 0 < _costItemId10 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;			
			
			
			IF 0 < _bookId1 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId2 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId3 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId4 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value, _bookbelong4, v_result, v_book_db_index4);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId5 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId6 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId7 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId8 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId9 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value, _bookbelong9, v_result, v_book_db_index9);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;		
			
			IF 0 < _bookId10 THEN
				CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;	
		END;
		ELSE
			SET v_result = 100;
            LEAVE root;
		END IF;	
			
    END;
    
	
	IF v_result != 0 THEN
		ROLLBACK;        
	ELSE
		COMMIT;
	END IF;	
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
				, v_finalqty, v_finalgold, v_finalcashA-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_complete`(
	IN	_useridx 	BIGINT

,	IN	_eventid 	INT, 		IN	_missionid 	INT, 	IN 	_missionvalue	INT

,	IN	_rewardtype1 TINYINT,	IN	_rewardid1 	INT,	IN	_rewardvalue1 	INT
,	IN	_rewardtype2 TINYINT,	IN	_rewardid2 	INT,	IN	_rewardvalue2 	INT
,	IN 	_rewardtextidx INT
)
BEGIN
    
    DECLARE v_chartype 		INT DEFAULT 0;
	
    DECLARE v_posttype		INT DEFAULT 1;
    
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE _result 		INT DEFAULT 0;
	
    DECLARE v_postidx1		BIGINT DEFAULT 0;
    DECLARE v_postidx2		BIGINT DEFAULT 0;
    
    DECLARE v_postCnt		INT DEFAULT 0;
	DECLARE new_post		TINYINT DEFAULT 0;
    
    DECLARE v_getreward		TINYINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result, v_postidx1, v_postidx2, v_postCnt, new_post;
	END;        
        
    
	START TRANSACTION;	
	
    root:
    BEGIN
    
		
		
        SELECT ci.char_type INTO v_chartype
		FROM char_info ci INNER JOIN userinfo ui ON ci.char_idx = ui.base_char_idx AND ci.user_idx = ui.user_idx
		WHERE ci.user_idx = _useridx;
		
		
		SELECT get_reward INTO v_getreward FROM user_event_mission WHERE user_idx = _useridx AND event_id = _eventid AND mission_id = _missionid;
		IF v_getreward != 0 THEN 
			SET _result = 1002;
			LEAVE root;
		END IF;
			
		
		
		UPDATE user_event_mission SET mission_value = _missionvalue, get_reward = 1 WHERE user_idx = _useridx AND event_id = _eventid AND mission_id = _missionid;
		IF ROW_COUNT() > 0 THEN 
		BEGIN		
			
			IF _rewardid1 != 0 THEN 
				INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, '', 0, 0, v_posttype, _rewardtextidx, '', ADDDATE(NOW(), 7), NOW(), _rewardtype1, _rewardid1, _rewardvalue1);
				IF ROW_COUNT() <= 0 THEN 
					SET _result = 101;
                    LEAVE root;
				END IF;
				
				SET v_postidx1 = LAST_INSERT_ID();
			END IF;		
			
			IF _rewardid2 != 0 THEN 
				INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, '', 0, 0, v_posttype, _rewardtextidx, '', ADDDATE(NOW(), 7), NOW(), _rewardtype2, _rewardid2, _rewardvalue2);
				IF ROW_COUNT() <= 0 THEN 
					SET _result = 102;
                    LEAVE root;
				END IF;
				
				SET v_postidx2 = LAST_INSERT_ID();
			END IF;		
			
			
			SELECT COUNT(user_idx), BIT_OR(post_type) INTO v_postCnt, new_post FROM user_post WHERE user_idx = _useridx and char_id IN (0, v_chartype) and expire_date >= CURRENT_TIMESTAMP();
			
		END;
		ELSE
			SET _result = 100;
            LEAVE root;
		END IF;	
		
    END;
    
	
	IF _result != 0 THEN
		ROLLBACK;        
	ELSE
		COMMIT;
	END IF;	
	
	SELECT _result, v_postidx1, v_postidx2, v_postCnt, new_post;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usereventmission_update_connect_reset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usereventmission_update_connect_reset`( 
	IN _userid 			BIGINT
,	IN _nextInitTime	BIGINT

,	IN _eventid1		INT
,	IN _eventid2		INT
,	IN _eventid3		INT
,	IN _eventid4		INT
,	IN _eventid5		INT
,	IN _eventid6		INT
,	IN _eventid7		INT
,	IN _eventid8		INT
,	IN _eventid9		INT
,	IN _eventid10		INT
)
    COMMENT '접속 이벤트 정보 초기화'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE user_event_mission SET mission_value = 0, expire_time = FROM_UNIXTIME(_nextInitTime), get_reward = 0
        WHERE user_idx = _userid AND event_id IN (_eventid1, _eventid2, _eventid3, _eventid4, _eventid5, _eventid6, _eventid7, _eventid8, _eventid9, _eventid10);
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userfriend_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userfriend_delete`(
	IN _charidx 			BIGINT
,	IN _friend_charidx	 	BIGINT
)
BEGIN		
	declare result int default 0;
	DELETE FROM char_friend WHERE `char_idx` = _charidx AND `friend_char_idx` = _friend_charidx;
	IF ROW_COUNT() <= 0 THEN 
		SET result = 101;
	END IF;
	
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userfriend_delete_repair` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userfriend_delete_repair`(
	IN	_charidx  			BIGINT
,	IN	_friend_charidx 	BIGINT
,	IN	_friend_dbidx 		INT
,	IN	_friend_nick 		VARCHAR(30)
,	IN	_friend_chartype 	INT
,	IN	_friend_charlevel 	INT
)
    COMMENT '친구 수락 실패시 복구 처리.'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;
	        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
				
		SELECT result;
	END;	

	root:
    BEGIN
		
        
        DELETE FROM char_friend WHERE char_idx = _charidx AND friend_char_idx = _friend_charidx;
        
        
        IF EXISTS (SELECT * FROM char_apply_friend WHERE char_idx = _charidx AND friend_char_idx = _friend_charidx) THEN 
            LEAVE root;
		ELSE 
			INSERT INTO `char_apply_friend`(`char_idx`,`friend_char_idx`,`friend_db_sharding_idx`,`friend_nick`,`friend_char_type`,`friend_char_level`)
			VALUES(_charidx, _friend_charidx, _friend_dbidx, _friend_nick, _friend_chartype, _friend_charlevel);
            
		END IF;
		
	END;
    
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userfriend_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userfriend_insert`(
	IN	_charidx 			BIGINT
,	IN	_friend_charidx 	BIGINT
)
    COMMENT '친구 수락 .'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;
	DECLARE friendnick	varchar(30) DEFAULT '';
	DECLARE frienddbidx INT DEFAULT 0;
    
    
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
		
		SELECT result;
	END;	
	
	START TRANSACTION;	
	root:
	BEGIN		
		SELECT `friend_db_sharding_idx`, `friend_nick` INTO frienddbidx, friendnick FROM `char_apply_friend` WHERE `char_idx` = _charidx AND `friend_char_idx` = _friend_charidx;
		IF FOUND_ROWS() <= 0 THEN 
			SET result = 100;
			LEAVE root;
		END IF;
		
		DELETE FROM char_apply_friend WHERE `char_idx` = _charidx AND `friend_char_idx` = _friend_charidx;
		IF ROW_COUNT() <= 0 THEN 
			SET result = 101;
			LEAVE root;
		END IF;
		
        
        IF EXISTS (SELECT * FROM `char_friend` WHERE char_idx = _charidx AND friend_char_idx = _friend_charidx) THEN 
			SET result = 103;
            LEAVE root;
		END IF;
        
		INSERT INTO `char_friend`(`char_idx`,`friend_char_idx`,`friend_db_sharding_idx`,`friend_nick`)
		VALUES(_charidx, _friend_charidx, frienddbidx, friendnick);
		
		IF ROW_COUNT() <= 0 THEN 
			SET result = 102;
			LEAVE root;
		END IF;
	END;
	
	IF result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userfriend_insert_torequestor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userfriend_insert_torequestor`(
	IN _requestor_charidx BIGINT,
    
    IN _my_charidx BIGINT,
    IN _my_dbidx INT,
	IN _my_nick VARCHAR(30),
    
	IN _max_friend_count INT
)
    COMMENT '친구 수락'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;
    DECLARE v_useridx			BIGINT DEFAULT 0;
    
    DECLARE frienddbidx INT DEFAULT 1;
	DECLARE friendnick VARCHAR(30) DEFAULT '';
    DECLARE friendislogon TINYINT DEFAULT 0;
    DECLARE friendlastlogontime DATETIME DEFAULT NOW();
    
    -- DECLARE my_dbidx INT DEFAULT 0;
	-- DECLARE my_nick VARCHAR(30) DEFAULT '';
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
				
		SELECT result, friendislogon, friendlastlogontime;
	END;	
	
	root:
    BEGIN
    
		-- SELECT `friend_db_idx`, `friend_nick` INTO frienddbidx, friendnick FROM `char_apply_friend` WHERE `char_idx` = _my_charidx AND `friend_char_idx` = _requestor_charidx;
        SELECT `nickname`, is_logon, last_logoff_date INTO friendnick, friendislogon, friendlastlogontime FROM `char_info` WHERE `char_idx` = _requestor_charidx;
		IF FOUND_ROWS() <= 0 THEN 
			SET result = 104;
			LEAVE root;
		END IF;
    
		-- check _max_friend_count
		IF (SELECT COUNT(*) FROM `char_friend` WHERE char_idx = _requestor_charidx) >= _max_friend_count THEN 
			SET result = 18004; -- ERROR_FRIEND_NEWFRIEND_HAVE_MAX_COUNT = 18004,				// 친구가 가득찼음.  
            LEAVE root;
		END IF;
    
		IF (SELECT COUNT(*) FROM `char_friend` WHERE char_idx = _my_charidx) >= _max_friend_count THEN 
			SET result = 18003; -- ERROR_FRIEND_HAVE_MAX_COUNT = 18003,				// 친구가 가득찼음.  
            LEAVE root;
		END IF;
        
        -- check already friend
        IF EXISTS (SELECT * FROM `char_friend` WHERE char_idx = _my_charidx AND friend_char_idx = _requestor_charidx) THEN 
			SET result = 18001; -- ERROR_FRIEND_ALREADY_FRIEND = 18001,				// 이미 친구임. 
            LEAVE root;
		END IF;
        
        IF EXISTS (SELECT * FROM `char_friend` WHERE char_idx = _requestor_charidx AND friend_char_idx = _my_charidx) THEN 
			SET result = 18001; -- ERROR_FRIEND_ALREADY_FRIEND = 18001,				// 이미 친구임. 
            LEAVE root;
		END IF;
    
		--
		SELECT `friend_db_sharding_idx`, `friend_nick` INTO frienddbidx, friendnick FROM `char_apply_friend` WHERE `char_idx` = _my_charidx AND `friend_char_idx` = _requestor_charidx;
		IF FOUND_ROWS() <= 0 THEN 
			SET result = 100;
			LEAVE root;
		END IF;
		
		DELETE FROM char_apply_friend WHERE `char_idx` = _my_charidx AND `friend_char_idx` = _requestor_charidx;
		IF ROW_COUNT() <= 0 THEN 
			SET result = 101;
			LEAVE root;
		END IF;
		
        -- requestor
		INSERT INTO `char_friend`(`char_idx`,`friend_char_idx`,`friend_db_sharding_idx`,`friend_nick`)
		VALUES(_requestor_charidx, _my_charidx, _my_dbidx, _my_nick);
		
		IF ROW_COUNT() <= 0 THEN 
			SET result = 102;
			LEAVE root;
		END IF;
       
        -- me
		INSERT INTO `char_friend`(`char_idx`,`friend_char_idx`,`friend_db_sharding_idx`,`friend_nick`)
			VALUES(_my_charidx, _requestor_charidx, frienddbidx, friendnick);
		
		IF ROW_COUNT() <= 0 THEN 
			SET result = 18013; -- ERROR_FRIEND_SQL2,						// 18013		// SQL 입력 실패
            LEAVE root;
		END IF;
        
		-- SELECT user_idx INTO v_useridx FROM char_info WHERE char_idx = _charidx;
        -- SELECT is_logon, last_logoff_date into friendislogon, friendlastlogontime FROM userinfo WHERE user_idx = v_useridx;
    END;
    
	SELECT result, friendislogon, UNIX_TIMESTAMP(friendlastlogontime) as friendlastlogontime;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_byaccountidx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_byaccountidx`(
      
	IN	_accountid		BIGINT(20)
)
    COMMENT 'account idx로 유저의 일부 정보 얻기'
BEGIN	
	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE result			INT DEFAULT 0;
    DECLARE user_id 		BIGINT DEFAULT 0;
	DECLARE char_id 		BIGINT DEFAULT 0;
    DECLARE base_char_type	INT DEFAULT 0;
    DECLARE base_char_exp	BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
		
		SELECT result, user_id, char_id, base_char_type, base_char_exp;   
	END;	

	root:
	BEGIN
		SELECT user_idx INTO user_id FROM userinfo WHERE user_idx = _accountid;
		
		IF found_rows() = 0 THEN
			SET result = 101;	
            LEAVE root;
		END IF;
    
		SELECT base_char_idx INTO char_id 
		FROM userinfo 
		WHERE user_idx = user_id;
        
		IF found_rows() = 0 THEN
			SET result = 102;	
            LEAVE root;
		END IF;
		
		
		SELECT char_type, char_exp  INTO base_char_type, base_char_exp
		FROM userinfo C INNER JOIN char_info CA
		ON C.user_idx = CA.user_idx
		WHERE C.user_idx = user_Id
			AND char_idx = char_id;    

		IF found_rows() = 0 THEN
			SET result = 103;	
            LEAVE root;
		END IF;

	END;
    
    
    SELECT result, user_id, char_id, base_char_type, base_char_exp;   
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_delete_cashA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_delete_cashA`( 
	_userid 	BIGINT, 
    _decvalue 	INT
)
    COMMENT '캐쉬A 삭감'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
    DECLARE v_result 				INT DEFAULT 0;
    DECLARE v_finalCashA 			BIGINT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;
	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
	END;
        
    START TRANSACTION;
    
    root:
    BEGIN
    
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _decvalue, v_finalCashA, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;		

		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;		
		
	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
    SELECT v_result, v_finalCashA, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_delete_cashB` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_delete_cashB`( 
	_userid 	BIGINT, 
    _decvalue 	INT
)
    COMMENT '캐쉬B 삭감'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_cashB 	BIGINT DEFAULT 0;


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashB;
	END;


        
    START TRANSACTION;
    
    root:
    BEGIN
    
		CALL sp_mmo_notrans_userinfo_delete_cashB(_userid, _decvalue, v_final_cashB, v_result);

	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
    select v_result, v_final_cashB;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_delete_pk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_delete_pk`(
	IN p_DTUserID 			BIGINT
,	IN P_DTCharID 			BIGINT
,	IN p_ATUserID 			BIGINT
,	IN P_ATCharID 			BIGINT
,	IN p_DropCashB			INT 	
,	IN p_ItemType			INT		
,	IN p_ConsumeItemID		INT		
,	IN p_ConsumeItemValue	INT		
)
    COMMENT 'pk 드랍 처리'
BEGIN
    DECLARE v_errno INT DEFAULT 0;	
	DECLARE v_result INT DEFAULT 0;
	
	DECLARE v_dt_final_cashb 		BIGINT DEFAULT 0;
	DECLARE v_at_final_cashb 		BIGINT DEFAULT 0;
	DECLARE v_dt_final_item_qty 	INT DEFAULT 0;
	DECLARE v_at_final_item_qty 	INT DEFAULT 0;
	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_dt_final_cashb, v_at_final_cashb, v_dt_final_item_qty, v_at_final_item_qty;
	END;    
        
	START TRANSACTION;	

	root:
	BEGIN

		
		IF 0 < p_DropCashB THEN
			
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_DTUserID, p_DropCashB, v_dt_final_cashb, v_result);    
			IF 0 <> v_result THEN
				LEAVE root;
			END IF; 
			
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_ATUserID, p_DropCashB, v_at_final_cashb, v_result);
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;

		
		IF 0 < p_ConsumeItemID THEN
			
			CALL sp_mmo_notrans_charinvenitem_delete(p_DTUserID, P_DTCharID, p_ConsumeItemID, p_ConsumeItemValue, v_dt_final_item_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
			
			
			CALL sp_mmo_notrans_charinvenitem_insert( p_ATUserID, P_ATCharID, p_ItemType, p_ConsumeItemID, p_ConsumeItemValue, v_result, v_at_final_item_qty);
			IF 0 <> v_result THEN				
				LEAVE root;
			END IF;
		END IF;
	END;	
	
	
	IF v_result <> 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
	SELECT v_result, v_dt_final_cashb, v_at_final_cashb, v_dt_final_item_qty, v_at_final_item_qty;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_delete_pk2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_delete_pk2`(
	IN p_DTUserID 			BIGINT
,	IN P_DTCharID 			BIGINT
,	IN p_ATUserID 			BIGINT
,	IN P_ATCharID 			BIGINT
,	IN p_DropCashB			INT 	
,	IN p_GetCashB			INT 	
,	IN p_ItemType			INT		
,	IN p_ConsumeItemID		INT		
,	IN p_ConsumeItemValue	INT		
)
    COMMENT 'pk 드랍 처리'
BEGIN
    DECLARE v_errno INT DEFAULT 0;	
	DECLARE v_result INT DEFAULT 0;
	
	DECLARE v_dt_final_cashb 		BIGINT DEFAULT 0;
	DECLARE v_at_final_cashb 		BIGINT DEFAULT 0;
	DECLARE v_dt_final_item_qty 	INT DEFAULT 0;
	DECLARE v_at_final_item_qty 	INT DEFAULT 0;
	
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_dt_final_cashb, v_at_final_cashb, v_dt_final_item_qty, v_at_final_item_qty;
	END;    
        
	START TRANSACTION;	

	root:
	BEGIN

		
		IF 0 < p_DropCashB THEN
			
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_DTUserID, p_DropCashB, v_dt_final_cashb, v_result);    
			IF 0 <> v_result THEN
				LEAVE root;
			END IF; 
			
			
            IF 0 < p_GetCashB THEN
				CALL sp_mmo_notrans_userinfo_insert_cashB(p_ATUserID, p_GetCashB, v_at_final_cashb, v_result);
				IF v_result != 0 THEN
					LEAVE root;
				END IF;
			END IF;
		END IF;

		
		IF 0 < p_ConsumeItemID THEN
			
			CALL sp_mmo_notrans_charinvenitem_delete(p_DTUserID, P_DTCharID, p_ConsumeItemID, p_ConsumeItemValue, v_dt_final_item_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
			
			
			CALL sp_mmo_notrans_charinvenitem_insert( p_ATUserID, P_ATCharID, p_ItemType, p_ConsumeItemID, p_ConsumeItemValue, v_result, v_at_final_item_qty);
			IF 0 <> v_result THEN				
				LEAVE root;
			END IF;
		END IF;
	END;	
	
	
	IF v_result <> 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
	SELECT v_result, v_dt_final_cashb, v_at_final_cashb, v_dt_final_item_qty, v_at_final_item_qty;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_delete_shopbuycost` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_delete_shopbuycost`(
	IN	_useridx 			BIGINT		
,	IN	_charidx 			BIGINT		

,	IN	_use_gold			BIGINT		
,	IN	_use_cashgreen		BIGINT		
,	IN	_use_cashred		BIGINT		
,	IN	_use_mileage		BIGINT		
,	IN	_use_pkgold			INT			
,	IN	_use_guildpoint		INT			

,	IN	_materialid			INT			
, 	IN	_materialcount		INT			

,	IN	_ticketid			INT			
, 	IN	_ticketcount		INT			

,	IN	_add_mileage		BIGINT
,	IN 	_sprcialbuffid		INT			

,	IN 	_postbox_type INT
,	IN 	_rewardtextidx INT
,	IN	_rewardtype TINYINT,		IN	_rewardid 	INT
,	IN	_rewardvalue 	INT
)
    COMMENT '상점 상품 구매 비용 차감 및 보관함 지급'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
	DECLARE v_postidx		BIGINT DEFAULT 0;
    DECLARE v_postCnt		INT DEFAULT 0;
	DECLARE new_post		TINYINT DEFAULT 0;
    
    DECLARE v_finalMileage			BIGINT DEFAULT 0; 
    DECLARE v_finalPkgold			INT DEFAULT 0; 
    DECLARE v_finalGuildPoint		INT DEFAULT 0; 
    DECLARE v_finalqty				INT DEFAULT 0; 
   	DECLARE v_useTime				DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    DECLARE v_finalcashB			BIGINT DEFAULT 0; 

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
	
    DECLARE v_i 					INT DEFAULT 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result, v_postidx, v_postCnt, new_post
					, v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
					, v_finalgold, v_finalcashA, v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		IF _use_gold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _use_gold, v_finalgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
		IF _use_cashgreen > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_delete_cashA(_useridx, _use_cashgreen, v_finalcashA, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;

			CALL sp_mmo_notrans_userinfo_select_cashA(_useridx, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
		END IF;
        
        IF _use_cashred > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_old, v_cashB_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_delete_cashB(_useridx, _use_cashred, v_finalcashB, v_result);
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;

			CALL sp_mmo_notrans_userinfo_select_cashB(_useridx, v_cashB_new, v_cashB_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;				
		END IF;
        
        IF _use_mileage > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_mileage(_useridx, _charidx, _use_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
        IF _use_pkgold > 0 THEN 
			CALL sp_mmo_notrans_userinfo_delete_pkgold(_useridx, _use_pkgold, v_finalPkgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;        
        
        IF _use_guildpoint > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_guildpoint(_charidx, _use_guildpoint, v_finalGuildPoint, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;        
        
        
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(_useridx, _charidx, _materialid, _materialcount, v_finalqty, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
        IF _add_mileage > 0 THEN 			
            CALL sp_mmo_notrans_charinfo_insert_mileage(_useridx, _charidx, _add_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
        
        IF _ticketid > 0 THEN 			
			INSERT INTO char_refilled_ticket (char_idx, ticket_id, ticket_value, ticket_use_time)
										VALUES (_charidx, _ticketid, _ticketcount, v_useTime)
			ON DUPLICATE KEY UPDATE ticket_value = _ticketcount, ticket_use_time = v_useTime;
        
			IF ROW_COUNT() = 0 THEN 
				SET v_result = 100;
                LEAVE root;
            END IF;
            
        END IF;
        
        
   --     IF 0 < _sprcialbuffid THEN
	-- 		UPDATE char_buff_special
    --        SET buff_affect_time = now()
    --        WHERE char_idx = _charidx and buff_id = _sprcialbuffid;
            
	-- 		IF ROW_COUNT() = 0 THEN 
	-- 	  		SET v_result = 101;		
     --           LEAVE root;
     --       END IF;            
      --  END IF;
        
        IF 0 < _postbox_type THEN -- PBT_CABINET = 8,		// 보관함(서버 내 전체) PBT_CHAR_CABINET = 16,		// 보관함(캐릭터)
			-- INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
			-- 	VALUES (_useridx, _charidx, 0, '', 0, p_guildIdx, p_guildName, p_guildMarkId, p_postType, p_postTextIdx, p_title, p_messgae, p_expireDate, p_itemType, p_itemId, p_itemValue);
            
            --
			my_loop: LOOP
				-- 
				INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
					VALUES (_useridx, CASE WHEN 16 = _postbox_type THEN _charidx ELSE 0 END, 0, 'cashshop', 1, 0, '', 0, _postbox_type, _rewardtextidx, '', '', DATE_ADD(NOW(), INTERVAL 1 YEAR), _rewardtype, _rewardid, 1);

				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 6054;
					LEAVE root;
				END IF;

				-- 조건에 따라 루프 종료
				IF v_i >= _rewardvalue THEN
					LEAVE my_loop;
				END IF;

				-- 다음 반복을 위해 값 증가
				SET v_i = v_i + 1;
			END LOOP my_loop;
            --
            	
			SET v_postidx = LAST_INSERT_ID();
        END IF;
        
        SELECT COUNT(*), BIT_OR(post_type) INTO v_postCnt, new_post FROM user_post WHERE user_idx = _useridx and char_idx IN (0, _charidx) and expire_date >= CURRENT_TIMESTAMP();
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result, v_postidx, v_postCnt, new_post
				, v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
				, v_finalgold, v_finalcashA, v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_insert_cashA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_insert_cashA`( 
	_userid 	BIGINT, 
    _incvalue 	INT
)
    COMMENT '캐쉬A 증감'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_cashA 	BIGINT DEFAULT 0;



	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashA;
	END;


        
    START TRANSACTION;
    
    root:
    BEGIN
    
		CALL sp_mmo_notrans_userinfo_insert_cashA(_userid, _incvalue, v_final_cashA, v_result);

	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
    select v_result, v_final_cashA;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_insert_cashB` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_insert_cashB`( 
	_userid 	BIGINT, 
    _incvalue 	INT
)
    COMMENT '캐쉬B 증감'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_final_cashB 			BIGINT DEFAULT 0;

	DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;
	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_cashB, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
	END;


        
    START TRANSACTION;
    
    root:
    BEGIN
    
		CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _incvalue, v_final_cashB, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;		

		CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;			
	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
    SELECT v_result, v_final_cashB, v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_insert_laboratory_category` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `sp_mmo_userinfo_insert_laboratory_category`(
	IN p_useridx				BIGINT, 	-- 유저 인덱스
    IN p_charidx				BIGINT,	-- 캐릭터 인덱스
	IN p_lab_group_id			INT,		-- 개방 타겟 연구 그룹 id
    IN p_cost_open_item_id		INT,		-- 연구 개방 조건 소모 재화 id
    IN p_cost_open_item_value	INT			-- 연구 개방 조건 소모 재화 갯수 
)
BEGIN
	/*
    @ 기능 설명  
		- 연구 개방 제한조건이 있는 연구그룹을 조건에 맞는 재화를 사용하여 해제한다.
			
    @ 반환 값  
		- 결과
        - 연구 개방 제한 해제에 사용된 재화 정보
        
    @ 예외 사항  
        - 연구 개방에 사용되는 재화가 충분해야한다.
        - 연구 개방하려는 연구그룹 데이터가 기존에 이미 존재하면 안된다.
    */

	DECLARE v_errno					INT DEFAULT 0;
    DECLARE v_result 					INT DEFAULT 0;
   
	-- 반환 정보
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
	
	-- 조건 체크용 로컬 변수
	DECLARE v_exists 					INT DEFAULT 0;			-- 존재 유무 조건 체크
   
    -- 예외 처리
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		SELECT v_result, v_resitem_final_qty;
	END;

    START TRANSACTION;
root:
	BEGIN
       
		-- 기존 연구 데이터 유무 체크
		SELECT COUNT(1) INTO v_exists FROM user_laboratory_category WHERE user_idx = p_useridx AND lab_group_id = p_lab_group_id;
		IF v_exists <> 0 THEN
			SET v_result = 6000;		
			LEAVE root;
		END IF;
        
		-- 재화 소모
        IF 0 < p_cost_open_item_id AND 0 < p_cost_open_item_value THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_useridx, p_charidx, p_cost_open_item_id, p_cost_open_item_value, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
      
        INSERT INTO user_laboratory_category (user_idx, lab_group_id) VALUES (p_useridx, p_lab_group_id);
        IF 0 = ROW_COUNT() THEN
			SET v_result = 6001;		
			LEAVE root;
        END IF;
	END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    -- 결과
	SELECT v_result, v_resitem_final_qty;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_insert_new_one` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_insert_new_one`(
	IN p_UserID		BIGINT
,	IN p_Character 	INT
,	IN p_NickName	VARCHAR(30) CHARACTER SET UTF8MB4
,	IN p_DefaultRegion INT
,	IN p_BaseGold INT
,	IN p_InvenBaseSize INT
,	IN p_CharSlotCnt TINYINT
,	IN id_array VARCHAR(1000)
)
    COMMENT '처음 캐릭터 생성하기'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
    DECLARE v_base_char_idx		BIGINT DEFAULT 0;
    
    DECLARE v_char_idx1			BIGINT DEFAULT 0;	
   
    # Status
    DECLARE id_array_local VARCHAR(1000);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id INT;
    DECLARE v_status_value INT;
   
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN
		
		IF (p_NickName IS NULL) || (p_NickName = '') || (p_NickName = ' ') THEN
		BEGIN
			SET v_result = 101;	
			LEAVE root;
		END;
        END IF;
		
		
		SET p_NickName := REPLACE(p_NickName, ' ', '');        

		
        -- IF (p_Character != 10101001) AND (p_Character != 10102001) AND (p_Character != 10103001) AND (p_Character != 10104001) THEN
        -- BEGIN
		-- 	SET v_result = 102;	
        --    LEAVE root;
        -- END;
        -- END IF;
	
		
		IF EXISTS( SELECT * FROM userinfo WHERE user_idx = p_UserID ) THEN
			SET v_result = 0;	
			LEAVE root;
		END IF;
        
    	
		IF EXISTS( SELECT * FROM userinfo WHERE nick = p_NickName ) THEN
			SET v_result = 111;	
            LEAVE root;
        END IF;        
        
        
        IF EXISTS( SELECT * FROM char_info WHERE nickname = p_NickName ) THEN
			SET v_result = 111;	
            LEAVE root;
        END IF;  

        
        START TRANSACTION;
        
        subroot:
        BEGIN        
			
			INSERT INTO userinfo (user_idx, nick, char_slot_count)
			VALUES (p_UserID, p_NickName, p_CharSlotCnt);

			IF ROW_COUNT() <> 1 THEN
				SET v_result = 104;	
				LEAVE subroot;
			END IF; 
            
            INSERT INTO char_info (user_idx, char_type, char_gold, max_mmobag_size, last_region, max_inven_size, nickname)
			VALUES (p_UserID, p_Character, p_BaseGold, 5, p_DefaultRegion, p_InvenBaseSize, p_NickName);

			SELECT LAST_INSERT_ID() INTO v_char_idx1;
			/*IF p_Character = 10101001 THEN*/
				SET v_base_char_idx = v_char_idx1;
			/*END IF;*/

			IF ROW_COUNT() <> 1 THEN
				SET v_result = 105;	
				LEAVE subroot;
			END IF; 
            			
            UPDATE userinfo
            SET base_char_idx = v_base_char_idx
            WHERE user_idx = p_UserID;

			IF ROW_COUNT() <> 1 THEN
				SET v_result = 109;	
				LEAVE subroot;
			END IF; 

			
			INSERT INTO user_combat (user_idx, combat_grade_id, combat_score)
			VALUES (p_UserID, 1, 0);

			IF ROW_COUNT() <> 1 THEN
				SET v_result = 110;	
				LEAVE subroot;
			END IF;
            
            -- Status begin
			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_status_id := CAST(current_id as unsigned);
                SET v_status_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_status_id AND 0 < v_status_value THEN
					INSERT INTO char_stat (char_idx, stat_type, stat_value)
											VALUES (v_base_char_idx, v_status_id, v_status_value)
						ON DUPLICATE KEY UPDATE stat_value = IF( 0 < (stat_value + v_status_value), stat_value + v_status_value, 0);
												
					IF 0 = row_count() THEN
						SET v_result = 119;	
                        LEAVE subroot;
					END IF;	
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
			-- Status End
            
		END;
                
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;

    END;
	
	SELECT v_result;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_insert_steal_pkbadge` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_insert_steal_pkbadge`( 
	IN	_userid 		BIGINT, 
	IN	_addpkbadge 	INT
)
    COMMENT '강탈한 pk 배찌 추가'
BEGIN

	declare finalpkbadge	INT DEFAULT 0;
	declare result			INT DEFAULT 0;
    
    START TRANSACTION;
	
	root:
	BEGIN    
		CALL sp_mmo_notrans_userinfo_insert_pkbadge( _userid, _addpkbadge, finalpkbadge, result);
		IF result != 0 THEN 
			LEAVE root;
		END IF; 
		
	END;
    
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT result, finalpkbadge AS pk_badge;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_npc_shopbuy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_npc_shopbuy`(
	IN	_userid 			BIGINT		
,	IN	_charid 			BIGINT		

,	IN	_use_gold			BIGINT		
,	IN	_use_cashgreen		BIGINT
,	IN	_use_guildpoint		INT
-- ,	IN	_use_cashred		BIGINT		
-- ,	IN	_use_mileage		BIGINT		
-- ,	IN	_use_pkgold			INT

,	IN	_materialid			INT			
, 	IN	_materialcount		INT			

-- ,	IN	_ticketid			INT			
-- , 	IN	_ticketcount		INT			

-- ,	IN	_add_mileage		BIGINT
-- ,	IN 	_sprcialbuffid		INT		

,	IN 	_shopID				INT 		
,	IN 	_purchaselimitqty	INT 		
,	IN  _purchaselimitadd 	INT
,	IN  _purchaselimittype 	INT

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT

-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT


,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT
	
)
    COMMENT 'NPC상점 상품 구매 비용 차감, 보상 지급'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
    
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
	DECLARE v_finalGuildPoint		INT DEFAULT 0; 
    DECLARE v_finalqty				INT DEFAULT 0; 
--    	DECLARE v_useTime				DATETIME DEFAULT NOW();
	DECLARE v_lastBuyDate			DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
					, UNIX_TIMESTAMP(v_lastBuyDate) as v_lastBuyDate
					, v_finalqty, v_finalgold, v_finalcashA, v_finalGuildPoint-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		IF _use_gold > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _use_gold, v_finalgold, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;
        
		IF _use_cashgreen > 0 THEN 
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
			
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _use_cashgreen, v_finalcashA, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;

			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 			
		END IF;
        
--         IF _use_cashred > 0 THEN 
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
-- 			
-- 			CALL sp_mmo_notrans_userinfo_delete_cashB(_userid, _use_cashred, v_finalcashB, v_result);
-- 			IF v_result != 0 THEN 
--                 LEAVE root;
-- 			END IF;
-- 
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;				
-- 		END IF;
--         
--         IF _use_mileage > 0 THEN 
-- 			CALL sp_mmo_notrans_charinfo_delete_mileage(_userid, _charid, _use_mileage, v_finalMileage, v_result);
-- 			
-- 			IF v_result != 0 THEN 
--                 LEAVE root;
-- 			END IF;			
-- 		END IF;
--         
--         IF _use_pkgold > 0 THEN 
-- 			CALL sp_mmo_notrans_userinfo_delete_pkgold(_userid, _use_pkgold, v_finalPkgold, v_result);
-- 			
-- 			IF v_result != 0 THEN 
--                 LEAVE root;
-- 			END IF;			
-- 		END IF;        
--         
        IF _use_guildpoint > 0 THEN 
			CALL sp_mmo_notrans_charinfo_delete_guildpoint(_charid, _use_guildpoint, v_finalGuildPoint, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;			
		END IF;        
        
        
        IF _materialid > 0 THEN 			
            CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _materialid, _materialcount, v_finalqty, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
        
--         IF _add_mileage > 0 THEN 			
--             CALL sp_mmo_notrans_charinfo_insert_mileage(_userid, _charid, _add_mileage, v_finalMileage, v_result);
-- 			
-- 			IF v_result != 0 THEN 
--                 LEAVE root;
-- 			END IF;	
--         END IF;
        
        
--         IF _ticketid > 0 THEN 			
-- 			INSERT INTO char_refilled_ticket (char_idx, ticket_id, ticket_value, ticket_use_time)
-- 										VALUES (_charid, _ticketid, _ticketcount, v_useTime)
-- 			ON DUPLICATE KEY UPDATE ticket_value = _ticketcount, ticket_use_time = v_useTime;
--         
-- 			IF ROW_COUNT() = 0 THEN 
-- 				SET v_result = 100;
--                 LEAVE root;
--             END IF;
--             
--         END IF;
        
        
--         IF 0 < _sprcialbuffid THEN
-- 			UPDATE char_buff_special
--             SET buff_affect_time = now()
--             WHERE char_idx = _charid and buff_id = _sprcialbuffid;
--             
-- 			IF ROW_COUNT() = 0 THEN 
-- 				SET v_result = 101;		
--                 LEAVE root;
--             END IF;            
--         END IF;
        
        IF _purchaselimitqty > 0 THEN
			IF _purchaselimitadd = 1 THEN
				
				INSERT INTO user_shop_purchase_limit (user_idx, char_idx, shop_id, buy_qty, last_buy_date, is_package)
											VALUES (_userid, (CASE WHEN _purchaselimittype = 1 THEN _charid ELSE 0 END), _shopID, _purchaselimitqty, v_lastBuyDate, 2)
				ON DUPLICATE KEY UPDATE buy_qty = _purchaselimitqty, last_buy_date = v_lastBuyDate;
				
			ELSE
				BEGIN
					
					INSERT INTO user_shop_purchase_limit (user_idx, char_idx, shop_id, buy_qty, last_buy_date, is_package)
												VALUES (_userid, (CASE WHEN _purchaselimittype = 1 THEN _charid ELSE 0 END), _shopID, _purchaselimitqty, v_lastBuyDate, 2)
					ON DUPLICATE KEY UPDATE buy_qty = buy_qty + _purchaselimitqty, last_buy_date = v_lastBuyDate;							
				END;
			END IF;
		END IF;
        
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_final_gold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_final_cashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;        
        END IF;
       
        
-- 		IF _addCashB > 0 THEN 		
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
--   
-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_final_cashB, v_result);
-- 			IF v_result != 0 THEN
-- 				LEAVE root;
-- 			END IF;
--                   
--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;  
--    
--         END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
								_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
								_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
								_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
								_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, v_result, v_item_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
								_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
								_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
								_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
								_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, v_result, v_item_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
								_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
								_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
								_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
								_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, v_result, v_item_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
								_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
								_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
								_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
								_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, v_result, v_item_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
								_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
								_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
								_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
								_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, v_result, v_item_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value, _bookbelong9, v_result, v_book_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
				, UNIX_TIMESTAMP(v_lastBuyDate) as v_lastBuyDate
				, v_finalqty, v_finalgold, v_finalcashA, v_finalGuildPoint-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_select_attend` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_select_attend`(
	IN _userIdx				BIGINT		
)
    COMMENT '출석 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_base_char_idx		BIGINT DEFAULT 0;
    DECLARE v_last_login_date	DATETIME DEFAULT NOW();	
    DECLARE v_firstLogin		BOOL DEFAULT false;			
    
    DECLARE v_visit_cnt			SMALLINT DEFAULT 0;
    DECLARE v_visit_cnt2		SMALLINT DEFAULT 0;
    
    DECLARE v_new_visit_cnt		SMALLINT DEFAULT 0;
    DECLARE v_new_visit_cnt2	SMALLINT DEFAULT 0;    
    
    DECLARE v_visit_Month_Day	SMALLINT DEFAULT 28;		
    DECLARE v_visit_Week_Day	SMALLINT DEFAULT 7;			
    
    DECLARE v_current_date		DATETIME DEFAULT NOW();		
    
  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN    
    
		SELECT base_char_idx, last_login_date, visit_cnt, visit_cnt2 INTO v_base_char_idx, v_last_login_date, v_visit_cnt, v_visit_cnt2
		FROM userinfo
		WHERE user_idx = _userIdx;
        
        IF FOUND_ROWS() = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
    
        
        SET v_firstLogin = IF(0 <> DATEDIFF(v_last_login_date, v_current_date) OR v_last_login_date = '0000-00-00 00:00:00', true, false);
        
        SET v_current_date = date(v_current_date);
        
        
        START TRANSACTION;
        
        subroot:
        BEGIN
			
			IF v_firstLogin = true THEN
			BEGIN
				UPDATE userinfo 
				SET 	visit_cnt 	= @visit_cnt := IF ( DATE(v_last_login_date) = subdate(v_current_date, INTERVAL 1 DAY) , IF ( visit_cnt = v_visit_Week_Day, 1, visit_cnt + 1 ), 1 ),
						visit_cnt2 	= @visit_cnt2 := IF ( visit_cnt2 = v_visit_Month_Day, 1, visit_cnt2 + 1 ),
						visit_total = visit_total + 1,
						last_login_date = NOW()
				WHERE user_idx = _userIdx;
				
				IF ROW_COUNT() = 0 THEN
					SET v_result = 111;	
					LEAVE subroot;
				END IF;
                
                SET v_new_visit_cnt = @visit_cnt;
                SET v_new_visit_cnt2 = @visit_cnt2;
			END;
            ELSE
				SET v_new_visit_cnt 	= v_visit_cnt;
                SET v_new_visit_cnt2 	= v_visit_cnt2;
			END IF;
			            
		END;
        
        
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF; 

    END;
	
	SELECT v_result, v_firstLogin, v_new_visit_cnt, v_new_visit_cnt2;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_select_combatrank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_select_combatrank`()
BEGIN
       
    SELECT P.user_idx, nick, char_idx, char_type, battle_power, char_exp, P.combat_grade_id, P.combat_score
    FROM user_combat P INNER JOIN userinfo T
		ON P.user_idx = T.user_idx
			INNER JOIN char_info S
		ON T.base_char_idx = S.char_idx;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_select_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_select_login`(
	IN _userIdx				BIGINT		
,	IN _resetTicketTime		DATETIME	
)
    COMMENT '로그인 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_base_char_idx		BIGINT DEFAULT 0;
    DECLARE v_last_login_date	DATETIME DEFAULT NOW();	
    DECLARE v_firstLogin		BOOL DEFAULT false;			
    
    DECLARE v_visit_cnt			SMALLINT DEFAULT 0;
    DECLARE v_visit_cnt2		SMALLINT DEFAULT 0;
    
    DECLARE v_new_visit_cnt		SMALLINT DEFAULT 0;
    DECLARE v_new_visit_cnt2	SMALLINT DEFAULT 0;    
    
    DECLARE v_visit_Month_Day	SMALLINT DEFAULT 28;		
    DECLARE v_visit_Week_Day	SMALLINT DEFAULT 7;			
    
    DECLARE v_use_ticket_time	DATETIME DEFAULT NOW();
    DECLARE v_current_date		DATETIME DEFAULT NOW();		
    
  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN    
    
		SELECT base_char_idx, last_login_date, visit_cnt, visit_cnt2, use_ticket_time 
        INTO v_base_char_idx, v_last_login_date, v_visit_cnt, v_visit_cnt2, v_use_ticket_time
		FROM userinfo C INNER JOIN char_info CA
			ON C.base_char_idx = CA.char_idx
		WHERE C.user_idx = _userIdx;
        
        IF FOUND_ROWS() = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
    
        
        SET v_firstLogin = IF(date(v_last_login_date) != date(now()), true, false);
        
        SET v_current_date = date(v_current_date);
        
        
        START TRANSACTION;
        
        subroot:
        BEGIN
			
			IF v_firstLogin = true THEN
			BEGIN
				UPDATE userinfo 
				SET 	visit_cnt 	= @visit_cnt := IF ( DATE(v_last_login_date) = subdate(v_current_date, INTERVAL 1 DAY) , IF ( visit_cnt = v_visit_Week_Day, 1, visit_cnt + 1 ), 1 ),
						visit_cnt2 	= @visit_cnt2 := IF ( visit_cnt2 = v_visit_Month_Day, 1, visit_cnt2 + 1 ),
						visit_total = visit_total + 1,
						last_login_date = NOW()
				WHERE user_idx = _userIdx;
				
				IF ROW_COUNT() = 0 THEN
					SET v_result = 111;	
					LEAVE subroot;
				END IF;
                
                SET v_new_visit_cnt = @visit_cnt;
                SET v_new_visit_cnt2 = @visit_cnt2;
			END;
			ELSE 
			BEGIN
				UPDATE userinfo 
				SET	last_login_date = NOW()
				WHERE user_idx = _userIdx;
				
				IF ROW_COUNT() = 0 THEN
					SET v_result = 112;	
					LEAVE subroot;
				END IF;            
			END;
			END IF;
			
			
			
			IF v_use_ticket_time < _resetTicketTime THEN
			BEGIN  
			
				
				UPDATE char_single_play_cnt SET play_cnt = 0,
					reset_cnt = 0
				WHERE char_idx = v_base_char_idx;
				
				
				UPDATE char_info SET use_ticket_time = NOW()
				WHERE char_idx = v_base_char_idx;
				
			END;
			END IF;			            
			            
		END;
        
        
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF; 

    END;
	
	SELECT v_result, v_firstLogin, v_new_visit_cnt, v_new_visit_cnt2;

	
	IF v_firstLogin = true AND v_result = 0 THEN
	BEGIN
		
	END;
    END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_select_post_friend_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_select_post_friend_exists`(
	IN	_useridx	BIGINT,
    IN	_charidx	BIGINT
)
    COMMENT 'post / friend 존재 확인'
BEGIN	
	
    DECLARE new_post 		TINYINT DEFAULT 0;
    DECLARE new_request 	TINYINT DEFAULT 0;
    
    -- SELECT COUNT(1) INTO new_post FROM user_post WHERE user_idx = _useridx AND char_idx IN (0, _charidx) AND post_read = 0 and expire_date > NOW();
    SELECT BIT_OR(post_type) INTO new_post FROM user_post WHERE user_idx = _useridx AND char_idx IN (0, _charidx) AND post_read = 0 and expire_date > NOW();
    
    SELECT COUNT(1) INTO new_request FROM char_apply_friend WHERE char_idx = _charidx;
    
    SELECT new_post, new_request;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_select_raidrank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_select_raidrank`()
BEGIN

    SELECT P.group_id, P.user_idx, nick, char_idx, char_type, battle_power, char_exp, P.raid_exp
    FROM user_raid_exp P INNER JOIN userinfo T
		ON P.user_idx = T.user_idx
			INNER JOIN char_info S
		ON T.base_char_idx = S.char_idx AND T.user_idx=S.user_idx;
       
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_select_stormsdk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_select_stormsdk`(
	IN p_NickName		VARCHAR(36)		
)
    COMMENT '닉네임으로 user_idx 얻기'
BEGIN

	SELECT user_idx	FROM userinfo
	WHERE nick = p_NickName;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_spirit_change` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_spirit_change`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT

,	IN	_deletegold		INT		
,	IN	_deleteCashA	INT
,	IN	_arrayResItem 		VARCHAR(4096)

,	IN	_board_id		INT
,	IN	_color_no_1 	TINYINT
,	IN	_ability_id_1	INT
,	IN	_ability_value_1	INT
,	IN	_color_no_2		TINYINT
,	IN	_ability_id_2	INT
,	IN	_ability_value_2	INT
,	IN	_color_no_3		TINYINT
,	IN	_ability_id_3	INT
,	IN	_ability_value_3	INT

,	IN	_board2_id		INT
,	IN	_board2_color_no_1 	TINYINT
,	IN	_board2_ability_id_1	INT
,	IN	_board2_ability_value_1	INT
,	IN	_board2_color_no_2		TINYINT
,	IN	_board2_ability_id_2	INT
,	IN	_board2_ability_value_2	INT
,	IN	_board2_color_no_3		TINYINT
,	IN	_board2_ability_id_3	INT
,	IN	_board2_ability_value_3	INT

,	IN	_board3_id		INT
,	IN	_board3_color_no_1 	TINYINT
,	IN	_board3_ability_id_1	INT
,	IN	_board3_ability_value_1	INT
,	IN	_board3_color_no_2		TINYINT
,	IN	_board3_ability_id_2	INT
,	IN	_board3_ability_value_2	INT
,	IN	_board3_color_no_3		TINYINT
,	IN	_board3_ability_id_3	INT
,	IN	_board3_ability_value_3	INT

,	IN	_board4_id		INT
,	IN	_board4_color_no_1 	TINYINT
,	IN	_board4_ability_id_1	INT
,	IN	_board4_ability_value_1	INT
,	IN	_board4_color_no_2		TINYINT
,	IN	_board4_ability_id_2	INT
,	IN	_board4_ability_value_2	INT
,	IN	_board4_color_no_3		TINYINT
,	IN	_board4_ability_id_3	INT
,	IN	_board4_ability_value_3	INT
)
    COMMENT '스피릿 변경'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_final_gold 			BIGINT DEFAULT 0;
	DECLARE v_finalCashA			BIGINT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;
    
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    # Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold, v_finalCashA;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
    
		IF 0 < _deletegold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;

		-- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
					CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End

        INSERT INTO user_spirit (user_idx, board_id, ability_id_1, ability_value_1, color_no_1
														, ability_id_2, ability_value_2, color_no_2
														, ability_id_3, ability_value_3, color_no_3)
							VALUES (_userid, _board_id, _ability_id_1, _ability_value_1, _color_no_1
													  , _ability_id_2, _ability_value_2, _color_no_2
                                                      , _ability_id_3, _ability_value_3, _color_no_3)
						ON DUPLICATE KEY UPDATE ability_id_1 = _ability_id_1, ability_value_1 = _ability_value_1, color_no_1 = _color_no_1
											  , ability_id_2 = _ability_id_2, ability_value_2 = _ability_value_2, color_no_2 = _color_no_2
                                              , ability_id_3 = _ability_id_3, ability_value_3 = _ability_value_3, color_no_3 = _color_no_3;
    
        IF 0 = ROW_COUNT() THEN
			SET v_result = 6109;		
			LEAVE root;
        END IF;
        
        IF 0 < _board2_id THEN
			INSERT INTO user_spirit (user_idx, board_id, ability_id_1, ability_value_1, color_no_1
														, ability_id_2, ability_value_2, color_no_2
														, ability_id_3, ability_value_3, color_no_3)
							VALUES (_userid, _board2_id, _ability_id_1, _ability_value_1, _color_no_1
													  , _ability_id_2, _ability_value_2, _color_no_2
                                                      , _ability_id_3, _ability_value_3, _color_no_3)
						ON DUPLICATE KEY UPDATE ability_id_1 = _board2_ability_id_1, ability_value_1 = _board2_ability_value_1, color_no_1 = _board2_color_no_1
											  , ability_id_2 = _board2_ability_id_2, ability_value_2 = _board2_ability_value_2, color_no_2 = _board2_color_no_2
                                              , ability_id_3 = _board2_ability_id_3, ability_value_3 = _board2_ability_value_3, color_no_3 = _board2_color_no_3;
    
			IF 0 = ROW_COUNT() THEN
				SET v_result = 6109;		
				LEAVE root;
			END IF;
        END IF;
        
        IF 0 < _board3_id THEN
			INSERT INTO user_spirit (user_idx, board_id, ability_id_1, ability_value_1, color_no_1
														, ability_id_2, ability_value_2, color_no_2
														, ability_id_3, ability_value_3, color_no_3)
							VALUES (_userid, _board3_id, _ability_id_1, _ability_value_1, _color_no_1
													  , _ability_id_2, _ability_value_2, _color_no_2
                                                      , _ability_id_3, _ability_value_3, _color_no_3)
						ON DUPLICATE KEY UPDATE ability_id_1 = _board3_ability_id_1, ability_value_1 = _board3_ability_value_1, color_no_1 = _board3_color_no_1
											  , ability_id_2 = _board3_ability_id_2, ability_value_2 = _board3_ability_value_2, color_no_2 = _board3_color_no_2
                                              , ability_id_3 = _board3_ability_id_3, ability_value_3 = _board3_ability_value_3, color_no_3 = _board3_color_no_3;
    
			IF 0 = ROW_COUNT() THEN
				SET v_result = 6109;		
				LEAVE root;
			END IF;
        END IF;
        
        IF 0 < _board4_id THEN
			INSERT INTO user_spirit (user_idx, board_id, ability_id_1, ability_value_1, color_no_1
														, ability_id_2, ability_value_2, color_no_2
														, ability_id_3, ability_value_3, color_no_3)
							VALUES (_userid, _board4_id, _ability_id_1, _ability_value_1, _color_no_1
													  , _ability_id_2, _ability_value_2, _color_no_2
                                                      , _ability_id_3, _ability_value_3, _color_no_3)
						ON DUPLICATE KEY UPDATE ability_id_1 = _board4_ability_id_1, ability_value_1 = _board4_ability_value_1, color_no_1 = _board4_color_no_1
											  , ability_id_2 = _board4_ability_id_2, ability_value_2 = _board4_ability_value_2, color_no_2 = _board4_color_no_2
                                              , ability_id_3 = _board4_ability_id_3, ability_value_3 = _board4_ability_value_3, color_no_3 = _board4_color_no_3;
    
			IF 0 = ROW_COUNT() THEN
				SET v_result = 6109;		
				LEAVE root;
			END IF;
        END IF;
        
	END;

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result, v_final_gold, v_finalCashA;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_spirit_load` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_spirit_load`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT

,	IN	_deletegold		INT		
,	IN	_deleteCashA	INT
,	IN 	_materialitemid		INT
,	IN 	_materialitemcount	INT

,	IN	_board_id		INT
,	IN	_color_no_1 	TINYINT
,	IN	_ability_id_1	INT
,	IN	_ability_value_1	INT
,	IN	_color_no_2		TINYINT
,	IN	_ability_id_2	INT
,	IN	_ability_value_2	INT
,	IN	_color_no_3		TINYINT
,	IN	_ability_id_3	INT
,	IN	_ability_value_3	INT
)
    COMMENT '백업스피릿 불러오기'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_final_gold 			BIGINT DEFAULT 0;
	DECLARE v_finalCashA			BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_resitem_final_qty, v_final_gold, v_finalCashA;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
    
		IF NOT EXISTS (SELECT 1 FROM user_spirit_backup WHERE user_idx = _userid AND board_id = _board_id) THEN
			SET v_result = 6112;
            LEAVE root;
		END IF;
    
		IF 0 < _deletegold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;

		IF 0 < _materialitemid AND 0 < _materialitemcount THEN
                
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _materialitemid, _materialitemcount, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
                    
		END IF;
        
        INSERT INTO user_spirit (user_idx, board_id, ability_id_1, ability_value_1, color_no_1
														, ability_id_2, ability_value_2, color_no_2
														, ability_id_3, ability_value_3, color_no_3)
							VALUES (_userid, _board_id, _ability_id_1, _ability_value_1, _color_no_1
													  , _ability_id_2, _ability_value_2, _color_no_2
                                                      , _ability_id_3, _ability_value_3, _color_no_3)
						ON DUPLICATE KEY UPDATE ability_id_1 = _ability_id_1, ability_value_1 = _ability_value_1, color_no_1 = _color_no_1
											  , ability_id_2 = _ability_id_2, ability_value_2 = _ability_value_2, color_no_2 = _color_no_2
                                              , ability_id_3 = _ability_id_3, ability_value_3 = _ability_value_3, color_no_3 = _color_no_3;
    
        IF 0 = ROW_COUNT() THEN
			SET v_result = 6113;		
			LEAVE root;
        END IF;
        
        -- DELETE FROM user_spirit_backup WHERE user_idx = _userid AND board_id = _board_id;
        -- IF 0 = ROW_COUNT() THEN
		-- 	SET v_result = 6114;
		-- 	LEAVE root;
        -- END IF;
        
	END;

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result, v_resitem_final_qty, v_final_gold, v_finalCashA;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_spirit_lock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_spirit_lock`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT

,	IN	_board_id		INT
,	IN	_locking		TINYINT
)
    COMMENT '스피릿 잠금/해제'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
    
		IF NOT EXISTS (SELECT 1 FROM user_spirit WHERE user_idx = _userid AND board_id = _board_id) THEN
			SET v_result = 6115;
            LEAVE root;
		END IF;
    
        UPDATE user_spirit SET locked = _locking WHERE user_idx = _userid AND board_id = _board_id;
        IF 0 = ROW_COUNT() THEN
			SET v_result = 6116;
			LEAVE root;
        END IF;
        
	END;

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_spirit_save` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_spirit_save`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT

,	IN	_deletegold		INT		
,	IN	_deleteCashA	INT
,	IN 	_materialitemid		INT
,	IN 	_materialitemcount	INT

,	IN	_board_id		INT
,	IN	_color_no_1 	TINYINT
,	IN	_ability_id_1	INT
,	IN	_ability_value_1	INT
,	IN	_color_no_2		TINYINT
,	IN	_ability_id_2	INT
,	IN	_ability_value_2	INT
,	IN	_color_no_3		TINYINT
,	IN	_ability_id_3	INT
,	IN	_ability_value_3	INT
)
    COMMENT '백업스피릿 저장'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_final_gold 			BIGINT DEFAULT 0;
	DECLARE v_finalCashA			BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_resitem_final_qty, v_final_gold, v_finalCashA;
	END;
    
    
	START TRANSACTION;
    
    root:
    BEGIN
    
		IF NOT EXISTS (SELECT 1 FROM user_spirit WHERE user_idx = _userid AND board_id = _board_id) THEN
			SET v_result = 6110;
            LEAVE root;
		END IF;
    
		IF 0 < _deletegold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(_userid, _charid, _deletegold, v_final_gold, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;

		IF 0 < _materialitemid AND 0 < _materialitemcount THEN
                
			CALL sp_mmo_notrans_charinvenitem_delete(_userid, _charid, _materialitemid, _materialitemcount, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
                    
		END IF;
        
        INSERT INTO user_spirit_backup (user_idx, board_id, ability_id_1, ability_value_1, color_no_1
														, ability_id_2, ability_value_2, color_no_2
														, ability_id_3, ability_value_3, color_no_3)
							VALUES (_userid, _board_id, _ability_id_1, _ability_value_1, _color_no_1
													  , _ability_id_2, _ability_value_2, _color_no_2
                                                      , _ability_id_3, _ability_value_3, _color_no_3)
						ON DUPLICATE KEY UPDATE ability_id_1 = _ability_id_1, ability_value_1 = _ability_value_1, color_no_1 = _color_no_1
											  , ability_id_2 = _ability_id_2, ability_value_2 = _ability_value_2, color_no_2 = _color_no_2
                                              , ability_id_3 = _ability_id_3, ability_value_3 = _ability_value_3, color_no_3 = _color_no_3;
    
        IF 0 = ROW_COUNT() THEN
			SET v_result = 6111;		
			LEAVE root;
        END IF;
        
	END;

	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;

	
	SELECT v_result, v_resitem_final_qty, v_final_gold, v_finalCashA;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_add_pkgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_add_pkgold`( 
	IN	_userid 		BIGINT, 
	IN	_addpkgold 		INT
)
    COMMENT 'pk 골드 추가'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE finalpkgold	INT DEFAULT 0;
	DECLARE result		INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
		
		SELECT result, finalpkgold AS pk_gold;
	END;	
    
    START TRANSACTION;
	
	root:
	BEGIN    
		CALL sp_mmo_notrans_userinfo_insert_pkgold( _userid, _addpkgold, finalpkgold, result);
		IF result != 0 THEN 
			LEAVE root;
		END IF; 
		
	END;
    
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT result, finalpkgold AS pk_gold;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_awarehouseslot_useitem` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_awarehouseslot_useitem`(
	IN p_UserID			BIGINT
,	IN p_CharID 		BIGINT	
,	IN p_AddQty			INT			
,	IN p_ItemID			INT			
, 	IN p_ItemUseCount	INT 		
)
    COMMENT '창고 슬롯 확장(아이템 사용하여)'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_final_item_count		INT DEFAULT 0;	
    DECLARE v_awarehouse_buyslot_qty		INT DEFAULT 10000;	
    DECLARE v_awarehouse_buyslot_final_qty	INT DEFAULT 0;
		
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_awarehouse_buyslot_final_qty, v_final_item_count;
	END;
	
	
	
	START TRANSACTION;	

	root:
	BEGIN
	
		
        IF 0 < p_ItemID AND 0 < p_ItemUseCount THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_ItemUseCount, v_final_item_count, v_result);
			IF v_result <> 0 THEN
				SET v_result = 103;
				LEAVE root;
			END IF;
		END IF;
                
        
        UPDATE userinfo
        SET awarehouse_buyslot = (@awarehouse_buyslot_final_qty := awarehouse_buyslot + p_AddQty)
        WHERE user_idx = p_UserID;
        
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 104;	
            LEAVE root;
        END IF;		

		SET v_awarehouse_buyslot_final_qty = @awarehouse_buyslot_final_qty;  
  	END;
		
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;	  
    
    
    SELECT v_result, v_awarehouse_buyslot_final_qty, v_final_item_count;
        
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_awarehouse_gold_keep` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_awarehouse_gold_keep`(
	IN _useridx 			BIGINT		
,	IN _charidx				BIGINT		
,	IN _keepGold			BIGINT		
,	IN _awarehouseMaxGold	BIGINT		
)
    COMMENT '계정창고에 금전 보관'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_gold_char				BIGINT DEFAULT 0;	
    DECLARE v_final_gold_awarehouse			BIGINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
		
        CALL sp_mmo_notrans_charinfo_delete_gold(_useridx, _charidx, _keepGold, v_final_gold_char, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        
        CALL sp_mmo_notrans_userinfo_insert_awarehouse_gold(_useridx, _keepGold, v_final_gold_awarehouse, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        IF _awarehouseMaxGold < v_final_gold_awarehouse THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;
        
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_awarehouse_gold_take` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_awarehouse_gold_take`(
	IN _useridx 			BIGINT		
,	IN _charidx				BIGINT		
,	IN _keepGold			BIGINT		
,	IN _charMaxGold			BIGINT		
)
    COMMENT '계정창고에 금전 보관'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_final_gold_char				BIGINT DEFAULT 0;	
    DECLARE v_final_gold_awarehouse			BIGINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
		
        CALL sp_mmo_notrans_userinfo_delete_awarehouse_gold(_useridx, _keepGold, v_final_gold_awarehouse, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        
        
        CALL sp_mmo_notrans_charinfo_insert_gold(_useridx, _charidx, _keepGold, v_final_gold_char, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        IF _charMaxGold < v_final_gold_char THEN
			SET v_result = 101;	
			LEAVE root;
        END IF;
        
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result, v_final_gold_char, v_final_gold_awarehouse;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_awarehouse_slot_buy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_awarehouse_slot_buy`(
	IN _useridx 		BIGINT		
,	IN _buySlotQty		INT			
,	IN _buyCost			INT 		
,	IN _maxSlotQty		INT			
)
    COMMENT '계정창고 슬롯 구매'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_awarehouse_buyslot_qty		INT DEFAULT 10000;	
    DECLARE v_awarehouse_buyslot_final_qty	INT DEFAULT 0;		
    DECLARE v_final_cashA 					BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_awarehouse_buyslot_final_qty, v_final_cashA;
	END;
        
	
	START TRANSACTION;	
	
	root:
	BEGIN	
		
        SELECT awarehouse_buyslot INTO v_awarehouse_buyslot_qty
        FROM userinfo
        WHERE user_idx = _useridx;
        
		IF FOUND_ROWS() <> 1 THEN
			SET v_result = 101;	
            LEAVE root;
        END IF;
        
        
        IF _maxSlotQty < v_awarehouse_buyslot_qty + _buySlotQty THEN
			SET v_result = 102;	
            LEAVE root;
        END IF;
        
        
        
        CALL sp_mmo_notrans_userinfo_delete_cashA(_useridx, _buyCost, v_final_cashA, v_result);    
        IF 0 <> v_result THEN
            LEAVE root;
        END IF;
        
        
        UPDATE userinfo
        SET awarehouse_buyslot = (@awarehouse_buyslot_final_qty := awarehouse_buyslot + _buySlotQty)
        WHERE user_idx = _useridx;
        
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;	
            LEAVE root;
        END IF;

		SET v_awarehouse_buyslot_final_qty = @awarehouse_buyslot_final_qty;            
	END;
	
	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	
	
	SELECT v_result, v_awarehouse_buyslot_final_qty, v_final_cashA;	
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_dungeon_tutorial_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_dungeon_tutorial_finish`( 
	IN p_UserID 		BIGINT		
,	IN p_Tutorial 		INT			
,	IN p_RewardValue 	INT			
)
    COMMENT '튜토리얼 업데이트'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
	
	
    root:
    BEGIN
    
        IF NOT (p_Tutorial = 1 OR p_Tutorial = 2) THEN
			SET v_result = 100;		
            LEAVE root;
		END IF;

    
		START TRANSACTION;	
        
        subroot:
        BEGIN
        
			IF p_Tutorial = 1 THEN
            BEGIN
				
                UPDATE userinfo
                SET tutorial = 1
                WHERE user_idx = p_UserID;
                
                IF 0 = ROW_COUNT() THEN
					SET v_result = 101;
                    LEAVE subroot;
                END IF;
            END;
            ELSEIF p_Tutorial = 2 THEN
            BEGIN
				
                UPDATE userinfo
                SET cashA_free = IF(tutorial = 2, cashA_free, cashA_free + p_RewardValue),
					tutorial = 2
                WHERE user_idx = p_UserID;
                
                IF 0 = ROW_COUNT() THEN
					SET v_result = 102;
                    LEAVE subroot;
                END IF;                
            END;
            END IF;
        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;  
              
	END;
    

	
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_guildbattle_member_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_guildbattle_member_reward`(
	IN	p_CharID				BIGINT	
,	IN	p_RewardContribution	BIGINT	
,	IN 	p_RewardGold			BIGINT	
,	IN 	p_RewardGuildPoint		BIGINT	
)
BEGIN


	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;

	DECLARE	v_final_contribution	BIGINT DEFAULT 0;
	DECLARE v_final_gold			BIGINT DEFAULT 0;    
    DECLARE v_final_guildpoint		BIGINT DEFAULT 0;    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1) + v_result;
		ROLLBACK;
        
        SELECT v_result, v_final_contribution, v_final_gold, v_final_guildpoint;
	END;


	
    
	IF p_RewardGold < 0 THEN
		SET p_RewardGold = 0;
    END IF;
	IF p_RewardGuildPoint < 0 THEN
		SET p_RewardGuildPoint = 0;
    END IF;
    
	root:
    BEGIN
		
		
        IF p_RewardGold = 0 AND p_RewardGuildPoint = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
    
		
		START TRANSACTION;
        
        UPDATE char_info
		 SET guild_point = @guild_point := guild_point + p_RewardGuildPoint, 
			 char_gold = @char_gold := CA.char_gold + p_RewardGold
		WHERE char_idx = p_CharID;
        
        IF 0 = ROW_COUNT() THEN
			SET v_result = 102;		
			LEAVE root;
        END IF;
        
        
        SET v_final_guildpoint 		= @guild_point;
        SET v_final_gold 			= @char_gold;    
    END;
    
    
    IF v_result = 0 THEN
		COMMIT;
    ELSE
		ROLLBACK;
    END IF;

	SELECT v_result, v_final_contribution, v_final_gold, v_final_guildpoint;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_islogon` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_islogon`(
	IN	_useridx	BIGINT
,   IN	_charidx	BIGINT
,   IN	_isLogon	TINYINT
)
    COMMENT 'logon/off 상태 변환'
BEGIN	
	DECLARE errno INT DEFAULT 0;
	DECLARE result INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			errno = MYSQL_ERRNO;
			SET result := (errno * -1);
		
		SELECT result;
	END;
    
	UPDATE userinfo SET is_logon = _isLogon, last_logoff_date =  IF(_isLogon = 1, now(), last_logoff_date)
	WHERE user_idx = _useridx;
    
    IF ROW_COUNT() <= 0 THEN 
		SET result = 100;
    END IF; 
    
    UPDATE char_info SET is_logon = IF(char_idx = _charidx, _isLogon, 0), last_logoff_date = IF(char_idx = _charidx, now(), last_logoff_date)
	WHERE user_idx = _useridx; -- AND char_idx = _charidx;
    
    IF ROW_COUNT() <= 0 THEN 
		SET result = 101;
    END IF; 
    
    SELECT result;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_logoff` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_logoff`(
	IN	pUserID 		BIGINT
,	IN 	pPlayTime		INT
)
    COMMENT '접속 시간 관련 갱신'
BEGIN    

    UPDATE userinfo
    SET is_logon = 0, last_logoff_date = NOW(), 			
		nonstop_play_time = pPlayTime	
    WHERE user_idx = pUserID;
    
    -- UPDATE char_info SET last_logoff_date =  IF(is_logon = 1, now(), last_logoff_date), is_logon = 0
	-- WHERE user_idx = pUserID;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_lost_pkbadge` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_lost_pkbadge`( 
	IN	_userid 		BIGINT, 
	IN	_decpkbadge 	INT
)
    COMMENT '강탈당한 pk 배찌 차감'
BEGIN

	declare finalpkbadge	INT DEFAULT 0;
	declare result			INT DEFAULT 0;
    
    START TRANSACTION;
	
	root:
	BEGIN    
		CALL sp_mmo_notrans_userinfo_delete_pkbadge( _userid, _decpkbadge, finalpkbadge, result);
		IF result != 0 THEN 
			LEAVE root;
		END IF; 
		
	END;
    
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT result, finalpkbadge AS pk_badge;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_lost_pkgold` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_lost_pkgold`( 
	IN	_userid 		BIGINT, 
	IN	_decpkgold 		INT
)
    COMMENT 'pk 골드 차감'
BEGIN

	DECLARE v_errno 		INT DEFAULT 0;
	DECLARE finalpkgold		INT DEFAULT 0;
	DECLARE result			INT DEFAULT 0;
    	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
		
		SELECT result, finalpkgold AS pk_gold;
	END;	
    
    START TRANSACTION;
	
	root:
	BEGIN    
		CALL sp_mmo_notrans_userinfo_delete_pkgold( _userid, _decpkgold, finalpkgold, result);
		IF result != 0 THEN 
			LEAVE root;
		END IF; 
		
	END;
    
	IF 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
    
    
	SELECT result, finalpkgold AS pk_gold;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_nickname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_nickname`(
	IN	p_UserID		BIGINT
,	IN	p_CharID		BIGINT
,   IN	p_CostItemID	INT
,	IN 	p_CostValue		INT
,	IN 	p_NickName		VARCHAR(30)
)
    COMMENT '닉네임 변경'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_itemcount;
	END;    
	
	
    root:
    BEGIN
		IF (SELECT 1 = 1 FROM userinfo WHERE nick = p_NickName) THEN
			SET v_result = 101;
			LEAVE root;
		END IF;
	
		
		START TRANSACTION;
		
		subroot:
		BEGIN
			
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_CostItemID, p_CostValue, v_final_itemcount, v_result);
			IF v_result <> 0 THEN
				LEAVE subroot;
			END IF;

			
			
			
			
			UPDATE userinfo
			SET nick = p_NickName
			WHERE user_idx = p_UserID;
			
			IF ROW_COUNT() = 0 THEN
				SET v_result = 102;
				LEAVE subroot;
			END IF;
			
			UPDATE char_info
			SET nickname = p_NickName
			WHERE char_idx = p_CharID;
			
			IF ROW_COUNT() = 0 THEN
				SET v_result = 103;
				LEAVE subroot;
			END IF;
			
			
			UPDATE char_friend
			SET friend_nick = p_NickName
			WHERE friend_char_idx = p_CharID;
			
			
			UPDATE char_pk_history
			SET pk_nick = p_NickName
			WHERE pk_char_idx = p_CharID;
			
			
			UPDATE user_post
			SET sender_nick = p_NickName
			WHERE send_idx = p_CharID;
			
			
			UPDATE user_combat_rivals
			SET rival_nick = p_NickName
			WHERE rival_user_idx = p_UserID;
            
            
			
			
			UPDATE guild_application
			SET nickname = p_NickName
			WHERE user_idx = p_UserID;

			
			UPDATE guild_member
			SET nickname = p_NickName
			WHERE user_idx = p_UserID;

			
			UPDATE guild_member_withdraw
			SET nickname = p_NickName
			WHERE user_idx = p_UserID;

			
			UPDATE guild_war_member
			SET nickname = p_NickName
			WHERE user_idx = p_UserID;
            
            
            
			
			UPDATE tbl_auction_items
			SET fld_nick = p_NickName
			WHERE fld_user_idx = p_UserID;
            
		END;
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF; 		
        
	END;

	SELECT v_result, v_final_itemcount;	  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_nickname_rollback` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_nickname_rollback`(
	IN	p_UserID		BIGINT
,	IN	p_CharID		BIGINT
, 	IN 	p_CostItemType	INT
,   IN	p_CostItemID	INT
,	IN 	p_CostValue		INT
,	IN 	p_NickName		VARCHAR(30)
)
    COMMENT '계정 닉네임 변경 롤백'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
                
		SELECT v_result;
	END;    
    


	
	CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_CostItemType, p_CostItemID, p_CostValue, v_result, v_final_itemcount);


	
	
	
	
	UPDATE userinfo
		SET nick = p_NickName
		WHERE user_idx = p_UserID;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 101;
	END IF;
	
    UPDATE char_info
	SET nickname = p_NickName
	WHERE char_idx = p_CharID;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 102;
	END IF;
	
	UPDATE char_friend
	SET friend_nick = p_NickName
	WHERE friend_char_idx = p_CharID;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 103;
	END IF;
	
	UPDATE char_pk_history
		SET pk_nick = p_NickName
		WHERE pk_char_idx = p_CharID;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 104;
	END IF;        
	
	
	UPDATE user_post
	SET sender_nick = p_NickName
	WHERE send_idx = p_CharID;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 105;
	END IF; 
	
	
	UPDATE user_combat_revals
	SET rival_nick = p_NickName
	WHERE rival_user_idx = p_UserID;
	
	IF ROW_COUNT() = 0 THEN
		SET v_result = 106;
	END IF;


	SELECT v_result;	  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_optiondata` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_optiondata`( 
	IN	p_UserID 		BIGINT 		
,	IN	p_OptionData	text(65535)
)
    COMMENT '클라이언트 Option 갱신'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
    
    
	INSERT INTO user_client_option_data (user_idx, option_data)
		VALUES(p_UserID, p_OptionData)
        ON DUPLICATE KEY UPDATE user_idx = p_UserID, option_data = p_OptionData;
    

	IF 0 = ROW_COUNT() THEN
		SET v_result = 101;
	END IF;
    
    SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_optionswitch` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_optionswitch`( 
	IN	p_UserID 		BIGINT 		
,	IN	p_Option 		INT 		
)
    COMMENT '클라이언트 Option 갱신'
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
    
    
	UPDATE userinfo
	SET client_option_switch = p_Option
	WHERE user_idx = p_UserID;

	IF 0 = ROW_COUNT() THEN
		SET v_result = 101;
	END IF;
    
    SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_raidexp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_raidexp`( 
	IN	_userid 	BIGINT
,	IN	_groupid	INT
,	IN	_addexp 	INT
)
    COMMENT '유저 Raid 기여도 포인트 더하기'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
    
    DECLARE v_finalraidexp 		BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_finalraidexp;
	END;

    START TRANSACTION;
    
    root:
    BEGIN
    
		SET @_finalraidexp = 0;
    
		INSERT INTO user_raid_exp(group_id, user_idx, raid_exp) 
								VALUES (_groupid, _userid, @_finalraidexp :=_addexp)
		ON DUPLICATE KEY UPDATE raid_exp = (@_finalraidexp := raid_exp + _addexp);
		
        IF ROW_COUNT() = 0 THEN
			SET v_result = 101;
        END IF;
        
        SET v_finalraidexp = @_finalraidexp;
        
	END;
    
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;     
    
    SELECT v_result, v_finalraidexp;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_rulette2play` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_rulette2play`(
	IN	p_UserID			BIGINT
,	IN	p_CharID			BIGINT
,	IN 	p_GroupID			INT		
,	IN 	p_PlayCntMax		INT 	
,	IN 	p_CostCashA			BIGINT	
,	IN 	p_WealthType		INT 	
,	IN 	p_RewardCashA		INT		
,	IN	p_MailPathID		INT		
)
    COMMENT '룰렛2 Play 처리'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;

	DECLARE v_posttype					INT DEFAULT 1;
    DECLARE v_CashA_final_qty			BIGINT DEFAULT 0;	
    DECLARE v_PlayCnt_final				INT DEFAULT 0;		


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_CashA_final_qty, v_PlayCnt_final;
	END;
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
		
        
		IF p_CostCashA <= 0 THEN 
			SET v_result = 101;		
			LEAVE root;
        END IF;

        
        CALL sp_mmo_notrans_usereventplaycnt_update(p_UserID, p_GroupID, 0, 1, p_PlayCntMax, v_PlayCnt_final, v_result);
        IF 0 <> v_result THEN
			SET v_result = 103;		
			LEAVE root;
        END IF;

		
        IF 0 < p_CostCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_CashA_final_qty, v_result);    
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;        
        END IF;
        
			
		
		IF 0 < p_RewardCashA THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), 0, p_WealthType, p_RewardCashA);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 102;	
                LEAVE root;
			END IF;
		END IF;
			
    END;
     
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;        
    
	SELECT v_result, v_CashA_final_qty, v_PlayCnt_final;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_ruletteplay2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_ruletteplay2`(
	IN	p_UserID			BIGINT
,	IN	p_CharID			BIGINT
,	IN 	p_CostCashA			BIGINT	
,	IN  p_CostItemID		INT 	
, 	IN  p_CostItemCount		INT 	
,	IN 	p_AddMileage		BIGINT	
,	IN 	p_ItemType			INT		
,	IN 	p_ItemID			INT		
,	IN 	p_ItemQty			INT		
,	IN	p_MailPathID		INT		
)
    COMMENT '룰렛 Play 처리'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;

	DECLARE v_posttype					INT DEFAULT 1;
    DECLARE v_postIdx					BIGINT DEFAULT 0;
    DECLARE v_CashA_final_qty			BIGINT DEFAULT 0;	
	DECLARE v_Mileage_final_qty			BIGINT DEFAULT 0;	
	DECLARE v_final_item_count			INT DEFAULT 0;		

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_CashA_final_qty, v_Mileage_final_qty, v_postIdx, v_final_item_count;
	END;
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
		
        
		IF p_CostCashA <= 0 AND p_CostItemID = 0 THEN 
			SET v_result = 101;
			LEAVE root;
        END IF;
    
		
        IF 0 < p_CostCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_CashA_final_qty, v_result);    
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;        
        END IF;
        
        
        IF 0 < p_CostItemID AND 0 < p_CostItemCount THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_CostItemID, p_CostItemCount, v_final_item_count, v_result);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF; 
        END IF;
        
        
        IF 0 < p_AddMileage THEN 			
            CALL sp_mmo_notrans_charinfo_insert_mileage(p_UserID, p_CharID, p_AddMileage, v_Mileage_final_qty, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;        
			
		
		IF 0 < p_ItemID THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), p_ItemType, p_ItemID, p_ItemQty);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 102;
                LEAVE root;
			END IF;
            
            SET v_postIdx := LAST_INSERT_ID();
		END IF;
			
    END;
        
     
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;
        
    
	SELECT v_result, v_CashA_final_qty, v_Mileage_final_qty, v_postIdx, v_final_item_count;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_ruletteplay3` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_ruletteplay3`(
	IN	p_UserID			BIGINT
,	IN	p_CharID			BIGINT
,	IN  p_CostItemID		INT 	
, 	IN  p_CostItemCount		INT 	
,	IN 	p_ItemType			INT		
,	IN 	p_ItemID			INT		
,	IN 	p_ItemQty			INT		
,	IN	p_MailPathID		INT		
)
    COMMENT '룰렛 Play 처리'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;

	DECLARE v_posttype					INT DEFAULT 1;
    DECLARE v_postIdx					BIGINT DEFAULT 0;
	DECLARE v_final_item_count			INT DEFAULT 0;		

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_postIdx, v_final_item_count;
	END;
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
		
        
		IF p_CostItemID = 0 THEN 
			SET v_result = 101;
			LEAVE root;
        END IF;
    
        
        IF 0 < p_CostItemID AND 0 < p_CostItemCount THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_CostItemID, p_CostItemCount, v_final_item_count, v_result);
			IF 0 <> v_result THEN
				LEAVE root;
			END IF;
        END IF;
        
		
		IF 0 < p_ItemID THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), p_ItemType, p_ItemID, p_ItemQty);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 102;
                LEAVE root;
			END IF;
            
            SET v_postIdx := LAST_INSERT_ID();
		END IF;
		
    END;
        
     
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;        
    
	SELECT v_result, v_postIdx, v_final_item_count;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_rulette_pointbuyitem` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_rulette_pointbuyitem`(
	IN	p_UserID			BIGINT
,	IN	p_CharID			BIGINT
,	IN 	p_CostMileage		BIGINT	
,	IN 	p_ItemType			INT		
,	IN 	p_ItemID			INT		
,	IN 	p_ItemQty			INT		
,	IN	p_MailPathID		INT		
)
    COMMENT '룰렛 Play 처리'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;

	DECLARE v_posttype					INT DEFAULT 1;
	DECLARE v_Mileage_final_qty			BIGINT DEFAULT 0;	


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_Mileage_final_qty;
	END;
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
		
        
		IF p_CostMileage <= 0 THEN 
			SET v_result = 101;
			LEAVE root;
        END IF;
    
       
        
        IF 0 < p_CostMileage THEN 			
            CALL sp_mmo_notrans_charinfo_delete_mileage(p_UserID, p_CharID, p_CostMileage, v_Mileage_final_qty, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;        
			
		
		IF 0 < p_ItemID THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_MailPathID, '', ADDDATE(NOW(), 7), NOW(), p_ItemType, p_ItemID, p_ItemQty);
			
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 102;
                LEAVE root;
			END IF;
		END IF;
			
    END;
        
     
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;
        
    
	SELECT v_result, v_Mileage_final_qty;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_shopbuyredruby` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_shopbuyredruby`(
	IN	p_UserID 			BIGINT		
,	IN	p_CharID 			BIGINT	
,	IN  p_CostCashA			BIGINT		
,	IN 	p_ExchangedCashB	BIGINT		
,	IN	p_ShopID			INT 		
,	IN 	p_PurchaseLimitQty	INT 		
,	IN	p_PurchaseLimitAdd	INT 		
, 	IN 	p_IsPackage			INT 		
)
    COMMENT '상점 상품 구매 비용 차감'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
    
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    DECLARE v_finalcashB			BIGINT DEFAULT 0; 

	DECLARE v_lastBuyDate			DATETIME DEFAULT NOW();    
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result, v_finalcashA, v_finalcashB, UNIX_TIMESTAMP(v_lastBuyDate) as v_lastBuyDate;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
		IF p_CostCashA <= 0 OR p_ExchangedCashB <= 0 THEN
			SET v_result = 101;		
			LEAVE root;
		END IF;
    
        
		IF 0 < p_CostCashA THEN 			
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_finalcashA, v_result);			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;		
		END IF;

		
        IF 0 < p_ExchangedCashB THEN 
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, p_ExchangedCashB, v_finalcashB, v_result);
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;		
		END IF;
		
		
		IF 0 < p_PurchaseLimitQty THEN
			IF p_PurchaseLimitAdd = 1 THEN
				
				INSERT INTO char_shop_purchase_limit (char_idx, shop_id, buy_qty, last_buy_date, is_package)
											VALUES (p_CharID, p_ShopID, p_PurchaseLimitQty, v_lastBuyDate, p_IsPackage)
				ON DUPLICATE KEY UPDATE buy_qty = p_PurchaseLimitQty, last_buy_date = v_lastBuyDate;
				
			ELSE
			BEGIN
				
				INSERT INTO char_shop_purchase_limit (char_idx, shop_id, buy_qty, last_buy_date, is_package)
											VALUES (p_CharID, p_ShopID, p_PurchaseLimitQty, v_lastBuyDate, p_IsPackage)
				ON DUPLICATE KEY UPDATE buy_qty = buy_qty + p_PurchaseLimitQty, last_buy_date = v_lastBuyDate;							
			END;
			END IF;			
		END IF;

    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result, v_finalcashA, v_finalcashB, UNIX_TIMESTAMP(v_lastBuyDate) as v_lastBuyDate;	
	 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_update_tutorial_finish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userinfo_update_tutorial_finish`( 
	IN p_UserID 		BIGINT		
,	IN p_Tutorial 		INT			
,	IN p_RewardValue 	INT			
)
    COMMENT '튜토리얼 업데이트'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_call_result 		INT DEFAULT 0;
        
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
	
	
    root:
    BEGIN
    
        IF NOT (p_Tutorial = 1 OR p_Tutorial = 2) THEN
			SET v_result = 100;		
            LEAVE root;
		END IF;

    
		START TRANSACTION;	
        
        subroot:
        BEGIN
        
			IF p_Tutorial = 1 THEN
            BEGIN
				
                UPDATE userinfo
                SET tutorial = 1
                WHERE user_idx = p_UserID;
                
                IF 0 = ROW_COUNT() THEN
					SET v_result = 101;
                    LEAVE subroot;
                END IF;
            END;
            ELSEIF p_Tutorial = 2 THEN
            BEGIN
				
                UPDATE userinfo
                SET cashA_free = IF(tutorial = 2, cashA_free, cashA_free + p_RewardValue),
					tutorial = 2
                WHERE user_idx = p_UserID;
                
                IF 0 = ROW_COUNT() THEN
					SET v_result = 102;
                    LEAVE subroot;
                END IF;                
            END;
            END IF;
        END;
        
		
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;  
              
	END;
    

	
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userinfo_upsert_laboratory_category_group_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `sp_mmo_userinfo_upsert_laboratory_category_group_info`(
	IN p_useridx				BIGINT, 	-- 유저 인덱스
    IN p_charidx				BIGINT,	-- 캐릭터 인덱스
	IN p_lab_progress_result	BOOL,		-- 연구 진행 성공 여부
    IN p_lab_group_id			INT,		-- 개방 타겟 연구 그룹 id
    IN p_lab_step				INT,		-- 개방 타겟 연구 그룹 단계
    IN p_lab_step_rank			INT,		-- 개방 타겟 연구 그룹 단계 등급
    IN p_material_item_id_1		INT,		-- 연구 개방 조건 소모 재화 id 
    IN p_material_item_count_1	INT,		-- 연구 개방 조건 소모 재화 갯수 
    IN p_material_item_id_2		INT,		-- 연구 개방 조건 소모 재화 id 2
    IN p_material_item_count_2	INT,		-- 연구 개방 조건 소모 재화 갯수 2 
    IN p_cost_gold 				INT,		-- 골드 소모값
	IN p_cost_cashA				INT,		-- 다이아 소모값
    IN p_lab_unlock_condition	BOOL		-- 개방 제한 있는 연구
)
BEGIN
	/*
    @ 기능 설명  
		- 해당 연구 그룹의 단계를 진행한다. 
        
    @ 반환 값  
		- 결과
        - 연구 개방 제한 해제에 사용된 재화 정보
        
    @ 예외 사항  
        - 연구 개방에 사용되는 재화가 충분해야한다.
        - 제한 개방 체크 -- 파라미터로 플래그값 받기 
			- 제한 개방을 하는 연구의 경우 그룹id에 대하여 기존 데이터가 존재 하여야함
        - 단계 체크 - 
			- 1단계를 제외한 현재 단계를 연구시 -1한 값의 데이터가 기존에 존재해야함
    */

	DECLARE v_errno					INT DEFAULT 0;
    DECLARE v_result 					INT DEFAULT 0;
   
	-- 반환 정보
	DECLARE v_final_gold				BIGINT DEFAULT 0;
	DECLARE v_final_cashA				BIGINT DEFAULT 0;
	DECLARE v_resitem_final_qty			INT DEFAULT 0;
    DECLARE v_resitem_final_qty2		INT DEFAULT 0;

	-- 조건 체크용 로컬 변수
	DECLARE v_exists 					INT DEFAULT 0;			-- 존재 유무 조건 체크
   
    -- 예외 처리
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		SELECT v_result, v_final_gold, v_final_cashA, v_resitem_final_qty, v_resitem_final_qty2;
	END;

    START TRANSACTION;
root:
	BEGIN
		-- 연구 개방 제한 체크
		IF p_lab_unlock_condition THEN
			SELECT COUNT(1) INTO v_exists FROM user_laboratory_category WHERE user_idx = p_useridx AND lab_group_id = p_lab_group_id;
            IF v_exists = 0 THEN
				SET v_result = 6000;		
				LEAVE root;
			END IF;
		END IF;
       
		-- 연구 단계 체크	
		IF 1 < p_lab_step THEN
			SELECT COUNT(1) INTO v_exists 
			FROM user_laboratory_category_group_info 
			WHERE user_idx = p_useridx AND lab_group_id = p_lab_group_id AND step = p_lab_step - 1;
        
			IF v_exists = 0 THEN
				SET v_result = 6001;		
				LEAVE root;
			END IF;
		END IF;
       
       -- 골드 차감
		IF 0 < p_cost_gold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(p_useridx, p_charidx, p_cost_gold, v_final_gold, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
        
		-- 캐쉬 차감
		IF 0 < p_cost_cashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_useridx, p_cost_cashA, v_final_cashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
    
		-- 소모 아이템 차감 - 1
		IF 0 < p_material_item_id_1 AND 0 < p_material_item_count_1 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_useridx, p_charidx, p_material_item_id_1, p_material_item_count_1, v_resitem_final_qty, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
       
		-- 소모 아이템 차감 - 2
        IF 0 < p_material_item_id_2 AND 0 < p_material_item_count_2 THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_useridx, p_charidx, p_material_item_id_2, p_material_item_count_2, v_resitem_final_qty2, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
       
       IF p_lab_progress_result THEN
			-- 데이터 upsert
			INSERT INTO user_laboratory_category_group_info (user_idx, lab_group_id, step, step_rank)
						VALUES (p_useridx, p_lab_group_id, p_lab_step, p_lab_step_rank)
						ON DUPLICATE KEY UPDATE step_rank = p_lab_step_rank;
		END IF;
	END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
    -- 결과
	SELECT v_result, v_final_gold, v_final_cashA, v_resitem_final_qty, v_resitem_final_qty2;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpet_composite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpet_composite`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN  p_PetGrade 		TINYINT
,	IN  p_AddFailCount	INT

,	IN	p_PetConfirmDuration 		INT

,	IN	_arrayResItem 		VARCHAR(4096)	-- 합성재료 펫
	
,	IN	p_failPetId1	INT,	IN	p_failPetId2	INT,	IN	p_failPetId3	INT,	IN	p_failPetId4	INT,	IN	p_failPetId5	INT
,	IN	p_failPetId6	INT,	IN	p_failPetId7	INT,	IN	p_failPetId8	INT,	IN	p_failPetId9	INT,	IN	p_failPetId10	INT

,	IN	p_PetId1	INT,	IN	p_PetId2	INT,	IN	p_PetId3	INT,	IN	p_PetId4	INT,	IN	p_PetId5	INT
,	IN	p_PetId6	INT,	IN	p_PetId7	INT,	IN	p_PetId8	INT,	IN	p_PetId9	INT,	IN	p_PetId10	INT
)
    COMMENT '펫 합성'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	# Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE petDBIndex1 	BIGINT DEFAULT 0;
    DECLARE petDBIndex2 	BIGINT DEFAULT 0;
    DECLARE petDBIndex3 	BIGINT DEFAULT 0;
    DECLARE petDBIndex4 	BIGINT DEFAULT 0;
    DECLARE petDBIndex5 	BIGINT DEFAULT 0;
    DECLARE petDBIndex6 	BIGINT DEFAULT 0;
    DECLARE petDBIndex7 	BIGINT DEFAULT 0;
    DECLARE petDBIndex8 	BIGINT DEFAULT 0;
    DECLARE petDBIndex9 	BIGINT DEFAULT 0;
    DECLARE petDBIndex10 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, petDBIndex1, petDBIndex2, petDBIndex3, petDBIndex4, petDBIndex5, petDBIndex6, petDBIndex7, petDBIndex8, petDBIndex9, petDBIndex10;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
					CALL sp_mmo_notrans_userpet_delete(p_UserID, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
        
        -- 합성 횟수
        IF 0 < p_AddFailCount THEN
			INSERT INTO user_pet_composite (user_idx, pet_grade, fail_count)
									VALUES (p_UserID, p_PetGrade, p_AddFailCount)
				ON DUPLICATE KEY UPDATE user_idx = p_UserID, pet_grade = p_PetGrade,
										fail_count = (@_finalQty := IF( 0 <= (fail_count + p_AddFailCount), fail_count + p_AddFailCount, 0));
		END IF;
        
        -- 합성 결과
		IF 0 < p_failPetId1 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId2 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId3 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId4 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId5 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId6 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId7 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId8 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId9 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failPetId10 THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_failPetId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		-- 펫 확정대기
        IF 0 < p_PetId1 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex1;
		END IF;

		IF 0 < p_PetId2 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex2;
		END IF;
        
        IF 0 < p_PetId3 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex3;
		END IF;
        
        IF 0 < p_PetId4 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex4;
		END IF;
        
        IF 0 < p_PetId5 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex5;
		END IF;
        
        IF 0 < p_PetId6 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex6;
		END IF;
        
        IF 0 < p_PetId7 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex7;
		END IF;
        
        IF 0 < p_PetId8 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex8;
		END IF;
        
        IF 0 < p_PetId9 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex9;
		END IF;
        
        IF 0 < p_PetId10 THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex10;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, petDBIndex1, petDBIndex2, petDBIndex3, petDBIndex4, petDBIndex5, petDBIndex6, petDBIndex7, petDBIndex8, petDBIndex9, petDBIndex10;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpet_confirm_pending_acquire` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpet_confirm_pending_acquire`(
	IN	p_UserID 		BIGINT
-- ,	IN	p_CharID 		BIGINT

,	IN  p_PetCPIdx 		BIGINT

,	IN	p_PetId	INT
)
    COMMENT '펫 확정대기 수령'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    DECLARE db_pet_id 		INT	DEFAULT 0;
    DECLARE v_finalcount		INT	DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalcount;
	END;

	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT pet_id INTO db_pet_id FROM user_pet_confirm_pending WHERE user_idx = p_UserID AND pet_cp_idx = p_PetCPIdx;
        IF ROW_COUNT() = 0 THEN
			SET v_result = 2050;
			LEAVE root;
		END IF;
        
        IF db_pet_id <> p_PetId THEN
			SET v_result = 2051;
			LEAVE root;
		END IF;
        
        -- 
        DELETE FROM user_pet_confirm_pending WHERE user_idx = p_UserID AND pet_cp_idx = p_PetCPIdx;
        
        -- 
        SET @_finalcount = 0;
        
        INSERT INTO user_pet(user_idx, pet_id, pet_level, pet_value)
			VALUES(p_UserID, p_PetId, 1, 0)
            ON DUPLICATE KEY UPDATE pet_value = (@_finalcount := pet_value + 1);
            
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 429;
            LEAVE root;
        END IF;
        
		SET v_finalcount = @_finalcount;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalcount;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpet_confirm_pending_change` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpet_confirm_pending_change`(
	IN	p_UserID 		BIGINT
-- ,	IN	p_CharID 		BIGINT

,	IN  p_PetCPIdx 		BIGINT
,	IN  p_CostCashA		INT

,	IN	p_PetId	INT
)
    COMMENT '펫 확정 대기 변경'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE v_change_count			TINYINT DEFAULT 0;
    DECLARE v_finalCashA			BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalCashA;
	END;


	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT change_count INTO v_change_count FROM user_pet_confirm_pending WHERE user_idx = p_UserID AND pet_cp_idx = p_PetCPIdx AND end_date > NOW();
        IF ROW_COUNT() = 0 THEN
			SET v_result = 2040;
			LEAVE root;
		END IF;
        
        -- 캐쉬 체크
        IF 0 >= p_CostCashA THEN 
			SET v_result = 2041;
			LEAVE root;
        END IF;
        
		CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_finalCashA, v_result);
		IF v_result != 0 THEN 
			SET v_result = 2042;
			LEAVE root;
		END IF;
        
        UPDATE user_pet_confirm_pending
			SET pet_id = p_PetId, change_count = change_count + 1
			WHERE user_idx = p_UserID AND pet_cp_idx = p_PetCPIdx;
		
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 2043;
            LEAVE root;
        END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalCashA;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpet_mileage_use` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpet_mileage_use`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN  p_PetGrade 		TINYINT
,	IN  p_CostFailCount	INT

,	IN	p_PetId	INT

,	IN	p_PetConfirmDuration 		INT
,	IN	p_PetConfirmId	INT
)
    COMMENT '펫 합성 실패누적횟수 사용'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE v_fail_count	INT DEFAULT 0;
    DECLARE petDBIndex 		BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, petDBIndex;
	END;


	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT fail_count INTO v_fail_count FROM user_pet_composite WHERE user_idx = p_UserID AND pet_grade = p_PetGrade;
        IF ROW_COUNT() = 0 THEN
			SET v_result = 6021;
			LEAVE root;
		END IF;
        
        IF 0 > p_CostFailCount OR p_CostFailCount > v_fail_count THEN
			SET v_result = 6022;
			LEAVE root;
		END IF;
        
        UPDATE user_pet_composite
			SET fail_count = (@fail_count := IF( 0 < (fail_count - p_CostFailCount), fail_count - p_CostFailCount, 0))
			WHERE user_idx = p_UserID AND pet_grade = p_PetGrade;
		IF ROW_COUNT() = 0 THEN
			SET v_result = 6023;	
		    LEAVE root;
		END IF;
        
        -- 결과 (하위 등급 펫)
		IF 0 < p_PetId THEN
			CALL sp_mmo_notrans_userpet_insert(p_UserID, p_PetId, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        
		-- 결과 (상위 등급 펫) 펫 확정대기
        IF 0 < p_PetConfirmId THEN
			INSERT INTO user_pet_confirm_pending (user_idx, pet_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_PetConfirmId, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_PetConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO petDBIndex;
            
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, petDBIndex;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpet_update_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpet_update_equip`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN 	_equip_pet_id		INT
,	IN 	_show_pet_id		INT
)
    COMMENT '펫 교체'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	START TRANSACTION;
	root:
	BEGIN
    
		IF 0 < _show_pet_id THEN 
        
			IF NOT EXISTS(SELECT 1 FROM user_pet WHERE user_idx = _userid AND pet_id = _show_pet_id) THEN
				SET _result = 6080;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET show_petid = _show_pet_id WHERE char_idx = _charid;
		ELSE
			
			UPDATE char_info SET show_petid = 0 WHERE char_idx = _charid;
            
		END IF;
    
        IF 0 < _equip_pet_id THEN 
        
			IF NOT EXISTS(SELECT 1 FROM user_pet WHERE user_idx = _userid AND pet_id = _equip_pet_id) THEN
				SET _result = 6081;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET equip_petid = _equip_pet_id WHERE char_idx = _charid;
            
        ELSE
			
			UPDATE char_info SET equip_petid = 0 WHERE char_idx = _charid;
            
        END IF;
    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpet_update_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpet_update_level`(
	IN 	_user_idx		BIGINT   
,	IN 	_char_idx		BIGINT   
        
,	IN 	_pet_id			BIGINT   
,	IN 	_level			INT

, 	IN 	_costGold		INT
, 	IN 	_costCashA		INT
-- , 	IN 	_costCashB		INT

, 	IN 	_item_id		INT
, 	IN 	_use_count		INT
)
    COMMENT '펫 레벨업'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_finalgold			BIGINT DEFAULT 0; 
    DECLARE v_finalcashA		BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB		BIGINT DEFAULT 0; 
    DECLARE v_finalcount		INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_finalcount, v_finalgold, v_finalcashA;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, v_finalcount, v_result);
        IF v_result != 0 THEN 
            LEAVE root;
        END IF;
    
        CALL sp_mmo_notrans_charinfo_delete_gold(_user_idx, _char_idx, _costGold, v_finalgold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	

		CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalcashA, v_result);		
        IF v_result != 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
		
		UPDATE user_pet SET pet_level = _level WHERE user_idx = _user_idx AND pet_id = _pet_id;
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 100;
            LEAVE root;
        END IF;
	END;    
    
    IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT v_result, v_finalcount, v_finalgold, v_finalcashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_delete_clean` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_delete_clean`(
)
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    DECLARE v_qty					BIGINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
            
            SELECT v_result;
	END;  
    
    
	DELETE FROM user_post where expire_date < DATE_SUB(NOW(), INTERVAL 2 DAY) AND post_type <> 2;
    
    SET v_qty = ROW_COUNT();
    
    SELECT v_result, v_qty;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_delete_expire` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_delete_expire`(
	IN	p_userIdx	BIGINT	
,	OUT p_result	INT		
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
	DECLARE v_expireDate		DATETIME DEFAULT NOW();	
	DECLARE v_iPartKeyMonth		INT;		
	
       
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET p_result := (v_errno * -1);
		ROLLBACK;
	END;        
    
    SET p_result = 0;


	
	IF EXISTS( SELECT COUNT(1) FROM user_post WHERE user_idx = p_userIdx AND expire_date < v_expireDate ) THEN
	BEGIN
    
    	-- SET v_expireDate := NOW();
		SET v_iPartKeyMonth := fn_Get_PartKeyMonth();	
    
		
		
		START TRANSACTION;
		
        BEGIN        
			
			INSERT INTO user_post_del(iPartKeyMonth, del_type, post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
										post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read)
			SELECT p_iPartKeyMonth, 'A', post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
										post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read
			FROM user_post 
            WHERE user_idx = p_userIdx
			AND expire_date < v_expireDate;
        

			
			DELETE FROM user_post 
            WHERE user_idx = p_userIdx
			AND expire_date < v_expireDate;
        END;
        
		COMMIT;
        
	END;
	END IF;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_delete_msg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_delete_msg`(
	IN	p_userIdx	BIGINT		
,	IN	p_postIdx	BIGINT		
,	IN	p_charIdx	BIGINT			
)
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
	DECLARE v_nowDate				DATETIME;	
    DECLARE v_notRead				TINYINT DEFAULT 0;		
    
    DECLARE v_iPartKeyMonth			INT DEFAULT 0;			
    
    DECLARE v_send_idx				BIGINT DEFAULT 0;
    DECLARE v_sender_nick			VARCHAR(30) DEFAULT '';
    -- DECLARE v_sender_char_idx		BIGINT DEFAULT 0; 
    DECLARE v_sender_gamedb_idx		SMALLINT DEFAULT 0;
    DECLARE v_guild_idx				BIGINT DEFAULT 0;
    DECLARE v_guild_name			VARCHAR(50) DEFAULT '';
    DECLARE v_guild_mark_id			INT DEFAULT 0; 
    DECLARE v_char_idx				BIGINT DEFAULT 0; 
    DECLARE v_post_type				TINYINT DEFAULT 0; 
    DECLARE v_post_text_idx			TINYINT DEFAULT 0;
    DECLARE v_title_msg				VARCHAR(50) DEFAULT '';
    DECLARE v_message				VARCHAR(400) DEFAULT '';
    DECLARE v_expire_date			DATETIME DEFAULT NOW(); 
    DECLARE v_reg_date				TIMESTAMP DEFAULT NOW(); 
    DECLARE v_item_type				TINYINT DEFAULT 0; 
    DECLARE v_item_id				INT DEFAULT 0;
    DECLARE v_item_value			INT DEFAULT 0;
    DECLARE v_post_read				TINYINT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		SELECT v_result, v_notRead, v_send_idx, v_sender_nick, v_sender_gamedb_idx, v_guild_idx, v_guild_name, v_guild_mark_id, v_char_idx, 
						v_post_type, v_post_text_idx, v_title_msg, v_message, v_expire_date, v_reg_date, v_item_type, v_item_id, v_item_value, v_post_read;
	END;  
    
	SET v_nowDate = NOW();
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
    
		
		SELECT send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
						post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read
        INTO v_send_idx, v_sender_nick, v_sender_gamedb_idx, v_guild_idx, v_guild_name, v_guild_mark_id, v_char_idx, 
						v_post_type, v_post_text_idx, v_title_msg, v_message, v_expire_date, v_reg_date, v_item_type, v_item_id, v_item_value, v_post_read
		FROM user_post 
		WHERE post_idx = p_postIdx AND user_idx = p_userIdx;

		IF found_rows() = 0 THEN
			SET v_result = 6041;		
            LEAVE root;
		END IF;

		SET v_iPartKeyMonth = fn_Get_PartKeyMonth();
        
		
		INSERT INTO user_post_del(iPartKeyMonth, del_type, post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, 
											char_idx, post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read)
		SELECT v_iPartKeyMonth, 'G', post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, 
											char_idx, post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read
		FROM user_post 
        WHERE user_idx = p_userIdx AND post_idx = p_postIdx;
        
        IF ROW_COUNT() = 0 THEN
			SET v_result = 6042;		
			LEAVE root;
        END IF;
        
        
		DELETE FROM user_post 
			WHERE user_idx = p_userIdx AND post_idx = p_postIdx;

    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
        
	-- SELECT COUNT(1) INTO v_notRead FROM user_post WHERE user_idx = p_userIdx AND char_idx IN(0, p_charIdx) AND expire_date >= v_nowDate AND post_read = 0;
   	
	-- IF EXISTS( SELECT * FROM user_post WHERE user_idx = p_userIdx AND char_id IN(0, p_charIdx) AND expire_date >= v_nowDate AND post_read = 0 ) THEN
	-- IF 0 < v_notRead THEN
	-- BEGIN
	-- 	SET v_notRead = 1;
	-- END;
	-- END IF; 
	SELECT BIT_OR(post_type) INTO v_notRead FROM user_post WHERE user_idx = p_userIdx AND char_idx IN(0, p_charIdx) AND expire_date >= v_nowDate AND post_read = 0;
    
    SELECT v_result, v_notRead, v_send_idx, v_sender_nick, v_sender_gamedb_idx, v_guild_idx, v_guild_name, v_guild_mark_id, v_char_idx, 
						v_post_type, v_post_text_idx, v_title_msg, v_message, v_expire_date, v_reg_date, v_item_type, v_item_id, v_item_value, v_post_read;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_delete_postreward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_delete_postreward`(
	IN	_useridx 	BIGINT
,	IN	_charidx 	BIGINT
,	IN	_postidx 	BIGINT
)
    COMMENT '우편 아이템 보상 으로 삭제'
BEGIN	
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
    DECLARE new_post 				TINYINT DEFAULT 0;
	DECLARE	chartype 				INT		DEFAULT	0;
	DECLARE v_expireDate			DATETIME DEFAULT NOW();	
    

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, new_post;
	END;
        
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		INSERT INTO user_post_del(iPartKeyMonth, del_type, post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
										post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read)
			SELECT v_iPartKeyMonth, 'RA', post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
										post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read
			FROM user_post 
            WHERE user_idx = _userid
			AND post_idx = _postidx;
		
        CALL sp_mmo_notrans_userpost_delete(_useridx, _postidx, v_result);
		IF 0 <> v_result THEN
			LEAVE root;
		END IF;	        
	END;

    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	


	
	BEGIN
		
		-- SELECT char_type INTO chartype FROM char_info WHERE user_idx = _useridx AND char_idx = _charidx;		
		
		IF EXISTS (SELECT * FROM user_post WHERE user_idx = _useridx AND char_idx IN (0, _charidx) AND post_read = 0 and expire_date > v_expireDate) THEN
			SET new_post = 1;
		END IF;
	END;
    
    
	SELECT v_result, new_post;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_delete_rewards` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_delete_rewards`(
	IN	_userid BIGINT
,	IN	_charid BIGINT
,	IN	_postidx BIGINT

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT

-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT


,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT
)
    COMMENT '우편 보상 지급.'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
   
    DECLARE v_iPartKeyMonth			INT;
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
--     DECLARE v_finalGuildPoint		INT DEFAULT 0; 
--     DECLARE v_finalqty				INT DEFAULT 0; 
--    	DECLARE v_useTime				DATETIME DEFAULT NOW();
-- 	DECLARE v_lastBuyDate			DATETIME DEFAULT NOW();
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
					, v_finalgold, v_finalcashA-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
		-- 
        SET v_iPartKeyMonth := fn_Get_PartKeyMonth();
        
        INSERT INTO user_post_del(iPartKeyMonth, del_type, post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
										post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read)
			SELECT v_iPartKeyMonth, 'R', post_idx, user_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_idx, 
										post_type, post_text_idx, title_msg, message, expire_date, reg_date, item_type, item_id, item_value, post_read
			FROM user_post 
            WHERE user_idx = _userid
			AND post_idx = _postidx;
            
        
		DELETE FROM user_post 
            WHERE user_idx = _userid
			AND post_idx = _postidx;


		-- 
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_finalgold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
            END IF;
		ELSE
			SELECT char_gold INTO v_finalGold FROM char_info WHERE char_idx = _charid;
        END IF;
       
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_finalcashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;  
		ELSE
			SELECT cashA + cashA_Free INTO v_finalcashA FROM userinfo WHERE user_idx = _userid;
        END IF;
       
        
-- 		IF _addCashB > 0 THEN 		
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
--   
-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_finalcashB, v_result);
-- 			IF v_result != 0 THEN
-- 				LEAVE root;
-- 			END IF;
--                   
--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;  
--    
--         END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
								_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
								_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
								_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
								_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, v_result, v_item_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
								_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
								_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
								_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
								_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, v_result, v_item_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
								_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
								_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
								_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
								_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, v_result, v_item_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
								_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
								_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
								_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
								_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, v_result, v_item_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
								_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
								_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
								_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
								_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, v_result, v_item_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value, _bookbelong9, v_result, v_book_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty, UNIX_TIMESTAMP(v_useTime) as ticket_use_time
				, v_finalgold, v_finalcashA-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert`(
	IN	p_userIdx			BIGINT
,	IN	p_RecvcharIdx		BIGINT

,	IN	p_sendIdx			BIGINT			
,	IN	p_senderNick		VARCHAR(30)		
-- ,	IN	p_senderCharType	INT				
,	IN	p_senderGamedbIdx	SMALLINT		
,	IN	p_guildIdx			BIGINT			
,	IN	p_guildName			VARCHAR(50)		
,	IN	p_guildMarkId		INT				
-- ,	IN	p_charId			INT				
,	IN	p_postType			TINYINT			
,	IN	p_postTextIdx		TINYINT			
,	IN	p_messgae			VARCHAR(400)	
,	IN	p_expireDate		DATETIME		
,	IN	p_itemType			TINYINT			
,	IN	p_itemId			INT				
,	IN	p_itemValue			INT				
,	IN 	p_mailLimit			SMALLINT		
)
BEGIN

    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
    
    DECLARE v_userIdx				BIGINT DEFAULT 0;
    
	DECLARE v_postIdx				BIGINT DEFAULT 0;
    DECLARE v_mailQty				SMALLINT DEFAULT 0;
       
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_postIdx;
	END;        

	START TRANSACTION;
    
    SET v_userIdx := p_userIdx;

	root:
	BEGIN
		IF (p_userIdx < 1) THEN
			SELECT user_idx INTO v_userIdx FROM char_info WHERE char_idx = p_RecvcharIdx;
            IF (v_userIdx < 1 OR p_RecvcharIdx < 1) THEN
				SET v_result = 100;
				LEAVE root;
			END IF;
		END IF;
        
		
        IF 0 < p_mailLimit THEN        
			SELECT COUNT(*) INTO v_mailQty
			FROM user_post
			WHERE user_idx = p_userIdx AND post_type = p_postType;
			
			IF p_mailLimit <= v_mailQty THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
		END IF;        

		INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
		VALUES (p_userIdx, p_RecvcharIdx, p_sendIdx, p_senderNick, p_senderGamedbIdx, p_guildIdx, p_guildName, p_guildMarkId, p_postType, p_postTextIdx, p_title, p_messgae, p_expireDate, p_itemType, p_itemId, p_itemValue);
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 102;		
            LEAVE root;
		END IF;

		SET v_postIdx := LAST_INSERT_ID();  

	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    
	SELECT v_result, v_postIdx;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_billing_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_billing_reward`(
	IN _useridx 	BIGINT
,	IN _charidx 			BIGINT	

-- , 	IN _posttextid	TINYINT
-- , 	IN _posttitle 	varchar(30)
-- , 	IN _postDesc 	varchar(100)

,	IN	_add_mileage		BIGINT
-- ,	IN 	_sprcialbuffid		INT			

,	IN 	_postbox_type INT
,	IN 	_rewardtextidx INT
,	IN	_rewardtype TINYINT,		IN	_rewardid 	INT
,	IN	_rewardvalue 	INT
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
    
    DECLARE v_finalMileage		BIGINT DEFAULT 0;   
    DECLARE v_posttype		INT DEFAULT 2;
    
    DECLARE v_postidx		BIGINT DEFAULT 0;
    
    DECLARE v_i 				INT DEFAULT 1;
    
    -- DECLARE v_pay_comlpete		INT DEFAULT 0;
    -- DECLARE v_give_comlpete		INT DEFAULT 0;
    DECLARE v_product_id		VARCHAR(128) DEFAULT '';
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		        
		SELECT v_result, v_postidx, v_finalMileage;
	END;        
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		IF _add_mileage > 0 THEN 			
            CALL sp_mmo_notrans_charinfo_insert_mileage(_useridx, _charidx, _add_mileage, v_finalMileage, v_result);
			
			IF v_result != 0 THEN 
                LEAVE root;
			END IF;	
        END IF;
	
		IF 0 < _postbox_type THEN -- PBT_CABINET = 8,		// 보관함(서버 내 전체) PBT_CHAR_CABINET = 16,		// 보관함(캐릭터)
			-- INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
			-- 	VALUES (_useridx, _charidx, 0, '', 0, p_guildIdx, p_guildName, p_guildMarkId, p_postType, p_postTextIdx, p_title, p_messgae, p_expireDate, p_itemType, p_itemId, p_itemValue);
            
            --
			my_loop: LOOP
				-- 
				INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
					VALUES (_useridx, CASE WHEN 16 <> _postbox_type THEN _charidx ELSE 0 END, 0, 'cashshop', 1, 0, '', 0, _postbox_type, _rewardtextidx, '', '', DATE_ADD(NOW(), INTERVAL 1 YEAR), _rewardtype, _rewardid, 1);

				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 6054;
					LEAVE root;
				END IF;

				-- 조건에 따라 루프 종료
				IF v_i >= _rewardvalue THEN
					LEAVE my_loop;
				END IF;

				-- 다음 반복을 위해 값 증가
				SET v_i = v_i + 1;
			END LOOP my_loop;
            --
            	
			SET v_postidx = LAST_INSERT_ID();
        END IF;
        
        -- SELECT COUNT(*), BIT_OR(post_type) INTO v_postCnt, new_post FROM user_post WHERE user_idx = _useridx and char_idx IN (0, _charidx) and expire_date >= CURRENT_TIMESTAMP();
		  
	END;
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    SELECT v_result, v_postidx, v_finalMileage;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_castle_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_castle_reward`( 
	IN _rewardtype		TINYINT
,	IN _rewardid		INT
,	IN _rewardvalue		INT
,	IN _posttextidx		INT
,	IN _useridx1 		BIGINT,	IN _useridx2 		BIGINT,	IN _useridx3 		BIGINT,	IN _useridx4 		BIGINT,	IN _useridx5 		BIGINT
,	IN _useridx6 		BIGINT,	IN _useridx7 		BIGINT,	IN _useridx8 		BIGINT,	IN _useridx9 		BIGINT,	IN _useridx10 		BIGINT
,	IN _useridx11 		BIGINT,	IN _useridx12 		BIGINT,	IN _useridx13 		BIGINT,	IN _useridx14 		BIGINT,	IN _useridx15 		BIGINT
,	IN _useridx16 		BIGINT,	IN _useridx17 		BIGINT,	IN _useridx18 		BIGINT,	IN _useridx19 		BIGINT,	IN _useridx20 		BIGINT
,	IN _useridx21 		BIGINT,	IN _useridx22 		BIGINT,	IN _useridx23 		BIGINT,	IN _useridx24 		BIGINT,	IN _useridx25 		BIGINT
,	IN _useridx26 		BIGINT,	IN _useridx27 		BIGINT,	IN _useridx28 		BIGINT,	IN _useridx29 		BIGINT,	IN _useridx30 		BIGINT
,	IN _useridx31 		BIGINT,	IN _useridx32 		BIGINT,	IN _useridx33 		BIGINT,	IN _useridx34 		BIGINT,	IN _useridx35 		BIGINT
,	IN _useridx36 		BIGINT,	IN _useridx37 		BIGINT,	IN _useridx38 		BIGINT,	IN _useridx39 		BIGINT,	IN _useridx40 		BIGINT
,	IN _useridx41 		BIGINT,	IN _useridx42 		BIGINT,	IN _useridx43 		BIGINT,	IN _useridx44 		BIGINT,	IN _useridx45 		BIGINT
,	IN _useridx46 		BIGINT,	IN _useridx47 		BIGINT,	IN _useridx48 		BIGINT,	IN _useridx49 		BIGINT,	IN _useridx50 		BIGINT
)
    COMMENT '성 사냥터 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
   	START TRANSACTION;	
    
    root:
    BEGIN
		
		
		IF _useridx1 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx1, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx2 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx2, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx3 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx3, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx4 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx4, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx5 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx5, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx6 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx6, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx7 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx7, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx8 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx8, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx9 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx9, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx10 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx10, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx11 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx11, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx12 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx12, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx13 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx13, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx14 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx14, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx15 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx15, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx16 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx16, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx17 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx17, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx18 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx18, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx19 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx19, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx20 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx20, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx21 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx21, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx22 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx22, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx23 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx23, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx24 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx24, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx25 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx25, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx26 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx26, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx27 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx27, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx28 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx28, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx29 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx29, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx30 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx30, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx31 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx31, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx32 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx32, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx33 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx33, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx34 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx34, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx35 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx35, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx36 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx36, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx37 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx37, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx38 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx38, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx39 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx39, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;

		IF _useridx40 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx40, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx41 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx41, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx42 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx42, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx43 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx43, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx44 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx44, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx45 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx45, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx46 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx46, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx47 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx47, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx48 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx48, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx49 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx49, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx50 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx50, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_castle_reward_season` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_castle_reward_season`( 
	IN _rewardtype		TINYINT	
,	IN _rewardid		INT		
,	IN _rewardvalue		INT		
,	IN _posttextidx		INT		
,	IN _rewardtype2		TINYINT	
,	IN _rewardid2		INT		
,	IN _rewardvalue2	INT		
,	IN _posttextidx2	INT		
,	IN _useridx1 		BIGINT,	IN _useridx2 		BIGINT,	IN _useridx3 		BIGINT,	IN _useridx4 		BIGINT,	IN _useridx5 		BIGINT
,	IN _useridx6 		BIGINT,	IN _useridx7 		BIGINT,	IN _useridx8 		BIGINT,	IN _useridx9 		BIGINT,	IN _useridx10 		BIGINT
,	IN _useridx11 		BIGINT,	IN _useridx12 		BIGINT,	IN _useridx13 		BIGINT,	IN _useridx14 		BIGINT,	IN _useridx15 		BIGINT
,	IN _useridx16 		BIGINT,	IN _useridx17 		BIGINT,	IN _useridx18 		BIGINT,	IN _useridx19 		BIGINT,	IN _useridx20 		BIGINT
,	IN _useridx21 		BIGINT,	IN _useridx22 		BIGINT,	IN _useridx23 		BIGINT,	IN _useridx24 		BIGINT,	IN _useridx25 		BIGINT
,	IN _useridx26 		BIGINT,	IN _useridx27 		BIGINT,	IN _useridx28 		BIGINT,	IN _useridx29 		BIGINT,	IN _useridx30 		BIGINT
,	IN _useridx31 		BIGINT,	IN _useridx32 		BIGINT,	IN _useridx33 		BIGINT,	IN _useridx34 		BIGINT,	IN _useridx35 		BIGINT
,	IN _useridx36 		BIGINT,	IN _useridx37 		BIGINT,	IN _useridx38 		BIGINT,	IN _useridx39 		BIGINT,	IN _useridx40 		BIGINT
,	IN _useridx41 		BIGINT,	IN _useridx42 		BIGINT,	IN _useridx43 		BIGINT,	IN _useridx44 		BIGINT,	IN _useridx45 		BIGINT
,	IN _useridx46 		BIGINT,	IN _useridx47 		BIGINT,	IN _useridx48 		BIGINT,	IN _useridx49 		BIGINT,	IN _useridx50 		BIGINT
)
    COMMENT '성 사냥터 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    DECLARE v_insert_cnt_1	INT DEFAULT 0;
    DECLARE v_insert_cnt_2	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_insert_cnt_1, v_insert_cnt_2;
	END;
	
   	    
    root:
    BEGIN
		
		CREATE TEMPORARY TABLE IF NOT EXISTS tbl_temp_castle_reward(user_idx BIGINT);
        
        TRUNCATE TABLE tbl_temp_castle_reward;
		
		INSERT INTO tbl_temp_castle_reward values(_useridx1), (_useridx2), (_useridx3), (_useridx4), (_useridx5), (_useridx6), (_useridx7), (_useridx8), (_useridx9), (_useridx10),
												(_useridx11), (_useridx12), (_useridx13), (_useridx14), (_useridx15), (_useridx16), (_useridx17), (_useridx18), (_useridx19), (_useridx20),
                                                (_useridx21), (_useridx22), (_useridx23), (_useridx24), (_useridx25), (_useridx26), (_useridx27), (_useridx28), (_useridx29), (_useridx30),
                                                (_useridx31), (_useridx32), (_useridx33), (_useridx34), (_useridx35), (_useridx36), (_useridx37), (_useridx38), (_useridx39), (_useridx40),
                                                (_useridx41), (_useridx42), (_useridx43), (_useridx44), (_useridx45), (_useridx46), (_useridx47), (_useridx48), (_useridx49), (_useridx50);
    
		START TRANSACTION;
        
		subroot:
        BEGIN
		
			INSERT INTO `user_post` (`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue
				FROM tbl_temp_castle_reward where user_idx > 0;
			SET v_insert_cnt_1 = ROW_COUNT();
			
			INSERT INTO `user_post` (`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype2, _rewardid2, _rewardvalue2
				FROM tbl_temp_castle_reward where user_idx > 0;
			SET v_insert_cnt_2 = ROW_COUNT();
		END;
        
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;        
	END;
    
    
	DROP TEMPORARY TABLE IF EXISTS tbl_temp_castle_reward;
    
	SELECT v_result, v_insert_cnt_1, v_insert_cnt_2;    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_coupon_rewardall` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_coupon_rewardall`(
	IN 	p_UserID			BIGINT		
,	IN 	p_CharID			BIGINT		
,	IN 	p_CouponID			VARCHAR(32)	
,	IN 	p_CouponUseType		TINYINT		
,	IN 	p_PostSenderName	VARCHAR(32)	
,	IN 	p_PostContent		VARCHAR(128)
,	IN 	p_PostTextId		SMALLINT	
,	IN 	p_PostKeepDay		SMALLINT	
,	IN 	p_WealthIDGold		INT			
,	IN 	p_RewardGold		BIGINT		
,	IN 	p_WealthIDRedRuby	INT			
,	IN 	p_RewardRedRuby		BIGINT		
,	IN 	p_WealthIDGreenRuby	INT			
,	IN 	p_RewardGreenRuby	BIGINT		
,	In 	p_RewardItem_1_Type	TINYINT		
,	IN 	p_RewardItem_1_Id	INT			
,	IN 	p_RewardItem_1_Qty	SMALLINT	
,	In 	p_RewardItem_2_Type	TINYINT		
,	IN 	p_RewardItem_2_Id	INT			
,	IN 	p_RewardItem_2_Qty	SMALLINT	
,	In 	p_RewardItem_3_Type	TINYINT		
,	IN 	p_RewardItem_3_Id	INT			
,	IN 	p_RewardItem_3_Qty	SMALLINT	
,	In 	p_RewardItem_4_Type	TINYINT		
,	IN 	p_RewardItem_4_Id	INT			
,	IN 	p_RewardItem_4_Qty	SMALLINT	
,	In 	p_RewardItem_5_Type	TINYINT		
,	IN 	p_RewardItem_5_Id	INT			
,	IN 	p_RewardItem_5_Qty	SMALLINT	
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result;
	END;        
	
	START TRANSACTION;	
	
	root:
	BEGIN   
    
        
        IF 0 = p_CouponUseType THEN
        BEGIN
			
			IF EXISTS( SELECT user_idx FROM user_coupon_used WHERE coupon_id = p_CouponID ) THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;            
		END;
		ELSEIF 1 = p_CouponUseType THEN
        BEGIN
			
			IF EXISTS( SELECT user_idx FROM user_coupon_used WHERE user_idx = p_UserID AND coupon_id = p_CouponID ) THEN
				SET v_result = 102;		
				LEAVE root;
			END IF;            
        END;
		ELSEIF 2 = p_CouponUseType THEN
        BEGIN
			
            
			IF EXISTS( SELECT user_idx FROM user_coupon_used WHERE coupon_id = p_CouponID ) THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;            
        END;        
        ELSE
			
			SET v_result = 103;		
			LEAVE root;
        END IF;
        
        
        INSERT INTO user_coupon_used(`coupon_id`, `user_idx`, `use_time`)
        VALUES (p_CouponID, p_UserID, NOW());
        
		IF ROW_COUNT() <= 0 THEN
			SET v_result = 104;		
            LEAVE root;
        END IF;
        
		
        IF 0 < p_RewardGold THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), 0, p_WealthIDGold, p_RewardGold);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 111;	
                LEAVE root;
			END IF;
		END IF;

		
        IF 0 < p_RewardRedRuby THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), 0, p_WealthIDRedRuby, p_RewardRedRuby);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 112;	
                LEAVE root;
			END IF;
		END IF;
        
		
        IF 0 < p_RewardGreenRuby THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), 0, p_WealthIDGreenRuby, p_RewardGreenRuby);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 113;	
                LEAVE root;
			END IF;
		END IF;
        
		
        IF 0 < p_RewardItem_1_Id AND 0 < p_RewardItem_1_Qty THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), p_RewardItem_1_Type, p_RewardItem_1_Id, p_RewardItem_1_Qty);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 114;	
                LEAVE root;
			END IF;
		END IF;        
        
		
        IF 0 < p_RewardItem_2_Id AND 0 < p_RewardItem_2_Qty THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), p_RewardItem_2_Type, p_RewardItem_2_Id, p_RewardItem_2_Qty);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 115;	
                LEAVE root;
			END IF;
		END IF;   
        
		
        IF 0 < p_RewardItem_3_Id AND 0 < p_RewardItem_3_Qty THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), p_RewardItem_3_Type, p_RewardItem_3_Id, p_RewardItem_3_Qty);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 116;	
                LEAVE root;
			END IF;
		END IF;   
        
		
        IF 0 < p_RewardItem_4_Id AND 0 < p_RewardItem_4_Qty THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), p_RewardItem_4_Type, p_RewardItem_4_Id, p_RewardItem_4_Qty);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 117;	
                LEAVE root;
			END IF;
		END IF;   
        
		
        IF 0 < p_RewardItem_5_Id AND 0 < p_RewardItem_5_Qty THEN 	
			INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, p_PostSenderName, 0, 0, 1, p_PostTextId, p_PostContent, ADDDATE(NOW(), INTERVAL p_PostKeepDay DAY), NOW(), p_RewardItem_5_Type, p_RewardItem_5_Id, p_RewardItem_5_Qty);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 118;	
                LEAVE root;
			END IF;
		END IF;           
    END;
    
	
	IF 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;     


	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_gamepotsdk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_gamepotsdk`(
	IN p_UserID 			BIGINT
,	IN p_IAPAmount			INT				
, 	IN p_PostTextID			TINYINT			
,	IN p_RewardType_1 		TINYINT			
,	IN p_RewardID_1 		INT				
,	IN p_RewardValue_1 		INT				
,	IN p_RewardType_2 		TINYINT			
,	IN p_RewardID_2 		INT				
,	IN p_RewardValue_2 		INT				
,	IN p_RewardType_3 		TINYINT			
,	IN p_RewardID_3 		INT				
,	IN p_RewardValue_3 		INT				
,	IN p_RewardType_4 		TINYINT			
,	IN p_RewardID_4 		INT				
,	IN p_RewardValue_4 		INT				
,	IN p_RewardType_5 		TINYINT			
,	IN p_RewardID_5 		INT				
,	IN p_RewardValue_5 		INT				
,	IN p_RewardType_6 		TINYINT			
,	IN p_RewardID_6 		INT				
,	IN p_RewardValue_6 		INT				
,	IN p_RewardType_7 		TINYINT			
,	IN p_RewardID_7 		INT				
,	IN p_RewardValue_7 		INT				
,	IN p_MileageType		INT 			
,	IN p_MileageID			INT 			
,	IN p_MileageValue		INT 			

,	IN p_FirstAllType_1		INT				
,	IN p_FirstAllID_1		INT				
,	IN p_FirstAllValue_1	INT				
,	IN p_FirstAllType_2		INT				
,	IN p_FirstAllID_2		INT				
,	IN p_FirstAllValue_2	INT				
,	IN p_FirstAllType_3		INT				
,	IN p_FirstAllID_3		INT				
,	IN p_FirstAllValue_3	INT				
,	IN p_FirstAllMailPathID	INT 			
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
    DECLARE v_posttype		INT DEFAULT 2;    
    DECLARE v_postidx1		BIGINT DEFAULT 0;
    DECLARE v_postidx2		BIGINT DEFAULT 0;
    DECLARE v_postidx3		BIGINT DEFAULT 0;
    DECLARE v_postidx4		BIGINT DEFAULT 0;
    DECLARE v_postidx5		BIGINT DEFAULT 0;
    DECLARE v_postidx6		BIGINT DEFAULT 0;
    DECLARE v_postidx7		BIGINT DEFAULT 0;
    
    DECLARE v_mpostidx		BIGINT DEFAULT 0;
    
    DECLARE v_fapostidx1	BIGINT DEFAULT 0;
    DECLARE v_fapostidx2	BIGINT DEFAULT 0;
    DECLARE v_fapostidx3	BIGINT DEFAULT 0;
    

    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		        
		SELECT v_result, v_postidx1, v_postidx2, v_postidx3, v_postidx4, v_postidx5, v_postidx6, v_postidx7, v_mpostidx, v_fapostidx1, v_fapostidx2, v_fapostidx3;
	END;        
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
        
        
        
        UPDATE userinfo
        SET iap_qty = iap_qty + 1, iap_amount = iap_amount + p_IAPAmount
        WHERE user_idx = p_UserID;
        
        
        
        BEGIN
			IF 0 < p_RewardID_1 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_1, p_RewardID_1, p_RewardValue_1);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx1 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_2 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_2, p_RewardID_2, p_RewardValue_2);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx2 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_3 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_3, p_RewardID_3, p_RewardValue_3);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx3 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_4 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_4, p_RewardID_4, p_RewardValue_4);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx4 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_5 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_5, p_RewardID_5, p_RewardValue_5);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx5 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_6 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_6, p_RewardID_6, p_RewardValue_6);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx6 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_7 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_7, p_RewardID_7, p_RewardValue_7);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx7 = LAST_INSERT_ID();
			END IF;
            
            
		END; 
  
        
        IF 0 < p_MileageValue THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_MileageType, p_MileageID, p_MileageValue);
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1002;
                LEAVE root;
			END IF;
            
            SET v_mpostidx = LAST_INSERT_ID();
        END IF;
  
        
        BEGIN 
			IF p_FirstAllID_1 != 0 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_FirstAllMailPathID, '', '2030-01-01', NOW(), p_FirstAllType_1, p_FirstAllID_1, p_FirstAllValue_1);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1003;
					LEAVE root;
				END IF;
				
				SET v_fapostidx1 = LAST_INSERT_ID();
			END IF;   
	
			IF p_FirstAllID_2 != 0 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_FirstAllMailPathID, '', '2030-01-01', NOW(), p_FirstAllType_2, p_FirstAllID_2, p_FirstAllValue_2);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1004;
					LEAVE root;
				END IF;
				
				SET v_fapostidx2 = LAST_INSERT_ID();
			END IF;

			IF p_FirstAllID_3 != 0 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_FirstAllMailPathID, '', '2030-01-01', NOW(), p_FirstAllType_3, p_FirstAllID_3, p_FirstAllValue_3);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1005;
					LEAVE root;
				END IF;
				
				SET v_fapostidx3 = LAST_INSERT_ID();
			END IF;   
		END;
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    SELECT v_result, v_postidx1, v_postidx2, v_postidx3, v_postidx4, v_postidx5, v_postidx6, v_postidx7, v_mpostidx, v_fapostidx1, v_fapostidx2, v_fapostidx3;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_gamepotsdk_v2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_gamepotsdk_v2`(
	IN p_UserID 			BIGINT
,	IN p_IAPAmount			INT				
, 	IN p_PostTextID			TINYINT			
,	IN p_RewardType_1 		TINYINT			
,	IN p_RewardID_1 		INT				
,	IN p_RewardValue_1 		INT				
,	IN p_RewardType_2 		TINYINT			
,	IN p_RewardID_2 		INT				
,	IN p_RewardValue_2 		INT				
,	IN p_RewardType_3 		TINYINT			
,	IN p_RewardID_3 		INT				
,	IN p_RewardValue_3 		INT				
,	IN p_RewardType_4 		TINYINT			
,	IN p_RewardID_4 		INT				
,	IN p_RewardValue_4 		INT				
,	IN p_RewardType_5 		TINYINT			
,	IN p_RewardID_5 		INT				
,	IN p_RewardValue_5 		INT				
,	IN p_RewardType_6 		TINYINT			
,	IN p_RewardID_6 		INT				
,	IN p_RewardValue_6 		INT				
,	IN p_RewardType_7 		TINYINT			
,	IN p_RewardID_7 		INT				
,	IN p_RewardValue_7 		INT				
,	IN p_MileageType		INT 			
,	IN p_MileageID			INT 			
,	IN p_MileageValue		INT 			

,	IN p_FirstAllType_1		INT				
,	IN p_FirstAllID_1		INT				
,	IN p_FirstAllValue_1	INT				
,	IN p_FirstAllType_2		INT				
,	IN p_FirstAllID_2		INT				
,	IN p_FirstAllValue_2	INT				
,	IN p_FirstAllType_3		INT				
,	IN p_FirstAllID_3		INT				
,	IN p_FirstAllValue_3	INT				
,	IN p_FirstAllMailPathID	INT 			

, 	IN p_ShopID				INT 			
,	IN p_PurchaseLimitResetTime	BIGINT		
, 	IN p_PurchaseLimitBuyQty INT 			
,	IN p_IsPackage			TINYINT 		
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
    DECLARE v_posttype		INT DEFAULT 2;    
    DECLARE v_postidx1		BIGINT DEFAULT 0;
    DECLARE v_postidx2		BIGINT DEFAULT 0;
    DECLARE v_postidx3		BIGINT DEFAULT 0;
    DECLARE v_postidx4		BIGINT DEFAULT 0;
    DECLARE v_postidx5		BIGINT DEFAULT 0;
    DECLARE v_postidx6		BIGINT DEFAULT 0;
    DECLARE v_postidx7		BIGINT DEFAULT 0;
    
    DECLARE v_mpostidx		BIGINT DEFAULT 0;
    
    DECLARE v_fapostidx1	BIGINT DEFAULT 0;
    DECLARE v_fapostidx2	BIGINT DEFAULT 0;
    DECLARE v_fapostidx3	BIGINT DEFAULT 0;

	DECLARE v_purchaselimit_final_qty	INT DEFAULT 0;		
	DECLARE v_lastBuyDate	BIGINT DEFAULT 0;				
    DECLARE v_CharID		BIGINT DEFAULT 0;				

    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		        
		SELECT v_result, v_postidx1, v_postidx2, v_postidx3, v_postidx4, v_postidx5, v_postidx6, v_postidx7, v_mpostidx, v_fapostidx1, v_fapostidx2, v_fapostidx3, v_purchaselimit_final_qty;
	END;        
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
        
        
        
        UPDATE userinfo
        SET iap_qty = iap_qty + 1, iap_amount = iap_amount + p_IAPAmount
        WHERE user_idx = p_UserID;
        
        
        
        IF 0 < p_ShopID AND 0 < p_PurchaseLimitBuyQty THEN
        BEGIN
        	SELECT base_char_idx INTO v_CharID
			FROM userinfo 
			WHERE user_idx = p_UserID;
        
			IF 0 < v_CharID THEN
            BEGIN            
				SET v_purchaselimit_final_qty = p_PurchaseLimitBuyQty;
				SET @v_purchaselimit_final_qty := 0;
				
				
				SELECT UNIX_TIMESTAMP(last_buy_date) INTO v_lastBuyDate
				FROM char_shop_purchase_limit
				WHERE char_idx = v_CharID and shop_id = p_ShopID;
				
				IF v_lastBuyDate < p_PurchaseLimitResetTime THEN
				BEGIN
					
					INSERT INTO char_shop_purchase_limit (char_idx, shop_id, buy_qty, last_buy_date, is_package)
												VALUES (v_CharID, p_ShopID, p_PurchaseLimitBuyQty, NOW(), p_IsPackage)
					ON DUPLICATE KEY UPDATE buy_qty = p_PurchaseLimitBuyQty, last_buy_date = NOW();
				END;
				ELSE
					
					INSERT INTO char_shop_purchase_limit (char_idx, shop_id, buy_qty, last_buy_date, is_package)
												VALUES (v_CharID, p_ShopID, p_PurchaseLimitBuyQty, NOW(), p_IsPackage)
					ON DUPLICATE KEY UPDATE buy_qty = (@v_purchaselimit_final_qty := buy_qty + p_PurchaseLimitBuyQty), last_buy_date = NOW();
					
					IF 0 < @v_purchaselimit_final_qty THEN
						SET v_purchaselimit_final_qty = @v_purchaselimit_final_qty;
					END IF;
				END IF;
			END;
            END IF;
		END;
        END IF;
        
        
        
        BEGIN
			IF 0 < p_RewardID_1 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_1, p_RewardID_1, p_RewardValue_1);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx1 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_2 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_2, p_RewardID_2, p_RewardValue_2);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx2 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_3 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_3, p_RewardID_3, p_RewardValue_3);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx3 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_4 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_4, p_RewardID_4, p_RewardValue_4);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx4 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_5 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_5, p_RewardID_5, p_RewardValue_5);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx5 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_6 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_6, p_RewardID_6, p_RewardValue_6);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx6 = LAST_INSERT_ID();
			END IF;
			IF 0 < p_RewardID_7 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_RewardType_7, p_RewardID_7, p_RewardValue_7);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1001;
					LEAVE root;
				END IF;
				
				SET v_postidx7 = LAST_INSERT_ID();
			END IF;
            
            
		END; 
  
        
        IF 0 < p_MileageValue THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_PostTextID, '', '2030-01-01', NOW(), p_MileageType, p_MileageID, p_MileageValue);
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1002;
                LEAVE root;
			END IF;
            
            SET v_mpostidx = LAST_INSERT_ID();
        END IF;
  
        
        BEGIN 
			IF p_FirstAllID_1 != 0 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_FirstAllMailPathID, '', '2030-01-01', NOW(), p_FirstAllType_1, p_FirstAllID_1, p_FirstAllValue_1);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1003;
					LEAVE root;
				END IF;
				
				SET v_fapostidx1 = LAST_INSERT_ID();
			END IF;   
	
			IF p_FirstAllID_2 != 0 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_FirstAllMailPathID, '', '2030-01-01', NOW(), p_FirstAllType_2, p_FirstAllID_2, p_FirstAllValue_2);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1004;
					LEAVE root;
				END IF;
				
				SET v_fapostidx2 = LAST_INSERT_ID();
			END IF;

			IF p_FirstAllID_3 != 0 THEN
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, 'System', 0, 0, v_posttype, p_FirstAllMailPathID, '', '2030-01-01', NOW(), p_FirstAllType_3, p_FirstAllID_3, p_FirstAllValue_3);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1005;
					LEAVE root;
				END IF;
				
				SET v_fapostidx3 = LAST_INSERT_ID();
			END IF;   
		END;
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    SELECT v_result, v_postidx1, v_postidx2, v_postidx3, v_postidx4, v_postidx5, v_postidx6, v_postidx7, v_mpostidx, v_fapostidx1, v_fapostidx2, v_fapostidx3, v_purchaselimit_final_qty;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_guildevent_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_guildevent_reward`( 
	IN p_MailPathID		INT		
,	IN p_RewardType_1	INT,	IN p_RewardID_1		INT,	IN p_RewardValue_1	INT
,	IN p_RewardType_2	INT,	IN p_RewardID_2		INT,	IN p_RewardValue_2	INT
,	IN p_RewardType_3	INT,	IN p_RewardID_3		INT,	IN p_RewardValue_3	INT
,	IN p_RewardType_4	INT,	IN p_RewardID_4		INT,	IN p_RewardValue_4	INT
,	IN p_RewardType_5	INT,	IN p_RewardID_5		INT,	IN p_RewardValue_5	INT
,	IN p_UserID1 		BIGINT,	IN p_UserID2 		BIGINT,	IN p_UserID3 		BIGINT
,	IN p_UserID4 		BIGINT,	IN p_UserID5 		BIGINT,	IN p_UserID6 		BIGINT
,	IN p_UserID7 		BIGINT,	IN p_UserID8 		BIGINT,	IN p_UserID9 		BIGINT
,	IN p_UserID10 		BIGINT,	IN p_UserID11 		BIGINT,	IN p_UserID12 		BIGINT
,	IN p_UserID13 		BIGINT,	IN p_UserID14 		BIGINT,	IN p_UserID15 		BIGINT
,	IN p_UserID16 		BIGINT,	IN p_UserID17 		BIGINT,	IN p_UserID18 		BIGINT
,	IN p_UserID19 		BIGINT,	IN p_UserID20 		BIGINT,	IN p_UserID21 		BIGINT
,	IN p_UserID22 		BIGINT,	IN p_UserID23 		BIGINT,	IN p_UserID24 		BIGINT
,	IN p_UserID25 		BIGINT,	IN p_UserID26 		BIGINT,	IN p_UserID27 		BIGINT
,	IN p_UserID28 		BIGINT,	IN p_UserID29 		BIGINT,	IN p_UserID30 		BIGINT
,	IN p_UserID31 		BIGINT,	IN p_UserID32 		BIGINT,	IN p_UserID33 		BIGINT
,	IN p_UserID34 		BIGINT,	IN p_UserID35 		BIGINT,	IN p_UserID36 		BIGINT
,	IN p_UserID37 		BIGINT,	IN p_UserID38 		BIGINT,	IN p_UserID39 		BIGINT
,	IN p_UserID40 		BIGINT,	IN p_UserID41 		BIGINT,	IN p_UserID42 		BIGINT
,	IN p_UserID43 		BIGINT,	IN p_UserID44 		BIGINT,	IN p_UserID45 		BIGINT
,	IN p_UserID46 		BIGINT,	IN p_UserID47 		BIGINT,	IN p_UserID48 		BIGINT
,	IN p_UserID49 		BIGINT,	IN p_UserID50 		BIGINT
)
    COMMENT '이벤트 랭킹 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
    
   	START TRANSACTION;	
    
    root:
    BEGIN		
        
        
        IF 0 < p_RewardID_1 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, p_CharType, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_1, p_RewardID_1, p_RewardValue_1
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;
        
        IF 0 < p_RewardID_2 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, 0, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_2, p_RewardID_2, p_RewardValue_2
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;   

        IF 0 < p_RewardID_3 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, 0, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_3, p_RewardID_3, p_RewardValue_3
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;  
		
        IF 0 < p_RewardID_4 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, 0, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_4, p_RewardID_4, p_RewardValue_4
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;

		IF 0 < p_RewardID_5 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, 0, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_5, p_RewardID_5, p_RewardValue_5
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_login`(
	IN _userIdx			BIGINT
,	IN _visitCnt_1		SMALLINT		
,	IN _itemType_1		TINYINT			
,	IN _itemID_1		INT				
,	IN _itemValue_1		INT				
,	IN _visitCnt_2		SMALLINT		
,	IN _itemType_2		TINYINT			
,	IN _itemID_2		INT				
,	IN _itemValue_2		INT				
)
    COMMENT '로그인 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
	DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE v_visit_cnt			SMALLINT DEFAULT 0;
    DECLARE v_visit_cnt2		SMALLINT DEFAULT 0;
  
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN    
    
		SELECT visit_cnt, visit_cnt2 
        INTO v_visit_cnt, v_visit_cnt2
		FROM userinfo WHERE user_idx = _userIdx;

		IF v_visit_cnt = 0 OR v_visit_cnt2 = 0 THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
        
        IF v_visit_cnt <> _visitCnt_1 THEN
			SET v_result = 102;		
			LEAVE root;
        END IF;
        
        IF v_visit_cnt2 <> _visitCnt_2 THEN
			SET v_result = 103;		
			LEAVE root;
        END IF;        
        
        
        
		START TRANSACTION;
            
        subroot:
        BEGIN
        
			
			IF 0 < _visitCnt_1 AND 0 < _itemID_1 THEN
            BEGIN
				
				INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, 
										post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)
				VALUES (_userIdx, 0, '', 0, 0, 0, '', 0, 0, 1, 7, _visitCnt_1, adddate(now(), INTERVAL 7 DAY), _itemType_1, _itemID_1, _itemValue_1);               
                
  				IF ROW_COUNT() = 0 THEN
					SET v_result = 110;	
					LEAVE subroot;
				END IF;
                
            END;
            END IF;
            
            
 			IF 0 < _visitCnt_2 AND 0 < _itemID_2 THEN
            BEGIN
				
				INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, 
										post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)
				VALUES (_userIdx, 0, '', 0, 0, 0, '', 0, 0, 1, 7, _visitCnt_2, adddate(now(), INTERVAL 7 DAY), _itemType_2, _itemID_2, _itemValue_2);               
                
  				IF ROW_COUNT() = 0 THEN
					SET v_result = 111;	
					LEAVE subroot;
				END IF;
                
            END;
            END IF;           
            
		END;
        
        
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;        

    END;
	
	SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_packagemission_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_packagemission_reward`(
	IN _useridx 	BIGINT
,	IN _chartype 	INT

, 	IN _posttextid 	INT
, 	IN _postDesc 	varchar(100)

,	IN _rewardtype1 TINYINT,	IN	_rewardid1 	INT,	IN	_rewardvalue1 	INT
,	IN _rewardtype2 TINYINT,	IN	_rewardid2 	INT,	IN	_rewardvalue2 	INT
,	IN _rewardtype3 TINYINT,	IN	_rewardid3 	INT,	IN	_rewardvalue3 	INT
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
    DECLARE v_postidx1		BIGINT DEFAULT 0;
    DECLARE v_postidx2		BIGINT DEFAULT 0;
    DECLARE v_postidx3		BIGINT DEFAULT 0;   
	
    
    DECLARE v_posttype		INT DEFAULT 2;
        
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_postidx1, v_postidx2, v_postidx3;
	END;        
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
			
		IF _rewardid1 != 0 THEN 	
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx, 0, '', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype1, _rewardid1, _rewardvalue1);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
            
            SET v_postidx1 = LAST_INSERT_ID();    
		END IF;
		
		IF _rewardid2 != 0 THEN 
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx, 0, '', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype2, _rewardid2, _rewardvalue2);
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1002;
			END IF;
            
            SET v_postidx2 = LAST_INSERT_ID();
		END IF;
		        
		IF _rewardid3 != 0 THEN 
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx, 0, '', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype3, _rewardid3, _rewardvalue3);
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1003;
			END IF;
            
            SET v_postidx3 = LAST_INSERT_ID();
		END IF;        
                        
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	    
	SELECT v_result, v_postidx1, v_postidx2, v_postidx3;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_package_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_package_reward`(
	IN _useridx 	BIGINT
,	IN _chartype 	INT

, 	IN _posttextid	TINYINT
, 	IN _posttitle 	varchar(30)
, 	IN _postDesc 	varchar(100)

,	IN _rewardtype1 TINYINT,	IN	_rewardid1 	INT,	IN	_rewardvalue1 	INT
,	IN _rewardtype2 TINYINT,	IN	_rewardid2 	INT,	IN	_rewardvalue2 	INT
,	IN _rewardtype3 TINYINT,	IN	_rewardid3 	INT,	IN	_rewardvalue3 	INT
,	IN _rewardtype4 TINYINT,	IN	_rewardid4 	INT,	IN	_rewardvalue4 	INT
,	IN _rewardtype5 TINYINT,	IN	_rewardid5 	INT,	IN	_rewardvalue5 	INT
,	IN _rewardtype6 TINYINT,	IN	_rewardid6 	INT,	IN	_rewardvalue6 	INT
,	IN _rewardtype7 TINYINT,	IN	_rewardid7 	INT,	IN	_rewardvalue7 	INT
)
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
       
    DECLARE v_posttype		INT DEFAULT 2;
    
    DECLARE v_postidx1		BIGINT DEFAULT 0;
    DECLARE v_postidx2		BIGINT DEFAULT 0;
    DECLARE v_postidx3		BIGINT DEFAULT 0;
    DECLARE v_postidx4		BIGINT DEFAULT 0;    
    DECLARE v_postidx5		BIGINT DEFAULT 0;
    DECLARE v_postidx6		BIGINT DEFAULT 0;
    DECLARE v_postidx7		BIGINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		        
		SELECT v_result, v_postidx1, v_postidx2, v_postidx3, v_postidx4, v_postidx5, v_postidx6, v_postidx7;
	END;        
        
        
	START TRANSACTION;	
	
	root:
	BEGIN
	
		IF _rewardid1 != 0 THEN 	
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype1, _rewardid1, _rewardvalue1);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype1, _rewardid1, _rewardvalue1);
            END IF;
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
            
            SET v_postidx1 = LAST_INSERT_ID();
		END IF;
		
		IF _rewardid2 != 0 THEN 
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype2, _rewardid2, _rewardvalue2);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype2, _rewardid2, _rewardvalue2);
            END IF;
            
            IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1002;
			END IF;
            
            SET v_postidx2 = LAST_INSERT_ID();
		END IF;
		        
		IF _rewardid3 != 0 THEN 
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype3, _rewardid3, _rewardvalue3);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype3, _rewardid3, _rewardvalue3);
            END IF;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1003;
			END IF;
            
            SET v_postidx3 = LAST_INSERT_ID();
		END IF;
        
		IF _rewardid4 != 0 THEN 
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype4, _rewardid4, _rewardvalue4);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype4, _rewardid4, _rewardvalue4);
            END IF;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1004;
			END IF;
            
            SET v_postidx4 = LAST_INSERT_ID();
		END IF;
    
		IF _rewardid5 != 0 THEN 
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype5, _rewardid5, _rewardvalue5);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype5, _rewardid5, _rewardvalue5);
            END IF;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1005;
			END IF;
            
            SET v_postidx5 = LAST_INSERT_ID();
		END IF;
                
		IF _rewardid6 != 0 THEN 
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype6, _rewardid6, _rewardvalue6);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype6, _rewardid6, _rewardvalue6);
            END IF;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1006;
			END IF;
            
            SET v_postidx6 = LAST_INSERT_ID();
		END IF;
                
		IF _rewardid7 != 0 THEN 
			IF _posttextid != 0 THEN 	
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, 'System', 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype7, _rewardid7, _rewardvalue7);
			ELSE
				INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (_useridx, 0, _posttitle, 0, _chartype, v_posttype, _posttextid, _postDesc, '2030-01-01', NOW(), _rewardtype7, _rewardid7, _rewardvalue7);
            END IF;
            
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1007;
			END IF;
            
            SET v_postidx7 = LAST_INSERT_ID();
		END IF;
                
	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    SELECT v_result, v_postidx1, v_postidx2, v_postidx3, v_postidx4, v_postidx5, v_postidx6, v_postidx7;	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_reward_50` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_reward_50`( 
	IN _rewardtype				TINYINT
,	IN _rewardid				INT
,	IN _rewardvalue				SMALLINT
,	IN _posttextidx				INT

,	IN _useridx1 				BIGINT
,	IN _useridx2 				BIGINT
,	IN _useridx3 				BIGINT
,	IN _useridx4 				BIGINT
,	IN _useridx5 				BIGINT
,	IN _useridx6 				BIGINT
,	IN _useridx7 				BIGINT
,	IN _useridx8 				BIGINT
,	IN _useridx9 				BIGINT
,	IN _useridx10 				BIGINT
,	IN _useridx11 				BIGINT
,	IN _useridx12 				BIGINT
,	IN _useridx13 				BIGINT
,	IN _useridx14 				BIGINT
,	IN _useridx15 				BIGINT
,	IN _useridx16 				BIGINT
,	IN _useridx17 				BIGINT
,	IN _useridx18 				BIGINT
,	IN _useridx19 				BIGINT
,	IN _useridx20 				BIGINT
,	IN _useridx21 				BIGINT
,	IN _useridx22 				BIGINT
,	IN _useridx23 				BIGINT
,	IN _useridx24 				BIGINT
,	IN _useridx25 				BIGINT
,	IN _useridx26 				BIGINT
,	IN _useridx27 				BIGINT
,	IN _useridx28 				BIGINT
,	IN _useridx29 				BIGINT
,	IN _useridx30 				BIGINT
,	IN _useridx31 				BIGINT
,	IN _useridx32 				BIGINT
,	IN _useridx33 				BIGINT
,	IN _useridx34 				BIGINT
,	IN _useridx35 				BIGINT
,	IN _useridx36 				BIGINT
,	IN _useridx37 				BIGINT
,	IN _useridx38 				BIGINT
,	IN _useridx39 				BIGINT
,	IN _useridx40 				BIGINT
,	IN _useridx41 				BIGINT
,	IN _useridx42 				BIGINT
,	IN _useridx43 				BIGINT
,	IN _useridx44 				BIGINT
,	IN _useridx45 				BIGINT
,	IN _useridx46 				BIGINT
,	IN _useridx47 				BIGINT
,	IN _useridx48 				BIGINT
,	IN _useridx49 				BIGINT
,	IN _useridx50 				BIGINT
)
    COMMENT '성 사냥터 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
   	START TRANSACTION;	
    
    root:
    BEGIN
		
		
		IF _useridx1 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx1, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx2 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx2, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx3 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx3, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx4 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx4, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx5 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx5, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx6 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx6, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx7 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx7, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx8 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx8, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx9 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx9, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx10 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx10, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx11 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx11, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx12 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx12, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx13 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx13, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx14 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx14, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx15 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx15, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx16 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx16, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx17 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx17, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx18 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx18, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx19 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx19, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx20 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx20, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx21 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx21, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx22 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx22, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx23 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx23, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx24 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx24, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx25 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx25, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx26 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx26, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx27 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx27, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx28 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx28, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx29 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx29, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx30 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx30, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx31 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx31, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx32 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx32, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx33 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx33, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx34 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx34, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx35 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx35, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx36 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx36, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx37 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx37, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx38 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx38, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx39 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx39, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;

		IF _useridx40 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx40, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx41 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx41, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx42 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx42, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx43 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx43, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx44 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx44, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx45 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx45, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx46 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx46, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx47 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx47, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx48 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx48, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx49 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx49, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx50 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx50, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_reward_combat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_reward_combat`( 
	IN _rewardtype				TINYINT
,	IN _rewardid				INT
,	IN _rewardvalue				INT
,	IN _posttextidx				INT

,	IN _useridx1 				BIGINT
,	IN _useridx2 				BIGINT
,	IN _useridx3 				BIGINT
,	IN _useridx4 				BIGINT
,	IN _useridx5 				BIGINT
,	IN _useridx6 				BIGINT
,	IN _useridx7 				BIGINT
,	IN _useridx8 				BIGINT
,	IN _useridx9 				BIGINT
,	IN _useridx10 				BIGINT
,	IN _useridx11 				BIGINT
,	IN _useridx12 				BIGINT
,	IN _useridx13 				BIGINT
,	IN _useridx14 				BIGINT
,	IN _useridx15 				BIGINT
,	IN _useridx16 				BIGINT
,	IN _useridx17 				BIGINT
,	IN _useridx18 				BIGINT
,	IN _useridx19 				BIGINT
,	IN _useridx20 				BIGINT
,	IN _useridx21 				BIGINT
,	IN _useridx22 				BIGINT
,	IN _useridx23 				BIGINT
,	IN _useridx24 				BIGINT
,	IN _useridx25 				BIGINT
,	IN _useridx26 				BIGINT
,	IN _useridx27 				BIGINT
,	IN _useridx28 				BIGINT
,	IN _useridx29 				BIGINT
,	IN _useridx30 				BIGINT
,	IN _useridx31 				BIGINT
,	IN _useridx32 				BIGINT
,	IN _useridx33 				BIGINT
,	IN _useridx34 				BIGINT
,	IN _useridx35 				BIGINT
,	IN _useridx36 				BIGINT
,	IN _useridx37 				BIGINT
,	IN _useridx38 				BIGINT
,	IN _useridx39 				BIGINT
,	IN _useridx40 				BIGINT
,	IN _useridx41 				BIGINT
,	IN _useridx42 				BIGINT
,	IN _useridx43 				BIGINT
,	IN _useridx44 				BIGINT
,	IN _useridx45 				BIGINT
,	IN _useridx46 				BIGINT
,	IN _useridx47 				BIGINT
,	IN _useridx48 				BIGINT
,	IN _useridx49 				BIGINT
,	IN _useridx50 				BIGINT
)
    COMMENT '성 사냥터 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
   	START TRANSACTION;	
    
    root:
    BEGIN
		
		
		IF _useridx1 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx1, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx2 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx2, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx3 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx3, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx4 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx4, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx5 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx5, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx6 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx6, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx7 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx7, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx8 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx8, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx9 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx9, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx10 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx10, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx11 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx11, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx12 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx12, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx13 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx13, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx14 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx14, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx15 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx15, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx16 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx16, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx17 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx17, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx18 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx18, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx19 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx19, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx20 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx20, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx21 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx21, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx22 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx22, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx23 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx23, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx24 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx24, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx25 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx25, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx26 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx26, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx27 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx27, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx28 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx28, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx29 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx29, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx30 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx30, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx31 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx31, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx32 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx32, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx33 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx33, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx34 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx34, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx35 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx35, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx36 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx36, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx37 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx37, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx38 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx38, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx39 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx39, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;

		IF _useridx40 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx40, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx41 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx41, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx42 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx42, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx43 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx43, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx44 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx44, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx45 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx45, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx46 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx46, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx47 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx47, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx48 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx48, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx49 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx49, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx50 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx50, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
        
        
        UPDATE userinfo SET combat_season_reward = 1
        WHERE 
        user_idx IN (_useridx1, _useridx2, _useridx3, _useridx4, _useridx5, _useridx6, _useridx7, _useridx8, _useridx9, _useridx10, 
			_useridx11, _useridx12, _useridx13, _useridx14, _useridx15, _useridx16, _useridx17, _useridx18, _useridx19, _useridx20, 
			_useridx21, _useridx22, _useridx23, _useridx24, _useridx25, _useridx26, _useridx27, _useridx28, _useridx29, _useridx30,
			_useridx31, _useridx32, _useridx33, _useridx34, _useridx35, _useridx36, _useridx37, _useridx38, _useridx39, _useridx40, 
			_useridx41, _useridx42, _useridx43, _useridx44, _useridx45, _useridx46, _useridx47, _useridx48, _useridx49, _useridx50);
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_reward_freebattle` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_reward_freebattle`( 
	IN _rewardtype				TINYINT
,	IN _rewardid				INT
,	IN _rewardvalue				INT
,	IN _posttextidx				INT

,	IN _useridx1 				BIGINT
,	IN _useridx2 				BIGINT
,	IN _useridx3 				BIGINT
,	IN _useridx4 				BIGINT
,	IN _useridx5 				BIGINT
,	IN _useridx6 				BIGINT
,	IN _useridx7 				BIGINT
,	IN _useridx8 				BIGINT
,	IN _useridx9 				BIGINT
,	IN _useridx10 				BIGINT
,	IN _useridx11 				BIGINT
,	IN _useridx12 				BIGINT
,	IN _useridx13 				BIGINT
,	IN _useridx14 				BIGINT
,	IN _useridx15 				BIGINT
,	IN _useridx16 				BIGINT
,	IN _useridx17 				BIGINT
,	IN _useridx18 				BIGINT
,	IN _useridx19 				BIGINT
,	IN _useridx20 				BIGINT
,	IN _useridx21 				BIGINT
,	IN _useridx22 				BIGINT
,	IN _useridx23 				BIGINT
,	IN _useridx24 				BIGINT
,	IN _useridx25 				BIGINT
,	IN _useridx26 				BIGINT
,	IN _useridx27 				BIGINT
,	IN _useridx28 				BIGINT
,	IN _useridx29 				BIGINT
,	IN _useridx30 				BIGINT
,	IN _useridx31 				BIGINT
,	IN _useridx32 				BIGINT
,	IN _useridx33 				BIGINT
,	IN _useridx34 				BIGINT
,	IN _useridx35 				BIGINT
,	IN _useridx36 				BIGINT
,	IN _useridx37 				BIGINT
,	IN _useridx38 				BIGINT
,	IN _useridx39 				BIGINT
,	IN _useridx40 				BIGINT
,	IN _useridx41 				BIGINT
,	IN _useridx42 				BIGINT
,	IN _useridx43 				BIGINT
,	IN _useridx44 				BIGINT
,	IN _useridx45 				BIGINT
,	IN _useridx46 				BIGINT
,	IN _useridx47 				BIGINT
,	IN _useridx48 				BIGINT
,	IN _useridx49 				BIGINT
,	IN _useridx50 				BIGINT
)
    COMMENT '성 사냥터 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
   	START TRANSACTION;	
    
    root:
    BEGIN
		
		
		IF _useridx1 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx1, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx2 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx2, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx3 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx3, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx4 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx4, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx5 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx5, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx6 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx6, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx7 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx7, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx8 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx8, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx9 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx9, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx10 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx10, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx11 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx11, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx12 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx12, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx13 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx13, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx14 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx14, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx15 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx15, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx16 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx16, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx17 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx17, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx18 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx18, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx19 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx19, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx20 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx20, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx21 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx21, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx22 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx22, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx23 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx23, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx24 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx24, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx25 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx25, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx26 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx26, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx27 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx27, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx28 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx28, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx29 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx29, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx30 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx30, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx31 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx31, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx32 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx32, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx33 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx33, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx34 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx34, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx35 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx35, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx36 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx36, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx37 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx37, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx38 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx38, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx39 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx39, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;

		IF _useridx40 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx40, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx41 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx41, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx42 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx42, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx43 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx43, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx44 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx44, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx45 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx45, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx46 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx46, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx47 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx47, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx48 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx48, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx49 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx49, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
		
		IF _useridx50 != 0 THEN 		
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			VALUES (_useridx50, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
			IF ROW_COUNT() <= 0 THEN 
				SET v_result = 1001;
			END IF;
		END IF;
        
        
        UPDATE userinfo SET freebattle_season_reward = 1
        WHERE 
        user_idx IN (_useridx1, _useridx2, _useridx3, _useridx4, _useridx5, _useridx6, _useridx7, _useridx8, _useridx9, _useridx10, 
			_useridx11, _useridx12, _useridx13, _useridx14, _useridx15, _useridx16, _useridx17, _useridx18, _useridx19, _useridx20, 
			_useridx21, _useridx22, _useridx23, _useridx24, _useridx25, _useridx26, _useridx27, _useridx28, _useridx29, _useridx30,
			_useridx31, _useridx32, _useridx33, _useridx34, _useridx35, _useridx36, _useridx37, _useridx38, _useridx39, _useridx40, 
			_useridx41, _useridx42, _useridx43, _useridx44, _useridx45, _useridx46, _useridx47, _useridx48, _useridx49, _useridx50);
        
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_reward_occupywar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_reward_occupywar`( 
	IN _posttextidx 		INT

,	IN _win_rewardtype1 	INT,	IN _win_rewardid1 		INT,	IN _win_rewardvalue1 	INT
,	IN _win_rewardtype2 	INT,	IN _win_rewardid2 		INT,	IN _win_rewardvalue2 	INT
,	IN _win_rewardtype3 	INT,	IN _win_rewardid3 		INT,	IN _win_rewardvalue3 	INT
,	IN _win_rewardtype4 	INT,	IN _win_rewardid4 		INT,	IN _win_rewardvalue4 	INT

,	IN _lose_rewardtype1 	INT,	IN _lose_rewardid1 		INT,	IN _lose_rewardvalue1 	INT
,	IN _lose_rewardtype2 	INT,	IN _lose_rewardid2 		INT,	IN _lose_rewardvalue2 	INT
,	IN _lose_rewardtype3 	INT,	IN _lose_rewardid3 		INT,	IN _lose_rewardvalue3 	INT
,	IN _lose_rewardtype4 	INT,	IN _lose_rewardid4 		INT,	IN _lose_rewardvalue4 	INT

,	IN _win_useridx1 	BIGINT,	IN _win_useridx2 	BIGINT,	IN _win_useridx3 	BIGINT,	IN _win_useridx4 	BIGINT,	IN _win_useridx5 	BIGINT
,	IN _win_useridx6 	BIGINT,	IN _win_useridx7 	BIGINT,	IN _win_useridx8 	BIGINT,	IN _win_useridx9 	BIGINT,	IN _win_useridx10 	BIGINT
,	IN _win_useridx11 	BIGINT,	IN _win_useridx12 	BIGINT,	IN _win_useridx13 	BIGINT,	IN _win_useridx14 	BIGINT,	IN _win_useridx15 	BIGINT

,	IN _lose_useridx1 	BIGINT,	IN _lose_useridx2 	BIGINT,	IN _lose_useridx3 	BIGINT,	IN _lose_useridx4 	BIGINT,	IN _lose_useridx5 	BIGINT
,	IN _lose_useridx6 	BIGINT,	IN _lose_useridx7 	BIGINT,	IN _lose_useridx8 	BIGINT,	IN _lose_useridx9 	BIGINT,	IN _lose_useridx10 	BIGINT
,	IN _lose_useridx11 	BIGINT,	IN _lose_useridx12 	BIGINT,	IN _lose_useridx13 	BIGINT,	IN _lose_useridx14 	BIGINT,	IN _lose_useridx15 	BIGINT
,	IN _lose_useridx16 	BIGINT,	IN _lose_useridx17	BIGINT,	IN _lose_useridx18	BIGINT,	IN _lose_useridx19	BIGINT,	IN _lose_useridx20	BIGINT
,	IN _lose_useridx21	BIGINT,	IN _lose_useridx22	BIGINT,	IN _lose_useridx23	BIGINT,	IN _lose_useridx24	BIGINT,	IN _lose_useridx25 	BIGINT
,	IN _lose_useridx26 	BIGINT,	IN _lose_useridx27 	BIGINT,	IN _lose_useridx28 	BIGINT,	IN _lose_useridx29 	BIGINT,	IN _lose_useridx30 	BIGINT
,	IN _lose_useridx31 	BIGINT,	IN _lose_useridx32 	BIGINT,	IN _lose_useridx33 	BIGINT,	IN _lose_useridx34 	BIGINT,	IN _lose_useridx35 	BIGINT
,	IN _lose_useridx36 	BIGINT,	IN _lose_useridx37	BIGINT,	IN _lose_useridx38	BIGINT,	IN _lose_useridx39	BIGINT,	IN _lose_useridx40	BIGINT
,	IN _lose_useridx41	BIGINT,	IN _lose_useridx42	BIGINT,	IN _lose_useridx43	BIGINT,	IN _lose_useridx44	BIGINT,	IN _lose_useridx45 	BIGINT
)
    COMMENT '성 점령전 보상 우편 지급 처리'
BEGIN
   
	DECLARE	v_errno		INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
	DECLARE v_posttype	INT DEFAULT 1;
     
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
   
   	START TRANSACTION;	
    
    root:
    BEGIN
	
		
		IF 0 < _win_rewardid1 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _win_rewardtype1, _win_rewardid1, _win_rewardvalue1
				FROM userinfo
				WHERE user_idx IN (_win_useridx1, _win_useridx2, _win_useridx3, _win_useridx4, _win_useridx5, _win_useridx6, _win_useridx7, _win_useridx8, _win_useridx9, _win_useridx10,
					_win_useridx11, _win_useridx12, _win_useridx13, _win_useridx14, _win_useridx15);
		END IF;

		IF 0 < _win_rewardid2 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _win_rewardtype2, _win_rewardid2, _win_rewardvalue2
				FROM userinfo
				WHERE user_idx IN (_win_useridx1, _win_useridx2, _win_useridx3, _win_useridx4, _win_useridx5, _win_useridx6, _win_useridx7, _win_useridx8, _win_useridx9, _win_useridx10,
					_win_useridx11, _win_useridx12, _win_useridx13, _win_useridx14, _win_useridx15);		
		END IF;

		IF 0 < _win_rewardid3 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _win_rewardtype3, _win_rewardid3, _win_rewardvalue3
				FROM userinfo
				WHERE user_idx IN (_win_useridx1, _win_useridx2, _win_useridx3, _win_useridx4, _win_useridx5, _win_useridx6, _win_useridx7, _win_useridx8, _win_useridx9, _win_useridx10,
					_win_useridx11, _win_useridx12, _win_useridx13, _win_useridx14, _win_useridx15);			
		END IF;

		IF 0 < _win_rewardid4 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _win_rewardtype4, _win_rewardid4, _win_rewardvalue4
				FROM userinfo
				WHERE user_idx IN (_win_useridx1, _win_useridx2, _win_useridx3, _win_useridx4, _win_useridx5, _win_useridx6, _win_useridx7, _win_useridx8, _win_useridx9, _win_useridx10,
					_win_useridx11, _win_useridx12, _win_useridx13, _win_useridx14, _win_useridx15);			
		END IF;		
		
		
		
		IF 0 < _lose_rewardid1 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _lose_rewardtype1, _lose_rewardid1, _lose_rewardvalue1
				FROM userinfo
				WHERE user_idx IN (_lose_useridx1, _lose_useridx2, _lose_useridx3, _lose_useridx4, _lose_useridx5, _lose_useridx6, _lose_useridx7, _lose_useridx8, _lose_useridx9, _lose_useridx10,
					_lose_useridx11, _lose_useridx12, _lose_useridx13, _lose_useridx14, _lose_useridx15, _lose_useridx16, _lose_useridx17, _lose_useridx18, _lose_useridx19, _lose_useridx20,
					_lose_useridx21, _lose_useridx22, _lose_useridx23, _lose_useridx24, _lose_useridx25, _lose_useridx26, _lose_useridx27, _lose_useridx28, _lose_useridx29, _lose_useridx30,
					_lose_useridx31, _lose_useridx32, _lose_useridx33, _lose_useridx34, _lose_useridx35, _lose_useridx36, _lose_useridx37, _lose_useridx38, _lose_useridx39, _lose_useridx40,
					_lose_useridx41, _lose_useridx42, _lose_useridx43, _lose_useridx44, _lose_useridx45);
		END IF;		
		
		IF 0 < _lose_rewardid2 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _lose_rewardtype2, _lose_rewardid2, _lose_rewardvalue2
				FROM userinfo
				WHERE user_idx IN (_lose_useridx1, _lose_useridx2, _lose_useridx3, _lose_useridx4, _lose_useridx5, _lose_useridx6, _lose_useridx7, _lose_useridx8, _lose_useridx9, _lose_useridx10,
					_lose_useridx11, _lose_useridx12, _lose_useridx13, _lose_useridx14, _lose_useridx15, _lose_useridx16, _lose_useridx17, _lose_useridx18, _lose_useridx19, _lose_useridx20,
					_lose_useridx21, _lose_useridx22, _lose_useridx23, _lose_useridx24, _lose_useridx25, _lose_useridx26, _lose_useridx27, _lose_useridx28, _lose_useridx29, _lose_useridx30,
					_lose_useridx31, _lose_useridx32, _lose_useridx33, _lose_useridx34, _lose_useridx35, _lose_useridx36, _lose_useridx37, _lose_useridx38, _lose_useridx39, _lose_useridx40,
					_lose_useridx41, _lose_useridx42, _lose_useridx43, _lose_useridx44, _lose_useridx45);
		END IF;	

		IF 0 < _lose_rewardid3 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _lose_rewardtype3, _lose_rewardid3, _lose_rewardvalue3
				FROM userinfo
				WHERE user_idx IN (_lose_useridx1, _lose_useridx2, _lose_useridx3, _lose_useridx4, _lose_useridx5, _lose_useridx6, _lose_useridx7, _lose_useridx8, _lose_useridx9, _lose_useridx10,
					_lose_useridx11, _lose_useridx12, _lose_useridx13, _lose_useridx14, _lose_useridx15, _lose_useridx16, _lose_useridx17, _lose_useridx18, _lose_useridx19, _lose_useridx20,
					_lose_useridx21, _lose_useridx22, _lose_useridx23, _lose_useridx24, _lose_useridx25, _lose_useridx26, _lose_useridx27, _lose_useridx28, _lose_useridx29, _lose_useridx30,
					_lose_useridx31, _lose_useridx32, _lose_useridx33, _lose_useridx34, _lose_useridx35, _lose_useridx36, _lose_useridx37, _lose_useridx38, _lose_useridx39, _lose_useridx40,
					_lose_useridx41, _lose_useridx42, _lose_useridx43, _lose_useridx44, _lose_useridx45);
		END IF;	

		IF 0 < _lose_rewardid4 THEN
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				SELECT user_idx, 0, 'System', 0, 0, v_posttype, _posttextidx, 1, ADDDATE(NOW(), 7), NOW(), _lose_rewardtype4, _lose_rewardid4, _lose_rewardvalue4
				FROM userinfo
				WHERE user_idx IN (_lose_useridx1, _lose_useridx2, _lose_useridx3, _lose_useridx4, _lose_useridx5, _lose_useridx6, _lose_useridx7, _lose_useridx8, _lose_useridx9, _lose_useridx10,
					_lose_useridx11, _lose_useridx12, _lose_useridx13, _lose_useridx14, _lose_useridx15, _lose_useridx16, _lose_useridx17, _lose_useridx18, _lose_useridx19, _lose_useridx20,
					_lose_useridx21, _lose_useridx22, _lose_useridx23, _lose_useridx24, _lose_useridx25, _lose_useridx26, _lose_useridx27, _lose_useridx28, _lose_useridx29, _lose_useridx30,
					_lose_useridx31, _lose_useridx32, _lose_useridx33, _lose_useridx34, _lose_useridx35, _lose_useridx36, _lose_useridx37, _lose_useridx38, _lose_useridx39, _lose_useridx40,
					_lose_useridx41, _lose_useridx42, _lose_useridx43, _lose_useridx44, _lose_useridx45);
		END IF;	
		
	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;		
	
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_reward_rank_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_reward_rank_event`( 
	IN p_CharType		INT		
,	IN p_MailPathID		INT		
,	IN p_RewardType_1	INT,	IN p_RewardID_1		INT,	IN p_RewardValue_1	INT
,	IN p_RewardType_2	INT,	IN p_RewardID_2		INT,	IN p_RewardValue_2	INT
,	IN p_RewardType_3	INT,	IN p_RewardID_3		INT,	IN p_RewardValue_3	INT
,	IN p_UserID1 		BIGINT,	IN p_UserID2 		BIGINT,	IN p_UserID3 		BIGINT
,	IN p_UserID4 		BIGINT,	IN p_UserID5 		BIGINT,	IN p_UserID6 		BIGINT
,	IN p_UserID7 		BIGINT,	IN p_UserID8 		BIGINT,	IN p_UserID9 		BIGINT
,	IN p_UserID10 		BIGINT,	IN p_UserID11 		BIGINT,	IN p_UserID12 		BIGINT
,	IN p_UserID13 		BIGINT,	IN p_UserID14 		BIGINT,	IN p_UserID15 		BIGINT
,	IN p_UserID16 		BIGINT,	IN p_UserID17 		BIGINT,	IN p_UserID18 		BIGINT
,	IN p_UserID19 		BIGINT,	IN p_UserID20 		BIGINT,	IN p_UserID21 		BIGINT
,	IN p_UserID22 		BIGINT,	IN p_UserID23 		BIGINT,	IN p_UserID24 		BIGINT
,	IN p_UserID25 		BIGINT,	IN p_UserID26 		BIGINT,	IN p_UserID27 		BIGINT
,	IN p_UserID28 		BIGINT,	IN p_UserID29 		BIGINT,	IN p_UserID30 		BIGINT
,	IN p_UserID31 		BIGINT,	IN p_UserID32 		BIGINT,	IN p_UserID33 		BIGINT
,	IN p_UserID34 		BIGINT,	IN p_UserID35 		BIGINT,	IN p_UserID36 		BIGINT
,	IN p_UserID37 		BIGINT,	IN p_UserID38 		BIGINT,	IN p_UserID39 		BIGINT
,	IN p_UserID40 		BIGINT,	IN p_UserID41 		BIGINT,	IN p_UserID42 		BIGINT
,	IN p_UserID43 		BIGINT,	IN p_UserID44 		BIGINT,	IN p_UserID45 		BIGINT
,	IN p_UserID46 		BIGINT,	IN p_UserID47 		BIGINT,	IN p_UserID48 		BIGINT
,	IN p_UserID49 		BIGINT,	IN p_UserID50 		BIGINT
)
    COMMENT '이벤트 랭킹 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
    
   	START TRANSACTION;	
    
    root:
    BEGIN		
        
        
        IF 0 < p_RewardID_1 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, p_CharType, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_1, p_RewardID_1, p_RewardValue_1
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;
        
        IF 0 < p_RewardID_2 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, p_CharType, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_2, p_RewardID_2, p_RewardValue_2
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;   

        IF 0 < p_RewardID_3 THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, p_CharType, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), p_RewardType_3, p_RewardID_3, p_RewardValue_3
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;  

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_reward_rank_guild` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_reward_rank_guild`( 
	IN p_RewardID				INT		
,	IN p_RewardValue			INT		
,	IN p_MailPathID				INT		
,	IN p_UserID1 				BIGINT,	IN p_UserID2 				BIGINT,	IN p_UserID3 				BIGINT
,	IN p_UserID4 				BIGINT,	IN p_UserID5 				BIGINT,	IN p_UserID6 				BIGINT
,	IN p_UserID7 				BIGINT,	IN p_UserID8 				BIGINT,	IN p_UserID9 				BIGINT
,	IN p_UserID10 				BIGINT,	IN p_UserID11 				BIGINT,	IN p_UserID12 				BIGINT
,	IN p_UserID13 				BIGINT,	IN p_UserID14 				BIGINT,	IN p_UserID15 				BIGINT
,	IN p_UserID16 				BIGINT,	IN p_UserID17 				BIGINT,	IN p_UserID18 				BIGINT
,	IN p_UserID19 				BIGINT,	IN p_UserID20 				BIGINT,	IN p_UserID21 				BIGINT
,	IN p_UserID22 				BIGINT,	IN p_UserID23 				BIGINT,	IN p_UserID24 				BIGINT
,	IN p_UserID25 				BIGINT,	IN p_UserID26 				BIGINT,	IN p_UserID27 				BIGINT
,	IN p_UserID28 				BIGINT,	IN p_UserID29 				BIGINT,	IN p_UserID30 				BIGINT
,	IN p_UserID31 				BIGINT,	IN p_UserID32 				BIGINT,	IN p_UserID33 				BIGINT
,	IN p_UserID34 				BIGINT,	IN p_UserID35 				BIGINT,	IN p_UserID36 				BIGINT
,	IN p_UserID37 				BIGINT,	IN p_UserID38 				BIGINT,	IN p_UserID39 				BIGINT
,	IN p_UserID40 				BIGINT,	IN p_UserID41 				BIGINT,	IN p_UserID42 				BIGINT
,	IN p_UserID43 				BIGINT,	IN p_UserID44 				BIGINT,	IN p_UserID45 				BIGINT
,	IN p_UserID46 				BIGINT,	IN p_UserID47 				BIGINT,	IN p_UserID48 				BIGINT
,	IN p_UserID49 				BIGINT,	IN p_UserID50 				BIGINT
)
    COMMENT '랭킹 순위 보상 지급'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	DECLARE v_posttype		INT DEFAULT 1;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;
	
    
   	START TRANSACTION;	
    
    root:
    BEGIN		
        
        
        IF 0 < p_RewardID THEN        
			INSERT INTO `user_post`(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
			SELECT user_idx, 0, 'System', 0, 0, v_posttype, p_MailPathID, 1, ADDDATE(NOW(), 7), NOW(), 0, p_RewardID, p_RewardValue
			FROM userinfo 
			WHERE user_idx IN (p_UserID1, p_UserID2, p_UserID3, p_UserID4, p_UserID5, p_UserID6, p_UserID7, p_UserID8, p_UserID9, p_UserID10, 
				p_UserID11, p_UserID12, p_UserID13, p_UserID14, p_UserID15, p_UserID16, p_UserID17, p_UserID18, p_UserID19, p_UserID20, 
				p_UserID21, p_UserID22, p_UserID23, p_UserID24, p_UserID25, p_UserID26, p_UserID27, p_UserID28, p_UserID29, p_UserID30,
				p_UserID31, p_UserID32, p_UserID33, p_UserID34, p_UserID35, p_UserID36, p_UserID37, p_UserID38, p_UserID39, p_UserID40, 
				p_UserID41, p_UserID42, p_UserID43, p_UserID44, p_UserID45, p_UserID46, p_UserID47, p_UserID48, p_UserID49, p_UserID50);
		END IF;

	END;
    
    
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	
	SELECT v_result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_rewrad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_rewrad`(
	IN	_useridx 		BIGINT

,	IN	_rewardtype 	TINYINT
,	IN	_rewardid 		INT
,	IN	_rewardvalue 	INT
,	IN	_posttextidx 	INT
)
BEGIN
    DECLARE v_chartype 		INT DEFAULT 0;	
    DECLARE v_posttype		INT DEFAULT 1;
    
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE _result 		INT DEFAULT 0;
	
    DECLARE v_postidx		BIGINT DEFAULT 0;
    DECLARE v_postCnt		INT DEFAULT 0;
	DECLARE new_post		TINYINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
		
		SELECT _result, v_postidx, v_postCnt, new_post;
	END;        
	
    
    
	SELECT ci.char_type	INTO v_chartype
	FROM char_info ci 
		INNER JOIN userinfo ui ON ci.char_idx=ui.base_char_idx AND ci.user_idx=ui.user_idx
	WHERE ci.user_idx=_useridx;
 
 
	
	IF _rewardid != 0 THEN 
		INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
		VALUES (_useridx, 0, '', 0, 0, v_posttype, _posttextidx, '', ADDDATE(NOW(), 7), NOW(), _rewardtype, _rewardid, _rewardvalue);
		IF ROW_COUNT() <= 0 THEN 
			SET _result = 101;
		END IF;
		
		SET v_postidx = LAST_INSERT_ID();
	END IF;		
	
	
    -- SELECT COUNT(user_idx) INTO v_postCnt FROM user_post WHERE user_idx = _useridx AND char_id IN (0, v_chartype) AND post_type = v_posttype AND expire_date >= CURRENT_TIMESTAMP();
	SELECT COUNT(user_idx), BIT_OR(post_type) INTO v_postCnt, new_post FROM user_post WHERE user_idx = _useridx AND char_id IN (0, v_chartype) AND post_type = v_posttype AND expire_date >= CURRENT_TIMESTAMP();
    
	
	SELECT _result, v_postidx, v_postCnt, new_post;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_sendmsg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_sendmsg`(
	IN	p_userIdx			BIGINT			
,	IN	p_sendIdx			BIGINT			
,	IN	p_senderNick		VARCHAR(30)		
,	IN	p_senderCharType	INT				
,	IN	p_senderGamedbIdx	SMALLINT		
,	IN	p_guildIdx			BIGINT			
,	IN	p_guildName			VARCHAR(50)		
,	IN	p_guildMarkId		INT				
,	IN	p_charId			INT				
,	IN	p_postType			TINYINT			
,	IN	p_postTextIdx		TINYINT			
,	IN	p_messgae			VARCHAR(400)	
,	IN 	p_expireDate		DATETIME		
,	IN	p_itemType			TINYINT			
,	IN	p_itemId			INT				
,	IN	p_itemValue			INT				
,	IN 	p_mailLimit			SMALLINT		
)
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
	DECLARE v_postIdx				BIGINT DEFAULT 0;
    DECLARE v_mailQty				SMALLINT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		SELECT v_result, v_postIdx;
	END;  
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
    
		
        SELECT COUNT(*) INTO v_mailQty
        FROM user_post
        WHERE user_idx = p_userIdx AND post_type = p_postType;
        
        IF p_mailLimit <= v_mailQty THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
    
		
        INSERT INTO user_post (user_idx, send_idx, sender_nick, sender_char_id, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, char_id, post_type, post_text_idx, message, expire_date, item_type, item_id, item_value)
		VALUES (p_userIdx, p_sendIdx, p_senderNick, p_senderCharType, p_senderGamedbIdx, p_guildIdx, p_guildName, p_guildMarkId, p_charId, p_postType, p_postTextIdx, p_messgae, p_expireDate, p_itemType, p_itemId, p_itemValue);

		IF ROW_COUNT() <> 1 THEN
			SET v_result = 102;		
            LEAVE root;
		END IF;

		SET v_postIdx := LAST_INSERT_ID();        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
        
    
    SELECT v_result, v_postIdx;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_insert_sendmsg_casha` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_insert_sendmsg_casha`(
	IN	p_userIdx			BIGINT			
,	IN	p_RecvcharIdx		BIGINT	
    
,	IN	p_sendIdx			BIGINT
,	IN	p_senderNick		VARCHAR(30)		
-- ,	IN	p_senderCharType	INT				
,	IN	p_senderGamedbIdx	SMALLINT		
,	IN	p_guildIdx			BIGINT			
,	IN	p_guildName			VARCHAR(50)		
,	IN	p_guildMarkId		INT				
-- ,	IN	p_charId			INT				
,	IN	p_postType			TINYINT			
,	IN	p_postTextIdx		TINYINT			
,	IN	p_title				VARCHAR(50)	
,	IN	p_messgae			VARCHAR(400)	
,	IN 	p_expireDate		DATETIME		
,	IN	p_itemType			TINYINT		
,	IN	p_itemId			INT			
,	IN	p_itemValue			INT			
,	IN 	p_mailLimit			SMALLINT
,	IN 	p_costgold			SMALLINT	
)
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_senduserIdx			BIGINT DEFAULT 0;
	DECLARE v_postIdx				BIGINT DEFAULT 0;
    DECLARE v_mailQty				SMALLINT DEFAULT 0;
    DECLARE v_final_gold			BIGINT DEFAULT 0;	
    DECLARE v_final_cashA			BIGINT DEFAULT 0;	
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		SELECT v_result, v_postIdx, v_final_cashA, v_final_gold;
	END;  
    
    
	START TRANSACTION;	
	
	root:
	BEGIN
    
		
        SELECT COUNT(*) INTO v_mailQty
        FROM user_post
        WHERE user_idx = p_userIdx AND char_idx = p_RecvcharIdx AND post_type = p_postType;
        
        IF p_mailLimit <= v_mailQty THEN
			SET v_result = 101;		
			LEAVE root;
        END IF;
        
        SELECT user_idx INTO v_senduserIdx FROM char_info WHERE char_idx = p_sendIdx;
		IF 0 < p_costgold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(v_senduserIdx, p_sendIdx, p_costgold, v_final_gold, v_result);
        	IF v_result != 0 THEN 
				SET v_result = 103;
				LEAVE root;
			END IF;
		END IF;

		-- 
        -- IF 0 < p_itemValue THEN
		-- 	CALL sp_mmo_notrans_userinfo_delete_cashA(p_sendIdx, p_itemValue, v_final_cashA, v_result);
		-- 	IF v_result <> 0 THEN
		-- 		LEAVE root;
		-- 	END IF;
		-- END IF;
		-- 
		
        
        INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
		VALUES (p_userIdx, p_RecvcharIdx, p_sendIdx, p_senderNick, p_senderGamedbIdx, p_guildIdx, p_guildName, p_guildMarkId, p_postType, p_postTextIdx, p_title, p_messgae, p_expireDate, p_itemType, p_itemId, p_itemValue);

		IF ROW_COUNT() <> 1 THEN
			SET v_result = 102;		
            LEAVE root;
		END IF;

		SET v_postIdx := LAST_INSERT_ID();        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
        
    
    SELECT v_result, v_postIdx, v_final_cashA, v_final_gold;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_select` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_select`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	IN	p_postType	TINYINT	
,	IN	p_From		INT	
,	IN	p_Max		INT	
)
BEGIN
	DECLARE new_post_reward TINYINT DEFAULT 0;
    DECLARE new_post_paid 	TINYINT DEFAULT 0;
    DECLARE new_post_mail 	TINYINT DEFAULT 0;
    DECLARE post_send_count 	SMALLINT DEFAULT 0;
	DECLARE v_expireDate	DATETIME DEFAULT NOW();	

	DECLARE v_DLRT					DATETIME;
    SET v_DLRT = fn_Get_DateLineReferenceTime();

	
	CALL sp_mmo_userpost_delete_expire(p_userIdx, @_result);


	
	SELECT post_idx, sender_nick, send_idx, guild_idx, guild_name, guild_mark_id, post_type
			, post_text_idx, title_msg, message, UNIX_TIMESTAMP(expire_date) as expire_date, UNIX_TIMESTAMP(reg_date) as reg_date, item_type, item_id, item_value, post_read
	FROM user_post WHERE user_idx = p_userIdx
	AND char_idx IN (0, p_charIdx)
	AND post_type = p_postType
	AND expire_date >= v_expireDate
	LIMIT p_From, p_Max;


	
	SELECT post_type, COUNT(*) AS totCount
	FROM user_post WHERE user_idx = p_userIdx
	AND char_idx IN (0, p_charIdx)
	AND post_type = p_postType
	AND expire_date >= v_expireDate
	GROUP BY post_type;
    
    
    IF EXISTS (SELECT 1 FROM user_post WHERE user_idx = p_userIdx AND char_idx IN (0, p_charIdx) AND post_read = 0 and expire_date > v_expireDate AND post_type = 1) THEN
		SET new_post_reward = 1;
    END IF;
    IF EXISTS (SELECT 1 FROM user_post WHERE user_idx = p_userIdx AND char_idx IN (0, p_charIdx) AND post_read = 0 and expire_date > v_expireDate AND post_type = 2) THEN
		SET new_post_paid = 1;
    END IF;
    IF EXISTS (SELECT 1 FROM user_post WHERE user_idx = p_userIdx AND char_idx IN (0, p_charIdx) AND post_read = 0 and expire_date > v_expireDate AND post_type = 3) THEN
		SET new_post_mail = 1;
    END IF;
	
    -- 
    SELECT COUNT(1) INTO post_send_count FROM user_post WHERE send_idx = p_charIdx AND reg_date > v_DLRT;
    
    SELECT new_post_reward, new_post_paid, new_post_mail, post_send_count;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_select_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_select_reward`(
	IN	_useridx 	BIGINT
,	IN	_postidx 	BIGINT
)
    COMMENT '우편 정보 읽기.'
BEGIN	
	DECLARE result INT DEFAULT 0;
	
	SELECT item_type, item_id, item_value, char_idx, UNIX_TIMESTAMP(expire_date) AS expire_date, UNIX_TIMESTAMP(reg_date) AS reg_date, post_type FROM user_post WHERE post_idx = _postidx;
	
	IF FOUND_ROWS() = 0 THEN 
		SET result = 6052;
	END IF;
	
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_select_reward_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_select_reward_all`(
	IN	_useridx 	BIGINT
,	IN	_charidx 	BIGINT
,	IN	_posttype 	TINYINT
)
    COMMENT '우편 보상함 전체 보상 정보 읽기.'
BEGIN	

	IF 4 = _posttype THEN -- PBT_CABINET = 4,		// 보관함(서버 내 전체) PBT_CHAR_CABINET = 5,		// 보관함(캐릭터)	
    BEGIN
		SELECT post_idx, item_type, item_id, item_value, UNIX_TIMESTAMP(expire_date) AS expire_date, UNIX_TIMESTAMP(reg_date) AS reg_date, post_type
		FROM user_post 
		WHERE user_idx = _useridx AND post_type = _posttype AND expire_date > NOW();
    END;
    ELSE
    BEGIN
		SELECT post_idx, item_type, item_id, item_value, UNIX_TIMESTAMP(expire_date) AS expire_date, UNIX_TIMESTAMP(reg_date) AS reg_date, post_type
		FROM user_post 
		WHERE user_idx = _useridx AND char_idx IN (0, _charidx) AND post_type = _posttype AND expire_date > NOW();
	END;
    END IF;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_update_read_casha` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_update_read_casha`(
	IN	p_UserID		BIGINT		
,	IN	p_PostID		BIGINT		
,	IN	p_CharIdx		BIGINT	
,	IN  p_CashAType		INT 	
, 	IN  p_CashAWealthID	INT 	
)
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE v_nowDate		DATETIME;	
    DECLARE v_notRead		SMALLINT DEFAULT 0;	
    
    DECLARE v_message		VARCHAR(400) DEFAULT '';
    DECLARE v_item_type		INT DEFAULT 0;
    DECLARE v_item_id		INT DEFAULT 0;
    DECLARE v_recv_CashA	INT DEFAULT 0;
	DECLARE v_final_CashA 	BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		
		SELECT v_result, v_notRead, v_message, v_recv_CashA, v_final_CashA; 
	END;  
    
    SET v_nowDate := NOW();

	
	SELECT message, item_type, item_id, item_value INTO v_message, v_item_type, v_item_id, v_recv_CashA
	FROM user_post 
    WHERE post_idx = p_PostID
    AND user_idx = p_UserID
	AND char_idx IN (0, p_CharIdx);
    
    IF found_rows() = 0 THEN
        SET v_result = 101;		
    ELSE		
    
		START TRANSACTION;
        
		root:
		BEGIN    
		
			
			IF 0 < v_recv_CashA AND v_item_id = p_CashAWealthID AND p_CashAType = v_item_type THEN
            BEGIN
				CALL sp_mmo_notrans_userinfo_insert_cashA(p_UserID, v_recv_CashA, v_final_CashA, v_result);
				IF v_result != 0 THEN 
					LEAVE root;
				END IF;                 
				
				UPDATE user_post
				SET post_read = 1, item_type = 0, item_id = 0, item_value = 0
				WHERE user_idx = p_UserID AND post_idx = p_PostID;
                
                IF ROW_COUNT() = 0 THEN
					SET v_result = 102;	
					LEAVE root;
                END IF;
			END;
			ELSE
				UPDATE user_post
				SET post_read = 1
				WHERE user_idx = p_UserID AND post_idx = p_PostID;        
                
                IF ROW_COUNT() = 0 THEN
					SET v_result = 103;	
					LEAVE root;
                END IF;
			END IF;
		END;
        
		IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;
        
    END IF;
	
	-- IF EXISTS( SELECT * FROM user_post WHERE user_idx = p_UserID AND char_idx IN(0, p_CharIdx) AND expire_date >= v_nowDate AND post_read = 0 ) THEN
	-- BEGIN
	-- 	SET v_notRead := 1;
	-- END;
	-- END IF;    
	SELECT BIT_OR(post_type) INTO v_notRead FROM user_post WHERE user_idx = p_UserID AND char_idx IN(0, p_CharIdx) AND expire_date >= v_nowDate AND post_read = 0;

	SELECT v_result, v_notRead, v_message, v_recv_CashA, v_final_CashA;    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userpost_various_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userpost_various_insert`(
	IN	p_postType			TINYINT			-- enum ePostBoxType : uint8_t 
,	IN	p_postTextIdx		TINYINT			
,	IN	p_messgae			VARCHAR(400)	
,	IN	p_expireDay			INT

-- ,	IN 	p_mailLimit			SMALLINT		

,	IN	p_userIdx_01			BIGINT
,	IN	p_RecvcharIdx_01		BIGINT
,	IN	p_itemType_01		TINYINT
,	IN	p_itemId_01			INT
,	IN	p_itemValue_01		INT

,	IN	p_userIdx_02			BIGINT
,	IN	p_RecvcharIdx_02		BIGINT
,	IN	p_itemType_02		TINYINT
,	IN	p_itemId_02			INT
,	IN	p_itemValue_02		INT

,	IN	p_userIdx_03			BIGINT
,	IN	p_RecvcharIdx_03		BIGINT
,	IN	p_itemType_03		TINYINT
,	IN	p_itemId_03			INT
,	IN	p_itemValue_03		INT

,	IN	p_userIdx_04			BIGINT
,	IN	p_RecvcharIdx_04		BIGINT
,	IN	p_itemType_04		TINYINT
,	IN	p_itemId_04			INT
,	IN	p_itemValue_04		INT

,	IN	p_userIdx_05			BIGINT
,	IN	p_RecvcharIdx_05		BIGINT
,	IN	p_itemType_05		TINYINT
,	IN	p_itemId_05			INT
,	IN	p_itemValue_05		INT

,	IN	p_userIdx_06			BIGINT
,	IN	p_RecvcharIdx_06		BIGINT
,	IN	p_itemType_06		TINYINT
,	IN	p_itemId_06			INT
,	IN	p_itemValue_06		INT

,	IN	p_userIdx_07			BIGINT
,	IN	p_RecvcharIdx_07		BIGINT
,	IN	p_itemType_07		TINYINT
,	IN	p_itemId_07			INT
,	IN	p_itemValue_07		INT

,	IN	p_userIdx_08			BIGINT
,	IN	p_RecvcharIdx_08		BIGINT
,	IN	p_itemType_08		TINYINT
,	IN	p_itemId_08			INT
,	IN	p_itemValue_08		INT

,	IN	p_userIdx_09			BIGINT
,	IN	p_RecvcharIdx_09		BIGINT
,	IN	p_itemType_09		TINYINT
,	IN	p_itemId_09			INT
,	IN	p_itemValue_09		INT

,	IN	p_userIdx_10			BIGINT
,	IN	p_RecvcharIdx_10		BIGINT
,	IN	p_itemType_10		TINYINT
,	IN	p_itemId_10			INT
,	IN	p_itemValue_10		INT

,	IN	p_userIdx_11			BIGINT
,	IN	p_RecvcharIdx_11		BIGINT
,	IN	p_itemType_11		TINYINT
,	IN	p_itemId_11			INT
,	IN	p_itemValue_11		INT

,	IN	p_userIdx_12			BIGINT
,	IN	p_RecvcharIdx_12		BIGINT
,	IN	p_itemType_12		TINYINT
,	IN	p_itemId_12			INT
,	IN	p_itemValue_12		INT

,	IN	p_userIdx_13			BIGINT
,	IN	p_RecvcharIdx_13		BIGINT
,	IN	p_itemType_13		TINYINT
,	IN	p_itemId_13			INT
,	IN	p_itemValue_13		INT

,	IN	p_userIdx_14			BIGINT
,	IN	p_RecvcharIdx_14		BIGINT
,	IN	p_itemType_14		TINYINT
,	IN	p_itemId_14			INT
,	IN	p_itemValue_14		INT

,	IN	p_userIdx_15			BIGINT
,	IN	p_RecvcharIdx_15		BIGINT
,	IN	p_itemType_15		TINYINT
,	IN	p_itemId_15			INT
,	IN	p_itemValue_15		INT

,	IN	p_userIdx_16			BIGINT
,	IN	p_RecvcharIdx_16		BIGINT
,	IN	p_itemType_16		TINYINT
,	IN	p_itemId_16			INT
,	IN	p_itemValue_16		INT

,	IN	p_userIdx_17			BIGINT
,	IN	p_RecvcharIdx_17		BIGINT
,	IN	p_itemType_17		TINYINT
,	IN	p_itemId_17			INT
,	IN	p_itemValue_17		INT

,	IN	p_userIdx_18			BIGINT
,	IN	p_RecvcharIdx_18		BIGINT
,	IN	p_itemType_18		TINYINT
,	IN	p_itemId_18			INT
,	IN	p_itemValue_18		INT

,	IN	p_userIdx_19			BIGINT
,	IN	p_RecvcharIdx_19		BIGINT
,	IN	p_itemType_19		TINYINT
,	IN	p_itemId_19			INT
,	IN	p_itemValue_19		INT

,	IN	p_userIdx_20			BIGINT
,	IN	p_RecvcharIdx_20		BIGINT
,	IN	p_itemType_20		TINYINT
,	IN	p_itemId_20			INT
,	IN	p_itemValue_20		INT

,	IN	p_userIdx_21			BIGINT
,	IN	p_RecvcharIdx_21		BIGINT
,	IN	p_itemType_21		TINYINT
,	IN	p_itemId_21			INT
,	IN	p_itemValue_21		INT

,	IN	p_userIdx_22			BIGINT
,	IN	p_RecvcharIdx_22		BIGINT
,	IN	p_itemType_22		TINYINT
,	IN	p_itemId_22			INT
,	IN	p_itemValue_22		INT

,	IN	p_userIdx_23			BIGINT
,	IN	p_RecvcharIdx_23		BIGINT
,	IN	p_itemType_23		TINYINT
,	IN	p_itemId_23			INT
,	IN	p_itemValue_23		INT

,	IN	p_userIdx_24			BIGINT
,	IN	p_RecvcharIdx_24		BIGINT
,	IN	p_itemType_24		TINYINT
,	IN	p_itemId_24			INT
,	IN	p_itemValue_24		INT

,	IN	p_userIdx_25			BIGINT
,	IN	p_RecvcharIdx_25		BIGINT
,	IN	p_itemType_25		TINYINT
,	IN	p_itemId_25			INT
,	IN	p_itemValue_25		INT

,	IN	p_userIdx_26			BIGINT
,	IN	p_RecvcharIdx_26		BIGINT
,	IN	p_itemType_26		TINYINT
,	IN	p_itemId_26			INT
,	IN	p_itemValue_26		INT

,	IN	p_userIdx_27			BIGINT
,	IN	p_RecvcharIdx_27		BIGINT
,	IN	p_itemType_27		TINYINT
,	IN	p_itemId_27			INT
,	IN	p_itemValue_27		INT

,	IN	p_userIdx_28			BIGINT
,	IN	p_RecvcharIdx_28		BIGINT
,	IN	p_itemType_28		TINYINT
,	IN	p_itemId_28			INT
,	IN	p_itemValue_28		INT

,	IN	p_userIdx_29			BIGINT
,	IN	p_RecvcharIdx_29		BIGINT
,	IN	p_itemType_29		TINYINT
,	IN	p_itemId_29			INT
,	IN	p_itemValue_29		INT

,	IN	p_userIdx_30			BIGINT
,	IN	p_RecvcharIdx_30		BIGINT
,	IN	p_itemType_30		TINYINT
,	IN	p_itemId_30			INT
,	IN	p_itemValue_30		INT

,	IN	p_userIdx_31			BIGINT
,	IN	p_RecvcharIdx_31		BIGINT
,	IN	p_itemType_31		TINYINT
,	IN	p_itemId_31			INT
,	IN	p_itemValue_31		INT

,	IN	p_userIdx_32			BIGINT
,	IN	p_RecvcharIdx_32		BIGINT
,	IN	p_itemType_32		TINYINT
,	IN	p_itemId_32			INT
,	IN	p_itemValue_32		INT

,	IN	p_userIdx_33			BIGINT
,	IN	p_RecvcharIdx_33		BIGINT
,	IN	p_itemType_33		TINYINT
,	IN	p_itemId_33			INT
,	IN	p_itemValue_33		INT

,	IN	p_userIdx_34			BIGINT
,	IN	p_RecvcharIdx_34		BIGINT
,	IN	p_itemType_34		TINYINT
,	IN	p_itemId_34			INT
,	IN	p_itemValue_34		INT

,	IN	p_userIdx_35			BIGINT
,	IN	p_RecvcharIdx_35		BIGINT
,	IN	p_itemType_35		TINYINT
,	IN	p_itemId_35			INT
,	IN	p_itemValue_35		INT

,	IN	p_userIdx_36			BIGINT
,	IN	p_RecvcharIdx_36		BIGINT
,	IN	p_itemType_36		TINYINT
,	IN	p_itemId_36			INT
,	IN	p_itemValue_36		INT

,	IN	p_userIdx_37			BIGINT
,	IN	p_RecvcharIdx_37		BIGINT
,	IN	p_itemType_37		TINYINT
,	IN	p_itemId_37			INT
,	IN	p_itemValue_37		INT

,	IN	p_userIdx_38			BIGINT
,	IN	p_RecvcharIdx_38		BIGINT
,	IN	p_itemType_38		TINYINT
,	IN	p_itemId_38			INT
,	IN	p_itemValue_38		INT

,	IN	p_userIdx_39			BIGINT
,	IN	p_RecvcharIdx_39		BIGINT
,	IN	p_itemType_39		TINYINT
,	IN	p_itemId_39			INT
,	IN	p_itemValue_39		INT

,	IN	p_userIdx_40			BIGINT
,	IN	p_RecvcharIdx_40		BIGINT
,	IN	p_itemType_40		TINYINT
,	IN	p_itemId_40			INT
,	IN	p_itemValue_40		int

,	IN	p_userIdx_41			BIGINT
,	IN	p_RecvcharIdx_41		BIGINT
,	IN	p_itemType_41		TINYINT
,	IN	p_itemId_41			INT
,	IN	p_itemValue_41		INT

,	IN	p_userIdx_42			BIGINT
,	IN	p_RecvcharIdx_42		BIGINT
,	IN	p_itemType_42		TINYINT
,	IN	p_itemId_42			INT
,	IN	p_itemValue_42		INT

,	IN	p_userIdx_43			BIGINT
,	IN	p_RecvcharIdx_43		BIGINT
,	IN	p_itemType_43		TINYINT
,	IN	p_itemId_43			INT
,	IN	p_itemValue_43		INT

,	IN	p_userIdx_44			BIGINT
,	IN	p_RecvcharIdx_44		BIGINT
,	IN	p_itemType_44		TINYINT
,	IN	p_itemId_44			INT
,	IN	p_itemValue_44		INT

,	IN	p_userIdx_45			BIGINT
,	IN	p_RecvcharIdx_45		BIGINT
,	IN	p_itemType_45		TINYINT
,	IN	p_itemId_45			INT
,	IN	p_itemValue_45		INT

,	IN	p_userIdx_46			BIGINT
,	IN	p_RecvcharIdx_46		BIGINT
,	IN	p_itemType_46		TINYINT
,	IN	p_itemId_46			INT
,	IN	p_itemValue_46		INT

,	IN	p_userIdx_47			BIGINT
,	IN	p_RecvcharIdx_47		BIGINT
,	IN	p_itemType_47		TINYINT
,	IN	p_itemId_47			INT
,	IN	p_itemValue_47		INT

,	IN	p_userIdx_48			BIGINT
,	IN	p_RecvcharIdx_48		BIGINT
,	IN	p_itemType_48		TINYINT
,	IN	p_itemId_48			INT
,	IN	p_itemValue_48		INT

,	IN	p_userIdx_49			BIGINT
,	IN	p_RecvcharIdx_49		BIGINT
,	IN	p_itemType_49		TINYINT
,	IN	p_itemId_49			INT
,	IN	p_itemValue_49		INT

,	IN	p_userIdx_50			BIGINT
,	IN	p_RecvcharIdx_50		BIGINT
,	IN	p_itemType_50		TINYINT
,	IN	p_itemId_50			INT
,	IN	p_itemValue_50		INT
)
BEGIN

    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
    
	-- DECLARE v_postIdx				BIGINT DEFAULT 0;
    -- DECLARE v_mailQty				SMALLINT DEFAULT 0;
       
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result;
	END;        

	START TRANSACTION;
    
	root:
	BEGIN
		
        --
        IF 0 < p_userIdx_01 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_01, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_01 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_01, p_itemId_01, p_itemValue_01);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8601;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_02 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_02, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_02 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_02, p_itemId_02, p_itemValue_02);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8602;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_03 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_03, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_03 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_03, p_itemId_03, p_itemValue_03);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8603;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_04 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_04, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_04 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_04, p_itemId_04, p_itemValue_04);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8604;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_05 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_05, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_05 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_05, p_itemId_05, p_itemValue_05);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8605;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_06 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_06, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_06 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_06, p_itemId_06, p_itemValue_06);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8606;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_07 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_07, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_07 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_07, p_itemId_07, p_itemValue_07);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8607;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_08 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_08, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_08 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_08, p_itemId_08, p_itemValue_08);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8608;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_09 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_09, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_09 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_09, p_itemId_09, p_itemValue_09);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8609;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_10 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_10, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_10 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_10, p_itemId_10, p_itemValue_10);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8610;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_11 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_11, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_11 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_11, p_itemId_11, p_itemValue_11);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8611;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_12 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_12, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_12 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_12, p_itemId_12, p_itemValue_12);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8612;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_13 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_13, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_13 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_13, p_itemId_13, p_itemValue_13);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8613;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_14 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_14, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_14 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_14, p_itemId_14, p_itemValue_14);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8614;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_15 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_15, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_15 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_15, p_itemId_15, p_itemValue_15);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8615;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_16 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_16, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_16 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_16, p_itemId_16, p_itemValue_16);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8616;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_17 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_17, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_17 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_17, p_itemId_17, p_itemValue_17);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8617;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_18 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_18, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_18 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_18, p_itemId_18, p_itemValue_18);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8618;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_19 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_19, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_19 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_19, p_itemId_19, p_itemValue_19);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8619;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_20 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_20, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_20 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_20, p_itemId_20, p_itemValue_20);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8620;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_21 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_21, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_21 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_21, p_itemId_21, p_itemValue_21);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8621;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_22 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_22, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_22 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_22, p_itemId_22, p_itemValue_22);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8622;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_23 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_23, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_23 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_23, p_itemId_23, p_itemValue_23);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8623;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_24 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_24, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_24 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_24, p_itemId_24, p_itemValue_24);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8624;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_25 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_25, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_25 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_25, p_itemId_25, p_itemValue_25);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8625;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_26 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_26, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_26 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_26, p_itemId_26, p_itemValue_26);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8626;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_27 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_27, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_27 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_27, p_itemId_27, p_itemValue_27);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8627;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_28 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_28, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_28 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_28, p_itemId_28, p_itemValue_28);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8628;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_29 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_29, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_29 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_29, p_itemId_29, p_itemValue_29);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8629;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_30 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_30, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_30 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_30, p_itemId_30, p_itemValue_30);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8630;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_31 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_31, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_31 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_31, p_itemId_31, p_itemValue_31);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8631;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_32 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_32, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_32 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_32, p_itemId_32, p_itemValue_32);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8632;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_33 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_33, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_33 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_33, p_itemId_33, p_itemValue_33);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8633;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_34 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_34, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_34 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_34, p_itemId_34, p_itemValue_34);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8634;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_35 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_35, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_35 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_35, p_itemId_35, p_itemValue_35);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8635;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_36 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_36, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_36 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_36, p_itemId_36, p_itemValue_36);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8636;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_37 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_37, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_37 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_37, p_itemId_37, p_itemValue_37);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8637;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_38 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_38, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_38 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_38, p_itemId_38, p_itemValue_38);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8638;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_39 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_39, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_39 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_39, p_itemId_39, p_itemValue_39);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8639;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_40 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_40, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_40 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_40, p_itemId_40, p_itemValue_40);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8640;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_41 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_41, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_41 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_41, p_itemId_41, p_itemValue_41);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8641;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_42 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_42, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_42 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_42, p_itemId_42, p_itemValue_42);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8642;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_43 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_43, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_43 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_43, p_itemId_43, p_itemValue_43);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8643;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_44 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_44, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_44 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_44, p_itemId_44, p_itemValue_44);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8644;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_45 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_45, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_45 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_45, p_itemId_45, p_itemValue_45);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8645;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_46 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_46, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_46 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_46, p_itemId_46, p_itemValue_46);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8646;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_47 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_47, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_47 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_47, p_itemId_47, p_itemValue_47);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8647;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_48 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_48, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_48 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_48, p_itemId_48, p_itemValue_48);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8648;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_49 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_49, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_49 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_49, p_itemId_49, p_itemValue_49);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8649;		
            LEAVE root;
		END IF;
        
        IF 0 < p_userIdx_50 THEN
			INSERT INTO user_post (user_idx, char_idx, send_idx, sender_nick, sender_gamedb_idx, guild_idx, guild_name, guild_mark_id, post_type, post_text_idx, title_msg, message, expire_date, item_type, item_id, item_value)
				VALUES (p_userIdx_50, CASE WHEN 16 = p_postType THEN p_RecvcharIdx_50 ELSE 0 END, 0, 'rewardPost', 1, 0, '', 0, p_postType, p_postTextIdx, '', p_messgae, DATE_ADD(NOW(), INTERVAL p_expireDay DAY), p_itemType_50, p_itemId_50, p_itemValue_50);
		END IF;
		
		IF ROW_COUNT() <> 1 THEN
			SET v_result = 8650;		
            LEAVE root;
		END IF;

		-- SET v_postIdx := LAST_INSERT_ID();  

	END;
		
	
	IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
	
    
	SELECT v_result; -- , v_postIdx;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userraidexp_delete_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userraidexp_delete_all`(
)
BEGIN

	TRUNCATE TABLE user_raid_exp;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usertitlecondition_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usertitlecondition_update`( 
	IN _userid 		BIGINT

,	IN _titleid1	INT,	IN _num1	TINYINT,	IN _value1		INT   
,	IN _titleid2	INT,	IN _num2	TINYINT,	IN _value2		INT   
,	IN _titleid3	INT,	IN _num3	TINYINT,	IN _value3		INT   
,	IN _titleid4	INT,	IN _num4	TINYINT,	IN _value4		INT   
,	IN _titleid5	INT,	IN _num5	TINYINT,	IN _value5		INT   
,	IN _titleid6	INT,	IN _num6	TINYINT,	IN _value6		INT   
,	IN _titleid7	INT,	IN _num7	TINYINT,	IN _value7		INT   
,	IN _titleid8	INT,	IN _num8	TINYINT,	IN _value8		INT   
,	IN _titleid9	INT,	IN _num9	TINYINT,	IN _value9		INT   
,	IN _titleid10	INT,	IN _num10	TINYINT,	IN _value10		INT   
)
    COMMENT '칭호 조건 정보수정. '
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
        IF _titleid1 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid1, _num1, _value1)
            ON DUPLICATE KEY UPDATE condition_value = _value1;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1001;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid2 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid2, _num2, _value2)
            ON DUPLICATE KEY UPDATE condition_value = _value2;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1002;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid3 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid3, _num3, _value3)
            ON DUPLICATE KEY UPDATE condition_value = _value3;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1003;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid4 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid1, _num4, _value4)
            ON DUPLICATE KEY UPDATE condition_value = _value4;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1004;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid5 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid5, _num5, _value5)
            ON DUPLICATE KEY UPDATE condition_value = _value5;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1005;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid6 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid6, _num6, _value6)
            ON DUPLICATE KEY UPDATE condition_value = _value6;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1006;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid7 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid7, _num7, _value7)
            ON DUPLICATE KEY UPDATE condition_value = _value7;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1007;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid8 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid8, _num8, _value8)
            ON DUPLICATE KEY UPDATE condition_value = _value8;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1008;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid9 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid9, _num9, _value9)
            ON DUPLICATE KEY UPDATE condition_value = _value9;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1009;
                LEAVE root;
            END IF;
        END IF;
        
        IF _titleid10 > 0 THEN 
			INSERT INTO user_title_condition(user_idx, title_id, condition_num, condition_value) 
            VALUE (_userid, _titleid10, _num10, _value10)
            ON DUPLICATE KEY UPDATE condition_value = _value10;
			
            IF ROW_COUNT() <= 0 THEN 
				SET result = 1010;
                LEAVE root;
            END IF;
        END IF;
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usertitle_collect_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usertitle_collect_reward`(
	IN	_userid 			BIGINT		
,	IN	_charid 			BIGINT		

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT

,	IN  id_array 			VARCHAR(4096)

-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
, 	IN _enchantLevel1	INT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
, 	IN _enchantLevel2	INT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
, 	IN _enchantLevel3	INT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
, 	IN _enchantLevel4	INT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
, 	IN _enchantLevel5	INT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
, 	IN _enchantLevel6	INT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
, 	IN _enchantLevel7	INT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
, 	IN _enchantLevel8	INT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
, 	IN _enchantLevel9	INT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
, 	IN _enchantLevel10	INT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT

,   IN _itemId11 	INT,		IN _quality11	INT,	IN _equipType11	INT
,	IN _attrId11	INT,		IN _attrValue11	INT,	IN _belong11	TINYINT,	IN _identified11		TINYINT
, 	IN _enchantLevel11	INT
,	IN _slotId1_11	TINYINT,	IN _optId1_11	INT,	IN _optValue1_11	SMALLINT
,	IN _slotId2_11	TINYINT,	IN _optId2_11	INT,	IN _optValue2_11	SMALLINT
,	IN _slotId3_11	TINYINT,	IN _optId3_11	INT,	IN _optValue3_11	SMALLINT
,	IN _slotId4_11	TINYINT,	IN _optId4_11	INT,	IN _optValue4_11	SMALLINT
,	IN _slotId5_11	TINYINT,	IN _optId5_11	INT,	IN _optValue5_11	SMALLINT
,	IN _slotId6_11	TINYINT,	IN _optId6_11	INT,	IN _optValue6_11	SMALLINT
,	IN _slotId7_11	TINYINT,	IN _optId7_11	INT,	IN _optValue7_11	SMALLINT

,   IN _itemId12 	INT,		IN _quality12	INT,	IN _equipType12	INT
,	IN _attrId12	INT,		IN _attrValue12	INT,	IN _belong12	TINYINT,	IN _identified12		TINYINT
, 	IN _enchantLevel12	INT
,	IN _slotId1_12	TINYINT,	IN _optId1_12	INT,	IN _optValue1_12	SMALLINT
,	IN _slotId2_12	TINYINT,	IN _optId2_12	INT,	IN _optValue2_12	SMALLINT
,	IN _slotId3_12	TINYINT,	IN _optId3_12	INT,	IN _optValue3_12	SMALLINT
,	IN _slotId4_12	TINYINT,	IN _optId4_12	INT,	IN _optValue4_12	SMALLINT
,	IN _slotId5_12	TINYINT,	IN _optId5_12	INT,	IN _optValue5_12	SMALLINT
,	IN _slotId6_12	TINYINT,	IN _optId6_12	INT,	IN _optValue6_12	SMALLINT
,	IN _slotId7_12	TINYINT,	IN _optId7_12	INT,	IN _optValue7_12	SMALLINT

,   IN _itemId13 	INT,		IN _quality13	INT,	IN _equipType13	INT
,	IN _attrId13	INT,		IN _attrValue13	INT,	IN _belong13	TINYINT,	IN _identified13		TINYINT
, 	IN _enchantLevel13	INT
,	IN _slotId1_13	TINYINT,	IN _optId1_13	INT,	IN _optValue1_13	SMALLINT
,	IN _slotId2_13	TINYINT,	IN _optId2_13	INT,	IN _optValue2_13	SMALLINT
,	IN _slotId3_13	TINYINT,	IN _optId3_13	INT,	IN _optValue3_13	SMALLINT
,	IN _slotId4_13	TINYINT,	IN _optId4_13	INT,	IN _optValue4_13	SMALLINT
,	IN _slotId5_13	TINYINT,	IN _optId5_13	INT,	IN _optValue5_13	SMALLINT
,	IN _slotId6_13	TINYINT,	IN _optId6_13	INT,	IN _optValue6_13	SMALLINT
,	IN _slotId7_13	TINYINT,	IN _optId7_13	INT,	IN _optValue7_13	SMALLINT

,   IN _itemId14 	INT,		IN _quality14	INT,	IN _equipType14	INT
,	IN _attrId14		INT,	IN _attrValue14	INT,	IN _belong14	TINYINT,	IN _identified14		TINYINT
, 	IN _enchantLevel14	INT
,	IN _slotId1_14	TINYINT,	IN _optId1_14	INT,	IN _optValue1_14	SMALLINT
,	IN _slotId2_14	TINYINT,	IN _optId2_14	INT,	IN _optValue2_14	SMALLINT
,	IN _slotId3_14	TINYINT,	IN _optId3_14	INT,	IN _optValue3_14	SMALLINT
,	IN _slotId4_14	TINYINT,	IN _optId4_14	INT,	IN _optValue4_14	SMALLINT
,	IN _slotId5_14	TINYINT,	IN _optId5_14	INT,	IN _optValue5_14	SMALLINT
,	IN _slotId6_14	TINYINT,	IN _optId6_14	INT,	IN _optValue6_14	SMALLINT
,	IN _slotId7_14	TINYINT,	IN _optId7_14	INT,	IN _optValue7_14	SMALLINT

,   IN _itemId15 	INT,		IN _quality15	INT,	IN _equipType15	INT
,	IN _attrId15	INT,		IN _attrValue15	INT,	IN _belong15	TINYINT,	IN _identified15		TINYINT
, 	IN _enchantLevel15	INT
,	IN _slotId1_15	TINYINT,	IN _optId1_15	INT,	IN _optValue1_15	SMALLINT
,	IN _slotId2_15	TINYINT,	IN _optId2_15	INT,	IN _optValue2_15	SMALLINT
,	IN _slotId3_15	TINYINT,	IN _optId3_15	INT,	IN _optValue3_15	SMALLINT
,	IN _slotId4_15	TINYINT,	IN _optId4_15	INT,	IN _optValue4_15	SMALLINT
,	IN _slotId5_15	TINYINT,	IN _optId5_15	INT,	IN _optValue5_15	SMALLINT
,	IN _slotId6_15	TINYINT,	IN _optId6_15	INT,	IN _optValue6_15	SMALLINT
,	IN _slotId7_15	TINYINT,	IN _optId7_15	INT,	IN _optValue7_15	SMALLINT

,   IN _itemId16 	INT,		IN _quality16	INT,	IN _equipType16	INT
,	IN _attrId16	INT,		IN _attrValue16	INT,	IN _belong16	TINYINT,	IN _identified16		TINYINT
, 	IN _enchantLevel16	INT
,	IN _slotId1_16	TINYINT,	IN _optId1_16	INT,	IN _optValue1_16	SMALLINT
,	IN _slotId2_16	TINYINT,	IN _optId2_16	INT,	IN _optValue2_16	SMALLINT
,	IN _slotId3_16	TINYINT,	IN _optId3_16	INT,	IN _optValue3_16	SMALLINT
,	IN _slotId4_16	TINYINT,	IN _optId4_16	INT,	IN _optValue4_16	SMALLINT
,	IN _slotId5_16	TINYINT,	IN _optId5_16	INT,	IN _optValue5_16	SMALLINT
,	IN _slotId6_16	TINYINT,	IN _optId6_16	INT,	IN _optValue6_16	SMALLINT
,	IN _slotId7_16	TINYINT,	IN _optId7_16	INT,	IN _optValue7_16	SMALLINT

,   IN _itemId17 	INT,		IN _quality17	INT,	IN _equipType17	INT
,	IN _attrId17	INT,		IN _attrValue17	INT,	IN _belong17	TINYINT,	IN _identified17		TINYINT
, 	IN _enchantLevel17	INT
,	IN _slotId1_17	TINYINT,	IN _optId1_17	INT,	IN _optValue1_17	SMALLINT
,	IN _slotId2_17	TINYINT,	IN _optId2_17	INT,	IN _optValue2_17	SMALLINT
,	IN _slotId3_17	TINYINT,	IN _optId3_17	INT,	IN _optValue3_17	SMALLINT
,	IN _slotId4_17	TINYINT,	IN _optId4_17	INT,	IN _optValue4_17	SMALLINT
,	IN _slotId5_17	TINYINT,	IN _optId5_17	INT,	IN _optValue5_17	SMALLINT
,	IN _slotId6_17	TINYINT,	IN _optId6_17	INT,	IN _optValue6_17	SMALLINT
,	IN _slotId7_17	TINYINT,	IN _optId7_17	INT,	IN _optValue7_17	SMALLINT

,   IN _itemId18 	INT,		IN _quality18	INT,	IN _equipType18	INT
,	IN _attrId18	INT,		IN _attrValue18	INT,	IN _belong18	TINYINT,	IN _identified18		TINYINT
, 	IN _enchantLevel18	INT
,	IN _slotId1_18	TINYINT,	IN _optId1_18	INT,	IN _optValue1_18	SMALLINT
,	IN _slotId2_18	TINYINT,	IN _optId2_18	INT,	IN _optValue2_18	SMALLINT
,	IN _slotId3_18	TINYINT,	IN _optId3_18	INT,	IN _optValue3_18	SMALLINT
,	IN _slotId4_18	TINYINT,	IN _optId4_18	INT,	IN _optValue4_18	SMALLINT
,	IN _slotId5_18	TINYINT,	IN _optId5_18	INT,	IN _optValue5_18	SMALLINT
,	IN _slotId6_18	TINYINT,	IN _optId6_18	INT,	IN _optValue6_18	SMALLINT
,	IN _slotId7_18	TINYINT,	IN _optId7_18	INT,	IN _optValue7_18	SMALLINT

,   IN _itemId19 	INT,		IN _quality19	INT,	IN _equipType19	INT
,	IN _attrId19		INT,	IN _attrValue19	INT,	IN _belong19	TINYINT,	IN _identified19		TINYINT
, 	IN _enchantLevel19	INT
,	IN _slotId1_19	TINYINT,	IN _optId1_19	INT,	IN _optValue1_19	SMALLINT
,	IN _slotId2_19	TINYINT,	IN _optId2_19	INT,	IN _optValue2_19	SMALLINT
,	IN _slotId3_19	TINYINT,	IN _optId3_19	INT,	IN _optValue3_19	SMALLINT
,	IN _slotId4_19	TINYINT,	IN _optId4_19	INT,	IN _optValue4_19	SMALLINT
,	IN _slotId5_19	TINYINT,	IN _optId5_19	INT,	IN _optValue5_19	SMALLINT
,	IN _slotId6_19	TINYINT,	IN _optId6_19	INT,	IN _optValue6_19	SMALLINT
,	IN _slotId7_19	TINYINT,	IN _optId7_19	INT,	IN _optValue7_19	SMALLINT

,   IN _itemId20 	INT,		IN _quality20	INT,	IN _equipType20	INT
,	IN _attrId20	INT,		IN _attrValue20	INT,	IN _belong20	TINYINT,	IN _identified20		TINYINT
, 	IN _enchantLevel20	INT
,	IN _slotId1_20	TINYINT,	IN _optId1_20	INT,	IN _optValue1_20	SMALLINT
,	IN _slotId2_20	TINYINT,	IN _optId2_20	INT,	IN _optValue2_20	SMALLINT
,	IN _slotId3_20	TINYINT,	IN _optId3_20	INT,	IN _optValue3_20	SMALLINT
,	IN _slotId4_20	TINYINT,	IN _optId4_20	INT,	IN _optValue4_20	SMALLINT
,	IN _slotId5_20	TINYINT,	IN _optId5_20	INT,	IN _optValue5_20	SMALLINT
,	IN _slotId6_20	TINYINT,	IN _optId6_20	INT,	IN _optValue6_20	SMALLINT
,	IN _slotId7_20	TINYINT,	IN _optId7_20	INT,	IN _optValue7_20	SMALLINT

,   IN _itemId21 	INT,		IN _quality21	INT,	IN _equipType21	INT
,	IN _attrId21	INT,		IN _attrValue21	INT,	IN _belong21	TINYINT,	IN _identified21		TINYINT
, 	IN _enchantLevel21	INT
,	IN _slotId1_21	TINYINT,	IN _optId1_21	INT,	IN _optValue1_21	SMALLINT
,	IN _slotId2_21	TINYINT,	IN _optId2_21	INT,	IN _optValue2_21	SMALLINT
,	IN _slotId3_21	TINYINT,	IN _optId3_21	INT,	IN _optValue3_21	SMALLINT
,	IN _slotId4_21	TINYINT,	IN _optId4_21	INT,	IN _optValue4_21	SMALLINT
,	IN _slotId5_21	TINYINT,	IN _optId5_21	INT,	IN _optValue5_21	SMALLINT
,	IN _slotId6_21	TINYINT,	IN _optId6_21	INT,	IN _optValue6_21	SMALLINT
,	IN _slotId7_21	TINYINT,	IN _optId7_21	INT,	IN _optValue7_21	SMALLINT

,   IN _itemId22 	INT,		IN _quality22	INT,	IN _equipType22	INT
,	IN _attrId22	INT,		IN _attrValue22	INT,	IN _belong22	TINYINT,	IN _identified22		TINYINT
, 	IN _enchantLevel22	INT
,	IN _slotId1_22	TINYINT,	IN _optId1_22	INT,	IN _optValue1_22	SMALLINT
,	IN _slotId2_22	TINYINT,	IN _optId2_22	INT,	IN _optValue2_22	SMALLINT
,	IN _slotId3_22	TINYINT,	IN _optId3_22	INT,	IN _optValue3_22	SMALLINT
,	IN _slotId4_22	TINYINT,	IN _optId4_22	INT,	IN _optValue4_22	SMALLINT
,	IN _slotId5_22	TINYINT,	IN _optId5_22	INT,	IN _optValue5_22	SMALLINT
,	IN _slotId6_22	TINYINT,	IN _optId6_22	INT,	IN _optValue6_22	SMALLINT
,	IN _slotId7_22	TINYINT,	IN _optId7_22	INT,	IN _optValue7_22	SMALLINT

,   IN _itemId23 	INT,		IN _quality23	INT,	IN _equipType23	INT
,	IN _attrId23	INT,		IN _attrValue23	INT,	IN _belong23	TINYINT,	IN _identified23		TINYINT
, 	IN _enchantLevel23	INT
,	IN _slotId1_23	TINYINT,	IN _optId1_23	INT,	IN _optValue1_23	SMALLINT
,	IN _slotId2_23	TINYINT,	IN _optId2_23	INT,	IN _optValue2_23	SMALLINT
,	IN _slotId3_23	TINYINT,	IN _optId3_23	INT,	IN _optValue3_23	SMALLINT
,	IN _slotId4_23	TINYINT,	IN _optId4_23	INT,	IN _optValue4_23	SMALLINT
,	IN _slotId5_23	TINYINT,	IN _optId5_23	INT,	IN _optValue5_23	SMALLINT
,	IN _slotId6_23	TINYINT,	IN _optId6_23	INT,	IN _optValue6_23	SMALLINT
,	IN _slotId7_23	TINYINT,	IN _optId7_23	INT,	IN _optValue7_23	SMALLINT

,   IN _itemId24 	INT,		IN _quality24	INT,	IN _equipType24	INT
,	IN _attrId24		INT,	IN _attrValue24	INT,	IN _belong24	TINYINT,	IN _identified24		TINYINT
, 	IN _enchantLevel24	INT
,	IN _slotId1_24	TINYINT,	IN _optId1_24	INT,	IN _optValue1_24	SMALLINT
,	IN _slotId2_24	TINYINT,	IN _optId2_24	INT,	IN _optValue2_24	SMALLINT
,	IN _slotId3_24	TINYINT,	IN _optId3_24	INT,	IN _optValue3_24	SMALLINT
,	IN _slotId4_24	TINYINT,	IN _optId4_24	INT,	IN _optValue4_24	SMALLINT
,	IN _slotId5_24	TINYINT,	IN _optId5_24	INT,	IN _optValue5_24	SMALLINT
,	IN _slotId6_24	TINYINT,	IN _optId6_24	INT,	IN _optValue6_24	SMALLINT
,	IN _slotId7_24	TINYINT,	IN _optId7_24	INT,	IN _optValue7_24	SMALLINT

,   IN _itemId25 	INT,		IN _quality25	INT,	IN _equipType25	INT
,	IN _attrId25	INT,		IN _attrValue25	INT,	IN _belong25	TINYINT,	IN _identified25		TINYINT
, 	IN _enchantLevel25	INT
,	IN _slotId1_25	TINYINT,	IN _optId1_25	INT,	IN _optValue1_25	SMALLINT
,	IN _slotId2_25	TINYINT,	IN _optId2_25	INT,	IN _optValue2_25	SMALLINT
,	IN _slotId3_25	TINYINT,	IN _optId3_25	INT,	IN _optValue3_25	SMALLINT
,	IN _slotId4_25	TINYINT,	IN _optId4_25	INT,	IN _optValue4_25	SMALLINT
,	IN _slotId5_25	TINYINT,	IN _optId5_25	INT,	IN _optValue5_25	SMALLINT
,	IN _slotId6_25	TINYINT,	IN _optId6_25	INT,	IN _optValue6_25	SMALLINT
,	IN _slotId7_25	TINYINT,	IN _optId7_25	INT,	IN _optValue7_25	SMALLINT

,   IN _itemId26 	INT,		IN _quality26	INT,	IN _equipType26	INT
,	IN _attrId26	INT,		IN _attrValue26	INT,	IN _belong26	TINYINT,	IN _identified26		TINYINT
, 	IN _enchantLevel26	INT
,	IN _slotId1_26	TINYINT,	IN _optId1_26	INT,	IN _optValue1_26	SMALLINT
,	IN _slotId2_26	TINYINT,	IN _optId2_26	INT,	IN _optValue2_26	SMALLINT
,	IN _slotId3_26	TINYINT,	IN _optId3_26	INT,	IN _optValue3_26	SMALLINT
,	IN _slotId4_26	TINYINT,	IN _optId4_26	INT,	IN _optValue4_26	SMALLINT
,	IN _slotId5_26	TINYINT,	IN _optId5_26	INT,	IN _optValue5_26	SMALLINT
,	IN _slotId6_26	TINYINT,	IN _optId6_26	INT,	IN _optValue6_26	SMALLINT
,	IN _slotId7_26	TINYINT,	IN _optId7_26	INT,	IN _optValue7_26	SMALLINT

,   IN _itemId27 	INT,		IN _quality27	INT,	IN _equipType27	INT
,	IN _attrId27	INT,		IN _attrValue27	INT,	IN _belong27	TINYINT,	IN _identified27		TINYINT
, 	IN _enchantLevel27	INT
,	IN _slotId1_27	TINYINT,	IN _optId1_27	INT,	IN _optValue1_27	SMALLINT
,	IN _slotId2_27	TINYINT,	IN _optId2_27	INT,	IN _optValue2_27	SMALLINT
,	IN _slotId3_27	TINYINT,	IN _optId3_27	INT,	IN _optValue3_27	SMALLINT
,	IN _slotId4_27	TINYINT,	IN _optId4_27	INT,	IN _optValue4_27	SMALLINT
,	IN _slotId5_27	TINYINT,	IN _optId5_27	INT,	IN _optValue5_27	SMALLINT
,	IN _slotId6_27	TINYINT,	IN _optId6_27	INT,	IN _optValue6_27	SMALLINT
,	IN _slotId7_27	TINYINT,	IN _optId7_27	INT,	IN _optValue7_27	SMALLINT

,   IN _itemId28 	INT,		IN _quality28	INT,	IN _equipType28	INT
,	IN _attrId28	INT,		IN _attrValue28	INT,	IN _belong28	TINYINT,	IN _identified28		TINYINT
, 	IN _enchantLevel28	INT
,	IN _slotId1_28	TINYINT,	IN _optId1_28	INT,	IN _optValue1_28	SMALLINT
,	IN _slotId2_28	TINYINT,	IN _optId2_28	INT,	IN _optValue2_28	SMALLINT
,	IN _slotId3_28	TINYINT,	IN _optId3_28	INT,	IN _optValue3_28	SMALLINT
,	IN _slotId4_28	TINYINT,	IN _optId4_28	INT,	IN _optValue4_28	SMALLINT
,	IN _slotId5_28	TINYINT,	IN _optId5_28	INT,	IN _optValue5_28	SMALLINT
,	IN _slotId6_28	TINYINT,	IN _optId6_28	INT,	IN _optValue6_28	SMALLINT
,	IN _slotId7_28	TINYINT,	IN _optId7_28	INT,	IN _optValue7_28	SMALLINT

,   IN _itemId29 	INT,		IN _quality29	INT,	IN _equipType29	INT
,	IN _attrId29		INT,	IN _attrValue29	INT,	IN _belong29	TINYINT,	IN _identified29		TINYINT
, 	IN _enchantLevel29	INT
,	IN _slotId1_29	TINYINT,	IN _optId1_29	INT,	IN _optValue1_29	SMALLINT
,	IN _slotId2_29	TINYINT,	IN _optId2_29	INT,	IN _optValue2_29	SMALLINT
,	IN _slotId3_29	TINYINT,	IN _optId3_29	INT,	IN _optValue3_29	SMALLINT
,	IN _slotId4_29	TINYINT,	IN _optId4_29	INT,	IN _optValue4_29	SMALLINT
,	IN _slotId5_29	TINYINT,	IN _optId5_29	INT,	IN _optValue5_29	SMALLINT
,	IN _slotId6_29	TINYINT,	IN _optId6_29	INT,	IN _optValue6_29	SMALLINT
,	IN _slotId7_29	TINYINT,	IN _optId7_29	INT,	IN _optValue7_29	SMALLINT

,   IN _itemId30 	INT,		IN _quality30	INT,	IN _equipType30	INT
,	IN _attrId30	INT,		IN _attrValue30	INT,	IN _belong30	TINYINT,	IN _identified30		TINYINT
, 	IN _enchantLevel30	INT
,	IN _slotId1_30	TINYINT,	IN _optId1_30	INT,	IN _optValue1_30	SMALLINT
,	IN _slotId2_30	TINYINT,	IN _optId2_30	INT,	IN _optValue2_30	SMALLINT
,	IN _slotId3_30	TINYINT,	IN _optId3_30	INT,	IN _optValue3_30	SMALLINT
,	IN _slotId4_30	TINYINT,	IN _optId4_30	INT,	IN _optValue4_30	SMALLINT
,	IN _slotId5_30	TINYINT,	IN _optId5_30	INT,	IN _optValue5_30	SMALLINT
,	IN _slotId6_30	TINYINT,	IN _optId6_30	INT,	IN _optValue6_30	SMALLINT
,	IN _slotId7_30	TINYINT,	IN _optId7_30	INT,	IN _optValue7_30	SMALLINT


,   IN _itemId31 	INT,		IN _quality31	INT,	IN _equipType31	INT
,	IN _attrId31	INT,		IN _attrValue31	INT,	IN _belong31	TINYINT,	IN _identified31		TINYINT
, 	IN _enchantLevel31	INT
,	IN _slotId1_31	TINYINT,	IN _optId1_31	INT,	IN _optValue1_31	SMALLINT
,	IN _slotId2_31	TINYINT,	IN _optId2_31	INT,	IN _optValue2_31	SMALLINT
,	IN _slotId3_31	TINYINT,	IN _optId3_31	INT,	IN _optValue3_31	SMALLINT
,	IN _slotId4_31	TINYINT,	IN _optId4_31	INT,	IN _optValue4_31	SMALLINT
,	IN _slotId5_31	TINYINT,	IN _optId5_31	INT,	IN _optValue5_31	SMALLINT
,	IN _slotId6_31	TINYINT,	IN _optId6_31	INT,	IN _optValue6_31	SMALLINT
,	IN _slotId7_31	TINYINT,	IN _optId7_31	INT,	IN _optValue7_31	SMALLINT

,   IN _itemId32 	INT,		IN _quality32	INT,	IN _equipType32	INT
,	IN _attrId32	INT,		IN _attrValue32	INT,	IN _belong32	TINYINT,	IN _identified32		TINYINT
, 	IN _enchantLevel32	INT
,	IN _slotId1_32	TINYINT,	IN _optId1_32	INT,	IN _optValue1_32	SMALLINT
,	IN _slotId2_32	TINYINT,	IN _optId2_32	INT,	IN _optValue2_32	SMALLINT
,	IN _slotId3_32	TINYINT,	IN _optId3_32	INT,	IN _optValue3_32	SMALLINT
,	IN _slotId4_32	TINYINT,	IN _optId4_32	INT,	IN _optValue4_32	SMALLINT
,	IN _slotId5_32	TINYINT,	IN _optId5_32	INT,	IN _optValue5_32	SMALLINT
,	IN _slotId6_32	TINYINT,	IN _optId6_32	INT,	IN _optValue6_32	SMALLINT
,	IN _slotId7_32	TINYINT,	IN _optId7_32	INT,	IN _optValue7_32	SMALLINT

,   IN _itemId33 	INT,		IN _quality33	INT,	IN _equipType33	INT
,	IN _attrId33	INT,		IN _attrValue33	INT,	IN _belong33	TINYINT,	IN _identified33		TINYINT
, 	IN _enchantLevel33	INT
,	IN _slotId1_33	TINYINT,	IN _optId1_33	INT,	IN _optValue1_33	SMALLINT
,	IN _slotId2_33	TINYINT,	IN _optId2_33	INT,	IN _optValue2_33	SMALLINT
,	IN _slotId3_33	TINYINT,	IN _optId3_33	INT,	IN _optValue3_33	SMALLINT
,	IN _slotId4_33	TINYINT,	IN _optId4_33	INT,	IN _optValue4_33	SMALLINT
,	IN _slotId5_33	TINYINT,	IN _optId5_33	INT,	IN _optValue5_33	SMALLINT
,	IN _slotId6_33	TINYINT,	IN _optId6_33	INT,	IN _optValue6_33	SMALLINT
,	IN _slotId7_33	TINYINT,	IN _optId7_33	INT,	IN _optValue7_33	SMALLINT

,   IN _itemId34 	INT,		IN _quality34	INT,	IN _equipType34	INT
,	IN _attrId34		INT,	IN _attrValue34	INT,	IN _belong34	TINYINT,	IN _identified34		TINYINT
, 	IN _enchantLevel34	INT
,	IN _slotId1_34	TINYINT,	IN _optId1_34	INT,	IN _optValue1_34	SMALLINT
,	IN _slotId2_34	TINYINT,	IN _optId2_34	INT,	IN _optValue2_34	SMALLINT
,	IN _slotId3_34	TINYINT,	IN _optId3_34	INT,	IN _optValue3_34	SMALLINT
,	IN _slotId4_34	TINYINT,	IN _optId4_34	INT,	IN _optValue4_34	SMALLINT
,	IN _slotId5_34	TINYINT,	IN _optId5_34	INT,	IN _optValue5_34	SMALLINT
,	IN _slotId6_34	TINYINT,	IN _optId6_34	INT,	IN _optValue6_34	SMALLINT
,	IN _slotId7_34	TINYINT,	IN _optId7_34	INT,	IN _optValue7_34	SMALLINT

,   IN _itemId35 	INT,		IN _quality35	INT,	IN _equipType35	INT
,	IN _attrId35	INT,		IN _attrValue35	INT,	IN _belong35	TINYINT,	IN _identified35		TINYINT
, 	IN _enchantLevel35	INT
,	IN _slotId1_35	TINYINT,	IN _optId1_35	INT,	IN _optValue1_35	SMALLINT
,	IN _slotId2_35	TINYINT,	IN _optId2_35	INT,	IN _optValue2_35	SMALLINT
,	IN _slotId3_35	TINYINT,	IN _optId3_35	INT,	IN _optValue3_35	SMALLINT
,	IN _slotId4_35	TINYINT,	IN _optId4_35	INT,	IN _optValue4_35	SMALLINT
,	IN _slotId5_35	TINYINT,	IN _optId5_35	INT,	IN _optValue5_35	SMALLINT
,	IN _slotId6_35	TINYINT,	IN _optId6_35	INT,	IN _optValue6_35	SMALLINT
,	IN _slotId7_35	TINYINT,	IN _optId7_35	INT,	IN _optValue7_35	SMALLINT

,   IN _itemId36 	INT,		IN _quality36	INT,	IN _equipType36	INT
,	IN _attrId36	INT,		IN _attrValue36	INT,	IN _belong36	TINYINT,	IN _identified36		TINYINT
, 	IN _enchantLevel36	INT
,	IN _slotId1_36	TINYINT,	IN _optId1_36	INT,	IN _optValue1_36	SMALLINT
,	IN _slotId2_36	TINYINT,	IN _optId2_36	INT,	IN _optValue2_36	SMALLINT
,	IN _slotId3_36	TINYINT,	IN _optId3_36	INT,	IN _optValue3_36	SMALLINT
,	IN _slotId4_36	TINYINT,	IN _optId4_36	INT,	IN _optValue4_36	SMALLINT
,	IN _slotId5_36	TINYINT,	IN _optId5_36	INT,	IN _optValue5_36	SMALLINT
,	IN _slotId6_36	TINYINT,	IN _optId6_36	INT,	IN _optValue6_36	SMALLINT
,	IN _slotId7_36	TINYINT,	IN _optId7_36	INT,	IN _optValue7_36	SMALLINT

,   IN _itemId37 	INT,		IN _quality37	INT,	IN _equipType37	INT
,	IN _attrId37	INT,		IN _attrValue37	INT,	IN _belong37	TINYINT,	IN _identified37		TINYINT
, 	IN _enchantLevel37	INT
,	IN _slotId1_37	TINYINT,	IN _optId1_37	INT,	IN _optValue1_37	SMALLINT
,	IN _slotId2_37	TINYINT,	IN _optId2_37	INT,	IN _optValue2_37	SMALLINT
,	IN _slotId3_37	TINYINT,	IN _optId3_37	INT,	IN _optValue3_37	SMALLINT
,	IN _slotId4_37	TINYINT,	IN _optId4_37	INT,	IN _optValue4_37	SMALLINT
,	IN _slotId5_37	TINYINT,	IN _optId5_37	INT,	IN _optValue5_37	SMALLINT
,	IN _slotId6_37	TINYINT,	IN _optId6_37	INT,	IN _optValue6_37	SMALLINT
,	IN _slotId7_37	TINYINT,	IN _optId7_37	INT,	IN _optValue7_37	SMALLINT

,   IN _itemId38 	INT,		IN _quality38	INT,	IN _equipType38	INT
,	IN _attrId38	INT,		IN _attrValue38	INT,	IN _belong38	TINYINT,	IN _identified38		TINYINT
, 	IN _enchantLevel38	INT
,	IN _slotId1_38	TINYINT,	IN _optId1_38	INT,	IN _optValue1_38	SMALLINT
,	IN _slotId2_38	TINYINT,	IN _optId2_38	INT,	IN _optValue2_38	SMALLINT
,	IN _slotId3_38	TINYINT,	IN _optId3_38	INT,	IN _optValue3_38	SMALLINT
,	IN _slotId4_38	TINYINT,	IN _optId4_38	INT,	IN _optValue4_38	SMALLINT
,	IN _slotId5_38	TINYINT,	IN _optId5_38	INT,	IN _optValue5_38	SMALLINT
,	IN _slotId6_38	TINYINT,	IN _optId6_38	INT,	IN _optValue6_38	SMALLINT
,	IN _slotId7_38	TINYINT,	IN _optId7_38	INT,	IN _optValue7_38	SMALLINT

,   IN _itemId39 	INT,		IN _quality39	INT,	IN _equipType39	INT
,	IN _attrId39		INT,	IN _attrValue39	INT,	IN _belong39	TINYINT,	IN _identified39		TINYINT
, 	IN _enchantLevel39	INT
,	IN _slotId1_39	TINYINT,	IN _optId1_39	INT,	IN _optValue1_39	SMALLINT
,	IN _slotId2_39	TINYINT,	IN _optId2_39	INT,	IN _optValue2_39	SMALLINT
,	IN _slotId3_39	TINYINT,	IN _optId3_39	INT,	IN _optValue3_39	SMALLINT
,	IN _slotId4_39	TINYINT,	IN _optId4_39	INT,	IN _optValue4_39	SMALLINT
,	IN _slotId5_39	TINYINT,	IN _optId5_39	INT,	IN _optValue5_39	SMALLINT
,	IN _slotId6_39	TINYINT,	IN _optId6_39	INT,	IN _optValue6_39	SMALLINT
,	IN _slotId7_39	TINYINT,	IN _optId7_39	INT,	IN _optValue7_39	SMALLINT

,   IN _itemId40 	INT,		IN _quality40	INT,	IN _equipType40	INT
,	IN _attrId40	INT,		IN _attrValue40	INT,	IN _belong40	TINYINT,	IN _identified40		TINYINT
, 	IN _enchantLevel40	INT
,	IN _slotId1_40	TINYINT,	IN _optId1_40	INT,	IN _optValue1_40	SMALLINT
,	IN _slotId2_40	TINYINT,	IN _optId2_40	INT,	IN _optValue2_40	SMALLINT
,	IN _slotId3_40	TINYINT,	IN _optId3_40	INT,	IN _optValue3_40	SMALLINT
,	IN _slotId4_40	TINYINT,	IN _optId4_40	INT,	IN _optValue4_40	SMALLINT
,	IN _slotId5_40	TINYINT,	IN _optId5_40	INT,	IN _optValue5_40	SMALLINT
,	IN _slotId6_40	TINYINT,	IN _optId6_40	INT,	IN _optValue6_40	SMALLINT
,	IN _slotId7_40	TINYINT,	IN _optId7_40	INT,	IN _optValue7_40	SMALLINT


,   IN _itemId41 	INT,		IN _quality41	INT,	IN _equipType41	INT
,	IN _attrId41	INT,		IN _attrValue41	INT,	IN _belong41	TINYINT,	IN _identified41		TINYINT
, 	IN _enchantLevel41	INT
,	IN _slotId1_41	TINYINT,	IN _optId1_41	INT,	IN _optValue1_41	SMALLINT
,	IN _slotId2_41	TINYINT,	IN _optId2_41	INT,	IN _optValue2_41	SMALLINT
,	IN _slotId3_41	TINYINT,	IN _optId3_41	INT,	IN _optValue3_41	SMALLINT
,	IN _slotId4_41	TINYINT,	IN _optId4_41	INT,	IN _optValue4_41	SMALLINT
,	IN _slotId5_41	TINYINT,	IN _optId5_41	INT,	IN _optValue5_41	SMALLINT
,	IN _slotId6_41	TINYINT,	IN _optId6_41	INT,	IN _optValue6_41	SMALLINT
,	IN _slotId7_41	TINYINT,	IN _optId7_41	INT,	IN _optValue7_41	SMALLINT

,   IN _itemId42 	INT,		IN _quality42	INT,	IN _equipType42	INT
,	IN _attrId42	INT,		IN _attrValue42	INT,	IN _belong42	TINYINT,	IN _identified42		TINYINT
, 	IN _enchantLevel42	INT
,	IN _slotId1_42	TINYINT,	IN _optId1_42	INT,	IN _optValue1_42	SMALLINT
,	IN _slotId2_42	TINYINT,	IN _optId2_42	INT,	IN _optValue2_42	SMALLINT
,	IN _slotId3_42	TINYINT,	IN _optId3_42	INT,	IN _optValue3_42	SMALLINT
,	IN _slotId4_42	TINYINT,	IN _optId4_42	INT,	IN _optValue4_42	SMALLINT
,	IN _slotId5_42	TINYINT,	IN _optId5_42	INT,	IN _optValue5_42	SMALLINT
,	IN _slotId6_42	TINYINT,	IN _optId6_42	INT,	IN _optValue6_42	SMALLINT
,	IN _slotId7_42	TINYINT,	IN _optId7_42	INT,	IN _optValue7_42	SMALLINT

,   IN _itemId43 	INT,		IN _quality43	INT,	IN _equipType43	INT
,	IN _attrId43	INT,		IN _attrValue43	INT,	IN _belong43	TINYINT,	IN _identified43		TINYINT
, 	IN _enchantLevel43	INT
,	IN _slotId1_43	TINYINT,	IN _optId1_43	INT,	IN _optValue1_43	SMALLINT
,	IN _slotId2_43	TINYINT,	IN _optId2_43	INT,	IN _optValue2_43	SMALLINT
,	IN _slotId3_43	TINYINT,	IN _optId3_43	INT,	IN _optValue3_43	SMALLINT
,	IN _slotId4_43	TINYINT,	IN _optId4_43	INT,	IN _optValue4_43	SMALLINT
,	IN _slotId5_43	TINYINT,	IN _optId5_43	INT,	IN _optValue5_43	SMALLINT
,	IN _slotId6_43	TINYINT,	IN _optId6_43	INT,	IN _optValue6_43	SMALLINT
,	IN _slotId7_43	TINYINT,	IN _optId7_43	INT,	IN _optValue7_43	SMALLINT

,   IN _itemId44 	INT,		IN _quality44	INT,	IN _equipType44	INT
,	IN _attrId44		INT,	IN _attrValue44	INT,	IN _belong44	TINYINT,	IN _identified44		TINYINT
, 	IN _enchantLevel44	INT
,	IN _slotId1_44	TINYINT,	IN _optId1_44	INT,	IN _optValue1_44	SMALLINT
,	IN _slotId2_44	TINYINT,	IN _optId2_44	INT,	IN _optValue2_44	SMALLINT
,	IN _slotId3_44	TINYINT,	IN _optId3_44	INT,	IN _optValue3_44	SMALLINT
,	IN _slotId4_44	TINYINT,	IN _optId4_44	INT,	IN _optValue4_44	SMALLINT
,	IN _slotId5_44	TINYINT,	IN _optId5_44	INT,	IN _optValue5_44	SMALLINT
,	IN _slotId6_44	TINYINT,	IN _optId6_44	INT,	IN _optValue6_44	SMALLINT
,	IN _slotId7_44	TINYINT,	IN _optId7_44	INT,	IN _optValue7_44	SMALLINT

,   IN _itemId45 	INT,		IN _quality45	INT,	IN _equipType45	INT
,	IN _attrId45	INT,		IN _attrValue45	INT,	IN _belong45	TINYINT,	IN _identified45		TINYINT
, 	IN _enchantLevel45	INT
,	IN _slotId1_45	TINYINT,	IN _optId1_45	INT,	IN _optValue1_45	SMALLINT
,	IN _slotId2_45	TINYINT,	IN _optId2_45	INT,	IN _optValue2_45	SMALLINT
,	IN _slotId3_45	TINYINT,	IN _optId3_45	INT,	IN _optValue3_45	SMALLINT
,	IN _slotId4_45	TINYINT,	IN _optId4_45	INT,	IN _optValue4_45	SMALLINT
,	IN _slotId5_45	TINYINT,	IN _optId5_45	INT,	IN _optValue5_45	SMALLINT
,	IN _slotId6_45	TINYINT,	IN _optId6_45	INT,	IN _optValue6_45	SMALLINT
,	IN _slotId7_45	TINYINT,	IN _optId7_45	INT,	IN _optValue7_45	SMALLINT

,   IN _itemId46 	INT,		IN _quality46	INT,	IN _equipType46	INT
,	IN _attrId46	INT,		IN _attrValue46	INT,	IN _belong46	TINYINT,	IN _identified46		TINYINT
, 	IN _enchantLevel46	INT
,	IN _slotId1_46	TINYINT,	IN _optId1_46	INT,	IN _optValue1_46	SMALLINT
,	IN _slotId2_46	TINYINT,	IN _optId2_46	INT,	IN _optValue2_46	SMALLINT
,	IN _slotId3_46	TINYINT,	IN _optId3_46	INT,	IN _optValue3_46	SMALLINT
,	IN _slotId4_46	TINYINT,	IN _optId4_46	INT,	IN _optValue4_46	SMALLINT
,	IN _slotId5_46	TINYINT,	IN _optId5_46	INT,	IN _optValue5_46	SMALLINT
,	IN _slotId6_46	TINYINT,	IN _optId6_46	INT,	IN _optValue6_46	SMALLINT
,	IN _slotId7_46	TINYINT,	IN _optId7_46	INT,	IN _optValue7_46	SMALLINT

,   IN _itemId47 	INT,		IN _quality47	INT,	IN _equipType47	INT
,	IN _attrId47	INT,		IN _attrValue47	INT,	IN _belong47	TINYINT,	IN _identified47		TINYINT
, 	IN _enchantLevel47	INT
,	IN _slotId1_47	TINYINT,	IN _optId1_47	INT,	IN _optValue1_47	SMALLINT
,	IN _slotId2_47	TINYINT,	IN _optId2_47	INT,	IN _optValue2_47	SMALLINT
,	IN _slotId3_47	TINYINT,	IN _optId3_47	INT,	IN _optValue3_47	SMALLINT
,	IN _slotId4_47	TINYINT,	IN _optId4_47	INT,	IN _optValue4_47	SMALLINT
,	IN _slotId5_47	TINYINT,	IN _optId5_47	INT,	IN _optValue5_47	SMALLINT
,	IN _slotId6_47	TINYINT,	IN _optId6_47	INT,	IN _optValue6_47	SMALLINT
,	IN _slotId7_47	TINYINT,	IN _optId7_47	INT,	IN _optValue7_47	SMALLINT

,   IN _itemId48 	INT,		IN _quality48	INT,	IN _equipType48	INT
,	IN _attrId48	INT,		IN _attrValue48	INT,	IN _belong48	TINYINT,	IN _identified48		TINYINT
, 	IN _enchantLevel48	INT
,	IN _slotId1_48	TINYINT,	IN _optId1_48	INT,	IN _optValue1_48	SMALLINT
,	IN _slotId2_48	TINYINT,	IN _optId2_48	INT,	IN _optValue2_48	SMALLINT
,	IN _slotId3_48	TINYINT,	IN _optId3_48	INT,	IN _optValue3_48	SMALLINT
,	IN _slotId4_48	TINYINT,	IN _optId4_48	INT,	IN _optValue4_48	SMALLINT
,	IN _slotId5_48	TINYINT,	IN _optId5_48	INT,	IN _optValue5_48	SMALLINT
,	IN _slotId6_48	TINYINT,	IN _optId6_48	INT,	IN _optValue6_48	SMALLINT
,	IN _slotId7_48	TINYINT,	IN _optId7_48	INT,	IN _optValue7_48	SMALLINT

,   IN _itemId49 	INT,		IN _quality49	INT,	IN _equipType49	INT
,	IN _attrId49		INT,	IN _attrValue49	INT,	IN _belong49	TINYINT,	IN _identified49		TINYINT
, 	IN _enchantLevel49	INT
,	IN _slotId1_49	TINYINT,	IN _optId1_49	INT,	IN _optValue1_49	SMALLINT
,	IN _slotId2_49	TINYINT,	IN _optId2_49	INT,	IN _optValue2_49	SMALLINT
,	IN _slotId3_49	TINYINT,	IN _optId3_49	INT,	IN _optValue3_49	SMALLINT
,	IN _slotId4_49	TINYINT,	IN _optId4_49	INT,	IN _optValue4_49	SMALLINT
,	IN _slotId5_49	TINYINT,	IN _optId5_49	INT,	IN _optValue5_49	SMALLINT
,	IN _slotId6_49	TINYINT,	IN _optId6_49	INT,	IN _optValue6_49	SMALLINT
,	IN _slotId7_49	TINYINT,	IN _optId7_49	INT,	IN _optValue7_49	SMALLINT

,   IN _itemId50 	INT,		IN _quality50	INT,	IN _equipType50	INT
,	IN _attrId50	INT,		IN _attrValue50	INT,	IN _belong50	TINYINT,	IN _identified50		TINYINT
, 	IN _enchantLevel50	INT
,	IN _slotId1_50	TINYINT,	IN _optId1_50	INT,	IN _optValue1_50	SMALLINT
,	IN _slotId2_50	TINYINT,	IN _optId2_50	INT,	IN _optValue2_50	SMALLINT
,	IN _slotId3_50	TINYINT,	IN _optId3_50	INT,	IN _optValue3_50	SMALLINT
,	IN _slotId4_50	TINYINT,	IN _optId4_50	INT,	IN _optValue4_50	SMALLINT
,	IN _slotId5_50	TINYINT,	IN _optId5_50	INT,	IN _optValue5_50	SMALLINT
,	IN _slotId6_50	TINYINT,	IN _optId6_50	INT,	IN _optValue6_50	SMALLINT
,	IN _slotId7_50	TINYINT,	IN _optId7_50	INT,	IN _optValue7_50	SMALLINT



,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT
,	IN _costItemType11	TINYINT,	IN _costItemId11	INT,	IN _costItemValue11	INT
,	IN _costItemType12	TINYINT,	IN _costItemId12	INT,	IN _costItemValue12	INT
,	IN _costItemType13	TINYINT,	IN _costItemId13	INT,	IN _costItemValue13	INT
,	IN _costItemType14	TINYINT,	IN _costItemId14	INT,	IN _costItemValue14	INT
,	IN _costItemType15	TINYINT,	IN _costItemId15	INT,	IN _costItemValue15	INT
,	IN _costItemType16	TINYINT,	IN _costItemId16	INT,	IN _costItemValue16	INT
,	IN _costItemType17	TINYINT,	IN _costItemId17	INT,	IN _costItemValue17	INT
,	IN _costItemType18	TINYINT,	IN _costItemId18	INT,	IN _costItemValue18	INT
,	IN _costItemType19	TINYINT,	IN _costItemId19	INT,	IN _costItemValue19	INT
,	IN _costItemType20	TINYINT,	IN _costItemId20	INT,	IN _costItemValue20	INT
,	IN _costItemType21	TINYINT,	IN _costItemId21	INT,	IN _costItemValue21	INT
,	IN _costItemType22	TINYINT,	IN _costItemId22	INT,	IN _costItemValue22	INT
,	IN _costItemType23	TINYINT,	IN _costItemId23	INT,	IN _costItemValue23	INT
,	IN _costItemType24	TINYINT,	IN _costItemId24	INT,	IN _costItemValue24	INT
,	IN _costItemType25	TINYINT,	IN _costItemId25	INT,	IN _costItemValue25	INT
,	IN _costItemType26	TINYINT,	IN _costItemId26	INT,	IN _costItemValue26	INT
,	IN _costItemType27	TINYINT,	IN _costItemId27	INT,	IN _costItemValue27	INT
,	IN _costItemType28	TINYINT,	IN _costItemId28	INT,	IN _costItemValue28	INT
,	IN _costItemType29	TINYINT,	IN _costItemId29	INT,	IN _costItemValue29	INT
,	IN _costItemType30	TINYINT,	IN _costItemId30	INT,	IN _costItemValue30	INT
,	IN _costItemType31	TINYINT,	IN _costItemId31	INT,	IN _costItemValue31	INT
,	IN _costItemType32	TINYINT,	IN _costItemId32	INT,	IN _costItemValue32	INT
,	IN _costItemType33	TINYINT,	IN _costItemId33	INT,	IN _costItemValue33	INT
,	IN _costItemType34	TINYINT,	IN _costItemId34	INT,	IN _costItemValue34	INT
,	IN _costItemType35	TINYINT,	IN _costItemId35	INT,	IN _costItemValue35	INT
,	IN _costItemType36	TINYINT,	IN _costItemId36	INT,	IN _costItemValue36	INT
,	IN _costItemType37	TINYINT,	IN _costItemId37	INT,	IN _costItemValue37	INT
,	IN _costItemType38	TINYINT,	IN _costItemId38	INT,	IN _costItemValue38	INT
,	IN _costItemType39	TINYINT,	IN _costItemId39	INT,	IN _costItemValue39	INT
,	IN _costItemType40	TINYINT,	IN _costItemId40	INT,	IN _costItemValue40	INT
,	IN _costItemType41	TINYINT,	IN _costItemId41	INT,	IN _costItemValue41	INT
,	IN _costItemType42	TINYINT,	IN _costItemId42	INT,	IN _costItemValue42	INT
,	IN _costItemType43	TINYINT,	IN _costItemId43	INT,	IN _costItemValue43	INT
,	IN _costItemType44	TINYINT,	IN _costItemId44	INT,	IN _costItemValue44	INT
,	IN _costItemType45	TINYINT,	IN _costItemId45	INT,	IN _costItemValue45	INT
,	IN _costItemType46	TINYINT,	IN _costItemId46	INT,	IN _costItemValue46	INT
,	IN _costItemType47	TINYINT,	IN _costItemId47	INT,	IN _costItemValue47	INT
,	IN _costItemType48	TINYINT,	IN _costItemId48	INT,	IN _costItemValue48	INT
,	IN _costItemType49	TINYINT,	IN _costItemId49	INT,	IN _costItemValue49	INT
,	IN _costItemType50	TINYINT,	IN _costItemId50	INT,	IN _costItemValue50	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT
, 	IN _bookId11 INT,	IN _percent11 INT,	IN _liftTime11 INT,	IN _value11	INT,	IN _bookbelong11 TINYINT
, 	IN _bookId12 INT,	IN _percent12 INT,	IN _liftTime12 INT,	IN _value12	INT,	IN _bookbelong12 TINYINT
, 	IN _bookId13 INT,	IN _percent13 INT,	IN _liftTime13 INT,	IN _value13	INT,	IN _bookbelong13 TINYINT
, 	IN _bookId14 INT,	IN _percent14 INT,	IN _liftTime14 INT,	IN _value14	INT,	IN _bookbelong14 TINYINT
, 	IN _bookId15 INT,	IN _percent15 INT,	IN _liftTime15 INT,	IN _value15	INT,	IN _bookbelong15 TINYINT
, 	IN _bookId16 INT,	IN _percent16 INT,	IN _liftTime16 INT,	IN _value16	INT,	IN _bookbelong16 TINYINT
, 	IN _bookId17 INT,	IN _percent17 INT,	IN _liftTime17 INT,	IN _value17	INT,	IN _bookbelong17 TINYINT
, 	IN _bookId18 INT,	IN _percent18 INT,	IN _liftTime18 INT,	IN _value18	INT,	IN _bookbelong18 TINYINT
, 	IN _bookId19 INT,	IN _percent19 INT,	IN _liftTime19 INT,	IN _value19	INT,	IN _bookbelong19 TINYINT
, 	IN _bookId20 INT,	IN _percent20 INT,	IN _liftTime20 INT,	IN _value20	INT,	IN _bookbelong20 TINYINT
, 	IN _bookId21 INT,	IN _percent21 INT,	IN _liftTime21 INT,	IN _value21	INT,	IN _bookbelong21 TINYINT
, 	IN _bookId22 INT,	IN _percent22 INT,	IN _liftTime22 INT,	IN _value22	INT,	IN _bookbelong22 TINYINT
, 	IN _bookId23 INT,	IN _percent23 INT,	IN _liftTime23 INT,	IN _value23	INT,	IN _bookbelong23 TINYINT
, 	IN _bookId24 INT,	IN _percent24 INT,	IN _liftTime24 INT,	IN _value24	INT,	IN _bookbelong24 TINYINT
, 	IN _bookId25 INT,	IN _percent25 INT,	IN _liftTime25 INT,	IN _value25	INT,	IN _bookbelong25 TINYINT
, 	IN _bookId26 INT,	IN _percent26 INT,	IN _liftTime26 INT,	IN _value26	INT,	IN _bookbelong26 TINYINT
, 	IN _bookId27 INT,	IN _percent27 INT,	IN _liftTime27 INT,	IN _value27	INT,	IN _bookbelong27 TINYINT
, 	IN _bookId28 INT,	IN _percent28 INT,	IN _liftTime28 INT,	IN _value28	INT,	IN _bookbelong28 TINYINT
, 	IN _bookId29 INT,	IN _percent29 INT,	IN _liftTime29 INT,	IN _value29	INT,	IN _bookbelong29 TINYINT
, 	IN _bookId30 INT,	IN _percent30 INT,	IN _liftTime30 INT,	IN _value30	INT,	IN _bookbelong30 TINYINT
, 	IN _bookId31 INT,	IN _percent31 INT,	IN _liftTime31 INT,	IN _value31	INT,	IN _bookbelong31 TINYINT
, 	IN _bookId32 INT,	IN _percent32 INT,	IN _liftTime32 INT,	IN _value32	INT,	IN _bookbelong32 TINYINT
, 	IN _bookId33 INT,	IN _percent33 INT,	IN _liftTime33 INT,	IN _value33	INT,	IN _bookbelong33 TINYINT
, 	IN _bookId34 INT,	IN _percent34 INT,	IN _liftTime34 INT,	IN _value34	INT,	IN _bookbelong34 TINYINT
, 	IN _bookId35 INT,	IN _percent35 INT,	IN _liftTime35 INT,	IN _value35	INT,	IN _bookbelong35 TINYINT
, 	IN _bookId36 INT,	IN _percent36 INT,	IN _liftTime36 INT,	IN _value36	INT,	IN _bookbelong36 TINYINT
, 	IN _bookId37 INT,	IN _percent37 INT,	IN _liftTime37 INT,	IN _value37	INT,	IN _bookbelong37 TINYINT
, 	IN _bookId38 INT,	IN _percent38 INT,	IN _liftTime38 INT,	IN _value38	INT,	IN _bookbelong38 TINYINT
, 	IN _bookId39 INT,	IN _percent39 INT,	IN _liftTime39 INT,	IN _value39	INT,	IN _bookbelong39 TINYINT
, 	IN _bookId40 INT,	IN _percent40 INT,	IN _liftTime40 INT,	IN _value40	INT,	IN _bookbelong40 TINYINT
, 	IN _bookId41 INT,	IN _percent41 INT,	IN _liftTime41 INT,	IN _value41	INT,	IN _bookbelong41 TINYINT
, 	IN _bookId42 INT,	IN _percent42 INT,	IN _liftTime42 INT,	IN _value42	INT,	IN _bookbelong42 TINYINT
, 	IN _bookId43 INT,	IN _percent43 INT,	IN _liftTime43 INT,	IN _value43	INT,	IN _bookbelong43 TINYINT
, 	IN _bookId44 INT,	IN _percent44 INT,	IN _liftTime44 INT,	IN _value44	INT,	IN _bookbelong44 TINYINT
, 	IN _bookId45 INT,	IN _percent45 INT,	IN _liftTime45 INT,	IN _value45	INT,	IN _bookbelong45 TINYINT
, 	IN _bookId46 INT,	IN _percent46 INT,	IN _liftTime46 INT,	IN _value46	INT,	IN _bookbelong46 TINYINT
, 	IN _bookId47 INT,	IN _percent47 INT,	IN _liftTime47 INT,	IN _value47	INT,	IN _bookbelong47 TINYINT
, 	IN _bookId48 INT,	IN _percent48 INT,	IN _liftTime48 INT,	IN _value48	INT,	IN _bookbelong48 TINYINT
, 	IN _bookId49 INT,	IN _percent49 INT,	IN _liftTime49 INT,	IN _value49	INT,	IN _bookbelong49 TINYINT
, 	IN _bookId50 INT,	IN _percent50 INT,	IN _liftTime50 INT,	IN _value50	INT,	IN _bookbelong50 TINYINT
	
)
    COMMENT 'NPC상점 상품 구매 비용 차감, 보상 지급'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    # Status
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_status_id INT;
    DECLARE v_status_value INT;
    
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
--     DECLARE v_finalGuildPoint		INT DEFAULT 0; 
    DECLARE v_finalqty				INT DEFAULT 0;
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
--    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index11 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index12 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index13 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index14 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index15 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index16 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index17 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index18 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index19 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index20 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index21 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index22 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index23 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index24 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index25 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index26 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index27 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index28 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index29 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index30 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index31 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index32 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index33 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index34 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index35 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index36 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index37 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index38 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index39 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index40 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index41 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index42 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index43 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index44 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index45 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index46 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index47 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index48 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index49 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index50 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    DECLARE v_item_final_qty11	INT DEFAULT 0;
	DECLARE v_item_final_qty12	INT DEFAULT 0;
	DECLARE v_item_final_qty13	INT DEFAULT 0;
	DECLARE v_item_final_qty14	INT DEFAULT 0;
	DECLARE v_item_final_qty15	INT DEFAULT 0;
    DECLARE v_item_final_qty16	INT DEFAULT 0;
	DECLARE v_item_final_qty17	INT DEFAULT 0;
	DECLARE v_item_final_qty18	INT DEFAULT 0;
	DECLARE v_item_final_qty19	INT DEFAULT 0;
	DECLARE v_item_final_qty20	INT DEFAULT 0;
    DECLARE v_item_final_qty21	INT DEFAULT 0;
	DECLARE v_item_final_qty22	INT DEFAULT 0;
	DECLARE v_item_final_qty23	INT DEFAULT 0;
	DECLARE v_item_final_qty24	INT DEFAULT 0;
	DECLARE v_item_final_qty25	INT DEFAULT 0;
    DECLARE v_item_final_qty26	INT DEFAULT 0;
	DECLARE v_item_final_qty27	INT DEFAULT 0;
	DECLARE v_item_final_qty28	INT DEFAULT 0;
	DECLARE v_item_final_qty29	INT DEFAULT 0;
	DECLARE v_item_final_qty30	INT DEFAULT 0;
    DECLARE v_item_final_qty31	INT DEFAULT 0;
	DECLARE v_item_final_qty32	INT DEFAULT 0;
	DECLARE v_item_final_qty33	INT DEFAULT 0;
	DECLARE v_item_final_qty34	INT DEFAULT 0;
	DECLARE v_item_final_qty35	INT DEFAULT 0;
    DECLARE v_item_final_qty36	INT DEFAULT 0;
	DECLARE v_item_final_qty37	INT DEFAULT 0;
	DECLARE v_item_final_qty38	INT DEFAULT 0;
	DECLARE v_item_final_qty39	INT DEFAULT 0;
	DECLARE v_item_final_qty40	INT DEFAULT 0;
    DECLARE v_item_final_qty41	INT DEFAULT 0;
	DECLARE v_item_final_qty42	INT DEFAULT 0;
	DECLARE v_item_final_qty43	INT DEFAULT 0;
	DECLARE v_item_final_qty44	INT DEFAULT 0;
	DECLARE v_item_final_qty45	INT DEFAULT 0;
    DECLARE v_item_final_qty46	INT DEFAULT 0;
	DECLARE v_item_final_qty47	INT DEFAULT 0;
	DECLARE v_item_final_qty48	INT DEFAULT 0;
	DECLARE v_item_final_qty49	INT DEFAULT 0;
	DECLARE v_item_final_qty50	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index11 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index12 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index13 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index14 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index15 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index16 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index17 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index18 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index19 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index20 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index21 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index22 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index23 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index24 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index25 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index26 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index27 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index28 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index29 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index30 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index31 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index32 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index33 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index34 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index35 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index36 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index37 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index38 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index39 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index40 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index41 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index42 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index43 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index44 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index45 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index46 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index47 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index48 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index49 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index50 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
					, v_finalqty, v_finalgold, v_finalcashA-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
                    , v_item_db_index11, v_item_db_index12, v_item_db_index13, v_item_db_index14, v_item_db_index15, v_item_db_index16, v_item_db_index17, v_item_db_index18, v_item_db_index19, v_item_db_index20
                    , v_item_db_index21, v_item_db_index22, v_item_db_index23, v_item_db_index24, v_item_db_index25, v_item_db_index26, v_item_db_index27, v_item_db_index28, v_item_db_index29, v_item_db_index30
                    , v_item_db_index31, v_item_db_index32, v_item_db_index33, v_item_db_index34, v_item_db_index35, v_item_db_index36, v_item_db_index37, v_item_db_index38, v_item_db_index39, v_item_db_index40
                    , v_item_db_index41, v_item_db_index42, v_item_db_index43, v_item_db_index44, v_item_db_index45, v_item_db_index46, v_item_db_index47, v_item_db_index48, v_item_db_index49, v_item_db_index50
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10
                    , v_book_db_index11, v_book_db_index12, v_book_db_index13, v_book_db_index14, v_book_db_index15, v_book_db_index16, v_book_db_index17, v_book_db_index18, v_book_db_index19, v_book_db_index20
                    , v_book_db_index21, v_book_db_index22, v_book_db_index23, v_book_db_index24, v_book_db_index25, v_book_db_index26, v_book_db_index27, v_book_db_index28, v_book_db_index29, v_book_db_index30
                    , v_book_db_index31, v_book_db_index32, v_book_db_index33, v_book_db_index34, v_book_db_index35, v_book_db_index36, v_book_db_index37, v_book_db_index38, v_book_db_index39, v_book_db_index40
                    , v_book_db_index41, v_book_db_index42, v_book_db_index43, v_book_db_index44, v_book_db_index45, v_book_db_index46, v_book_db_index47, v_book_db_index48, v_book_db_index49, v_book_db_index50
                    ;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
		--
        subroot:
        BEGIN    
			
            IF 0 = LENGTH(id_array) THEN
				LEAVE subroot;
			END IF;	
            
        -- Status begin
			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_status_id := CAST(current_id as unsigned);
                -- SET v_status_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    -- IF 0 < v_status_id AND 0 < v_status_value THEN
                IF 0 < v_status_id THEN
					INSERT INTO user_title_reward (user_idx, rewarded_count)
							VALUES (_userid, v_status_id)
						ON DUPLICATE KEY UPDATE rewarded_count = v_status_id;
												
					IF 0 = row_count() THEN
						SET v_result = 119;	
                        LEAVE subroot;
					END IF;	
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- Status End
		END;
    
		IF v_result != 0 THEN
			LEAVE root;
		END IF;
        --
    
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_finalgold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_finalcashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;        
        END IF;
       
        
-- 		IF _addCashB > 0 THEN 		
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
--   
-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_final_cashB, v_result);
-- 			IF v_result != 0 THEN
-- 				LEAVE root;
-- 			END IF;
--                   
--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;  
--    
--         END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, _enchantLevel1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, _enchantLevel2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, _enchantLevel3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, _enchantLevel4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, _enchantLevel5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
								_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
								_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
								_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
								_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, _enchantLevel6, v_result, v_item_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
								_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
								_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
								_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
								_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, _enchantLevel7, v_result, v_item_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
								_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
								_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
								_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
								_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, _enchantLevel8, v_result, v_item_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
								_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
								_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
								_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
								_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, _enchantLevel9, v_result, v_item_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
								_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
								_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
								_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
								_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, _enchantLevel10, v_result, v_item_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId11 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId11, _quality11, _equipType11, _attrId11, _attrValue11,
								_slotId1_11, _optId1_11, _optValue1_11, _slotId2_11, _optId2_11, _optValue2_11, 
								_slotId3_11, _optId3_11, _optValue3_11, _slotId4_11, _optId4_11, _optValue4_11, 
								_slotId5_11, _optId5_11, _optValue5_11, _slotId6_11, _optId6_11, _optValue6_11, 
								_slotId7_11, _optId7_11, _optValue7_11, _belong11, _identified11, _enchantLevel11, v_result, v_item_db_index11);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId12 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId12, _quality12, _equipType12, _attrId12, _attrValue12,
								_slotId1_12, _optId1_12, _optValue1_12, _slotId2_12, _optId2_12, _optValue2_12, 
								_slotId3_12, _optId3_12, _optValue3_12, _slotId4_12, _optId4_12, _optValue4_12, 
								_slotId5_12, _optId5_12, _optValue5_12, _slotId6_12, _optId6_12, _optValue6_12, 
								_slotId7_12, _optId7_12, _optValue7_12, _belong12, _identified12, _enchantLevel12, v_result, v_item_db_index12);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId13 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId13, _quality13, _equipType13, _attrId13, _attrValue13,
								_slotId1_13, _optId1_13, _optValue1_13, _slotId2_13, _optId2_13, _optValue2_13, 
								_slotId3_13, _optId3_13, _optValue3_13, _slotId4_13, _optId4_13, _optValue4_13, 
								_slotId5_13, _optId5_13, _optValue5_13, _slotId6_13, _optId6_13, _optValue6_13, 
								_slotId7_13, _optId7_13, _optValue7_13, _belong13, _identified13, _enchantLevel13, v_result, v_item_db_index13);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId14 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId14, _quality14, _equipType14, _attrId14, _attrValue14,
								_slotId1_14, _optId1_14, _optValue1_14, _slotId2_14, _optId2_14, _optValue2_14, 
								_slotId3_14, _optId3_14, _optValue3_14, _slotId4_14, _optId4_14, _optValue4_14, 
								_slotId5_14, _optId5_14, _optValue5_14, _slotId6_14, _optId6_14, _optValue6_14, 
								_slotId7_14, _optId7_14, _optValue7_14, _belong14, _identified14, _enchantLevel14, v_result, v_item_db_index14);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId15 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId15, _quality15, _equipType15, _attrId15, _attrValue15,
								_slotId1_15, _optId1_15, _optValue1_15, _slotId2_15, _optId2_15, _optValue2_15, 
								_slotId3_15, _optId3_15, _optValue3_15, _slotId4_15, _optId4_15, _optValue4_15, 
								_slotId5_15, _optId5_15, _optValue5_15, _slotId6_15, _optId6_15, _optValue6_15, 
								_slotId7_15, _optId7_15, _optValue7_15, _belong15, _identified15, _enchantLevel15, v_result, v_item_db_index15);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId16 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId16, _quality16, _equipType16, _attrId16, _attrValue16,
								_slotId1_16, _optId1_16, _optValue1_16, _slotId2_16, _optId2_16, _optValue2_16, 
								_slotId3_16, _optId3_16, _optValue3_16, _slotId4_16, _optId4_16, _optValue4_16, 
								_slotId5_16, _optId5_16, _optValue5_16, _slotId6_16, _optId6_16, _optValue6_16, 
								_slotId7_16, _optId7_16, _optValue7_16, _belong16, _identified16, _enchantLevel16, v_result, v_item_db_index16);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId17 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId17, _quality17, _equipType17, _attrId17, _attrValue17,
								_slotId1_17, _optId1_17, _optValue1_17, _slotId2_17, _optId2_17, _optValue2_17, 
								_slotId3_17, _optId3_17, _optValue3_17, _slotId4_17, _optId4_17, _optValue4_17, 
								_slotId5_17, _optId5_17, _optValue5_17, _slotId6_17, _optId6_17, _optValue6_17, 
								_slotId7_17, _optId7_17, _optValue7_17, _belong17, _identified17, _enchantLevel17, v_result, v_item_db_index17);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId18 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId18, _quality18, _equipType18, _attrId18, _attrValue18,
								_slotId1_18, _optId1_18, _optValue1_18, _slotId2_18, _optId2_18, _optValue2_18, 
								_slotId3_18, _optId3_18, _optValue3_18, _slotId4_18, _optId4_18, _optValue4_18, 
								_slotId5_18, _optId5_18, _optValue5_18, _slotId6_18, _optId6_18, _optValue6_18, 
								_slotId7_18, _optId7_18, _optValue7_18, _belong18, _identified18, _enchantLevel18, v_result, v_item_db_index18);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId19 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId19, _quality19, _equipType19, _attrId19, _attrValue19,
								_slotId1_19, _optId1_19, _optValue1_19, _slotId2_19, _optId2_19, _optValue2_19, 
								_slotId3_19, _optId3_19, _optValue3_19, _slotId4_19, _optId4_19, _optValue4_19, 
								_slotId5_19, _optId5_19, _optValue5_19, _slotId6_19, _optId6_19, _optValue6_19, 
								_slotId7_19, _optId7_19, _optValue7_19, _belong19, _identified19, _enchantLevel19, v_result, v_item_db_index19);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId20 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId20, _quality20, _equipType20, _attrId20, _attrValue20,
								_slotId1_20, _optId1_20, _optValue1_20, _slotId2_20, _optId2_20, _optValue2_20, 
								_slotId3_20, _optId3_20, _optValue3_20, _slotId4_20, _optId4_20, _optValue4_20, 
								_slotId5_20, _optId5_20, _optValue5_20, _slotId6_20, _optId6_20, _optValue6_20, 
								_slotId7_20, _optId7_20, _optValue7_20, _belong20, _identified20, _enchantLevel20, v_result, v_item_db_index20);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId21 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId21, _quality21, _equipType21, _attrId21, _attrValue21,
								_slotId1_21, _optId1_21, _optValue1_21, _slotId2_21, _optId2_21, _optValue2_21, 
								_slotId3_21, _optId3_21, _optValue3_21, _slotId4_21, _optId4_21, _optValue4_21, 
								_slotId5_21, _optId5_21, _optValue5_21, _slotId6_21, _optId6_21, _optValue6_21, 
								_slotId7_21, _optId7_21, _optValue7_21, _belong21, _identified21, _enchantLevel21, v_result, v_item_db_index21);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId22 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId22, _quality22, _equipType22, _attrId22, _attrValue22,
								_slotId1_22, _optId1_22, _optValue1_22, _slotId2_22, _optId2_22, _optValue2_22, 
								_slotId3_22, _optId3_22, _optValue3_22, _slotId4_22, _optId4_22, _optValue4_22, 
								_slotId5_22, _optId5_22, _optValue5_22, _slotId6_22, _optId6_22, _optValue6_22, 
								_slotId7_22, _optId7_22, _optValue7_22, _belong22, _identified22, _enchantLevel22, v_result, v_item_db_index22);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId23 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId23, _quality23, _equipType23, _attrId23, _attrValue23,
								_slotId1_23, _optId1_23, _optValue1_23, _slotId2_23, _optId2_23, _optValue2_23, 
								_slotId3_23, _optId3_23, _optValue3_23, _slotId4_23, _optId4_23, _optValue4_23, 
								_slotId5_23, _optId5_23, _optValue5_23, _slotId6_23, _optId6_23, _optValue6_23, 
								_slotId7_23, _optId7_23, _optValue7_23, _belong23, _identified23, _enchantLevel23, v_result, v_item_db_index23);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId24 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId24, _quality24, _equipType24, _attrId24, _attrValue24,
								_slotId1_24, _optId1_24, _optValue1_24, _slotId2_24, _optId2_24, _optValue2_24, 
								_slotId3_24, _optId3_24, _optValue3_24, _slotId4_24, _optId4_24, _optValue4_24, 
								_slotId5_24, _optId5_24, _optValue5_24, _slotId6_24, _optId6_24, _optValue6_24, 
								_slotId7_24, _optId7_24, _optValue7_24, _belong24, _identified24, _enchantLevel24, v_result, v_item_db_index24);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId25 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId25, _quality25, _equipType25, _attrId25, _attrValue25,
								_slotId1_25, _optId1_25, _optValue1_25, _slotId2_25, _optId2_25, _optValue2_25, 
								_slotId3_25, _optId3_25, _optValue3_25, _slotId4_25, _optId4_25, _optValue4_25, 
								_slotId5_25, _optId5_25, _optValue5_25, _slotId6_25, _optId6_25, _optValue6_25, 
								_slotId7_25, _optId7_25, _optValue7_25, _belong25, _identified25, _enchantLevel25, v_result, v_item_db_index25);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId26 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId26, _quality26, _equipType26, _attrId26, _attrValue26,
								_slotId1_26, _optId1_26, _optValue1_26, _slotId2_26, _optId2_26, _optValue2_26, 
								_slotId3_26, _optId3_26, _optValue3_26, _slotId4_26, _optId4_26, _optValue4_26, 
								_slotId5_26, _optId5_26, _optValue5_26, _slotId6_26, _optId6_26, _optValue6_26, 
								_slotId7_26, _optId7_26, _optValue7_26, _belong26, _identified26, _enchantLevel26, v_result, v_item_db_index26);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId27 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId27, _quality27, _equipType27, _attrId27, _attrValue27,
								_slotId1_27, _optId1_27, _optValue1_27, _slotId2_27, _optId2_27, _optValue2_27, 
								_slotId3_27, _optId3_27, _optValue3_27, _slotId4_27, _optId4_27, _optValue4_27, 
								_slotId5_27, _optId5_27, _optValue5_27, _slotId6_27, _optId6_27, _optValue6_27, 
								_slotId7_27, _optId7_27, _optValue7_27, _belong27, _identified27, _enchantLevel27, v_result, v_item_db_index27);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId28 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId28, _quality28, _equipType28, _attrId28, _attrValue28,
								_slotId1_28, _optId1_28, _optValue1_28, _slotId2_28, _optId2_28, _optValue2_28, 
								_slotId3_28, _optId3_28, _optValue3_28, _slotId4_28, _optId4_28, _optValue4_28, 
								_slotId5_28, _optId5_28, _optValue5_28, _slotId6_28, _optId6_28, _optValue6_28, 
								_slotId7_28, _optId7_28, _optValue7_28, _belong28, _identified28, _enchantLevel28, v_result, v_item_db_index28);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId29 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId29, _quality29, _equipType29, _attrId29, _attrValue29,
								_slotId1_29, _optId1_29, _optValue1_29, _slotId2_29, _optId2_29, _optValue2_29, 
								_slotId3_29, _optId3_29, _optValue3_29, _slotId4_29, _optId4_29, _optValue4_29, 
								_slotId5_29, _optId5_29, _optValue5_29, _slotId6_29, _optId6_29, _optValue6_29, 
								_slotId7_29, _optId7_29, _optValue7_29, _belong29, _identified29, _enchantLevel29, v_result, v_item_db_index29);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId30 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId30, _quality30, _equipType30, _attrId30, _attrValue30,
								_slotId1_30, _optId1_30, _optValue1_30, _slotId2_30, _optId2_30, _optValue2_30, 
								_slotId3_30, _optId3_30, _optValue3_30, _slotId4_30, _optId4_30, _optValue4_30, 
								_slotId5_30, _optId5_30, _optValue5_30, _slotId6_30, _optId6_30, _optValue6_30, 
								_slotId7_30, _optId7_30, _optValue7_30, _belong30, _identified30, _enchantLevel30, v_result, v_item_db_index30);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId31 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId31, _quality31, _equipType31, _attrId31, _attrValue31,
								_slotId1_31, _optId1_31, _optValue1_31, _slotId2_31, _optId2_31, _optValue2_31, 
								_slotId3_31, _optId3_31, _optValue3_31, _slotId4_31, _optId4_31, _optValue4_31, 
								_slotId5_31, _optId5_31, _optValue5_31, _slotId6_31, _optId6_31, _optValue6_31, 
								_slotId7_31, _optId7_31, _optValue7_31, _belong31, _identified31, _enchantLevel31, v_result, v_item_db_index31);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId32 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId32, _quality32, _equipType32, _attrId32, _attrValue32,
								_slotId1_32, _optId1_32, _optValue1_32, _slotId2_32, _optId2_32, _optValue2_32, 
								_slotId3_32, _optId3_32, _optValue3_32, _slotId4_32, _optId4_32, _optValue4_32, 
								_slotId5_32, _optId5_32, _optValue5_32, _slotId6_32, _optId6_32, _optValue6_32, 
								_slotId7_32, _optId7_32, _optValue7_32, _belong32, _identified32, _enchantLevel32, v_result, v_item_db_index32);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId33 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId33, _quality33, _equipType33, _attrId33, _attrValue33,
								_slotId1_33, _optId1_33, _optValue1_33, _slotId2_33, _optId2_33, _optValue2_33, 
								_slotId3_33, _optId3_33, _optValue3_33, _slotId4_33, _optId4_33, _optValue4_33, 
								_slotId5_33, _optId5_33, _optValue5_33, _slotId6_33, _optId6_33, _optValue6_33, 
								_slotId7_33, _optId7_33, _optValue7_33, _belong33, _identified33, _enchantLevel33, v_result, v_item_db_index33);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId34 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId34, _quality34, _equipType34, _attrId34, _attrValue34,
								_slotId1_34, _optId1_34, _optValue1_34, _slotId2_34, _optId2_34, _optValue2_34, 
								_slotId3_34, _optId3_34, _optValue3_34, _slotId4_34, _optId4_34, _optValue4_34, 
								_slotId5_34, _optId5_34, _optValue5_34, _slotId6_34, _optId6_34, _optValue6_34, 
								_slotId7_34, _optId7_34, _optValue7_34, _belong34, _identified34, _enchantLevel34, v_result, v_item_db_index34);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId35 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId35, _quality35, _equipType35, _attrId35, _attrValue35,
								_slotId1_35, _optId1_35, _optValue1_35, _slotId2_35, _optId2_35, _optValue2_35, 
								_slotId3_35, _optId3_35, _optValue3_35, _slotId4_35, _optId4_35, _optValue4_35, 
								_slotId5_35, _optId5_35, _optValue5_35, _slotId6_35, _optId6_35, _optValue6_35, 
								_slotId7_35, _optId7_35, _optValue7_35, _belong35, _identified35, _enchantLevel35, v_result, v_item_db_index35);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId36 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId36, _quality36, _equipType36, _attrId36, _attrValue36,
								_slotId1_36, _optId1_36, _optValue1_36, _slotId2_36, _optId2_36, _optValue2_36, 
								_slotId3_36, _optId3_36, _optValue3_36, _slotId4_36, _optId4_36, _optValue4_36, 
								_slotId5_36, _optId5_36, _optValue5_36, _slotId6_36, _optId6_36, _optValue6_36, 
								_slotId7_36, _optId7_36, _optValue7_36, _belong36, _identified36, _enchantLevel36, v_result, v_item_db_index36);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId37 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId37, _quality37, _equipType37, _attrId37, _attrValue37,
								_slotId1_37, _optId1_37, _optValue1_37, _slotId2_37, _optId2_37, _optValue2_37, 
								_slotId3_37, _optId3_37, _optValue3_37, _slotId4_37, _optId4_37, _optValue4_37, 
								_slotId5_37, _optId5_37, _optValue5_37, _slotId6_37, _optId6_37, _optValue6_37, 
								_slotId7_37, _optId7_37, _optValue7_37, _belong37, _identified37, _enchantLevel37, v_result, v_item_db_index37);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId38 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId38, _quality38, _equipType38, _attrId38, _attrValue38,
								_slotId1_38, _optId1_38, _optValue1_38, _slotId2_38, _optId2_38, _optValue2_38, 
								_slotId3_38, _optId3_38, _optValue3_38, _slotId4_38, _optId4_38, _optValue4_38, 
								_slotId5_38, _optId5_38, _optValue5_38, _slotId6_38, _optId6_38, _optValue6_38, 
								_slotId7_38, _optId7_38, _optValue7_38, _belong38, _identified38, _enchantLevel38, v_result, v_item_db_index38);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId39 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId39, _quality39, _equipType39, _attrId39, _attrValue39,
								_slotId1_39, _optId1_39, _optValue1_39, _slotId2_39, _optId2_39, _optValue2_39, 
								_slotId3_39, _optId3_39, _optValue3_39, _slotId4_39, _optId4_39, _optValue4_39, 
								_slotId5_39, _optId5_39, _optValue5_39, _slotId6_39, _optId6_39, _optValue6_39, 
								_slotId7_39, _optId7_39, _optValue7_39, _belong39, _identified39, _enchantLevel39, v_result, v_item_db_index39);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId40 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId40, _quality40, _equipType40, _attrId40, _attrValue40,
								_slotId1_40, _optId1_40, _optValue1_40, _slotId2_40, _optId2_40, _optValue2_40, 
								_slotId3_40, _optId3_40, _optValue3_40, _slotId4_40, _optId4_40, _optValue4_40, 
								_slotId5_40, _optId5_40, _optValue5_40, _slotId6_40, _optId6_40, _optValue6_40, 
								_slotId7_40, _optId7_40, _optValue7_40, _belong40, _identified40, _enchantLevel40, v_result, v_item_db_index40);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId41 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId41, _quality41, _equipType41, _attrId41, _attrValue41,
								_slotId1_41, _optId1_41, _optValue1_41, _slotId2_41, _optId2_41, _optValue2_41, 
								_slotId3_41, _optId3_41, _optValue3_41, _slotId4_41, _optId4_41, _optValue4_41, 
								_slotId5_41, _optId5_41, _optValue5_41, _slotId6_41, _optId6_41, _optValue6_41, 
								_slotId7_41, _optId7_41, _optValue7_41, _belong41, _identified41, _enchantLevel41, v_result, v_item_db_index41);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId42 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId42, _quality42, _equipType42, _attrId42, _attrValue42,
								_slotId1_42, _optId1_42, _optValue1_42, _slotId2_42, _optId2_42, _optValue2_42, 
								_slotId3_42, _optId3_42, _optValue3_42, _slotId4_42, _optId4_42, _optValue4_42, 
								_slotId5_42, _optId5_42, _optValue5_42, _slotId6_42, _optId6_42, _optValue6_42, 
								_slotId7_42, _optId7_42, _optValue7_42, _belong42, _identified42, _enchantLevel42, v_result, v_item_db_index42);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId43 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId43, _quality43, _equipType43, _attrId43, _attrValue43,
								_slotId1_43, _optId1_43, _optValue1_43, _slotId2_43, _optId2_43, _optValue2_43, 
								_slotId3_43, _optId3_43, _optValue3_43, _slotId4_43, _optId4_43, _optValue4_43, 
								_slotId5_43, _optId5_43, _optValue5_43, _slotId6_43, _optId6_43, _optValue6_43, 
								_slotId7_43, _optId7_43, _optValue7_43, _belong43, _identified43, _enchantLevel43, v_result, v_item_db_index43);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId44 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId44, _quality44, _equipType44, _attrId44, _attrValue44,
								_slotId1_44, _optId1_44, _optValue1_44, _slotId2_44, _optId2_44, _optValue2_44, 
								_slotId3_44, _optId3_44, _optValue3_44, _slotId4_44, _optId4_44, _optValue4_44, 
								_slotId5_44, _optId5_44, _optValue5_44, _slotId6_44, _optId6_44, _optValue6_44, 
								_slotId7_44, _optId7_44, _optValue7_44, _belong44, _identified44, _enchantLevel44, v_result, v_item_db_index44);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId45 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId45, _quality45, _equipType45, _attrId45, _attrValue45,
								_slotId1_45, _optId1_45, _optValue1_45, _slotId2_45, _optId2_45, _optValue2_45, 
								_slotId3_45, _optId3_45, _optValue3_45, _slotId4_45, _optId4_45, _optValue4_45, 
								_slotId5_45, _optId5_45, _optValue5_45, _slotId6_45, _optId6_45, _optValue6_45, 
								_slotId7_45, _optId7_45, _optValue7_45, _belong45, _identified45, _enchantLevel45, v_result, v_item_db_index45);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId46 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId46, _quality46, _equipType46, _attrId46, _attrValue46,
								_slotId1_46, _optId1_46, _optValue1_46, _slotId2_46, _optId2_46, _optValue2_46, 
								_slotId3_46, _optId3_46, _optValue3_46, _slotId4_46, _optId4_46, _optValue4_46, 
								_slotId5_46, _optId5_46, _optValue5_46, _slotId6_46, _optId6_46, _optValue6_46, 
								_slotId7_46, _optId7_46, _optValue7_46, _belong46, _identified46, _enchantLevel46, v_result, v_item_db_index46);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId47 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId47, _quality47, _equipType47, _attrId47, _attrValue47,
								_slotId1_47, _optId1_47, _optValue1_47, _slotId2_47, _optId2_47, _optValue2_47, 
								_slotId3_47, _optId3_47, _optValue3_47, _slotId4_47, _optId4_47, _optValue4_47, 
								_slotId5_47, _optId5_47, _optValue5_47, _slotId6_47, _optId6_47, _optValue6_47, 
								_slotId7_47, _optId7_47, _optValue7_47, _belong47, _identified47, _enchantLevel47, v_result, v_item_db_index47);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId48 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId48, _quality48, _equipType48, _attrId48, _attrValue48,
								_slotId1_48, _optId1_48, _optValue1_48, _slotId2_48, _optId2_48, _optValue2_48, 
								_slotId3_48, _optId3_48, _optValue3_48, _slotId4_48, _optId4_48, _optValue4_48, 
								_slotId5_48, _optId5_48, _optValue5_48, _slotId6_48, _optId6_48, _optValue6_48, 
								_slotId7_48, _optId7_48, _optValue7_48, _belong48, _identified48, _enchantLevel48, v_result, v_item_db_index48);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF _itemId49 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId49, _quality49, _equipType49, _attrId49, _attrValue49,
								_slotId1_49, _optId1_49, _optValue1_49, _slotId2_49, _optId2_49, _optValue2_49, 
								_slotId3_49, _optId3_49, _optValue3_49, _slotId4_49, _optId4_49, _optValue4_49, 
								_slotId5_49, _optId5_49, _optValue5_49, _slotId6_49, _optId6_49, _optValue6_49, 
								_slotId7_49, _optId7_49, _optValue7_49, _belong49, _identified49, _enchantLevel49, v_result, v_item_db_index49);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId50 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert2( _userid, _charid, _itemId50, _quality50, _equipType50, _attrId50, _attrValue50,
								_slotId1_50, _optId1_50, _optValue1_50, _slotId2_50, _optId2_50, _optValue2_50, 
								_slotId3_50, _optId3_50, _optValue3_50, _slotId4_50, _optId4_50, _optValue4_50, 
								_slotId5_50, _optId5_50, _optValue5_50, _slotId6_50, _optId6_50, _optValue6_50, 
								_slotId7_50, _optId7_50, _optValue7_50, _belong50, _identified50, _enchantLevel50, v_result, v_item_db_index50);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId11 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType11, _costItemId11, _costItemValue11, v_result, v_item_final_qty11);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId12 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType12, _costItemId12, _costItemValue12, v_result, v_item_final_qty12);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId13 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType13, _costItemId13, _costItemValue13, v_result, v_item_final_qty13);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId14 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType14, _costItemId14, _costItemValue14, v_result, v_item_final_qty14);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId15 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType15, _costItemId15, _costItemValue15, v_result, v_item_final_qty15);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId16 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType16, _costItemId16, _costItemValue16, v_result, v_item_final_qty16);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId17 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType17, _costItemId17, _costItemValue17, v_result, v_item_final_qty17);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId18 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType18, _costItemId18, _costItemValue18, v_result, v_item_final_qty18);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId19 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType19, _costItemId19, _costItemValue19, v_result, v_item_final_qty19);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId20 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType20, _costItemId20, _costItemValue20, v_result, v_item_final_qty20);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId21 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType21, _costItemId21, _costItemValue21, v_result, v_item_final_qty21);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId22 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType22, _costItemId22, _costItemValue22, v_result, v_item_final_qty22);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId23 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType23, _costItemId23, _costItemValue23, v_result, v_item_final_qty23);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId24 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType24, _costItemId24, _costItemValue24, v_result, v_item_final_qty24);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId25 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType25, _costItemId25, _costItemValue25, v_result, v_item_final_qty25);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId26 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType26, _costItemId26, _costItemValue26, v_result, v_item_final_qty26);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId27 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType27, _costItemId27, _costItemValue27, v_result, v_item_final_qty27);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId28 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType28, _costItemId28, _costItemValue28, v_result, v_item_final_qty28);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId29 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType29, _costItemId29, _costItemValue29, v_result, v_item_final_qty29);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId30 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType30, _costItemId30, _costItemValue30, v_result, v_item_final_qty30);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId31 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType31, _costItemId31, _costItemValue31, v_result, v_item_final_qty31);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId32 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType32, _costItemId32, _costItemValue32, v_result, v_item_final_qty32);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId33 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType33, _costItemId33, _costItemValue33, v_result, v_item_final_qty33);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId34 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType34, _costItemId34, _costItemValue34, v_result, v_item_final_qty34);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId35 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType35, _costItemId35, _costItemValue35, v_result, v_item_final_qty35);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId36 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType36, _costItemId36, _costItemValue36, v_result, v_item_final_qty36);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId37 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType37, _costItemId37, _costItemValue37, v_result, v_item_final_qty37);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId38 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType38, _costItemId38, _costItemValue38, v_result, v_item_final_qty38);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId39 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType39, _costItemId39, _costItemValue39, v_result, v_item_final_qty39);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId40 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType40, _costItemId40, _costItemValue40, v_result, v_item_final_qty40);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId41 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType41, _costItemId41, _costItemValue41, v_result, v_item_final_qty41);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
		IF 0 < _costItemId42 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType42, _costItemId42, _costItemValue42, v_result, v_item_final_qty42);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId43 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType43, _costItemId43, _costItemValue43, v_result, v_item_final_qty43);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId44 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType44, _costItemId44, _costItemValue44, v_result, v_item_final_qty44);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId45 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType45, _costItemId45, _costItemValue45, v_result, v_item_final_qty45);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId46 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType46, _costItemId46, _costItemValue46, v_result, v_item_final_qty46);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId47 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType47, _costItemId47, _costItemValue47, v_result, v_item_final_qty47);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId48 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType48, _costItemId48, _costItemValue48, v_result, v_item_final_qty48);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId49 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType49, _costItemId49, _costItemValue49, v_result, v_item_final_qty49);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId50 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType50, _costItemId50, _costItemValue50, v_result, v_item_final_qty50);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value4, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value9, _bookbelong9, v_result, v_book_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId11 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId11, _percent11, _liftTime11, _value11, _bookbelong11, v_result, v_book_db_index11);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId12 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId12, _percent12, _liftTime12, _value12, _bookbelong12, v_result, v_book_db_index12);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId13 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId13, _percent13, _liftTime13, _value13, _bookbelong13, v_result, v_book_db_index13);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId14 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId14, _percent14, _liftTime14, _value14, _bookbelong14, v_result, v_book_db_index14);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId15 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId15, _percent15, _liftTime15, _value15, _bookbelong15, v_result, v_book_db_index15);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId16 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId16, _percent16, _liftTime16, _value16, _bookbelong16, v_result, v_book_db_index16);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId17 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId17, _percent17, _liftTime17, _value17, _bookbelong17, v_result, v_book_db_index17);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId18 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId18, _percent18, _liftTime18, _value18, _bookbelong18, v_result, v_book_db_index18);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId19 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId19, _percent19, _liftTime19, _value19, _bookbelong19, v_result, v_book_db_index19);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId20 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId20, _percent20, _liftTime20, _value20, _bookbelong20, v_result, v_book_db_index20);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF 0 < _bookId21 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId21, _percent21, _liftTime21, _value21, _bookbelong21, v_result, v_book_db_index21);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId22 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId22, _percent22, _liftTime22, _value22, _bookbelong22, v_result, v_book_db_index22);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId23 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId23, _percent23, _liftTime23, _value23, _bookbelong23, v_result, v_book_db_index23);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId24 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId24, _percent24, _liftTime24, _value24, _bookbelong24, v_result, v_book_db_index24);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId25 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId25, _percent25, _liftTime25, _value25, _bookbelong25, v_result, v_book_db_index25);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId26 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId26, _percent26, _liftTime26, _value26, _bookbelong26, v_result, v_book_db_index26);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId27 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId27, _percent27, _liftTime27, _value27, _bookbelong27, v_result, v_book_db_index27);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId28 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId28, _percent28, _liftTime28, _value28, _bookbelong28, v_result, v_book_db_index28);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId29 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId29, _percent29, _liftTime29, _value29, _bookbelong29, v_result, v_book_db_index29);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId30 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId30, _percent30, _liftTime30, _value30, _bookbelong30, v_result, v_book_db_index30);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF 0 < _bookId31 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId31, _percent31, _liftTime31, _value31, _bookbelong31, v_result, v_book_db_index31);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId32 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId32, _percent32, _liftTime32, _value32, _bookbelong32, v_result, v_book_db_index32);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId33 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId33, _percent33, _liftTime33, _value33, _bookbelong33, v_result, v_book_db_index33);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId34 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId34, _percent34, _liftTime34, _value34, _bookbelong34, v_result, v_book_db_index34);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId35 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId35, _percent35, _liftTime35, _value35, _bookbelong35, v_result, v_book_db_index35);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId36 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId36, _percent36, _liftTime36, _value36, _bookbelong36, v_result, v_book_db_index36);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId37 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId37, _percent37, _liftTime37, _value37, _bookbelong37, v_result, v_book_db_index37);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId38 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId38, _percent38, _liftTime38, _value38, _bookbelong38, v_result, v_book_db_index38);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId39 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId39, _percent39, _liftTime39, _value39, _bookbelong39, v_result, v_book_db_index39);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId40 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId40, _percent40, _liftTime40, _value40, _bookbelong40, v_result, v_book_db_index40);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF 0 < _bookId41 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId41, _percent41, _liftTime41, _value41, _bookbelong41, v_result, v_book_db_index41);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        IF 0 < _bookId42 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId42, _percent42, _liftTime42, _value42, _bookbelong42, v_result, v_book_db_index42);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId43 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId43, _percent43, _liftTime43, _value43, _bookbelong43, v_result, v_book_db_index43);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId44 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId44, _percent44, _liftTime44, _value44, _bookbelong44, v_result, v_book_db_index44);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId45 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId45, _percent45, _liftTime45, _value45, _bookbelong45, v_result, v_book_db_index45);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId46 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId46, _percent46, _liftTime46, _value46, _bookbelong46, v_result, v_book_db_index46);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId47 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId47, _percent47, _liftTime47, _value47, _bookbelong47, v_result, v_book_db_index47);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId48 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId48, _percent48, _liftTime48, _value48, _bookbelong48, v_result, v_book_db_index48);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId49 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId49, _percent49, _liftTime49, _value49, _bookbelong49, v_result, v_book_db_index49);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId50 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId50, _percent50, _liftTime50, _value50, _bookbelong50, v_result, v_book_db_index50);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
				, v_finalqty, v_finalgold, v_finalcashA-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
                , v_item_db_index11, v_item_db_index12, v_item_db_index13, v_item_db_index14, v_item_db_index15, v_item_db_index16, v_item_db_index17, v_item_db_index18, v_item_db_index19, v_item_db_index20
                , v_item_db_index21, v_item_db_index22, v_item_db_index23, v_item_db_index24, v_item_db_index25, v_item_db_index26, v_item_db_index27, v_item_db_index28, v_item_db_index29, v_item_db_index30
                , v_item_db_index31, v_item_db_index32, v_item_db_index33, v_item_db_index34, v_item_db_index35, v_item_db_index36, v_item_db_index37, v_item_db_index38, v_item_db_index39, v_item_db_index40
                , v_item_db_index41, v_item_db_index42, v_item_db_index43, v_item_db_index44, v_item_db_index45, v_item_db_index46, v_item_db_index47, v_item_db_index48, v_item_db_index49, v_item_db_index50
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10
                , v_book_db_index11, v_book_db_index12, v_book_db_index13, v_book_db_index14, v_book_db_index15, v_book_db_index16, v_book_db_index17, v_book_db_index18, v_book_db_index19, v_book_db_index20
                , v_book_db_index21, v_book_db_index22, v_book_db_index23, v_book_db_index24, v_book_db_index25, v_book_db_index26, v_book_db_index27, v_book_db_index28, v_book_db_index29, v_book_db_index30
                , v_book_db_index31, v_book_db_index32, v_book_db_index33, v_book_db_index34, v_book_db_index35, v_book_db_index36, v_book_db_index37, v_book_db_index38, v_book_db_index39, v_book_db_index40
                , v_book_db_index41, v_book_db_index42, v_book_db_index43, v_book_db_index44, v_book_db_index45, v_book_db_index46, v_book_db_index47, v_book_db_index48, v_book_db_index49, v_book_db_index50
                ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usertitle_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usertitle_insert`( 
	IN p_UserID 		BIGINT
,	IN p_TitleID1		INT
, 	IN p_ExpireTime1	BIGINT
,	IN p_TitleID2		INT
, 	IN p_ExpireTime2	BIGINT
,	IN p_TitleID3		INT
, 	IN p_ExpireTime3	BIGINT
,	IN p_TitleID4		INT
, 	IN p_ExpireTime4	BIGINT
,	IN p_TitleID5		INT
, 	IN p_ExpireTime5	BIGINT
,	IN p_TitleID6		INT
, 	IN p_ExpireTime6	BIGINT
,	IN p_TitleID7		INT
, 	IN p_ExpireTime7	BIGINT
,	IN p_TitleID8		INT
, 	IN p_ExpireTime8	BIGINT
,	IN p_TitleID9		INT
, 	IN p_ExpireTime9	BIGINT
,	IN p_TitleID10		INT
, 	IN p_ExpireTime10	BIGINT
,	IN p_TitleID11		INT
, 	IN p_ExpireTime11	BIGINT
,	IN p_TitleID12		INT
, 	IN p_ExpireTime12	BIGINT
,	IN p_TitleID13		INT
, 	IN p_ExpireTime13	BIGINT
,	IN p_TitleID14		INT
, 	IN p_ExpireTime14	BIGINT
,	IN p_TitleID15		INT
, 	IN p_ExpireTime15	BIGINT
,	IN p_TitleID16		INT
, 	IN p_ExpireTime16	BIGINT
,	IN p_TitleID17		INT
, 	IN p_ExpireTime17	BIGINT
,	IN p_TitleID18		INT
, 	IN p_ExpireTime18	BIGINT
,	IN p_TitleID19		INT
, 	IN p_ExpireTime19	BIGINT
,	IN p_TitleID20		INT
, 	IN p_ExpireTime20	BIGINT
)
    COMMENT '칭호 획득'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
        -- 1
        IF 0 < p_TitleID1 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID1) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID1);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID1)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID1;
                
			END IF;

			IF 0 < p_ExpireTime1 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID1, FROM_UNIXTIME(p_ExpireTime1))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime1);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;
			END IF;
		END IF;
        
        -- 2
        IF 0 < p_TitleID2 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID2) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID2);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID2)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID2;
                
			END IF;

			IF 0 < p_ExpireTime2 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID2, FROM_UNIXTIME(p_ExpireTime2))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime2);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 3
        IF 0 < p_TitleID3 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID3) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID3);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID3)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID3;
                
			END IF;

			IF 0 < p_ExpireTime3 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID3, FROM_UNIXTIME(p_ExpireTime3))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime3);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 4
        IF 0 < p_TitleID4 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID4) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID4);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID4)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID4;
                
			END IF;

			IF 0 < p_ExpireTime4 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID4, FROM_UNIXTIME(p_ExpireTime4))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime4);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 5
        IF 0 < p_TitleID5 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID5) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID5);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID5)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID5;
                
			END IF;

			IF 0 < p_ExpireTime5 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID5, FROM_UNIXTIME(p_ExpireTime5))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime5);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 6
        IF 0 < p_TitleID6 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID6) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID6);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID6)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID6;
                
			END IF;

			IF 0 < p_ExpireTime6 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID6, FROM_UNIXTIME(p_ExpireTime6))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime6);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 7
        IF 0 < p_TitleID7 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID7) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID7);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID7)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID7;
                
			END IF;

			IF 0 < p_ExpireTime7 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID7, FROM_UNIXTIME(p_ExpireTime7))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime7);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 8
        IF 0 < p_TitleID8 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID8) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID8);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID8)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID8;
                
			END IF;

			IF 0 < p_ExpireTime8 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID8, FROM_UNIXTIME(p_ExpireTime8))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime8);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 9
        IF 0 < p_TitleID9 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID9) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID9);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID9)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID9;
                
			END IF;

			IF 0 < p_ExpireTime9 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID9, FROM_UNIXTIME(p_ExpireTime9))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime9);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 10
        IF 0 < p_TitleID10 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID10) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID10);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID10)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID10;
                
			END IF;
			
			IF 0 < p_ExpireTime10 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID10, FROM_UNIXTIME(p_ExpireTime10))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime10);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 11
        IF 0 < p_TitleID11 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID11) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID11);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID11)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID11;
                
			END IF;

			IF 0 < p_ExpireTime11 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID11, FROM_UNIXTIME(p_ExpireTime11))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime11);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 12
        IF 0 < p_TitleID12 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID12) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID12);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID12)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID12;
                
			END IF;

			IF 0 < p_ExpireTime12 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID12, FROM_UNIXTIME(p_ExpireTime12))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime12);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 13
        IF 0 < p_TitleID13 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID13) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID13);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID13)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID13;
                
			END IF;

			IF 0 < p_ExpireTime13 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID13, FROM_UNIXTIME(p_ExpireTime13))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime13);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 14
        IF 0 < p_TitleID14 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID14) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID14);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID14)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID14;
                
			END IF;

			IF 0 < p_ExpireTime14 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID14, FROM_UNIXTIME(p_ExpireTime14))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime14);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 15
        IF 0 < p_TitleID15 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID15) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID15);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID15)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID15;
                
			END IF;

			IF 0 < p_ExpireTime15 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID15, FROM_UNIXTIME(p_ExpireTime15))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime15);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 16
        IF 0 < p_TitleID16 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID16) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID16);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID16)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID16;
                
			END IF;

			IF 0 < p_ExpireTime16 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID16, FROM_UNIXTIME(p_ExpireTime16))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime16);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 17
        IF 0 < p_TitleID17 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID17) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID17);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID17)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID17;
                
			END IF;

			IF 0 < p_ExpireTime17 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID17, FROM_UNIXTIME(p_ExpireTime17))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime17);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;
        
        -- 18
        IF 0 < p_TitleID18 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID18) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID18);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID18)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID18;
                
			END IF;

			IF 0 < p_ExpireTime18 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID18, FROM_UNIXTIME(p_ExpireTime18))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime18);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 19
        IF 0 < p_TitleID19 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID19) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID19);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID19)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID19;
                
			END IF;

			IF 0 < p_ExpireTime19 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID19, FROM_UNIXTIME(p_ExpireTime19))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime19);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
        END IF;
        
        -- 20
        IF 0 < p_TitleID20 THEN
			IF NOT EXISTS (SELECT * FROM user_title where user_idx = p_UserID AND title_id = p_TitleID20) THEN
				INSERT INTO user_title(user_idx, title_id) 
				VALUE (p_UserID, p_TitleID20);
				
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 1101;
					LEAVE root;
				END IF;
                
                -- RDT_TITLE_ACQUIRE = 5,		// 칭호 획득
				INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value)
					VALUES (p_UserID, 0, 5, p_TitleID20)
				ON DUPLICATE KEY UPDATE type_id = 5, element_value = p_TitleID20;
                
			END IF;

			IF 0 < p_ExpireTime20 THEN
				INSERT INTO user_title_expire (user_idx, title_id, title_expiredate)
				VALUE (p_UserID, p_TitleID20, FROM_UNIXTIME(p_ExpireTime20))
				ON DUPLICATE KEY UPDATE title_expiredate = FROM_UNIXTIME(p_ExpireTime20);
				
				IF ROW_COUNT() <= 0 THEN
					SET v_result = 1102;
					LEAVE root;
				END IF;            
			END IF;
		END IF;

        -- 
		DELETE FROM user_title_condition 
        WHERE user_idx = p_UserID 
        AND title_id IN (p_TitleID1, p_TitleID2, p_TitleID3, p_TitleID4, p_TitleID5, p_TitleID6, p_TitleID7, p_TitleID8, p_TitleID9, p_TitleID10, p_TitleID11, p_TitleID12, p_TitleID13, p_TitleID14, p_TitleID15, p_TitleID16, p_TitleID17, p_TitleID18, p_TitleID19, p_TitleID20);
        
	END;
		
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usertitle_insert_useitem` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usertitle_insert_useitem`( 
	IN p_UserID		BIGINT
,	IN p_CharID		BIGINT	
,	IN p_ItemID		INT		
,	IN p_UseCount	INT		
,	IN p_TitleID	INT 	
)
    COMMENT '아이템 사용으로 칭호 획득'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_item_count	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_item_count;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_ItemID <= 0 OR p_UseCount <= 0 THEN
			SET v_result = 100;
            LEAVE root;
        END IF;
    
		
        IF 0 < p_ItemID AND 0 < p_UseCount THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_UseCount, v_final_item_count, v_result);
			IF v_result <> 0 THEN
				SET v_result = 101;
				LEAVE root;
			END IF;
		END IF;
		
		
		INSERT INTO user_title(user_idx, title_id) 
		VALUE (p_UserID, p_TitleID);
		
		IF ROW_COUNT() <= 0 THEN 
			SET v_result = 102;
			LEAVE root;
		END IF;
 
        
		DELETE FROM user_title_condition 
        WHERE user_idx = p_UserID 
        AND title_id = p_TitleID;
 
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_item_count;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_usertitle_update_selecttype` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_usertitle_update_selecttype`( 
	IN _userid 		BIGINT
,	IN _charid 		BIGINT
,	IN _newtitleid	INT 
)
    COMMENT '칭호 변경'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE result 				INT DEFAULT 0;
    
    DECLARE v_titldID			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
		ROLLBACK;
                
		SELECT result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
        
        IF _newtitleid > 0 THEN 
        
			
			SELECT title_id INTO v_titldID
			FROM user_title
			WHERE user_idx = _userid AND title_id = _newtitleid;
			
			IF FOUND_ROWS() <= 0 THEN
				SET result = 1001;	
				LEAVE root;
			END IF;
		
			
			UPDATE char_info
			SET equip_title_id = _newtitleid
			WHERE char_idx = _charid;
			
			IF ROW_COUNT() <= 0 THEN 
				SET result = 1002;	
				LEAVE root;
			END IF;
        ELSE
        
			
			UPDATE char_info
			SET equip_title_id = 0
			WHERE char_idx = _charid;
			
			IF ROW_COUNT() <= 0 THEN 
				SET result = 1003;	
				LEAVE root;
			END IF;
        END IF;
        
	END;
		
	if 0 = result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_composite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_composite`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN  p_VehicleGrade 	TINYINT
,	IN  p_AddFailCount	INT

,	IN	p_VehicleConfirmDuration 		INT

,	IN	_arrayResItem 		VARCHAR(4096)	-- 합성재료 
	
,	IN	p_failVehicleId1	INT,	IN	p_failVehicleId2	INT,	IN	p_failVehicleId3	INT,	IN	p_failVehicleId4	INT,	IN	p_failVehicleId5	INT
,	IN	p_failVehicleId6	INT,	IN	p_failVehicleId7	INT,	IN	p_failVehicleId8	INT,	IN	p_failVehicleId9	INT,	IN	p_failVehicleId10	INT

,	IN	p_VehicleId1	INT,	IN	p_VehicleId2	INT,	IN	p_VehicleId3	INT,	IN	p_VehicleId4	INT,	IN	p_VehicleId5	INT
,	IN	p_VehicleId6	INT,	IN	p_VehicleId7	INT,	IN	p_VehicleId8	INT,	IN	p_VehicleId9	INT,	IN	p_VehicleId10	INT
)
    COMMENT '탈것 합성'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	# Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
    DECLARE vehicleDBIndex1 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex2 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex3 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex4 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex5 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex6 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex7 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex8 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex9 	BIGINT DEFAULT 0;
    DECLARE vehicleDBIndex10 	BIGINT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, vehicleDBIndex1, vehicleDBIndex2, vehicleDBIndex3, vehicleDBIndex4, vehicleDBIndex5, vehicleDBIndex6, vehicleDBIndex7, vehicleDBIndex8, vehicleDBIndex9, vehicleDBIndex10;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
					CALL sp_mmo_notrans_uservehicle_delete(p_UserID, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
        
        -- 합성 횟수
        IF 0 < p_AddFailCount THEN
			INSERT INTO user_vehicle_composite (user_idx, vehicle_grade, fail_count)
									VALUES (p_UserID, p_VehicleGrade, p_AddFailCount)
				ON DUPLICATE KEY UPDATE user_idx = p_UserID, vehicle_grade = p_VehicleGrade,
										fail_count = (@_finalQty := IF( 0 <= (fail_count + p_AddFailCount), fail_count + p_AddFailCount, 0));
		END IF;
        
        -- 합성 결과
		IF 0 < p_failVehicleId1 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId2 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId3 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId4 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId5 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId6 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId7 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId8 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId9 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_failVehicleId10 THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_failVehicleId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

		--  확정대기
        IF 0 < p_VehicleId1 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId1, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex1;
		END IF;

		IF 0 < p_VehicleId2 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId2, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex2;
		END IF;
        
        IF 0 < p_VehicleId3 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId3, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex3;
		END IF;
        
        IF 0 < p_VehicleId4 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId4, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex4;
		END IF;
        
        IF 0 < p_VehicleId5 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId5, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex5;
		END IF;
        
        IF 0 < p_VehicleId6 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId6, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex6;
		END IF;
        
        IF 0 < p_VehicleId7 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId7, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex7;
		END IF;
        
        IF 0 < p_VehicleId8 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId8, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex8;
		END IF;
        
        IF 0 < p_VehicleId9 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId9, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex9;
		END IF;
        
        IF 0 < p_VehicleId10 THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleId10, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 2024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex10;
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, vehicleDBIndex1, vehicleDBIndex2, vehicleDBIndex3, vehicleDBIndex4, vehicleDBIndex5, vehicleDBIndex6, vehicleDBIndex7, vehicleDBIndex8, vehicleDBIndex9, vehicleDBIndex10;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_confirm_pending_acquire` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_confirm_pending_acquire`(
	IN	p_UserID 		BIGINT
-- ,	IN	p_CharID 		BIGINT

,	IN  p_VehicleCPIdx 		BIGINT

,	IN	p_VehicleId	INT
)
    COMMENT '탈것 확정대기 수령'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    DECLARE db_vehicle_id 		INT	DEFAULT 0;
    DECLARE v_finalcount		INT	DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_finalcount;
	END;

	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT vehicle_id INTO db_vehicle_id FROM user_vehicle_confirm_pending WHERE user_idx = p_UserID AND vehicle_cp_idx = p_VehicleCPIdx;
        IF ROW_COUNT() = 0 THEN
			SET v_result = 2050;
			LEAVE root;
		END IF;
        
        IF db_vehicle_id <> p_VehicleId THEN
			SET v_result = 2051;
			LEAVE root;
		END IF;
        
        -- 
        DELETE FROM user_vehicle_confirm_pending WHERE user_idx = p_UserID AND vehicle_cp_idx = p_VehicleCPIdx;
        
        -- 
        SET @_finalcount = 0;
        
        INSERT INTO user_vehicle(user_idx, vehicle_id, vehicle_level, vehicle_value)
			VALUES(p_UserID, p_VehicleId, 1, 0)
            ON DUPLICATE KEY UPDATE vehicle_value = (@_finalcount := vehicle_value + 1);
            
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 429;
            LEAVE root;
        END IF;
        
		SET v_finalcount = @_finalcount;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, v_finalcount;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_confirm_pending_change` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_confirm_pending_change`(
	IN 	_user_idx		BIGINT   
-- ,	IN 	_char_idx		BIGINT   

,	IN 	_vehiclecpidx		BIGINT   
, 	IN 	_costCashA		INT
,	IN 	_vehicleId			INT

-- , 	IN 	_costGold		INT
-- , 	IN 	_costCashB		INT

-- , 	IN 	_item_id		INT
-- , 	IN 	_use_count		INT
)
    COMMENT '탈것 확정대기 변경'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
	DECLARE v_change_count		TINYINT DEFAULT 0;
    DECLARE v_finalgold			BIGINT DEFAULT 0; 
    DECLARE v_finalCashA		BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB		BIGINT DEFAULT 0; 
    DECLARE v_finalcount		INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_finalCashA;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		-- call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, v_finalcount, v_result);
        -- IF v_result != 0 THEN 
        --     LEAVE root;
        -- END IF;
    
        -- CALL sp_mmo_notrans_charinfo_delete_gold(_user_idx, _char_idx, _costGold, v_finalgold, v_result);
		-- IF v_result <> 0 THEN
		--     LEAVE root;
		-- END IF;
        
        -- CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_old, v_cashA_Free_old, v_result);
		-- IF v_result != 0 THEN 
		-- 	LEAVE root;
		-- END IF; 	

		-- CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalcashA, v_result);		
        -- IF v_result != 0 THEN
		-- 	LEAVE root;
		-- END IF;
		
		-- CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_new, v_cashA_Free_new, v_result);
		-- IF v_result != 0 THEN 
		-- 	LEAVE root;
		-- END IF;
        
        SELECT change_count INTO v_change_count FROM user_vehicle_confirm_pending WHERE user_idx = _user_idx AND vehicle_cp_idx = _vehiclecpidx AND end_date > NOW();
        IF ROW_COUNT() = 0 THEN
			SET v_result = 2040;
			LEAVE root;
		END IF;
        
        -- 캐쉬 체크
        IF 0 >= _costCashA THEN 
			SET v_result = 2041;
			LEAVE root;
        END IF;
        
		CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalCashA, v_result);
		IF v_result != 0 THEN 
			SET v_result = 2042;
			LEAVE root;
		END IF;
		
		UPDATE user_vehicle_confirm_pending SET vehicle_id = _vehicleId, change_count = change_count + 1 WHERE user_idx = _user_idx AND vehicle_cp_idx = _vehiclecpidx;
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 2043;
            LEAVE root;
        END IF;
        
	END;    
    
    IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT v_result, v_finalCashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_insert`(
	IN 	_user_idx		BIGINT   
,	IN 	_char_idx		BIGINT   

,	IN 	_vehicle_id			INT
,	IN 	_vehicle_value		SMALLINT
-- ,	IN 	_equip			TINYINT

-- , 	IN 	_item_id		INT
-- , 	IN 	_use_count		INT
)
    COMMENT '탈것 획득'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
    DECLARE _finalcount	INT DEFAULT 0;
    -- DECLARE _vehicle_idx	BIGINT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result, _finalcount;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		
        -- call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, _finalcount, _result);
        -- IF _result != 0 THEN 
        --     LEAVE root;
        -- END IF;
        
        SET _finalcount = @_finalcount := _vehicle_value;
        
        INSERT INTO user_vehicle(user_idx, vehicle_id, vehicle_level, vehicle_value)
			VALUES(_user_idx, _vehicle_id, 1, _vehicle_value)
            ON DUPLICATE KEY UPDATE vehicle_value = (@_finalcount := vehicle_value + _vehicle_value);
            
        IF ROW_COUNT() = 0 THEN 
			SET _result = 429;
            LEAVE root;
        END IF;
        
		SET _finalcount = @_finalcount;
        
        -- SET _vehicle_idx = LAST_INSERT_ID();    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
	SELECT _result, _finalcount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_mileage_use` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_mileage_use`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

,	IN  p_VehicleGrade 		TINYINT
,	IN  p_CostFailCount	INT

,	IN	p_VehicleId	INT

,	IN	p_VehicleConfirmDuration 		INT
,	IN	p_vehicleConfirmId	INT
)
    COMMENT '탈것 합성 실패누적횟수 사용'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE v_fail_count	INT DEFAULT 0;
    DECLARE vehicleDBIndex 		BIGINT DEFAULT 0;
    DECLARE v_resitem_final_qty		INT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, vehicleDBIndex;
	END;


	START TRANSACTION;	

	root:
	BEGIN
    
		SELECT fail_count INTO v_fail_count FROM user_vehicle_composite WHERE user_idx = p_UserID AND vehicle_grade = p_VehicleGrade;
        IF ROW_COUNT() = 0 THEN
			SET v_result = 6021;
			LEAVE root;
		END IF;
        
        IF 0 > p_CostFailCount OR p_CostFailCount > v_fail_count THEN
			SET v_result = 6022;
			LEAVE root;
		END IF;
        
        UPDATE user_vehicle_composite
			SET fail_count = (@fail_count := IF( 0 < (fail_count - p_CostFailCount), fail_count - p_CostFailCount, 0))
			WHERE user_idx = p_UserID AND vehicle_grade = p_VehicleGrade;
		IF ROW_COUNT() = 0 THEN
			SET v_result = 6023;	
		    LEAVE root;
		END IF;
        
        -- 결과 (하위 등급 )
		IF 0 < p_VehicleId THEN
			CALL sp_mmo_notrans_uservehicle_insert(p_UserID, p_VehicleId, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        
		-- 결과 (상위 등급 )  확정대기
        IF 0 < p_VehicleConfirmId THEN
			INSERT INTO user_vehicle_confirm_pending (user_idx, vehicle_id, change_count, reg_date, end_date)
				VALUES (p_UserID, p_VehicleConfirmId, 0, NOW(), DATE_ADD(NOW(), INTERVAL p_VehicleConfirmDuration second));
			IF ROW_COUNT() = 0 THEN
				SET v_result = 6024;
				LEAVE root;
			END IF;
            
            SELECT LAST_INSERT_ID() INTO vehicleDBIndex;
            
		END IF;
		
	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result, vehicleDBIndex;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_update_equip` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_update_equip`(
	IN	_userid 		BIGINT
,	IN	_charid 		BIGINT
,	IN 	_equip_vehicle_id		INT
,	IN 	_show_vehicle_id		INT
)
    COMMENT '탈것 교체'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE _result 	INT DEFAULT 0;
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET _result := (v_errno * -1);
		ROLLBACK;
	
		SELECT _result;
	END;	

	START TRANSACTION;
	root:
	BEGIN
    
		IF 0 < _show_vehicle_id THEN 
        
			IF NOT EXISTS(SELECT 1 FROM user_vehicle WHERE user_idx = _userid AND vehicle_id = _show_vehicle_id) THEN
				SET _result = 6081;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET show_vehicleid = _show_vehicle_id WHERE char_idx = _charid;
		ELSE
			
			UPDATE char_info SET show_vehicleid = 0 WHERE char_idx = _charid;
            
		END IF;
    
        IF 0 < _equip_vehicle_id THEN 
        
			IF NOT EXISTS(SELECT 1 FROM user_vehicle WHERE user_idx = _userid AND vehicle_id = _equip_vehicle_id) THEN
				SET _result = 6082;
				LEAVE root;
            END IF;
        
			UPDATE char_info SET equip_vehicleid = _equip_vehicle_id WHERE char_idx = _charid;
            
        ELSE
			
			UPDATE char_info SET equip_vehicleid = 0 WHERE char_idx = _charid;
            
        END IF;
    
	END;    
    
    IF _result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT _result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_uservehicle_update_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_uservehicle_update_level`(
	IN 	_user_idx		BIGINT   
,	IN 	_char_idx		BIGINT   
        
,	IN 	_vehicle_id		BIGINT   
,	IN 	_level			INT

, 	IN 	_costGold		INT
, 	IN 	_costCashA		INT
-- , 	IN 	_costCashB		INT

, 	IN 	_item_id		INT
, 	IN 	_use_count		INT
)
    COMMENT '탈것 레벨업'
BEGIN
	DECLARE v_errno 	INT DEFAULT 0;
	DECLARE v_result 	INT DEFAULT 0;
    
    DECLARE v_finalgold			BIGINT DEFAULT 0; 
    DECLARE v_finalcashA		BIGINT DEFAULT 0; 
    -- DECLARE v_finalcashB		BIGINT DEFAULT 0; 
    DECLARE v_finalcount		INT DEFAULT 0;
	
	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
	
		SELECT v_result, v_finalcount, v_finalgold, v_finalcashA;
	END;	

	START TRANSACTION;
	root:
	BEGIN
		call sp_mmo_notrans_charinvenitem_delete(_user_idx, _char_idx, _item_id, _use_count, v_finalcount, v_result);
        IF v_result != 0 THEN 
            LEAVE root;
        END IF;
    
        CALL sp_mmo_notrans_charinfo_delete_gold(_user_idx, _char_idx, _costGold, v_finalgold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	

		CALL sp_mmo_notrans_userinfo_delete_cashA(_user_idx, _costCashA, v_finalcashA, v_result);		
        IF v_result != 0 THEN
			LEAVE root;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(_user_idx, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
		
		UPDATE user_vehicle SET vehicle_level = _level WHERE user_idx = _user_idx AND vehicle_id = _vehicle_id;
        IF ROW_COUNT() = 0 THEN 
			SET v_result = 100;
            LEAVE root;
        END IF;
	END;    
    
    IF v_result != 0 THEN
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;		
    
    SELECT v_result, v_finalcount, v_finalgold, v_finalcashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_userwarehouse_select_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_userwarehouse_select_all`(
	IN _useridx 		BIGINT		
)
    COMMENT '계정창고 읽어오기'
BEGIN	
	

    
    SELECT item_idx, item_id, quality_grade, item_level, item_exp, enchant_level, belong, remove_lock, identify
    FROM char_inven_equip
    WHERE user_idx = _useridx AND char_idx = 0;
	
	
	SELECT io.item_idx, io.slot_id, io.option_id, io.option_value
	FROM char_inven_equip ie
	INNER JOIN item_option io ON io.`item_idx` = ie.`item_idx`
	WHERE ie.`user_idx` = _useridx AND ie.`char_idx` = 0;
    
	
	SELECT io.item_idx, io.attribute_id, io.attribute_value
	FROM char_inven_equip ie
	INNER JOIN item_attribute io ON io.`item_idx` = ie.`item_idx`
    WHERE ie.`user_idx` = _useridx AND ie.`char_idx` = 0;
	
	
	SELECT io.item_idx, io.slot_id, io.id
	FROM char_inven_equip ie
	INNER JOIN item_jewels io ON io.`item_idx` = ie.`item_idx`
    WHERE ie.`user_idx` = _useridx AND ie.`char_idx` = 0;
    
	
    SELECT item_id, item_value
    FROM char_inven_item
    WHERE user_idx = _useridx AND char_idx = 0;
	
	
	SELECT item_idx, item_id, percent, life_time, ability_value, belong
	FROM char_inven_skillbook
	WHERE user_idx = _useridx  AND char_idx = 0;	
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_char_delete_gold_casha` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_char_delete_gold_casha`(
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT
,	IN p_UseGold		BIGINT	
,	IN p_UseCashA		BIGINT 	
)
    COMMENT '재화(골드, 캐쉬) 차감'
BEGIN
    DECLARE v_errno			INT DEFAULT 0;
	DECLARE v_result		INT DEFAULT 0;
    
    DECLARE v_final_gold	BIGINT DEFAULT 0;	
    DECLARE v_final_cashA	BIGINT DEFAULT 0;	
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
		SELECT v_result, v_final_gold, v_final_cashA;
	END;	    
    
    

	START TRANSACTION;
	
	root:
	BEGIN    
		
		-- IF 0 < p_UseGold THEN
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_UseGold, v_final_gold, v_result);
			IF v_result <> 0 THEN 
				SET v_result = 102;
				LEAVE root;
			END IF;     
		-- END IF;
        
        
        -- IF 0 < p_UseCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_UseCashA, v_final_cashA, v_result);    
			IF 0 <> v_result THEN
				SET v_result = 103;
				LEAVE root;
			END IF;        
        -- END IF;		

    END;

	IF 0 = v_result THEN
		COMMIT;		
	ELSE
		ROLLBACK;
	END IF;	
    
	select v_result, v_final_gold, v_final_cashA;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_chat_block_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_chat_block_delete`(
	IN	p_userIdx 		BIGINT
,	IN	p_blockNum		TINYINT
)
    COMMENT '채팅 차단 목록에서 삭제'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
				
		SELECT result;
	END;	

	root:
    BEGIN

        
        IF NOT EXISTS (SELECT * FROM user_chat_block WHERE user_idx = p_userIdx AND block_num = p_blockNum) THEN 
			SET result = 101;
            LEAVE root;
		END IF;
		
        DELETE FROM user_chat_block WHERE user_idx = p_userIdx AND block_num = p_blockNum;
        
		IF ROW_COUNT() <= 0 THEN 
			SET result = 102;
            LEAVE root;
		END IF;
	END;
    
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_chat_block_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_chat_block_insert`(
	IN	p_userIdx 		BIGINT
,	IN	p_blockNum		TINYINT
,	IN	p_blockCharType	INT
,	IN	p_blockNick 	VARCHAR(30)
)
    COMMENT '채팅 차단 목록에 유저 추가'
BEGIN	
	DECLARE v_errno INT DEFAULT 0;
	DECLARE result 	INT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET result := (v_errno * -1);
				
		SELECT result;
	END;	

	root:
    BEGIN

        
        IF EXISTS (SELECT * FROM user_chat_block WHERE user_idx = p_userIdx AND block_num = p_blockNum) THEN 
			SET result = 101;
            LEAVE root;
		END IF;
		
		INSERT INTO user_chat_block (user_idx, block_num, block_char_type, block_nick)
		VALUES(p_userIdx, p_blockNum, p_blockCharType, p_blockNick);
        
		IF ROW_COUNT() <= 0 THEN 
			SET result = 102;
            LEAVE root;
		END IF;
	END;
    
	SELECT result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_combat_update_init_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_combat_update_init_all`()
BEGIN

   
	
    UPDATE user_combat
    SET combat_grade_id = 1,
		combat_score = 0,
		combat_win_cnt = 0,        
        combat_succ = 0,
        daily_combat_win_cnt = 0,
        season_combat_win_cnt = 0,
        newgrade_combat_reward = 0,
		daily_combat_reward = 0,
		season_combat_reward = 0,
		hero_combat_reset_cnt = 0,
		combat_grade_up_reset_cnt = 0;
        
	
	TRUNCATE TABLE user_combat_rivals;
      

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_login_attend_reward` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_login_attend_reward`(
	IN	_userid 			BIGINT		
,	IN	_charid 			BIGINT		

,	IN	_attendid			INT
, 	IN	_visitcount			INT
,	IN	_expiretime			BIGINT

-- 여기부터 reward
,	IN _addGold 		BIGINT
,	IN _addCashA 		BIGINT
-- ,	IN _addCashB 		BIGINT

-- equip
,   IN _itemId1 	INT,		IN _quality1	INT,	IN _equipType1	INT
,	IN _attrId1		INT,		IN _attrValue1	INT,	IN _belong1		TINYINT,	IN _identified1		TINYINT
,	IN _slotId1_1	TINYINT,	IN _optId1_1	INT,	IN _optValue1_1	SMALLINT
,	IN _slotId2_1	TINYINT,	IN _optId2_1	INT,	IN _optValue2_1	SMALLINT
,	IN _slotId3_1	TINYINT,	IN _optId3_1	INT,	IN _optValue3_1	SMALLINT
,	IN _slotId4_1	TINYINT,	IN _optId4_1	INT,	IN _optValue4_1	SMALLINT
,	IN _slotId5_1	TINYINT,	IN _optId5_1	INT,	IN _optValue5_1	SMALLINT
,	IN _slotId6_1	TINYINT,	IN _optId6_1	INT,	IN _optValue6_1	SMALLINT
,	IN _slotId7_1	TINYINT,	IN _optId7_1	INT,	IN _optValue7_1	SMALLINT

,   IN _itemId2 	INT,		IN _quality2	INT,	IN _equipType2	INT
,	IN _attrId2		INT,		IN _attrValue2	INT,	IN _belong2		TINYINT,	IN _identified2		TINYINT
,	IN _slotId1_2	TINYINT,	IN _optId1_2	INT,	IN _optValue1_2	SMALLINT
,	IN _slotId2_2	TINYINT,	IN _optId2_2	INT,	IN _optValue2_2	SMALLINT
,	IN _slotId3_2	TINYINT,	IN _optId3_2	INT,	IN _optValue3_2	SMALLINT
,	IN _slotId4_2	TINYINT,	IN _optId4_2	INT,	IN _optValue4_2	SMALLINT
,	IN _slotId5_2	TINYINT,	IN _optId5_2	INT,	IN _optValue5_2	SMALLINT
,	IN _slotId6_2	TINYINT,	IN _optId6_2	INT,	IN _optValue6_2	SMALLINT
,	IN _slotId7_2	TINYINT,	IN _optId7_2	INT,	IN _optValue7_2	SMALLINT

,   IN _itemId3 	INT,		IN _quality3	INT,	IN _equipType3	INT
,	IN _attrId3		INT,		IN _attrValue3	INT,	IN _belong3		TINYINT,	IN _identified3		TINYINT
,	IN _slotId1_3	TINYINT,	IN _optId1_3	INT,	IN _optValue1_3	SMALLINT
,	IN _slotId2_3	TINYINT,	IN _optId2_3	INT,	IN _optValue2_3	SMALLINT
,	IN _slotId3_3	TINYINT,	IN _optId3_3	INT,	IN _optValue3_3	SMALLINT
,	IN _slotId4_3	TINYINT,	IN _optId4_3	INT,	IN _optValue4_3	SMALLINT
,	IN _slotId5_3	TINYINT,	IN _optId5_3	INT,	IN _optValue5_3	SMALLINT
,	IN _slotId6_3	TINYINT,	IN _optId6_3	INT,	IN _optValue6_3	SMALLINT
,	IN _slotId7_3	TINYINT,	IN _optId7_3	INT,	IN _optValue7_3	SMALLINT

,   IN _itemId4 	INT,		IN _quality4	INT,	IN _equipType4	INT
,	IN _attrId4		INT,		IN _attrValue4	INT,	IN _belong4		TINYINT,	IN _identified4		TINYINT
,	IN _slotId1_4	TINYINT,	IN _optId1_4	INT,	IN _optValue1_4	SMALLINT
,	IN _slotId2_4	TINYINT,	IN _optId2_4	INT,	IN _optValue2_4	SMALLINT
,	IN _slotId3_4	TINYINT,	IN _optId3_4	INT,	IN _optValue3_4	SMALLINT
,	IN _slotId4_4	TINYINT,	IN _optId4_4	INT,	IN _optValue4_4	SMALLINT
,	IN _slotId5_4	TINYINT,	IN _optId5_4	INT,	IN _optValue5_4	SMALLINT
,	IN _slotId6_4	TINYINT,	IN _optId6_4	INT,	IN _optValue6_4	SMALLINT
,	IN _slotId7_4	TINYINT,	IN _optId7_4	INT,	IN _optValue7_4	SMALLINT

,   IN _itemId5 	INT,		IN _quality5	INT,	IN _equipType5	INT
,	IN _attrId5		INT,		IN _attrValue5	INT,	IN _belong5		TINYINT,	IN _identified5		TINYINT
,	IN _slotId1_5	TINYINT,	IN _optId1_5	INT,	IN _optValue1_5	SMALLINT
,	IN _slotId2_5	TINYINT,	IN _optId2_5	INT,	IN _optValue2_5	SMALLINT
,	IN _slotId3_5	TINYINT,	IN _optId3_5	INT,	IN _optValue3_5	SMALLINT
,	IN _slotId4_5	TINYINT,	IN _optId4_5	INT,	IN _optValue4_5	SMALLINT
,	IN _slotId5_5	TINYINT,	IN _optId5_5	INT,	IN _optValue5_5	SMALLINT
,	IN _slotId6_5	TINYINT,	IN _optId6_5	INT,	IN _optValue6_5	SMALLINT
,	IN _slotId7_5	TINYINT,	IN _optId7_5	INT,	IN _optValue7_5	SMALLINT

,   IN _itemId6 	INT,		IN _quality6	INT,	IN _equipType6	INT
,	IN _attrId6		INT,		IN _attrValue6	INT,	IN _belong6		TINYINT,	IN _identified6		TINYINT
,	IN _slotId1_6	TINYINT,	IN _optId1_6	INT,	IN _optValue1_6	SMALLINT
,	IN _slotId2_6	TINYINT,	IN _optId2_6	INT,	IN _optValue2_6	SMALLINT
,	IN _slotId3_6	TINYINT,	IN _optId3_6	INT,	IN _optValue3_6	SMALLINT
,	IN _slotId4_6	TINYINT,	IN _optId4_6	INT,	IN _optValue4_6	SMALLINT
,	IN _slotId5_6	TINYINT,	IN _optId5_6	INT,	IN _optValue5_6	SMALLINT
,	IN _slotId6_6	TINYINT,	IN _optId6_6	INT,	IN _optValue6_6	SMALLINT
,	IN _slotId7_6	TINYINT,	IN _optId7_6	INT,	IN _optValue7_6	SMALLINT

,   IN _itemId7 	INT,		IN _quality7	INT,	IN _equipType7	INT
,	IN _attrId7		INT,		IN _attrValue7	INT,	IN _belong7		TINYINT,	IN _identified7		TINYINT
,	IN _slotId1_7	TINYINT,	IN _optId1_7	INT,	IN _optValue1_7	SMALLINT
,	IN _slotId2_7	TINYINT,	IN _optId2_7	INT,	IN _optValue2_7	SMALLINT
,	IN _slotId3_7	TINYINT,	IN _optId3_7	INT,	IN _optValue3_7	SMALLINT
,	IN _slotId4_7	TINYINT,	IN _optId4_7	INT,	IN _optValue4_7	SMALLINT
,	IN _slotId5_7	TINYINT,	IN _optId5_7	INT,	IN _optValue5_7	SMALLINT
,	IN _slotId6_7	TINYINT,	IN _optId6_7	INT,	IN _optValue6_7	SMALLINT
,	IN _slotId7_7	TINYINT,	IN _optId7_7	INT,	IN _optValue7_7	SMALLINT

,   IN _itemId8 	INT,		IN _quality8	INT,	IN _equipType8	INT
,	IN _attrId8		INT,		IN _attrValue8	INT,	IN _belong8		TINYINT,	IN _identified8		TINYINT
,	IN _slotId1_8	TINYINT,	IN _optId1_8	INT,	IN _optValue1_8	SMALLINT
,	IN _slotId2_8	TINYINT,	IN _optId2_8	INT,	IN _optValue2_8	SMALLINT
,	IN _slotId3_8	TINYINT,	IN _optId3_8	INT,	IN _optValue3_8	SMALLINT
,	IN _slotId4_8	TINYINT,	IN _optId4_8	INT,	IN _optValue4_8	SMALLINT
,	IN _slotId5_8	TINYINT,	IN _optId5_8	INT,	IN _optValue5_8	SMALLINT
,	IN _slotId6_8	TINYINT,	IN _optId6_8	INT,	IN _optValue6_8	SMALLINT
,	IN _slotId7_8	TINYINT,	IN _optId7_8	INT,	IN _optValue7_8	SMALLINT

,   IN _itemId9 	INT,		IN _quality9	INT,	IN _equipType9	INT
,	IN _attrId9		INT,		IN _attrValue9	INT,	IN _belong9		TINYINT,	IN _identified9		TINYINT
,	IN _slotId1_9	TINYINT,	IN _optId1_9	INT,	IN _optValue1_9	SMALLINT
,	IN _slotId2_9	TINYINT,	IN _optId2_9	INT,	IN _optValue2_9	SMALLINT
,	IN _slotId3_9	TINYINT,	IN _optId3_9	INT,	IN _optValue3_9	SMALLINT
,	IN _slotId4_9	TINYINT,	IN _optId4_9	INT,	IN _optValue4_9	SMALLINT
,	IN _slotId5_9	TINYINT,	IN _optId5_9	INT,	IN _optValue5_9	SMALLINT
,	IN _slotId6_9	TINYINT,	IN _optId6_9	INT,	IN _optValue6_9	SMALLINT
,	IN _slotId7_9	TINYINT,	IN _optId7_9	INT,	IN _optValue7_9	SMALLINT

,   IN _itemId10 	INT,		IN _quality10	INT,	IN _equipType10	INT
,	IN _attrId10	INT,		IN _attrValue10	INT,	IN _belong10	TINYINT,	IN _identified10		TINYINT
,	IN _slotId1_10	TINYINT,	IN _optId1_10	INT,	IN _optValue1_10	SMALLINT
,	IN _slotId2_10	TINYINT,	IN _optId2_10	INT,	IN _optValue2_10	SMALLINT
,	IN _slotId3_10	TINYINT,	IN _optId3_10	INT,	IN _optValue3_10	SMALLINT
,	IN _slotId4_10	TINYINT,	IN _optId4_10	INT,	IN _optValue4_10	SMALLINT
,	IN _slotId5_10	TINYINT,	IN _optId5_10	INT,	IN _optValue5_10	SMALLINT
,	IN _slotId6_10	TINYINT,	IN _optId6_10	INT,	IN _optValue6_10	SMALLINT
,	IN _slotId7_10	TINYINT,	IN _optId7_10	INT,	IN _optValue7_10	SMALLINT


,	IN _costItemType1	TINYINT,	IN _costItemId1	INT,	IN _costItemValue1	INT
,	IN _costItemType2	TINYINT,	IN _costItemId2	INT,	IN _costItemValue2	INT
,	IN _costItemType3	TINYINT,	IN _costItemId3	INT,	IN _costItemValue3	INT
,	IN _costItemType4	TINYINT,	IN _costItemId4	INT,	IN _costItemValue4	INT
,	IN _costItemType5	TINYINT,	IN _costItemId5	INT,	IN _costItemValue5	INT
,	IN _costItemType6	TINYINT,	IN _costItemId6	INT,	IN _costItemValue6	INT
,	IN _costItemType7	TINYINT,	IN _costItemId7	INT,	IN _costItemValue7	INT
,	IN _costItemType8	TINYINT,	IN _costItemId8	INT,	IN _costItemValue8	INT
,	IN _costItemType9	TINYINT,	IN _costItemId9	INT,	IN _costItemValue9	INT
,	IN _costItemType10	TINYINT,	IN _costItemId10	INT,	IN _costItemValue10	INT


, 	IN _bookId1 INT,	IN _percent1 INT,	IN _liftTime1 INT,	IN _value1	INT,	IN _bookbelong1 TINYINT
, 	IN _bookId2 INT,	IN _percent2 INT,	IN _liftTime2 INT,	IN _value2	INT,	IN _bookbelong2 TINYINT
, 	IN _bookId3 INT,	IN _percent3 INT,	IN _liftTime3 INT,	IN _value3	INT,	IN _bookbelong3 TINYINT
, 	IN _bookId4 INT,	IN _percent4 INT,	IN _liftTime4 INT,	IN _value4	INT,	IN _bookbelong4 TINYINT
, 	IN _bookId5 INT,	IN _percent5 INT,	IN _liftTime5 INT,	IN _value5	INT,	IN _bookbelong5 TINYINT
, 	IN _bookId6 INT,	IN _percent6 INT,	IN _liftTime6 INT,	IN _value6	INT,	IN _bookbelong6 TINYINT
, 	IN _bookId7 INT,	IN _percent7 INT,	IN _liftTime7 INT,	IN _value7	INT,	IN _bookbelong7 TINYINT
, 	IN _bookId8 INT,	IN _percent8 INT,	IN _liftTime8 INT,	IN _value8	INT,	IN _bookbelong8 TINYINT
, 	IN _bookId9 INT,	IN _percent9 INT,	IN _liftTime9 INT,	IN _value9	INT,	IN _bookbelong9 TINYINT
, 	IN _bookId10 INT,	IN _percent10 INT,	IN _liftTime10 INT,	IN _value10	INT,	IN _bookbelong10 TINYINT
	
)
    COMMENT '유저 출석 보상 요청에 따른 보상지급'
BEGIN	
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0; 
    
--     DECLARE v_finalMileage			BIGINT DEFAULT 0; 
--     DECLARE v_finalPkgold			INT DEFAULT 0; 
--     DECLARE v_finalGuildPoint		INT DEFAULT 0; 
--     DECLARE v_finalqty				INT DEFAULT 0;
        
	DECLARE v_finalgold				BIGINT DEFAULT 0; 
    DECLARE v_finalcashA			BIGINT DEFAULT 0; 
--    DECLARE v_finalcashB			BIGINT DEFAULT 0; 
    
    DECLARE v_item_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_item_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_item_final_qty1	INT DEFAULT 0;
	DECLARE v_item_final_qty2	INT DEFAULT 0;
	DECLARE v_item_final_qty3	INT DEFAULT 0;
	DECLARE v_item_final_qty4	INT DEFAULT 0;
	DECLARE v_item_final_qty5	INT DEFAULT 0;
    DECLARE v_item_final_qty6	INT DEFAULT 0;
	DECLARE v_item_final_qty7	INT DEFAULT 0;
	DECLARE v_item_final_qty8	INT DEFAULT 0;
	DECLARE v_item_final_qty9	INT DEFAULT 0;
	DECLARE v_item_final_qty10	INT DEFAULT 0;
    
    DECLARE v_book_db_index1 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index2 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index3 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index4 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index5 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index6 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index7 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index8 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index9 	BIGINT DEFAULT 0;
    DECLARE v_book_db_index10 	BIGINT DEFAULT 0;

	DECLARE v_cashA_old				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old		BIGINT DEFAULT 0;
	DECLARE v_cashA_new				BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new		BIGINT DEFAULT 0;	
    DECLARE v_cashB_old				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_old		BIGINT DEFAULT 0;
    DECLARE v_cashB_new				BIGINT DEFAULT 0;
    DECLARE v_cashB_Free_new		BIGINT DEFAULT 0;  		
		
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
			
		SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
					, v_finalgold, v_finalcashA-- , v_finalcashB
					, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
					-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;
                    , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
					, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;
	END;
        
	START TRANSACTION;	
	
	root:
	BEGIN
    
			INSERT INTO user_attendance (user_idx, attendance_id, visit_count, reg_date, update_time, expire_time)
				VALUES (_userid, _attendid, _visitcount, NOW(), NOW(), FROM_UNIXTIME(_expiretime))
			ON DUPLICATE KEY UPDATE visit_count = _visitcount, update_time = NOW();

--         IF _add_mileage > 0 THEN 			
--             CALL sp_mmo_notrans_charinfo_insert_mileage(_userid, _charid, _add_mileage, v_finalMileage, v_result);
-- 			
-- 			IF v_result != 0 THEN 
--                 LEAVE root;
-- 			END IF;	
--         END IF;
        
        
--         IF _ticketid > 0 THEN 			
-- 			INSERT INTO char_refilled_ticket (char_idx, ticket_id, ticket_value, ticket_use_time)
-- 										VALUES (_charid, _ticketid, _ticketcount, v_useTime)
-- 			ON DUPLICATE KEY UPDATE ticket_value = _ticketcount, ticket_use_time = v_useTime;
--         
-- 			IF ROW_COUNT() = 0 THEN 
-- 				SET v_result = 100;
--                 LEAVE root;
--             END IF;
--             
--         END IF;
        
        
--         IF 0 < _sprcialbuffid THEN
-- 			UPDATE char_buff_special
--             SET buff_affect_time = now()
--             WHERE char_idx = _charid and buff_id = _sprcialbuffid;
--             
-- 			IF ROW_COUNT() = 0 THEN 
-- 				SET v_result = 101;		
--                 LEAVE root;
--             END IF;            
--         END IF;
        
		IF _addgold > 0 THEN 		
			CALL sp_mmo_notrans_charinfo_insert_gold(_userid, _charid, _addgold, v_finalgold, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
        END IF;
        
        
		IF _addCashA > 0 THEN
			CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_old, v_cashA_Free_old, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF; 
        
			CALL sp_mmo_notrans_userinfo_insert_cashAFree(_userid, _addCashA, v_finalcashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
            
            CALL sp_mmo_notrans_userinfo_select_cashA(_userid, v_cashA_new, v_cashA_Free_new, v_result);
			IF v_result != 0 THEN 
				LEAVE root;
			END IF;        
        END IF;
       
        
-- 		IF _addCashB > 0 THEN 		
-- 			CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_old, v_cashB_Free_old, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF; 
--   
-- 			CALL sp_mmo_notrans_userinfo_insert_cashBFree(_userid, _addCashB, v_final_cashB, v_result);
-- 			IF v_result != 0 THEN
-- 				LEAVE root;
-- 			END IF;
--                   
--             CALL sp_mmo_notrans_userinfo_select_cashB(_userid, v_cashB_new, v_cashB_Free_new, v_result);
-- 			IF v_result != 0 THEN 
-- 				LEAVE root;
-- 			END IF;  
--    
--         END IF;

		
        IF _itemId1 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId1, _quality1, _equipType1, _attrId1, _attrValue1,
								_slotId1_1, _optId1_1, _optValue1_1, _slotId2_1, _optId2_1, _optValue2_1, 
								_slotId3_1, _optId3_1, _optValue3_1, _slotId4_1, _optId4_1, _optValue4_1, 
								_slotId5_1, _optId5_1, _optValue5_1, _slotId6_1, _optId6_1, _optValue6_1, 
								_slotId7_1, _optId7_1, _optValue7_1, _belong1, _identified1, v_result, v_item_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId2 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId2, _quality2, _equipType2, _attrId2, _attrValue2,
								_slotId1_2, _optId1_2, _optValue1_2, _slotId2_2, _optId2_2, _optValue2_2, 
								_slotId3_2, _optId3_2, _optValue3_2, _slotId4_2, _optId4_2, _optValue4_2, 
								_slotId5_2, _optId5_2, _optValue5_2, _slotId6_2, _optId6_2, _optValue6_2, 
								_slotId7_2, _optId7_2, _optValue7_2, _belong2, _identified2, v_result, v_item_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId3 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId3, _quality3, _equipType3, _attrId3, _attrValue3,
								_slotId1_3, _optId1_3, _optValue1_3, _slotId2_3, _optId2_3, _optValue2_3, 
								_slotId3_3, _optId3_3, _optValue3_3, _slotId4_3, _optId4_3, _optValue4_3, 
								_slotId5_3, _optId5_3, _optValue5_3, _slotId6_3, _optId6_3, _optValue6_3, 
								_slotId7_3, _optId7_3, _optValue7_3, _belong3, _identified3, v_result, v_item_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId4 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId4, _quality4, _equipType4, _attrId4, _attrValue4,
								_slotId1_4, _optId1_4, _optValue1_4, _slotId2_4, _optId2_4, _optValue2_4, 
								_slotId3_4, _optId3_4, _optValue3_4, _slotId4_4, _optId4_4, _optValue4_4, 
								_slotId5_4, _optId5_4, _optValue5_4, _slotId6_4, _optId6_4, _optValue6_4, 
								_slotId7_4, _optId7_4, _optValue7_4, _belong4, _identified4, v_result, v_item_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId5 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId5, _quality5, _equipType5, _attrId5, _attrValue5,
								_slotId1_5, _optId1_5, _optValue1_5, _slotId2_5, _optId2_5, _optValue2_5, 
								_slotId3_5, _optId3_5, _optValue3_5, _slotId4_5, _optId4_5, _optValue4_5, 
								_slotId5_5, _optId5_5, _optValue5_5, _slotId6_5, _optId6_5, _optValue6_5, 
								_slotId7_5, _optId7_5, _optValue7_5, _belong5, _identified5, v_result, v_item_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		IF _itemId6 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId6, _quality6, _equipType6, _attrId6, _attrValue6,
								_slotId1_6, _optId1_6, _optValue1_6, _slotId2_6, _optId2_6, _optValue2_6, 
								_slotId3_6, _optId3_6, _optValue3_6, _slotId4_6, _optId4_6, _optValue4_6, 
								_slotId5_6, _optId5_6, _optValue5_6, _slotId6_6, _optId6_6, _optValue6_6, 
								_slotId7_6, _optId7_6, _optValue7_6, _belong6, _identified6, v_result, v_item_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;

        IF _itemId7 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId7, _quality7, _equipType7, _attrId7, _attrValue7,
								_slotId1_7, _optId1_7, _optValue1_7, _slotId2_7, _optId2_7, _optValue2_7, 
								_slotId3_7, _optId3_7, _optValue3_7, _slotId4_7, _optId4_7, _optValue4_7, 
								_slotId5_7, _optId5_7, _optValue5_7, _slotId6_7, _optId6_7, _optValue6_7, 
								_slotId7_7, _optId7_7, _optValue7_7, _belong7, _identified7, v_result, v_item_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId8 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId8, _quality8, _equipType8, _attrId8, _attrValue8,
								_slotId1_8, _optId1_8, _optValue1_8, _slotId2_8, _optId2_8, _optValue2_8, 
								_slotId3_8, _optId3_8, _optValue3_8, _slotId4_8, _optId4_8, _optValue4_8, 
								_slotId5_8, _optId5_8, _optValue5_8, _slotId6_8, _optId6_8, _optValue6_8, 
								_slotId7_8, _optId7_8, _optValue7_8, _belong8, _identified8, v_result, v_item_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
        
        IF _itemId9 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId9, _quality9, _equipType9, _attrId9, _attrValue9,
								_slotId1_9, _optId1_9, _optValue1_9, _slotId2_9, _optId2_9, _optValue2_9, 
								_slotId3_9, _optId3_9, _optValue3_9, _slotId4_9, _optId4_9, _optValue4_9, 
								_slotId5_9, _optId5_9, _optValue5_9, _slotId6_9, _optId6_9, _optValue6_9, 
								_slotId7_9, _optId7_9, _optValue7_9, _belong9, _identified9, v_result, v_item_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;        
        
        IF _itemId10 > 0 THEN
     		CALL sp_mmo_notrans_charinvenequip_insert( _userid, _charid, _itemId10, _quality10, _equipType10, _attrId10, _attrValue10,
								_slotId1_10, _optId1_10, _optValue1_10, _slotId2_10, _optId2_10, _optValue2_10, 
								_slotId3_10, _optId3_10, _optValue3_10, _slotId4_10, _optId4_10, _optValue4_10, 
								_slotId5_10, _optId5_10, _optValue5_10, _slotId6_10, _optId6_10, _optValue6_10, 
								_slotId7_10, _optId7_10, _optValue7_10, _belong10, _identified10, v_result, v_item_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
        
		IF 0 < _costItemId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType1, _costItemId1, _costItemValue1, v_result, v_item_final_qty1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType2, _costItemId2, _costItemValue2, v_result, v_item_final_qty2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType3, _costItemId3, _costItemValue3, v_result, v_item_final_qty3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType4, _costItemId4, _costItemValue4, v_result, v_item_final_qty4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType5, _costItemId5, _costItemValue5, v_result, v_item_final_qty5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;
		
		IF 0 < _costItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType6, _costItemId6, _costItemValue6, v_result, v_item_final_qty6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
		IF 0 < _costItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType7, _costItemId7, _costItemValue7, v_result, v_item_final_qty7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType8, _costItemId8, _costItemValue8, v_result, v_item_final_qty8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType9, _costItemId9, _costItemValue9, v_result, v_item_final_qty9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			

		IF 0 < _costItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _costItemType10, _costItemId10, _costItemValue10, v_result, v_item_final_qty10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;			
		
        
        IF 0 < _bookId1 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId1, _percent1, _liftTime1, _value1, _bookbelong1, v_result, v_book_db_index1);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId2, _percent2, _liftTime2, _value2, _bookbelong2, v_result, v_book_db_index2);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId3, _percent3, _liftTime3, _value3, _bookbelong3, v_result, v_book_db_index3);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId4, _percent4, _liftTime4, _value, _bookbelong4, v_result, v_book_db_index4);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId5, _percent5, _liftTime5, _value5, _bookbelong5, v_result, v_book_db_index5);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId6, _percent6, _liftTime6, _value6, _bookbelong6, v_result, v_book_db_index6);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId7, _percent7, _liftTime7, _value7, _bookbelong7, v_result, v_book_db_index7);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId8, _percent8, _liftTime8, _value8, _bookbelong8, v_result, v_book_db_index8);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId9, _percent9, _liftTime9, _value, _bookbelong9, v_result, v_book_db_index9);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
        IF 0 < _bookId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert( _userid, _charid, _bookId10, _percent10, _liftTime10, _value10, _bookbelong10, v_result, v_book_db_index10);
            IF v_result != 0 THEN
				LEAVE root;
            END IF;
		END IF;		
        
    END;
    
    
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	
	SELECT v_result-- , v_finalMileage, v_finalPkgold, v_finalGuildPoint, v_finalqty
				, v_finalgold, v_finalcashA-- , v_finalcashB
				, v_cashA_old, v_cashA_Free_old, v_cashA_new, v_cashA_Free_new
				-- , v_cashB_old, v_cashB_Free_old, v_cashB_new, v_cashB_Free_new;		
                , v_item_db_index1, v_item_db_index2, v_item_db_index3, v_item_db_index4, v_item_db_index5, v_item_db_index6, v_item_db_index7, v_item_db_index8, v_item_db_index9, v_item_db_index10
				, v_book_db_index1, v_book_db_index2, v_book_db_index3, v_book_db_index4, v_book_db_index5, v_book_db_index6, v_book_db_index7, v_book_db_index8, v_book_db_index9, v_book_db_index10;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_login_paidattend_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_login_paidattend_insert`(
	IN _userid					BIGINT
,	IN p_CharID					BIGINT
,	IN _attendid				INT
,	IN _expiretime			BIGINT
,	IN p_CostGold 				BIGINT
,	IN p_CostCashA				BIGINT
,	IN p_CostItemID				INT
, 	IN p_CostItemCount			INT
)
    COMMENT '유료 출석 활성화'
BEGIN
	DECLARE	v_errno					INT DEFAULT 0;
	DECLARE v_result 				INT DEFAULT 0;
    
    DECLARE v_nowtime				DATETIME DEFAULT NOW();
    DECLARE v_yesterdaytime 		DATETIME DEFAULT DATE_SUB(v_nowtime, INTERVAL 1 DAY);
    
    DECLARE v_final_gold				BIGINT DEFAULT 0;	
    DECLARE v_final_casha				BIGINT DEFAULT 0;	
    DECLARE v_final_item_count			INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
		
        SELECT v_result, v_final_gold, v_final_casha, v_final_item_count;
	END;       


	root:
	BEGIN
	
		IF EXISTS(SELECT 1 FROM user_attendance WHERE user_idx = _userid AND attendance_id = _attendid) THEN
			SET v_result = 6065;
		END IF;
		
		IF v_result <> 0 THEN
			LEAVE root;
		END IF;
        
        -- wealth Check?!
	
		START TRANSACTION;
        
		subroot:
        BEGIN
			IF 0 < p_CostGold THEN	
				CALL sp_mmo_notrans_charinfo_delete_gold(_userid, p_CharID, p_CostGold, v_final_gold, v_result);
				IF v_result != 0 THEN
					SET v_result = 6066;	
					LEAVE subroot;
				END IF;  

			
			ELSEIF 0 < p_CostCashA THEN
				CALL sp_mmo_notrans_userinfo_delete_cashA(_userid, p_CostCashA, v_final_casha, v_result);    
				IF 0 <> v_result THEN
					SET v_result = 6067;	
					LEAVE subroot;
				END IF;
				
			
			ELSEIF 0 < p_CostItemID AND 0 < p_CostItemCount THEN
				CALL sp_mmo_notrans_charinvenitem_delete(_userid, p_CharID, p_CostItemID, p_CostItemCount, v_final_item_count, v_result);
				IF v_result <> 0 THEN
					SET v_result = 6068;	
					LEAVE subroot;
				END IF;
			END IF; 
			
            
			INSERT INTO user_attendance (user_idx, attendance_id, visit_count, reg_date, update_time, expire_time)
				VALUES (_userid, _attendid, 0, v_nowtime, v_yesterdaytime, FROM_UNIXTIME(_expiretime));

			IF ROW_COUNT() = 0 THEN 
				SET v_result = 6069;
				LEAVE root;
			END IF;

		END;
        
		if 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;	        
        
	END;
	
    
    SELECT v_result, v_final_gold, v_final_casha, v_final_item_count;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_monsterbook_register` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_monsterbook_register`(
	IN	p_UserID				BIGINT
,	IN	p_CharID				BIGINT

,	IN 	p_MonsterBookID			INT
,	IN 	p_CollectOrder			TINYINT

,	IN	p_CostGold 				BIGINT
-- ,	IN	p_CostCashA				BIGINT
,	IN	p_CostItemID				INT
, 	IN	p_CostItemCount			INT

,	IN 	p_ProtectItemID			INT
,	IN 	p_ProtectItemValue		INT
)
    COMMENT '몬스터 도감 등록'
BEGIN
	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
	
	DECLARE v_final_gold				BIGINT DEFAULT 0;	
    DECLARE v_final_casha				BIGINT DEFAULT 0;	
    DECLARE v_final_item_count			INT DEFAULT 0;
    DECLARE v_final_protect_item_count	INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
        SELECT v_result, v_final_gold, v_final_casha, v_final_item_count, v_final_protect_item_count;
	END;
	
	START TRANSACTION;
	
	root:
	BEGIN

        IF 0 < p_CostGold THEN	
			CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, p_CostGold, v_final_gold, v_result);
			IF v_result != 0 THEN
				SET v_result = 6117;	
				LEAVE root;
			END IF;
		END IF;
        
        IF 0 < p_CostItemID AND 0 < p_CostItemCount THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_CostItemID, p_CostItemCount, v_final_item_count, v_result);
			IF v_result <> 0 THEN
				SET v_result = 6118;	
				LEAVE root;
			END IF;
		END IF;
        
        IF 0 < p_ProtectItemID AND 0 < p_ProtectItemValue THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ProtectItemID, p_ProtectItemValue, v_final_protect_item_count, v_result);
			IF v_result <> 0 THEN
				SET v_result = 6119;	
				LEAVE root;
			END IF;
		END IF;
        
        INSERT INTO user_monster_book (`user_idx`,`collect_id`,`ability_order`)
			VALUES (p_UserID, p_MonsterBookID, p_CollectOrder)
			ON DUPLICATE KEY UPDATE ability_order = p_CollectOrder;
       
    END;
	
	IF v_result != 0 THEN	
		ROLLBACK;
	ELSE
		COMMIT;
	END IF;	
    
	SELECT v_result, v_final_gold, v_final_casha, v_final_item_count, v_final_protect_item_count;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_monster_coreitem_composite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_monster_coreitem_composite`(
	IN	p_UserID 		BIGINT
,	IN	p_CharID 		BIGINT

-- ,	IN  p_AvatarGrade 	TINYINT
-- ,	IN  p_AddFailCount	INT

-- ,	IN	p_AvatarConfirmDuration 		INT

,	IN	_arrayResItem 		VARCHAR(4096)	-- 합성재료 아이템
	
,	IN  p_RewardType 	TINYINT
,	IN	p_coreItemId1	INT,	IN	p_coreItemId2	INT,	IN	p_coreItemId3	INT,	IN	p_coreItemId4	INT,	IN	p_coreItemId5	INT
,	IN	p_coreItemId6	INT,	IN	p_coreItemId7	INT,	IN	p_coreItemId8	INT,	IN	p_coreItemId9	INT,	IN	p_coreItemId10	INT

-- ,	IN	p_AvatarId1	INT,	IN	p_AvatarId2	INT,	IN	p_AvatarId3	INT,	IN	p_AvatarId4	INT,	IN	p_AvatarId5	INT
-- ,	IN	p_AvatarId6	INT,	IN	p_AvatarId7	INT,	IN	p_AvatarId8	INT,	IN	p_AvatarId9	INT,	IN	p_AvatarId10	INT
)
    COMMENT '몬스터 코어 아이템 합성'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
    DECLARE v_result 		INT DEFAULT 0;
    
	# Count Item
    DECLARE id_array_local VARCHAR(4096);
	DECLARE start_pos SMALLINT;
	DECLARE comma_pos SMALLINT;
	DECLARE colon_pos SMALLINT;
	DECLARE current_id VARCHAR(1000);
	DECLARE current_value VARCHAR(1000);
	DECLARE end_loop TINYINT;
    DECLARE v_cntitem_id INT;
    DECLARE v_cntitem_value INT;
	DECLARE v_resitem_final_qty		INT DEFAULT 0;
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result;
	END;


	START TRANSACTION;	

	root:
	BEGIN

        -- CountItem begin
			SET id_array_local = _arrayResItem;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				SET v_cntitem_id := CAST(current_id as unsigned);
                SET v_cntitem_value := CAST(current_value as unsigned);
				# Place here your code that uses current_id
			    IF 0 < v_cntitem_id AND 0 < v_cntitem_value THEN
                
                    CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, v_cntitem_id, v_cntitem_value, v_resitem_final_qty, v_result);
					IF v_result <> 0 THEN
						LEAVE root;
					END IF;
                    
				END IF;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
		-- CountItem End
      
        -- 합성 결과
		IF 0 < p_coreItemId1 THEN
            CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId1, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId2 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId2, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId3 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId3, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId4 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId4, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId5 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId5, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId6 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId6, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId7 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId7, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId8 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId8, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId9 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId9, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	
        IF 0 < p_coreItemId10 THEN
			CALL sp_mmo_notrans_charinvenitem_insert(p_UserID, p_CharID, p_RewardType, p_coreItemId10, 1, v_result, v_resitem_final_qty);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;	

	END;        
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

	SELECT v_result;
   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_user_reddot_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_user_reddot_insert`(
	IN p_useridx 		BIGINT
,   IN p_charidx 		BIGINT
,	IN p_typeid 		INT
,	IN p_element_value 	BIGINT
,	IN p_sub_value 		INT
)
BEGIN
	DECLARE	v_errno		INT DEFAULT 0;
    DECLARE v_result 	INT DEFAULT 0;
    
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
        
		SELECT v_result;
	END;

	START TRANSACTION;
    
    root:
    BEGIN
    
		INSERT INTO user_reddot(user_idx, char_idx, type_id, element_value, element_subvalue)
			VALUES (p_useridx, p_charidx, p_typeid, p_element_value, p_sub_value)
		ON DUPLICATE KEY UPDATE type_id = p_typeid, element_value = p_element_value, element_subvalue = p_sub_value;

		IF 0 = ROW_COUNT() THEN
			SET v_result = 101;	
		END IF;
    END;
    
    IF v_result != 0 THEN
		ROLLBACK;
    ELSE
        COMMIT;
	END IF;
    
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_use_cost_gold_casha_consumeitem` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_use_cost_gold_casha_consumeitem`( 
	IN	p_UserID 		BIGINT
, 	IN	p_CharID 		BIGINT

,	IN	_deletegold		BIGINT		
,	IN	_deleteCashA	BIGINT
, 	IN	p_ItemID 		INT		-- 아이템 번호
,	IN	p_UseQty	 	INT		-- 아이템 사용 수량
)
    COMMENT '재화 소모(골드,캐쉬,소모아이템)'
BEGIN
	
    DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result			INT DEFAULT 0;
    DECLARE v_final_itemcount 	INT DEFAULT 0;	-- 개수 아이템 최종 수량

	DECLARE v_final_gold 		BIGINT DEFAULT 0;
	DECLARE v_finalCashA		BIGINT DEFAULT 0;
    
	DECLARE v_cashA_old			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_old	BIGINT DEFAULT 0;
	DECLARE v_cashA_new			BIGINT DEFAULT 0;
    DECLARE v_cashA_Free_new	BIGINT DEFAULT 0;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_final_itemcount, v_finalCashA, v_final_gold;
	END; 
    

	START TRANSACTION;
		
    root:
    BEGIN
    
		CALL sp_mmo_notrans_charinfo_delete_gold(p_UserID, p_CharID, _deletegold, v_final_gold, v_result);
		IF v_result <> 0 THEN
		    LEAVE root;
		END IF;
        
        CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_old, v_cashA_Free_old, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 	
	
		IF 0 < _deleteCashA THEN
			CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, _deleteCashA, v_finalCashA, v_result);		
			IF v_result != 0 THEN
				LEAVE root;
			END IF;
		END IF;
		
		CALL sp_mmo_notrans_userinfo_select_cashA(p_UserID, v_cashA_new, v_cashA_Free_new, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF; 
    
		IF 0 < p_ItemID THEN -- 개수 아이템 삭제
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_ItemID, p_UseQty, v_final_itemcount, v_result);
			IF v_result <> 0 THEN
				LEAVE root;
			END IF;
		END IF;
    
	END;	
	
	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF;
		
	SELECT v_result, v_final_itemcount, v_finalCashA, v_final_gold;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_ftconsumepre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_ftconsumepre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_Amount			VARCHAR(128)	
,	IN p_CashB			BIGINT			
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_Amount <= 0 OR p_CashB <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
    
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_Amount, p_CashB);        
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 101;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();        
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_ftexchangepre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_ftexchangepre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_Amount			VARCHAR(128)	
,	IN p_CostCashB		BIGINT			
,	IN p_NeedItemID		INT				
,	IN p_LuxAmount		BIGINT 			
,	IN p_ExchangeCnt	TINYINT			
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_final_item_qty	INT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashB, v_final_item_qty;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_Amount <= 0 OR p_CostCashB <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;

		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1, data_i2, data_i3)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_Amount, p_CostCashB, p_NeedItemID, p_LuxAmount);        
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 101;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();        
        
        
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        
        IF 0 < p_NeedItemID THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_NeedItemID, p_LuxAmount, v_final_item_qty, v_result);
			IF v_result <> 0 THEN
				SET v_result = 103;	
				LEAVE root;
			END IF;        
        END IF;
        
        
        UPDATE userinfo
        SET wemix_ft_exchange_cnt = p_ExchangeCnt, wemix_ft_exchange_date = NOW()
        WHERE user_idx = p_UserID;
        
		IF v_result != 0 THEN 
			SET v_result = 102;		
			LEAVE root;
		END IF;        
 
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

  ROLLBACK;
	SELECT v_result, v_txid, v_final_cashB, v_final_item_qty;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_ftexchangepre2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_ftexchangepre2`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_Amount			VARCHAR(128)	
,	IN p_CostCashB		BIGINT			
,	IN p_NeedItemID		INT				
,	IN p_LuxAmount		BIGINT 			
,	IN p_ExchangeCnt		BIGINT			
,	IN p_ExchangeDecimalCnt	BIGINT			
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_final_item_qty	INT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashB, v_final_item_qty;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_LuxAmount <= 0 OR p_CostCashB <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;

		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1, data_i2, data_i3)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_Amount, p_CostCashB, p_NeedItemID, p_LuxAmount);        
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 101;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();        
        
        
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
        
        IF 0 < p_NeedItemID THEN
			CALL sp_mmo_notrans_charinvenitem_delete(p_UserID, p_CharID, p_NeedItemID, p_LuxAmount, v_final_item_qty, v_result);
			IF v_result <> 0 THEN
				SET v_result = 103;	
				LEAVE root;
			END IF;        
        END IF;
        
        
        UPDATE userinfo
        SET wemix_ft_exchange_cnt = p_ExchangeCnt, wemix_ft_exchange_decimal_cnt = p_ExchangeDecimalCnt, wemix_ft_exchange_date = NOW()
        WHERE user_idx = p_UserID;
        
		IF v_result != 0 THEN 
			SET v_result = 102;		
			LEAVE root;
		END IF;        
 
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

  ROLLBACK;
	SELECT v_result, v_txid, v_final_cashB, v_final_item_qty;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_luxbuypre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_luxbuypre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_Amount			VARCHAR(128)	
,	IN p_CostCashA		BIGINT			
,	IN p_LuxAmount		DOUBLE 			
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashA		BIGINT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashA;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_LuxAmount <= 0 OR p_CostCashA <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;

		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1, data_i2, data_f1)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_Amount, p_CostCashA, 0, p_LuxAmount);        
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 101;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();        
        
        
		CALL sp_mmo_notrans_userinfo_delete_cashA(p_UserID, p_CostCashA, v_final_cashA, v_result);
		IF v_result != 0 THEN 
			LEAVE root;
		END IF;
        
 
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 

  ROLLBACK;
	SELECT v_result, v_txid, v_final_cashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_luxshopbuypre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_luxshopbuypre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_Amount			VARCHAR(128)	
, 	IN p_ShopID			INT				
,	IN p_LuxAmount		DOUBLE			
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_LuxAmount <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
    
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_f1, data_i1)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_Amount, p_LuxAmount, p_ShopID);        
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 101;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();        
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_nftburnenchantpre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_nftburnenchantpre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_ItemIdx		BIGINT			
, 	IN p_TokenID		VARCHAR(256)	
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_ItemIdx <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
        
        
        IF NOT EXISTS(SELECT * FROM char_inven_equip WHERE item_idx = p_ItemIdx AND user_idx = p_UserID AND char_idx = p_CharID) THEN
			SET v_result = 101;		
            LEAVE root;
        END IF;
    
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1, data_i2)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_TokenID, p_ItemIdx, 0);
            
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 102;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_nftlockpre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_nftlockpre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_ItemIdx		BIGINT			
,	IN p_CostCashB		BIGINT			
, 	IN p_TokenID		VARCHAR(256)	
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_ItemIdx <= 0 OR p_CostCashB <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
        
        
        IF NOT EXISTS(SELECT * FROM char_inven_equip_nft_unlock WHERE item_idx = p_ItemIdx AND user_idx = p_UserID AND char_idx = p_CharID) THEN
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        
        IF NOT EXISTS(SELECT * FROM char_inven_equip_nft WHERE item_idx = p_ItemIdx AND nft_token_id = p_TokenID) THEN
			SET v_result = 102;		
            LEAVE root;
        END IF;
        
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1, data_i2)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_TokenID, p_ItemIdx, p_CostCashB);
            
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();
        
        
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result != 0 THEN 
			LEAVE root;		
		END IF;         
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_nftmintpre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_nftmintpre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_ItemIdx		BIGINT			
,	IN p_CostCashB		BIGINT			
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_ItemIdx <= 0 OR p_CostCashB <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
        
        
        IF NOT EXISTS(SELECT * FROM char_inven_equip WHERE item_idx = p_ItemIdx AND user_idx = p_UserID AND char_idx = p_CharID) THEN
			SET v_result = 101;		
            LEAVE root;
        END IF;
    
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_i1, data_i2)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_ItemIdx, p_CostCashB);
            
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 102;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();
        
        
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result != 0 THEN 
			LEAVE root;		
		END IF;         
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_nftmintpre2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_nftmintpre2`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_ItemIdx		BIGINT			
,	IN p_CostCashB		BIGINT			
, 	IN p_NFTURI			VARCHAR(256)	
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_ItemIdx <= 0 OR p_CostCashB <= 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
        
        
        IF NOT EXISTS(SELECT * FROM char_inven_equip WHERE item_idx = p_ItemIdx AND user_idx = p_UserID AND char_idx = p_CharID) THEN
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        
        IF EXISTS(SELECT * FROM char_inven_equip_nft WHERE item_idx = p_ItemIdx) THEN
			SET v_result = 3254;		
            LEAVE root;
        END IF;
    
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_i1, data_i2, data_s1)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_ItemIdx, p_CostCashB, p_NFTURI);
            
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 102;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();
        
        
		CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
		IF v_result != 0 THEN 
			LEAVE root;		
		END IF;         
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_insert_nftunlockpre` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_insert_nftunlockpre`( 
	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT	
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_TxType			TINYINT 		
,	IN p_ItemIdx		BIGINT			
,	IN p_CostCashB		BIGINT			
, 	IN p_TokenID		VARCHAR(256)	
)
    COMMENT '작업 시작 기록'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_txid				BIGINT DEFAULT 0; 	
    DECLARE v_nft_uri			VARCHAR(256) DEFAULT '';	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;
                
		SELECT v_result, v_txid, v_final_cashB, v_nft_uri;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		IF p_ItemIdx <= 0 OR p_CostCashB < 0 THEN
			SET v_result = 100;	
            LEAVE root;
        END IF;
        
        
        IF NOT EXISTS(SELECT * FROM char_inven_equip WHERE item_idx = p_ItemIdx AND user_idx = p_UserID AND char_idx = p_CharID) THEN
			SET v_result = 101;		
            LEAVE root;
        END IF;
        
        
        
        SELECT nft_uri INTO v_nft_uri
        FROM char_inven_equip_nft
        WHERE item_idx = p_ItemIdx AND nft_token_id = p_TokenID;
        
        IF FOUND_ROWS() = 0 THEN
 			SET v_result = 102;		
            LEAVE root;       
        END IF;
        
		
		INSERT INTO wemix_transaction (tx_type, user_idx, char_idx, user_address, data_s1, data_i1, data_i2)
			VALUES (p_TxType, p_UserID, p_CharID, p_UserAddress, p_TokenID, p_ItemIdx, p_CostCashB);
            
 		IF ROW_COUNT() <> 1 THEN
			SET v_result = 103;		
            LEAVE root;
		END IF;

		SET v_txid := LAST_INSERT_ID();
        
        
        IF 0 < p_CostCashB THEN
			CALL sp_mmo_notrans_userinfo_delete_cashB(p_UserID, p_CostCashB, v_final_cashB, v_result);
			IF v_result != 0 THEN 
				LEAVE root;		
			END IF;
		END IF;
        
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_txid, v_final_cashB, v_nft_uri;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_select_ftconsumeamount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_select_ftconsumeamount`(
	IN p_UserID			BIGINT 		
,	IN p_CharID			BIGINT		
, 	IN p_TXType			SMALLINT	
,	IN p_StartTime		BIGINT		
,	IN p_EndTime		BIGINT		
)
    COMMENT '기간내 LUX => 붉은수정 전환 럭스 총 개수'
BEGIN    
	SELECT convert(IFNULL(sum(convert(data_s1, unsigned integer)), 0), unsigned integer) AS v_ft_consume_qty
    FROM wemix_transaction
    WHERE user_idx = p_UserID AND tx_type = 4 AND completed = 1 AND p_StartTime < UNIX_TIMESTAMP(tx_date) AND UNIX_TIMESTAMP(tx_date) < p_EndTime AND data_s1 REGEXP '^[0-9]+$';	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_ftconsumeafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_ftconsumeafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_ExchangeCashB		BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result, data_i1 = (@v_ExchangeCashB := data_i1)
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF;
            
		IF 1 = p_Result THEN
			
			SET v_ExchangeCashB = @v_ExchangeCashB;           
            
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result);                        
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_ftconsumeafter2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_ftconsumeafter2`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_Result			INT				
,	IN p_RewardType 	TINYINT
,	IN p_RewardID 		INT
,	IN p_RewardValue 	INT
,	IN p_PostTextID 	INT
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_ExchangeCashB		BIGINT DEFAULT 0;	
	
	DECLARE v_posttype			INT DEFAULT 1;		
	DECLARE v_postidx			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB, v_postidx;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result, data_i1 = (@v_ExchangeCashB := data_i1)
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF;
            
		IF 1 = p_Result THEN
			
			SET v_ExchangeCashB = @v_ExchangeCashB;           
            
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result); 

			
			IF v_result = 0 AND 0 < p_RewardID AND 0 < p_RewardValue THEN 
				INSERT INTO user_post(`user_idx`,`send_idx`,`sender_nick`,`sender_char_id`,`char_id`,`post_type`,`post_text_idx`,`message`,`expire_date`,`reg_date`,`item_type`,`item_id`,`item_value`)
				VALUES (p_UserID, 0, '', 0, 0, v_posttype, p_PostTextID, '', ADDDATE(NOW(), 7), NOW(), p_RewardType, p_RewardID, p_RewardValue);
				IF ROW_COUNT() <= 0 THEN 
					SET v_result = 101;
					
				END IF;
				
				SET v_postidx = LAST_INSERT_ID();
			END IF;				
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB, v_postidx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_ftexchangeafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_ftexchangeafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_final_item_qty	INT DEFAULT 0;	
    DECLARE v_ExchangeCashB		BIGINT DEFAULT 0;	
    DECLARE v_NeedItemID		INT DEFAULT 0;		
    DECLARE v_LuxAmount			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB, v_final_item_qty;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 < p_Result THEN
			
			SELECT data_i1, data_i2, data_i3 INTO v_ExchangeCashB, v_NeedItemID, v_LuxAmount FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
        
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result);
            
            
            IF 0 < v_NeedItemID THEN
				CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, 2, v_NeedItemID, v_LuxAmount, v_result, v_final_item_qty);
			END IF;
            
			
			UPDATE userinfo
			SET wemix_ft_exchange_cnt = IF(v_LuxAmount < wemix_ft_exchange_cnt, wemix_ft_exchange_cnt - v_LuxAmount, 0)
			WHERE user_idx = p_UserID;
        
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB, v_final_item_qty;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_ftexchangeafter2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_ftexchangeafter2`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
    DECLARE v_final_item_qty	INT DEFAULT 0;	
    DECLARE v_ExchangeCashB		BIGINT DEFAULT 0;	
    DECLARE v_NeedItemID		INT DEFAULT 0;		
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB, v_final_item_qty;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 < p_Result THEN
			
			SELECT data_i1, data_i2 INTO v_ExchangeCashB, v_NeedItemID FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
        
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result);
            
            
			CALL sp_mmo_notrans_charinvenitem_insert( p_UserID, p_CharID, 2, v_NeedItemID, 1, v_result, v_final_item_qty);
            
			
			UPDATE userinfo
			SET wemix_ft_exchange_cnt = wemix_ft_exchange_cnt - 1
			WHERE user_idx = p_UserID;
        
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB, v_final_item_qty;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_luxbuyafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_luxbuyafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
,	IN p_CharID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_Result			INT				
,	IN p_ExchangeAmount			BIGINT			
,	IN p_ExchangeDecimalAmount	BIGINT			
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashA		BIGINT DEFAULT 0;	
    DECLARE v_ExchangeCashA		BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashA;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 < p_Result THEN
			
			SELECT data_i1, data_i3 INTO v_ExchangeCashA FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
        
			
			CALL sp_mmo_notrans_userinfo_insert_cashA(p_UserID, v_ExchangeCashA, v_final_cashA, v_result); 

		ELSE
			
			UPDATE userinfo
			SET wemix_ft_exchange_cnt = p_ExchangeAmount, wemix_ft_exchange_decimal_cnt = p_ExchangeDecimalAmount, wemix_ft_exchange_date = NOW()
			WHERE user_idx = p_UserID;
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashA;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_luxshopbuyafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_luxshopbuyafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result, data_i1 = (@v_ExchangeCashB := data_i1)
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF;
            
	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_nftburnafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_nftburnafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_NFTTokenID		VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
    DECLARE v_item_idx			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_item_idx;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
	
		IF 1 = p_Result THEN
			
            DELETE FROM char_inven_tquip_nft
            WHERE nft_token_id = p_NFTTokenID;

            IF ROW_COUNT() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF; 
        
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_item_idx;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_nftburnenchantafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_nftburnenchantafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_NFTTokenID		VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 = p_Result THEN
			
            DELETE FROM char_inven_equip_nft
            WHERE nft_token_id = p_NFTTokenID;

            IF ROW_COUNT() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;             
        
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_nftlockafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_nftlockafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_ItemIdx		BIGINT			
, 	IN p_NFTTokenID		VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
	DECLARE v_cost_cashB		BIGINT DEFAULT 0;	
    DECLARE v_item_idx			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 = p_Result THEN
			
            
            INSERT INTO char_inven_equip (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level)
				SELECT item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level FROM char_inven_equip_nft_unlock WHERE item_idx = p_ItemIdx;
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;       
            
            
            DELETE FROM char_inven_equip_nft_unlock WHERE item_idx = p_ItemIdx;
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 102;		
				LEAVE root;
			END IF;             
            
		ELSE
			
			SELECT data_i2 INTO v_cost_cashB FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
            
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 103;		
				LEAVE root;
			END IF;
        
			IF 0 < v_cost_cashB THEN
				
				CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_cost_cashB, v_final_cashB, v_result);
			END IF;            
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_nftmintafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_nftmintafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_NFTTokenID		VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
	DECLARE v_cost_cashB		BIGINT DEFAULT 0;	
    DECLARE v_item_idx			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 = p_Result THEN
			
			SELECT data_i1 INTO v_item_idx FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			
            IF FOUND_ROWS() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
        
			
			INSERT INTO char_inven_equip_nft(item_idx, nft_token_id) VALUES(v_item_idx, p_NFTTokenID);
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 102;		
				LEAVE root;
			END IF;            
            
		ELSE
			
			SELECT data_i2 INTO v_cost_cashB FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 103;		
				LEAVE root;
			END IF;
        
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result);
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_nftmintafter2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_nftmintafter2`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
, 	IN p_NFTTokenID		VARCHAR(256)	
, 	IN p_NFTURI			VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
	DECLARE v_cost_cashB		BIGINT DEFAULT 0;	
    DECLARE v_item_idx			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 = p_Result THEN
			
			SELECT data_i1 INTO v_item_idx FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			
            IF FOUND_ROWS() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
        
			
			INSERT INTO char_inven_equip_nft(item_idx, nft_token_id, nft_uri) VALUES(v_item_idx, p_NFTTokenID, p_NFTURI);
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 102;		
				LEAVE root;
			END IF;            
            
		ELSE
			
			SELECT data_i2 INTO v_cost_cashB FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 103;		
				LEAVE root;
			END IF;
        
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result);
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_mmo_wemixtransaction_update_nftunlockafter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `sp_mmo_wemixtransaction_update_nftunlockafter`( 
	IN p_TxID			BIGINT 			
,	IN p_UserID			BIGINT
, 	IN p_UserAddress	VARCHAR(256)	
,	IN p_ItemIdx		BIGINT			
, 	IN p_NFTTokenID		VARCHAR(256)	
,	IN p_Result			INT				
)
    COMMENT '작업 결과 처리'
BEGIN
	DECLARE	v_errno				INT DEFAULT 0;
    DECLARE v_result 			INT DEFAULT 0;
	
	DECLARE v_final_cashB		BIGINT DEFAULT 0;	
	DECLARE v_cost_cashB		BIGINT DEFAULT 0;	
    DECLARE v_item_idx			BIGINT DEFAULT 0;	
    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result, v_final_cashB;
	END;    
  
	START TRANSACTION;
    
    root:
    BEGIN
		
		UPDATE wemix_transaction 
		SET completed = p_Result
		WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
		
		IF ROW_COUNT() = 0 THEN
			SET v_result = 100;		
			LEAVE root;
		END IF; 
            
		IF 1 = p_Result THEN
			
            
            INSERT INTO char_inven_equip_nft_unlock (item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level)
				SELECT item_idx, char_idx, user_idx, item_id, quality_grade, item_level, equip_type, item_exp, equip, belong, remove_lock, enchant_level FROM char_inven_equip WHERE item_idx = p_ItemIdx;
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 101;		
				LEAVE root;
			END IF;
            
            
            DELETE FROM char_inven_equip WHERE item_idx = p_ItemIdx;
            
			IF ROW_COUNT() = 0 THEN
				SET v_result = 102;		
				LEAVE root;
			END IF;              
            
		ELSE
			
			SELECT data_i2 INTO v_cost_cashB FROM wemix_transaction 
			WHERE tx_id = p_TxID AND user_idx = p_UserID AND user_address = p_UserAddress;
			IF FOUND_ROWS() = 0 THEN
				SET v_result = 103;		
				LEAVE root;
			END IF;
        
			
			CALL sp_mmo_notrans_userinfo_insert_cashB(p_UserID, v_ExchangeCashB, v_final_cashB, v_result);
        END IF;

	END;

	if 0 = v_result THEN
		COMMIT;
	ELSE
		ROLLBACK;
	END IF; 
    
	SELECT v_result, v_final_cashB;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `usp_char_info_Check_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `usp_char_info_Check_Sel`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	OUT	p_Result	INT	
)
BEGIN
	
	IF EXISTS( SELECT * FROM char_info WHERE char_idx = p_charIdx ) THEN
	BEGIN
		SET p_Result := -33;	
	END;

	ELSE
	BEGIN
		SET p_Result := -34;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `usp_char_info_Gold_Execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `usp_char_info_Gold_Execute`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	IN	p_goldAmount	BIGINT	
,	IN	p_maxGoldAmount	BIGINT	
,	IN	p_flag		TINYINT	
,	OUT	p_charGold	BIGINT	
,	OUT	p_Result	INT	
,	OUT	p_Msg		TEXT	
)
BEGIN

	DECLARE	v_errno		INT;
	DECLARE v_msg		TEXT;
	DECLARE v_Resultfn	INT;	
	DECLARE v_charGold	BIGINT;	

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO, v_msg = MESSAGE_TEXT;
			SET p_Result := (v_errno * -1000) + p_Result;
			SET p_Msg := v_msg;
		ROLLBACK;
	END;
	
	
	IF (p_userIdx IS NULL) || (p_userIdx < 1) THEN
	BEGIN
		SET p_charGold := 0;
		SET p_Result := -4;
		SET p_Msg := '';
	END;

	ELSE
	BEGIN
		
		CALL usp_userinfo_Check_Sel(p_userIdx, v_Resultfn);
		IF v_Resultfn <> -31 THEN
		BEGIN
			SET p_charGold := 0;
			SET p_Result := v_Resultfn;
			SET p_Msg := '';
		END;

		ELSE
		BEGIN
			
			CALL usp_char_info_Check_Sel(p_userIdx, p_charIdx, v_Resultfn);
			IF v_Resultfn <> -33 THEN
			BEGIN
				SET p_charGold := 0;
				SET p_Result := v_Resultfn;
				SET p_Msg := '';
			END;

			ELSE
			
			root:
			BEGIN
				
				SELECT char_gold INTO v_charGold FROM char_info WHERE char_idx = p_charIdx;
				
				IF p_flag = 1 THEN
				BEGIN					
					SET p_charGold := v_charGold + p_goldAmount;
					
					IF p_charGold >= p_maxGoldAmount THEN
					BEGIN
						SET p_charGold := p_maxGoldAmount;
					END;
					END IF;
				END;

				ELSE
				BEGIN
					
					IF p_goldAmount > v_charGold THEN
					BEGIN
						SET p_charGold := 0;
						SET p_Result := -402;
						SET p_Msg := '';
						LEAVE root;	
					END;

					ELSE
					BEGIN
						SET p_charGold := v_charGold - p_goldAmount;
					END;
					END IF;
				END;
				END IF;

				
				START TRANSACTION;
					
					SET v_Resultfn := udf_char_info_Gold_Upd(p_userIdx, p_charIdx, v_charGold, p_charGold);
					
					IF v_Resultfn <> 1 THEN	
					BEGIN
						SET p_charGold := 0;
						SET p_Result := v_Resultfn;
						SET p_Msg := '';
						ROLLBACK;
						LEAVE root;	
					END;
					END IF;
				COMMIT;

				SET p_Result := 1;	
				SET p_Msg := '';

			END;
			END IF;

		END;
		END IF;

	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `usp_char_inven_item_Private_Execute` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `usp_char_inven_item_Private_Execute`(
	IN	p_userIdx	BIGINT	
,	IN	p_charIdx	BIGINT	
,	IN	p_itemType	TINYINT	
,	IN	p_itemId	INT	
,	IN	p_itemValue	INT	
,	IN	p_flag		TINYINT	
,	OUT	p_itemTotValue	INT	
,	OUT	p_Result	INT	
)
BEGIN
	DECLARE v_Resultfn	INT;	
	DECLARE v_itemValue	INT;	

	SET p_Result := 1;
	
	root:
	BEGIN
		
		SELECT item_value INTO v_itemValue FROM char_inven_item WHERE char_idx = p_charIdx AND item_id = p_itemId;
		
		IF p_flag = 1 THEN
		BEGIN
			
			SET p_itemTotValue := v_itemValue + p_itemValue;
		END;

		ELSE
		BEGIN
			
			IF p_itemValue > v_itemValue THEN
			BEGIN
				SET p_itemTotValue := 0;
				SET p_Result := -202;
				LEAVE root;	
			END;

			ELSE
			BEGIN
				SET p_itemTotValue := v_itemValue - p_itemValue;
			END;
			END IF;
		END;
		END IF;
		
		
		SET v_Resultfn := udf_char_inven_item_Upd(p_userIdx, p_charIdx, p_itemType, p_itemId, p_itemTotValue, v_itemValue);
		
		IF v_Resultfn <> 1 THEN	
		BEGIN
			SET p_itemTotValue := 0;
			SET p_Result := v_Resultfn;
			LEAVE root;
		END;
		END IF;
	END;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `usp_userinfo_Check_Sel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `usp_userinfo_Check_Sel`(
	IN	p_userIdx	BIGINT	
,	OUT	p_Result	INT	
)
BEGIN
	
	IF EXISTS( SELECT * FROM userinfo WHERE user_idx = p_userIdx ) THEN
	BEGIN
		SET p_Result := -31;	
	END;

	ELSE
	BEGIN
		SET p_Result := -32;	
	END;
	END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `usp_user_combat_Upd_Daily` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `usp_user_combat_Upd_Daily`(
)
BEGIN

	UPDATE user_combat SET daily_combat_win_cnt = 0,
				daily_combat_reward = 0,
				hero_combat_reset_cnt = 0,
				combat_grade_up_reset_cnt = 0;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `usp_user_combat_Upd_Season` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `usp_user_combat_Upd_Season`()
BEGIN
    
    UPDATE user_combat
    SET season_combat_win_cnt = 0, season_combat_reward = 0;   

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `_my_test_sp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `_my_test_sp`(
	IN id_array VARCHAR(1000)
)
    COMMENT 'sp test 용도'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN
    -- test begin
            DECLARE id_array_local VARCHAR(1000);
			DECLARE start_pos SMALLINT;
			DECLARE comma_pos SMALLINT;
            DECLARE colon_pos SMALLINT;
			DECLARE current_id VARCHAR(1000);
            DECLARE current_value VARCHAR(1000);
			DECLARE end_loop TINYINT;

			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				# Place here your code that uses current_id
			    select comma_pos, colon_pos, current_id, current_value;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
                    
                    select comma_pos, colon_pos, id_array_local;
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
			-- test End
            
		END; -- root
                
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;

    -- END; subroot
	
	SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `_test_ArrayProcedure` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `_test_ArrayProcedure`(IN p_arr_input VARCHAR(45))
begin
	DECLARE done INTEGER DEFAULT 0;
	DECLARE v_value INT(11);
    
	DEClARE openCursor CURSOR FOR select column1 from table1 where FIND_IN_SET(column1, p_arr_input); -- string을 해당 컬럼에서의 배열화
 
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = true;
    
    open openCursor;
 
		hi_loop: LOOP
        select openCursor;
        end loop;
        
	close openCursor;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `_util_arrayIDValueFromString` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`stormgames`@`%` PROCEDURE `_util_arrayIDValueFromString`(
	IN id_array VARCHAR(1000)
)
    COMMENT 'sp test 용도'
BEGIN

	DECLARE	v_errno			INT DEFAULT 0;
	DECLARE v_result 		INT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET CURRENT DIAGNOSTICS CONDITION 1
			v_errno = MYSQL_ERRNO;
			SET v_result := (v_errno * -1);
		ROLLBACK;

		SELECT v_result;
	END;
    
        
    root:
    BEGIN
    -- test begin
            DECLARE id_array_local VARCHAR(1000);
			DECLARE start_pos SMALLINT;
			DECLARE comma_pos SMALLINT;
            DECLARE colon_pos SMALLINT;
			DECLARE current_id VARCHAR(1000);
            DECLARE current_value VARCHAR(1000);
			DECLARE end_loop TINYINT;

			SET id_array_local = id_array;
			SET start_pos = 1;
			SET comma_pos = locate(',', id_array_local);
            SET colon_pos = locate(':', id_array_local);

			REPEAT
				SET current_id = '';
                SET current_value = '';
                
				IF colon_pos > 0 THEN -- id:value 형태
					SET current_id = substring(id_array_local, start_pos, colon_pos - start_pos);
					IF comma_pos > 0 THEN
                        SET current_value = substring(id_array_local, colon_pos + 1, comma_pos - (colon_pos+1));
						SET end_loop = 0;
					ELSE
                        SET current_value = substring(id_array_local, colon_pos + 1);
						SET end_loop = 1;
					END IF;
				ELSE -- id 만 있는 형태
					IF comma_pos > 0 THEN
						SET current_id = substring(id_array_local, start_pos, comma_pos - start_pos);
						SET end_loop = 0;
					ELSE
						SET current_id = substring(id_array_local, start_pos);
						SET end_loop = 1;
					END IF;
				END IF;
			 
				# Place here your code that uses current_id
			    select comma_pos, colon_pos, current_id, current_value;

				IF end_loop = 0 THEN
					SET id_array_local = substring(id_array_local, comma_pos + 1);
					SET comma_pos = locate(',', id_array_local);
                    SET colon_pos = locate(':', id_array_local);
                    
                    # 확인코드
                    -- select comma_pos, colon_pos, id_array_local;
				END IF;
			UNTIL end_loop = 1

			END REPEAT;
			-- test End
            
		END; -- root
                
        IF 0 = v_result THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;

    -- END; subroot
	
	SELECT v_result;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-07-31 17:39:34
